Module name: sdram_init. Module specification: The `sdram_init` module is dedicated to the initialization of SDRAM (Synchronous Dynamic Random Access Memory), effectively sequencing through a set of predefined commands such as precharge, auto refresh, and mode set, according to a specific order and timing, managed by an internal state machine. It takes two input ports: `Clk`, the input clock signal that synchronizes the operation of the SDRAM initialization state machine, and `Rst_n`, an active-low reset signal responsible for initializing the module's internal logic. The module outputs include the 4-bit `Command` signal, indicating the current command to the SDRAM; `Saddr`, a configurable-width signal that specifies the address for certain SDRAM commands; and `Init_done`, a single-bit signal indicating the completion of the initialization process. Internally, the module utilizes signals such as a 16-bit `init_cnt` counter to track the initialization progress, alongside constants like `init_PRE_TIME`, `init_AREF1_TIME`, `init_AREF2_TIME`, `init_LMR_TIME`, and `init_END_TIME`, which are derived from SDRAM parameters to control the timing of each step in the initialization sequence. The Verilog code is structured into several key blocks: inclusion of SDRAM parameters through `Sdram_Params.h`, a counter logic block incrementing `init_cnt` based on the clock and reset signals, and conditional logic applying different commands based on the value of `init_cnt`. This organization ensures the SDRAM is properly initialized with precise timing before being accessed for further operations, making `sdram_init` a crucial module for SDRAM management in hardware designs.