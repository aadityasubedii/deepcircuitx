Module name: signmag. Module specification: The `signmag` module is designed to convert an 8-bit signed integer in two's complement format to its sign and magnitude representation. This conversion facilitates easy interpretation of the number's sign and absolute value. The module accepts a single input, `inp`, which is an 8-bit signed integer. The outputs are `sign` and `mag`; `sign` is a single bit that indicates the sign of the input number (0 for positive, 1 for negative), extracted directly from the most significant bit (MSB) of `inp`. The `mag` output is a 7-bit signed value that yields the magnitude of the input number. The magnitude is calculated based on the value of `sign`: if `sign` is 0 (positive input), `mag` is set to the least significant 7 bits of `inp`; if `sign` is 1 (negative input), `mag` is calculated as the negative of the least significant 7 bits of `inp`, effectively performing a two's complement of these bits to represent the magnitude. The module uses internal logic to directly determine and assign the `sign` output from `inp`, and conditionally compute `mag` within an always block triggered on any change of the inputs. This module is succinct in its design, using straightforward conditional statements to achieve its functionality without auxiliary internal signals beyond outputs and direct input derivatives.