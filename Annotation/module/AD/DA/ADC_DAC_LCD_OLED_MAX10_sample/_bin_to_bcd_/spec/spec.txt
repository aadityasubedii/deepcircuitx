Module name: bin_to_bcd. Module specification: The "bin_to_bcd" module is designed for the conversion of a binary number into its Binary-Coded Decimal (BCD) representation using the double dabble algorithm. The module accepts a 20-bit wide binary input, `iBIN`, which is the number that needs to be converted into BCD format. The output of the module is a 24-bit wide binary number, `oBCD`, that is divided into six 4-bit groups. Each of these groups corresponds to a decimal digit ranging from hundreds of thousands to ones in the BCD representation. The module leverages internal signals including `HofThous`, `TofThous`, `Thousands`, `Hundreds`, `Tens`, and `Ones` as 4-bit registers to serve as temporary storage for each of the decimal digits as the `iBIN` value is processed. The module operates by initializing these internal signals to zero and then iteratively shifting and conditionally adding to these values in a loop that iterates backwards through the bits of `iBIN`. This process shifts values left, emulating the manual double dabble algorithm, and conditionally adjusts the interim digit values when they exceed 4 in value, adding 3 (0x03 in hexadecimal) to keep the BCD conversion accurate. The outputs are then mapped to the `oBCD` output signal, organizing the BCD representation as a cohesive 24-bit output. This module thus encapsulates the entire process of binary to BCD conversion in a structured and efficient manner, utilizing iterative logic and conditional operations to process the input binary number and generate a valid BCD output.