Module name: Substitute_Byte.

Module specification: The Substitute_Byte module is designed to perform a substitution operation on a 128-bit input `data`, outputting a 128-bit `sb` signal which has undergone byte substitution. Each of the 16 segments of 8 bits within the `data` input is processed independently. The module achieves this functionality by instantiating 16 separate S_Box modules, each responsible for substituting an 8-bit segment of the input data. The input port, `data`, is a 128-bit wide signal that represents the data to be processed, with each 8-bit chunk being subjected to a substitution operation by its corresponding S_Box module. The output port, `sb`, is also 128-bit wide, containing the result of the substitution operations carried out by the S_Box modules, with each 8-bit segment of the original `data` input transformed into an 8-bit segment in the `sb` output, thus constituting the fully substituted version of the input data. There are no explicitly declared internal signals within the module itself, as all connections between the `data` input and the `sb` output are made directly via the input and output ports of the instantiated S_Box modules. The module's code is organized into a single section where each S_Box instance (v0 to v15) is connected to a specific 8-bit segment of the `data` input and `sb` output, reflecting a direct mapping from input to substituted output without intermediate storage or manipulation of data. This design choice significantly simplifies the Substitute_Byte module's internal structure while ensuring that each byte of the input data is independently and efficiently processed for byte substitution, a critical operation in cryptographic applications such as AES encryption.