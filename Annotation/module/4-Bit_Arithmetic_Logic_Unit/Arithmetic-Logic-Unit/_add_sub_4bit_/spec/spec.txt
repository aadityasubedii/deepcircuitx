Module name: add_sub_4bit. 
Module specification: The `add_sub_4bit` module is designed to perform either addition or subtraction on two 4-bit numbers, controlled by a single-bit input operator. The inputs include two 4-bit vectors, `A` and `B`, and a single-bit `Operator` which determines the operation; setting `Operator` to 0 results in addition, whereas setting it to 1 results in subtraction. The outputs are a 4-bit vector `Sum` that holds the result, a single-bit `Cout` which is the carry-out from the most significant bit, and a single-bit `V` indicating an overflow condition. Internally, the module uses a vector `effective_B` that contains the modified value of `B` (XORed with `Operator`) to handle the correct arithmetic operation, and a vector `carry_temp` to pass carry between stages of addition/subtraction. The module incorporates four instances of a `full_adder` block each responsible for one bit of the operands. The `full_adder` calculates one bit of the result and the carry bit passed to the next stage, with feedback mechanisms handling carries between the different stages and an overflow flag which is derived from the most significant bit's carry information.