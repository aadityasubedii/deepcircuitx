Module name: moore_ol. 

Module specification: The `moore_ol` module implements a Moore finite state machine, designed to process sequences of binary inputs to produce a determined binary output through transitions across five states (S0, S1, S2, S3, S4). It operates with three input ports: `in`, the binary input determining state transitions; `clk`, the clock signal synchronizing the transitions; and `reset`, an asynchronous signal resetting the machine to the initial state (S0). The sole output port, `out`, indicates when the state machine resides in state S4 by outputting a high (1) signal; for all other states, this output remains low (0). Internal to the module are two significant signals: `present_state`, holding the current state, and `next_state`, indicating the anticipated state following the next clock edge. The module is structured around two primary blocks of code. The first always block is triggered by either the rising edge of `clk` or `reset`, to update `present_state` with the value of `next_state` or reset it to S0. The second always block evaluates `present_state` and the `in` signal within a case statement to determine `next_state` and appropriately set the `out` signal. This setup provides a reliable and synchronous method for transitioning between states, allowing precise control based on input signals, underpinned by the deterministic behavior characteristic of a Moore finite state machine.