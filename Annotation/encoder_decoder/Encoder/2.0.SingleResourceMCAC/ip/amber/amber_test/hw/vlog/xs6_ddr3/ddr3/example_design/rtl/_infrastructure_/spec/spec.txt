Module name: infrastructure.

Module specification: The "infrastructure" module is designed primarily to manage clock and reset functionalities within a digital system, notably suitable for FPGA implementations. It takes differential (`sys_clk_p`, `sys_clk_n`) and single-ended (`sys_clk`) clock inputs, alongside a system reset input (`sys_rst_i`) which can be configured as active high or low. The module utilizes a Phase-Locked Loop (PLL) to generate multiple output clocks including the primary system clock (`clk0`), and other specific-use clocks like `sysclk_2x`, `sysclk_2x_180`, and `mcb_drp_clk`. These are accompanied by reset outputs, such as synchronized (`rst0`) and asynchronous (`async_rst`) resets, to ensure system stability.

Internally, the module leverages several critical signals like `clk_2x_0` and `clk_2x_180` derived from the PLL for doubled frequency operations, and `clk0_bufg_in` which is buffered to form `clk0`. Reset management uses registers like `rst0_sync_r` for synchronization and `powerup_pll_locked` for handling conditions post-PLL-lock. The locking status of the PLL is controlled by the `locked` signal, while `bufpll_mcb_locked` manages the locking for memory control block usages.

Structurally, the code includes conditions to handle different types of input clocks using generate blocks, setting up the PLL with specific configurations for output frequencies and phases, and instantiating buffers like `BUFG` for clock management. Reset logic is meticulously handled through sequential always blocks ensuring proper operation post-reset conditions. Specialized components such as `BUFPLL_MCB` are used for managing relationships between high-speed clocks using the generated clocks and lock statuses. This module encapsulates the essential functionalities needed for stable and efficient clock and reset operations in FPGA-based systems.