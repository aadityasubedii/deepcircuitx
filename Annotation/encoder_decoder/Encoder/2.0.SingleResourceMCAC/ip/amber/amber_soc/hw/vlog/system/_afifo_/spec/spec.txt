Module name: afifo. Module specification: The `afifo` module represents an asynchronous FIFO buffer with a parameterizable data width, using separate write (`wr_clk`) and read (`rd_clk`) clocks to manage independent operations. It facilitates data transfer using two main input ports: `i_data` for incoming data and `i_push` to signal a write operation, and two output ports: `o_data` for the data read from the FIFO and `i_pop` to signal a read operation. The FIFO's status is indicated by two outputs: `o_full` and `o_empty`, signifying whether the FIFO is fully occupied or empty, respectively. Internally, the module utilizes pointers (`wr_pointer`, `rd_pointer`) along with their delayed versions (`wr_pointer_d1`, `rd_pointer_d1`, `wr_pointer_d2`, `rd_pointer_d2`) to manage and synchronize the writing and reading processes in different clock domains, using Gray code conversion functions (`gray8`, `ungray8`) to properly transfer these pointers across the clock domains. The main functional blocks include: Data write and pointer incrementation triggered by the write clock when `i_push` and not `o_full`, pointer updates synchronized in the write clock domain, Data read and pointer incrementation triggered by the read clock when `i_pop` and not `o_empty`, and pointer updates synchronized in the read clock domain. These functions ensure stable, synced operations of the FIFO across asynchronous clock boundaries, utilizing a simple four-byte depth data storage array.
