Module name: interrupt_controller. Module specification: The interrupt_controller is a Verilog module designed to manage and prioritize hardware interrupts in a system using parameters such as `WB_DWIDTH` for data bus width and `WB_SWIDTH` for selection width. It receives clock and reset signals for synchronization and initialization, along with various other input signals like `i_uart0_int` for UART interrupts and `i_tm_timer_int` for timer interrupts. The module outputs include `o_irq` and `o_firq` to signal interrupt requests and `o_wb_dat`, a data output for Wishbone read operations. It employs internal signals like `raw_interrupts` to aggregate incoming interrupt sources and `irq0_interrupts`, `firq0_interrupts` for filtered interrupt handling. The Verilog code is structured into several blocks: control and state signal management using settings from `register_addresses.vh`, interrupt signal processing, Wishbone protocol handling for read and write operations, and conditional debbugging enabled by `AMBER_IC_DEBUG` for detailed operational tracing. These components collaborate to manage interrupt request enabling, processing, and prioritization, interfaced via a Wishbone-compatible bus protocol, ensuring efficient and structured interrupt handling within digital systems.