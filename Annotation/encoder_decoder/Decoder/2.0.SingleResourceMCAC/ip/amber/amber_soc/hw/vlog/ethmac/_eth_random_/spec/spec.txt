Module name: eth_random. 
Module specification: The eth_random module is a Verilog design implementing a linear feedback shift register (LFSR) to generate a 10-bit pseudo-random number influenced by a retry counter (`RetryCnt`). It is clocked by the MTxClk signal and responds to an asynchronous Reset. Inputs include `MTxClk` (the main clock), `Reset` (reset input), `StateJam` and `StateJam_q` (used to determine the condition to latch the random number), `RetryCnt` (affects the random number generation by masking bits of the pseudo-random number), `NibCnt` (participates in determining when Random equals ByteCnt), and `ByteCnt` (used for comparison with the latched random number). Output ports are `RandomEq0` (indicates if the latched random number is zero) and `RandomEqByteCnt` (true when the latched random number equals the ByteCnt under specific conditions). Internal signals include `Feedback` (utilizes an XOR of selected bits of `x` for LFSR cycling), `x` (a 10-bit register holding the LFSR state), `Random` (a masked version of `x` based on `RetryCnt`), and `RandomLatched` (stores `Random` when both `StateJam` and `StateJam_q` are high). The block that updates `x` reacts to either the positive edge of the MTxClk or a reset, shifting `x` left and updating with `Feedback`. Another block similarly processes the `RandomLatched` register based on reset and specific jam conditions. The module effectively combines LFSR generation with conditional logic for practical applications in Ethernet systems, ensuring varied outputs based on the retry and jam states.