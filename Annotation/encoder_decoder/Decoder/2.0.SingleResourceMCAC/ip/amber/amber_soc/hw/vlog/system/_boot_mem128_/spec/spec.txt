Module name: boot_mem128.
Module specification: The `boot_mem128` module is a memory interface tailored for Xilinx FPGA implementations, designed to interface with the Wishbone bus protocol. It facilitates both read and write operations to handle data transfers effectively. The input ports include `i_wb_clk` (input clock), `i_wb_adr` (address bus), `i_wb_sel` (byte selection signal), `i_wb_we` (write enable), and `i_wb_dat` (data input for write operations), along with `i_wb_cyc` and `i_wb_stb` that signal the start and duration of a bus transfer. The output ports are `o_wb_dat` (data output for reads), `o_wb_ack` (acknowledgment of successful transactions), and `o_wb_err` (error indicator). Internally, the module utilizes signals such as `start_write` and `start_read` to trigger write and read operations, `write_data` and `read_data` to handle data moving in and out of memory, and `byte_enable` which works in conjunction with `i_wb_sel` to specify active bytes during transactions. The `address` signal manages the memory addressing based on `i_wb_adr`. Debug configurations are supported through additional signals like `jitter_r` and `start_read_r`, which help in creating timing variations and maintaining read states across cycles, respectively. The module features conditional blocks for debug scenarios (`AMBER_WISHBONE_DEBUG`) and FPGA-specific configurations (`XILINX_FPGA`). Instantiation of memory blocks varies as per FPGA type or a generic implementation to ensure flexibility across different hardware setups. This makes `boot_mem128` a robust and adaptable module for memory management in FPGA-based systems.