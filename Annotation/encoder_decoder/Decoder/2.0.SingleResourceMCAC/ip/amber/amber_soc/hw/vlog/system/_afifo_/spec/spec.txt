Module name: afifo. Module specification: The 'afifo' module is an asynchronous FIFO (First In First Out) buffer designed to handle data transfer between different clock domains using separate write (`wr_clk`) and read (`rd_clk`) clocks. It accepts data on the `i_data` input which is written to the FIFO when the `i_push` signal is asserted if the FIFO isn't full, as indicated by the `o_full` signal. Data is read from the FIFO and provided on the `o_data` output when the `i_pop` signal is asserted, if the FIFO isn't empty, as indicated by the `o_empty` signal. Internal signals such as `wr_pointer` and `rd_pointer` track the current write and read locations within the FIFO, while their delayed counterparts (`wr_pointer_d1`, `wr_pointer_d2`, `rd_pointer_d1`, `rd_pointer_d2`) and their Gray code conversions (`wr_pointer_rd`, `rd_pointer_wr`) are used to manage synchronicity across different clock domains. The module includes distinct procedural blocks for actions on the write and read clock edges, updating pointers and handling data movement, while ensuring robust cross-domain operation through Gray code conversions implemented in the functions `gray8` and `ungray8`. These conversions help maintain data integrity by permitting only a single bit change at a time during pointer updates.