Module name: boot_mem128.
Module specification: The `boot_mem128` module is designed for interfacing with a memory controller using the Wishbone bus protocol. It handles memory read and write operations dictated by the bus signals. This module is parameterizable for different data and address widths, and includes conditional constructs for FPGA-specific configurations and debugging. The input ports include `i_wb_clk` (clock signal), `i_wb_rst` (reset signal), `i_wb_adr` (address bus), `i_wb_sel` (byte select lines), `i_wb_we` (write enable signal), `i_wb_dat` (data input bus), `i_wb_cyc` (cycle valid input), and `i_wb_stb` (strobe signal input). The output ports consist of `o_wb_dat` (data output bus), `o_wb_ack` (acknowledge signal output), and `o_wb_err` (error signal output). Internal signals such as `start_write`, `start_read`, `read_data`, `write_data`, `byte_enable`, `address`, `start_read_r`, and `jitter_r` manage the operations and flow within the module, including addressing, data transfer, and debugging functions. The code includes conditional blocks for debugging and FPGA-specific configurations, as well as a memory instantiation block that integrates with memory units suitable for Xilinx FPGAs or a generic memory model based on the configuration. Additionally, debug-specific behaviors such as jitter introduction are managed via conditional preprocessor directives for fine-grained troubleshooting and simulation under different operational conditions.