Module name: afifo. Module specification: The "afifo" module is designed for asynchronous FIFO operation, enabling data transfer between different clock domains via Gray code synchronization. The module operates with two clock inputs, `wr_clk` for writing and `rd_clk` for reading. The input ports include `i_data` to accept data into the FIFO using the `i_push` signal, which allows data to be written if the FIFO isn't full. Similarly, data is read from the FIFO using the `i_pop` signal if the FIFO isn't empty, made available at the output port `o_data`. The output indicators `o_full` and `o_empty` notify the state of the FIFO, whether full or empty, respectively. Internally, the module utilizes pointers (`wr_pointer`, `rd_pointer`) and their delayed versions (`wr_pointer_d1/d2`, `rd_pointer_d1/d2`) which are crucial for maintaining synchronization across clock domains. The pointers in the read and write domains are converted from Gray to binary format with `ungray8` function to accurately compare and assess the full or empty conditions of the FIFO. The module contains blocks handling the synchronization of write and read pointers, data writing into the FIFO through push control, and data reading via pop control, all driven by their respective clock signals. These mechanisms together establish reliable data handling with minimal synchronization complexity in adjustable clock domains.