{
    "line_num": [
        [
            411,
            413
        ],
        [
            399,
            407
        ],
        [
            385,
            397
        ],
        [
            378,
            410
        ],
        [
            365,
            374
        ],
        [
            360,
            363
        ],
        [
            351,
            356
        ],
        [
            344,
            376
        ],
        [
            310,
            342
        ],
        [
            298,
            306
        ],
        [
            293,
            296
        ],
        [
            284,
            289
        ],
        [
            277,
            308
        ],
        [
            254,
            275
        ],
        [
            134,
            252
        ],
        [
            132,
            132
        ],
        [
            129,
            129
        ],
        [
            110,
            126
        ]
    ],
    "blocks": [
        "\n\nendmodule",
        "\t\tif (check_for_truth) begin\n\t\t\tsr = o_wb_dat;\n\t\t\tif (o_wb_dat !== truth_data_test) begin\n\t\t\t\t$display(\"%t TESTBENCHERROR: failure found when SR = %h. Is %h but should be %h\",\n\t\t\t  \t$time, truth_data_test, o_wb_dat, truth_data_test); \n\t\t\t\t`ifdef ERRORSTOP\n\t\t\t\t\t$finish;\n\t\t\t\t`endif\n\t\t\tend",
        "\t\t@(posedge clk) begin\n\t\t\ti_wb_adr <= wb_address_test;\t\n\t\t\ti_wb_cyc <= 1'b1;\t\t\t\n\t\t\ti_wb_stb <= 1'b1;\t\t\t\n\t\t\ti_wb_we  <= 1'b0;\t\t\t\n\t\tend\n\n\t\t@(posedge clk);\n\n\t\t@(posedge clk) begin\n\t\t\ti_wb_cyc <= 1'b0;\n\t\t\ti_wb_stb <= 1'b0;\n\t\tend",
        "task wb_read_sr;\n\t\n\tinput [31:0] wb_address_test;\t\t\t\t\n\tinput\t\t check_for_truth;\n\tinput [31:0] truth_data_test;\n\n\tbegin\n\t\t@(posedge clk) begin\n\t\t\ti_wb_adr <= wb_address_test;\t\n\t\t\ti_wb_cyc <= 1'b1;\t\t\t\n\t\t\ti_wb_stb <= 1'b1;\t\t\t\n\t\t\ti_wb_we  <= 1'b0;\t\t\t\n\t\tend\n\n\t\t@(posedge clk);\n\n\t\t@(posedge clk) begin\n\t\t\ti_wb_cyc <= 1'b0;\n\t\t\ti_wb_stb <= 1'b0;\n\t\tend\n\n\t\tif (check_for_truth) begin\n\t\t\tsr = o_wb_dat;\n\t\t\tif (o_wb_dat !== truth_data_test) begin\n\t\t\t\t$display(\"%t TESTBENCHERROR: failure found when SR = %h. Is %h but should be %h\",\n\t\t\t  \t$time, truth_data_test, o_wb_dat, truth_data_test); \n\t\t\t\t`ifdef ERRORSTOP\n\t\t\t\t\t$finish;\n\t\t\t\t`endif\n\t\t\tend\n\t\tend\n\tend\nendtask",
        "\t\tif (check_for_truth) begin\n\t\t\ta2p = o_wb_dat;\n\t\t\tif (o_wb_dat !== truth_data_test) begin\n\t\t\t\t$display(\"%t TESTBENCHERROR: failure found when A2P = %h. Is %h but should be %h\",\n\t\t\t  \t$time, truth_data_test, o_wb_dat, truth_data_test); \n\t\t\t\t`ifdef ERRORSTOP\n\t\t\t\t\t$finish;\n\t\t\t\t`endif\n\t\t\tend\n\t\tend",
        "\t\t@(posedge clk) begin\n\t\t\ti_wb_cyc <= 1'b0;\n\t\t\ti_wb_stb <= 1'b0;\n\t\tend",
        "\t\t@(posedge clk) begin\n\t\t\ti_wb_adr <= wb_address_test;\t\n\t\t\ti_wb_cyc <= 1'b1;\t\t\t\n\t\t\ti_wb_stb <= 1'b1;\t\t\t\n\t\t\ti_wb_we  <= 1'b0;\t\t\t\n\t\tend",
        "task wb_read_a2p;\n\t\n\tinput [31:0] wb_address_test;\t\t\t\t\n\tinput\t\t check_for_truth;\n\tinput [31:0] truth_data_test;\n\n\tbegin\n\t\t@(posedge clk) begin\n\t\t\ti_wb_adr <= wb_address_test;\t\n\t\t\ti_wb_cyc <= 1'b1;\t\t\t\n\t\t\ti_wb_stb <= 1'b1;\t\t\t\n\t\t\ti_wb_we  <= 1'b0;\t\t\t\n\t\tend\n\n\t\t@(posedge clk);\n\n\t\t@(posedge clk) begin\n\t\t\ti_wb_cyc <= 1'b0;\n\t\t\ti_wb_stb <= 1'b0;\n\t\tend\n\n\t\tif (check_for_truth) begin\n\t\t\ta2p = o_wb_dat;\n\t\t\tif (o_wb_dat !== truth_data_test) begin\n\t\t\t\t$display(\"%t TESTBENCHERROR: failure found when A2P = %h. Is %h but should be %h\",\n\t\t\t  \t$time, truth_data_test, o_wb_dat, truth_data_test); \n\t\t\t\t`ifdef ERRORSTOP\n\t\t\t\t\t$finish;\n\t\t\t\t`endif\n\t\t\tend\n\t\tend\n\tend\nendtask",
        "task wb_read_se;\n\t\n\tinput [31:0] wb_address_test;\t\t\t\t\n\tinput\t\t check_for_truth;\n\tinput [31:0] truth_data_test;\n\n\tbegin\n\t\t@(posedge clk) begin\n\t\t\ti_wb_adr <= wb_address_test;\t\n\t\t\ti_wb_cyc <= 1'b1;\t\t\t\n\t\t\ti_wb_stb <= 1'b1;\t\t\t\n\t\t\ti_wb_we  <= 1'b0;\t\t\t\n\t\tend\n\n\t\t@(posedge clk);\n\n\t\t@(posedge clk) begin\n\t\t\ti_wb_cyc <= 1'b0;\n\t\t\ti_wb_stb <= 1'b0;\n\t\tend\n\n\t\tif (check_for_truth) begin\n\t\t\tse = o_wb_dat;\n\t\t\tif (o_wb_dat !== truth_data_test) begin\n\t\t\t\t$display(\"%t TESTBENCHERROR: failure found when SE = %h. Is %h but should be %h\",\n\t\t\t  \t$time, truth_data_test, o_wb_dat, truth_data_test); \n\t\t\t\t`ifdef ERRORSTOP\n\t\t\t\t\t$finish;\n\t\t\t\t`endif\n\t\t\tend\n\t\tend\n\tend\nendtask",
        "\t\tif (check_for_truth) begin\n\t\t\tif (o_wb_dat !== truth_data_test) begin\n\t\t\t\t$display(\"%t TESTBENCHERROR: failure found when truth_data = %h. Is %h but should be %h\",\n\t\t\t  \t$time, truth_data_test, o_wb_dat, truth_data_test); \n\t\t\t\t`ifdef ERRORSTOP\n\t\t\t\t\t$finish;\n\t\t\t\t`endif\n\t\t\tend\n\t\tend",
        "\t\t@(posedge clk) begin\n\t\t\ti_wb_cyc <= 1'b0;\n\t\t\ti_wb_stb <= 1'b0;\n\t\tend",
        "\t\t@(posedge clk) begin\n\t\t\ti_wb_adr <= wb_address_test;\t\n\t\t\ti_wb_cyc <= 1'b1;\t\t\t\n\t\t\ti_wb_stb <= 1'b1;\t\t\t\n\t\t\ti_wb_we  <= 1'b0;\t\t\t\n\t\tend",
        "task wb_read_strobe;\n\t\n\tinput [31:0] wb_address_test;\t\t\t\t\n\tinput\t\t check_for_truth;\n\tinput [31:0] truth_data_test;\n\n\tbegin\n\t\t@(posedge clk) begin\n\t\t\ti_wb_adr <= wb_address_test;\t\n\t\t\ti_wb_cyc <= 1'b1;\t\t\t\n\t\t\ti_wb_stb <= 1'b1;\t\t\t\n\t\t\ti_wb_we  <= 1'b0;\t\t\t\n\t\tend\n\n\t\t@(posedge clk);\n\n\t\t@(posedge clk) begin\n\t\t\ti_wb_cyc <= 1'b0;\n\t\t\ti_wb_stb <= 1'b0;\n\t\tend\n\n\t\tif (check_for_truth) begin\n\t\t\tif (o_wb_dat !== truth_data_test) begin\n\t\t\t\t$display(\"%t TESTBENCHERROR: failure found when truth_data = %h. Is %h but should be %h\",\n\t\t\t  \t$time, truth_data_test, o_wb_dat, truth_data_test); \n\t\t\t\t`ifdef ERRORSTOP\n\t\t\t\t\t$finish;\n\t\t\t\t`endif\n\t\t\tend\n\t\tend\n\tend\nendtask",
        "task wb_write_strobe;\n\t\n\tinput [31:0] wb_waddress_test;\t\n\tinput [31:0] wb_data_test;\t\t\n\n\tbegin\n\t\t@(posedge clk) begin\t\t\t\n\t\t\ti_wb_adr <= wb_waddress_test;\t\n\t\t\ti_wb_cyc <= 1'b1;\t\t\t\n\t\t\ti_wb_stb <= 1'b1;\t\t\t\n\t\t\ti_wb_we  <= 1'b1;\t\t\t\n\t\t\ti_wb_dat <= wb_data_test;\t\n\t\tend\n\n\n\t\t@(posedge clk) begin\n\t\t\ti_wb_we  <= 1'b0;\t\t\t\n\t\t\ti_wb_cyc <= 1'b0;\t\t\t\n\t\t\ti_wb_stb <= 1'b0;\t\t\t\n\t\tend\n\tend\nendtask",
        "initial\nbegin\n    $timeformat(-9,2,\"ns\", 16);\n`ifdef SDFSCAN\n    $sdf_annotate(\"sdf/APRSC_saed32nm_scan.sdf\", test.top);\n`endif\n    clk = 1'b0;\n    CoPrclk = 1'b0;\n    reset = 1'b0;\n    scan_in0 = 1'b0;\n    scan_in1 = 1'b0;\n    scan_in2 = 1'b0;\n    scan_in3 = 1'b0;\n    scan_in4 = 1'b0;\n    scan_enable = 1'b0;\n    test_mode = 1'b0;\n    wait_for_ack = 1'b1;\n\n    i_wb_adr <= 32'h0000_0000;\n    i_wb_sel <= 4'h0;\n    i_wb_we <= 1'b0;\n    i_wb_dat <= 32'h0000_0000;\n    i_wb_cyc <= 1'b0;\n    i_wb_stb <= 1'b0;\n\n    j = 0;\n    k = 0;\n    test_channel = 0;\n    dq = 0;\n    tr = 0;\n    rate_in = 0;\n    req = 1'b0;\n\n\nrepeat(4) begin\n    @(posedge CoPrclk)\n   reset <= 1'b1;\nend\n   @(posedge CoPrclk)\n   reset <= 1'b0;\n\nrepeat(2) begin\n    @(posedge CoPrclk)\n   test_mode <= 1'b1;\nend\n   @(posedge CoPrclk)\n   test_mode <= 1'b0;\n\n\nrepeat(4) begin\n    @(posedge CoPrclk)\n    reset <= 1'b1;\nend\n   @(posedge CoPrclk)\n   reset <= 1'b0;\n\n\n$readmemh({\"./APRSCTests.t\"},testCases);\nmodel = testCases[0];\ntype = testCases[1];\noperation=testCases[2];\nlaw = testCases[3];\nrate = testCases[4];\n\n$display(\"%s %s %s %s %s law\", models[model], rates[rate], operations[operation], types[type], laws[law]);\n\n\n$readmemh({\"../sw/mc_model/vector_out/\",laws[law],\"/\", models[model], \"/\", types[type],\"/\", operations[operation],\"/\",rates[rate],\"/\",\"vectorSize.t\"}, vectorSizes);\nloop = vectorSizes[0];\n$readmemh({\"../sw/mc_model/vector_out/\",laws[law],\"/\", models[model], \"/\", types[type],\"/\", operations[operation],\"/\",rates[rate],\"/\",\"channel.t\"}, channels);\ntest_channel = channels[0];\n$display(\"Current channel being tested with main vectors is: %d\", test_channel);\n$display(\"Other channels being tested with null vectors\");           \n$readmemh({\"../sw/mc_model/vector_out/\",laws[law],\"/\", models[model], \"/\", types[type],\"/\", operations[operation],\"/\",rates[rate],\"/\",\"dq.t\"}, dqs);\n$readmemh({\"../sw/mc_model/vector_out/\",laws[law],\"/\", models[model], \"/\", types[type],\"/\", operations[operation],\"/\",rates[rate],\"/\",\"tr.t\"}, trs);\n$readmemh({\"../sw/mc_model/vector_out/\",laws[law],\"/\", models[model], \"/\", types[type],\"/\", operations[operation],\"/\",rates[rate],\"/\",\"se.t\"}, ses);\n$readmemh({\"../sw/mc_model/vector_out/\",laws[law],\"/\", models[model], \"/\", types[type],\"/\", operations[operation],\"/\",rates[rate],\"/\",\"a2p.t\"}, a2ps);\n$readmemh({\"../sw/mc_model/vector_out/\",laws[law],\"/\", models[model], \"/\", types[type],\"/\", operations[operation],\"/\",rates[rate],\"/\",\"sr.t\"}, srs);\n\n@(posedge CoPrclk);\n\n\nrepeat(4)\nbegin\n\t@(posedge CoPrclk)\n\treset <= 1'b1;\nend\n@(posedge CoPrclk)\nreset <= 1'b0;\n@(posedge CoPrclk);\n\n\nfor (j=0; j<loop; j=j+1) begin\n\twb_write_strobe({16'h0000, APRSC_DQ}, {8'h00, dqs[j]});\n\twb_write_strobe({16'h0000, APRSC_TR}, {8'h00, trs[j]});\n\twb_write_strobe({16'h0000, APRSC_RATE}, rate);\n\twb_write_strobe({16'h0000, APRSC_REQ}, 32'h0000_0001);\n\trepeat(4)\n\t\t@(negedge CoPrclk);\n\twhile(wait_for_ack) begin\n\t\twb_read_strobe({16'h0000, APRSC_ACK}, 1'b0, 32'h0000_0000);\n\t\tif (o_wb_dat[0] == 1'b1) begin\n\t\t\twait_for_ack = 1'b0;\n\t\tend\n\t\t@(posedge clk);\n\tend\n\twait_for_ack = 1'b1;\n\twb_write_strobe({16'h0000, APRSC_REQ}, 32'h0000_0000);\n\twb_read_se({16'h0000, APRSC_SE}, 1'b1, {8'h00, ses[j]});\n\twb_read_sr({16'h0000, APRSC_SR}, 1'b1, {8'h00, srs[j]});\n\twb_read_a2p({16'h0000, APRSC_A2P}, 1'b1, {8'h00, a2ps[j]});\n\t@(posedge CoPrclk);\n\twb_write_strobe({16'h0000, APRSC_REQ}, 32'h0000_0000);\t\n\t@(posedge CoPrclk);\nend \n\n#10 $display(\"%t TEST COMPLETE\", $time);\n  $finish;\nend ",
        "always #(`CO_PROC_PERIOD/2) CoPrclk = ~CoPrclk;",
        "always #(`SYS_CLK_PERIOD/2) clk = ~clk;",
        "initial begin\n  rates[0]      = \"40\";\n  rates[1]      = \"32\";\n  rates[2]      = \"24\";\n  rates[3]      = \"16\";\n  laws[0]       = \"AA\";\n  laws[1]       = \"MM\";  \n  laws[2]       = \"AM\";\n  laws[3]       = \"MA\";\n  operations[0] = \"nrm\";\n  operations[1] = \"ovr\";\n  operations[2] = \"i\";\n  types[0]      = \"reset\";\n  types[1]      = \"homing\";\n  models[0]     = \"enc\";\n  models[1]     = \"dec\";\nend"
    ]
}