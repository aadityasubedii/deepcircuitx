{
    "line_num": [
        [
            224,
            259
        ],
        [
            127,
            221
        ]
    ],
    "blocks": [
        "task wb_read_strobe;\n\t\n\tinput [31:0] wb_address_test;\t\t\t\t\n\tinput [31:0] truth_data_test;\n\n\tbegin\n\n\t\t@(posedge new_data_int);\n\n\t\t@(posedge clk);\n\n\t\t@(posedge clk) begin\n\t\t\ti_wb_adr <= wb_address_test;\t\n\t\t\ti_wb_cyc <= 1'b1;\t\t\t\n\t\t\ti_wb_stb <= 1'b1;\t\t\t\n\t\t\ti_wb_we  <= 1'b0;\t\t\t\n\t\tend\n\n\t\t@(posedge o_wb_ack);\n\n\t\t\n\t\t@(posedge clk) begin\n\t\t\ti_wb_cyc <= 1'b0;\n\t\t\ti_wb_stb <= 1'b0;\n\t\tend\n\n\t\tif (o_wb_dat !== truth_data_test) begin\n\t\t\t$display(\"%t ERROR: failure found when truth_data = %h, channel = %d. Is %h but should be %h\",\n\t\t  \t$time, truth_data_test, channel, o_wb_dat, truth_data_test); \n\t\t\t`ifdef ERRORSTOP\n\t\t\t\t$stop;\n\t\t\t`endif\n\t\tend\n\n\tend\nendtask",
        "initial begin\n  $timeformat(-9,2,\"ns\", 16);\n`ifdef SDFSCAN\n  $sdf_annotate(\"sdf/TDMI_saed32nm_scan.sdf\", test.top);\n`endif\n\n  frame_sync  = 1'b0;\n  ser_clk     = 1'b0;\n  clk\t  \t  = 1'b0;\n  reset       = 1'b0;\n  scan_in0    = 1'b0;\n  scan_in1    = 1'b0;\n  scan_in2    = 1'b0;\n  scan_in3    = 1'b0;\n  scan_in4    = 1'b0;\n  scan_enable = 1'b0;\n  test_mode   = 1'b0;\n  \n  i_wb_cyc = 1'b0;\n  i_wb_stb = 1'b0;\n\n\t@(posedge ser_clk);\n\t@(posedge ser_clk) begin reset <= 1'b1; end\n\t@(negedge ser_clk) begin reset <= 1'b0; end\n\n\trepeat (20)\t@(posedge ser_clk);\n\n\t@(posedge clk) begin\n\t\ti_wb_adr <= TDMI_START;\t\t\n\t\ti_wb_dat <= {31'h00000000, 1'b1};\n\t\ti_wb_cyc <= 1'b1;\t\t\t\n\t\ti_wb_stb <= 1'b1;\t\t\t\n\t\ti_wb_we  <= 1'b1;\t\t\t\n\tend\n\n\t@(posedge clk) begin\n\t\ti_wb_cyc <= 1'b0;\n\t\ti_wb_stb <= 1'b0;\n\t\ti_wb_we  <= 1'b0;\n\tend\n\n\t@(posedge ser_clk);\n\t\n\tfor (adrs=0; adrs<`NUM_ADDRESSES; adrs=adrs+1) begin\n\t\tfor (i=0; i<`NUM_TESTS; i=i+1) begin\n\t\t\tfor (channel=0; channel<32; channel=channel+1) begin\n\t\t\t\tdata_in_vec <= $random;\n\t\t\t\tfor (bits=7; bits>=0; bits=bits-1) begin\n\t\t\t\t\t@(posedge ser_clk) begin\n\t\t\t\t\t\tif ((channel == 0)&&(i==0)) begin\n\t\t\t\t\t\t\tframe_sync <= 1'b1;\n\t\t\t\t\t\tend else begin\n\t\t\t\t\t\t\tframe_sync <= 1'b0;\n\t\t\t\t\t\tend\t\t\t\t\t\n\t\t\t\t\t\tdata_in <= data_in_vec[bits];\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\t\t@(negedge ser_clk);\n\t\t\t\tcase (4*adrs)\n\t\t\t\t\tTDMI_ALL:\t\twb_read_strobe({16'h0000, 4*adrs[15:0]}, {19'h00000, channel[4:0], data_in_vec});\n\t\t\t\t\tTDMI_DATA:\t\twb_read_strobe({16'h0000, 4*adrs[15:0]}, {24'h000000, data_in_vec});\n\t\t\t\t\tTDMI_CHANNEL:\twb_read_strobe({16'h0000, 4*adrs[15:0]}, {27'h000000, channel[4:0]});\n\t\t\t\tendcase\n\t\t\tend\n\t\tend\n\tend\n\n\t\n\tfor (i=0; i<`NUM_TESTS; i=i+1) begin\n\t\trand_ch  <= $random;\n\t\trand_bit <= $random;\n\t\ttrigger <= 1'b0;\n\t\tfor (channel=0; channel<32; channel=channel+1) begin\n\t\t\tdata_in_vec <= $random;\n\t\t\tfor (bits=7; bits>=0; bits=bits-1) begin\n\t\t\t\t@(posedge ser_clk) begin\n\t\t\t\t\tif ((channel == rand_ch) && (bits == rand_bit) && (trigger == 1'b0)) begin\n\t\t\t\t\t\tbits = 7;\n\t\t\t\t\t\tchannel = 0;\n\t\t\t\t\t\ttrigger <= 1'b1;\n\t\t\t\t\t\tframe_sync <= 1'b1;\n\t\t\t\t\tend else if ((channel == 1) && (trigger == 1'b1)) begin\n\t\t\t\t\t\tframe_sync <= 1'b0;\n\t\t\t\t\tend\n\t\t\t\t\tdata_in <= data_in_vec[bits];\n\t\t\t\tend\n\t\t\tend\n\t\t\t@(negedge ser_clk);\n\t\t\twb_read_strobe(32'h00000000, {24'h000000, data_in_vec});\n\t\tend\n\tend\n\n  #10 $display(\"%t TEST COMPLETE\", $time);\n  $finish;\nend "
    ]
}