{
    "line_num": [
        [
            262,
            265
        ],
        [
            253,
            258
        ],
        [
            248,
            267
        ],
        [
            225,
            246
        ],
        [
            184,
            218
        ],
        [
            161,
            181
        ],
        [
            157,
            171
        ],
        [
            132,
            222
        ]
    ],
    "blocks": [
        "\t\t@(posedge clk) begin\n\t\t\ti_wb_cyc <= 1'b0;\n\t\t\ti_wb_stb <= 1'b0;\n\t\tend",
        "\t\t@(posedge clk) begin\n\t\t\ti_wb_adr <= wb_address_test;\t\n\t\t\ti_wb_cyc <= 1'b1;\t\t\t\n\t\t\ti_wb_stb <= 1'b1;\t\t\t\n\t\t\ti_wb_we  <= 1'b0;\t\t\t\n\t\tend",
        "task wb_read_strobe;\n\t\n\tinput [31:0] wb_address_test;\t\t\t\t\n\n\tbegin\n\t\t@(posedge clk) begin\n\t\t\ti_wb_adr <= wb_address_test;\t\n\t\t\ti_wb_cyc <= 1'b1;\t\t\t\n\t\t\ti_wb_stb <= 1'b1;\t\t\t\n\t\t\ti_wb_we  <= 1'b0;\t\t\t\n\t\tend\n\n\t\t@(posedge clk);\n\n\t\t@(posedge clk) begin\n\t\t\ti_wb_cyc <= 1'b0;\n\t\t\ti_wb_stb <= 1'b0;\n\t\tend\n\tend\nendtask",
        "task wb_write_strobe;\n\t\n\tinput [31:0] wb_waddress_test;\t\n\tinput [31:0] wb_data_test;\t\t\n\n\tbegin\n\t\t@(posedge clk) begin\t\t\t\n\t\t\ti_wb_adr <= wb_waddress_test;\t\n\t\t\ti_wb_cyc <= 1'b1;\t\t\t\n\t\t\ti_wb_stb <= 1'b1;\t\t\t\n\t\t\ti_wb_we  <= 1'b1;\t\t\t\n\t\t\ti_wb_dat <= wb_data_test;\t\n\t\tend\n\n\n\t\t@(posedge clk) begin\n\t\t\ti_wb_we  <= 1'b0;\t\t\t\n\t\t\ti_wb_cyc <= 1'b0;\t\t\t\n\t\t\ti_wb_stb <= 1'b0;\t\t\t\n\t\tend\n\tend\nendtask",
        "\tfor (i=0; i<`NUM_TESTS; i=i+1) begin\n\t\ttrigger <= 1'b1; \n\t\trand_bit <= $random; \n\t\trand_ch <= $random; \n\t\tframe_sync_in <= 1'b0; \n\t\tfor (channel=0; channel<32; channel=channel+1) begin\n\t\t\tdata_in_vec = $random; \n\t\t\tif (channel == 0) begin\n\t\t\t\tprev_ch0 = data_in_vec; \n\t\t\tend\n\t\t\twb_write_strobe({16'h0000,4*channel[15:0]}, {24'h000000, data_in_vec}); \n\t\t\tif ((channel==1) && (frame_sync_in==1)) begin\n\t\t\t\t@(posedge ser_clk) begin frame_sync_in <= 1'b0; end \n\t\t\tend\n\t\t\tfor (bits=7; bits>=0; bits=bits-1) begin\n\t\t\t\tif ((channel == rand_ch)&&(bits == rand_bit)&&(trigger == 1'b1)) begin \n\t\t\t\t\t@(posedge ser_clk) begin\n\t\t\t\t\t\tframe_sync_in <= 1'b1;\n\t\t\t\t\t\tbits <= 7; \n\t\t\t\t\t\tchannel <= 0;\n\t\t\t\t\t\ttrigger <= 1'b0;\n\t\t\t\t\t\tdata_in_vec <= prev_ch0;\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\t\t@(negedge ser_clk) begin data_out_reg[bits] = data_out; end \n\t\t\tend\n\t\t\tif (data_out_reg !== data_in_vec) begin \n\t\t\t\t$display(\"%t ERROR: failure found when truth_data = %h, channel = %d. Is %h but should be %h\",\n\t\t\t  \t$time, data_in_vec, channel, data_out_reg, data_in_vec); \n\t\t\t\t`ifdef ERRORSTOP\n\t\t\t\t\t$stop;\n\t\t\t\t`endif\n\t\t\tend\n\t\tend\n\tend",
        "\tfor (i=0; i<`NUM_TESTS; i=i+1) begin \n\t\tfor (channel=0; channel<32; channel=channel+1) begin \n\t\t\tdata_in_vec = $random; \n\t\t\twb_write_strobe({16'h0000,4*channel[15:0]}, {24'h000000, data_in_vec}); \n\t\t\tif ((channel==0)&&(i==0)) begin\n\t\t\t\t@(posedge ser_clk) begin frame_sync_in <= 1'b1; end \n\t\t\tend else begin\n\t\t\t\t@(posedge ser_clk) begin frame_sync_in <= 1'b0; end \n\t\t\tend\n\t\t\tfor (bits=7; bits>=0; bits=bits-1) begin\n\t\t\t\t@(negedge ser_clk) begin data_out_reg[bits] = data_out; end \n\t\t\tend\n\t\t\tif (data_out_reg !== data_in_vec) begin \n\t\t\t\t$display(\"%t ERROR: failure found when truth_data = %h, channel = %d. Is %h but should be %h\",\n\t\t\t  \t$time, data_in_vec, channel, data_out_reg, data_in_vec); \n\t\t\t\t`ifdef ERRORSTOP\n\t\t\t\t\t$stop;\n\t\t\t\t`endif\n\t\t\tend\n\t\tend\n\tend",
        "\t@(posedge ser_clk) begin reset <= 1'b1; end \n\t@(negedge ser_clk) begin reset <= 1'b0; end\n\t@(posedge ser_clk);\n\t@(negedge ser_clk);\n\tfor (i=0; i<`NUM_TESTS; i=i+1) begin \n\t\tfor (channel=0; channel<32; channel=channel+1) begin \n\t\t\tdata_in_vec = $random; \n\t\t\twb_write_strobe({16'h0000,4*channel[15:0]}, {24'h000000, data_in_vec}); \n\t\t\tif ((channel==0)&&(i==0)) begin\n\t\t\t\t@(posedge ser_clk) begin frame_sync_in <= 1'b1; end \n\t\t\tend else begin\n\t\t\t\t@(posedge ser_clk) begin frame_sync_in <= 1'b0; end \n\t\t\tend\n\t\t\tfor (bits=7; bits>=0; bits=bits-1) begin\n\t\t\t\t@(negedge ser_clk) begin data_out_reg[bits] = data_out; end ",
        "initial begin\n  $timeformat(-9,2,\"ns\", 16);\n`ifdef SDFSCAN\n  $sdf_annotate(\"sdf/TDMO_saed32nm_scan.sdf\", test.top);\n`endif\n\n  ser_clk     = 1'b0;\n  clk\t  \t  = 1'b0;\n  reset       = 1'b0;\n  frame_sync_in = 1'b0;\n\n  scan_in0    = 1'b0;\n  scan_in1    = 1'b0;\n  scan_in2    = 1'b0;\n  scan_in3    = 1'b0;\n  scan_in4    = 1'b0;\n  scan_enable = 1'b0;\n  test_mode   = 1'b0;\n  \n  i_wb_cyc = 1'b0;\n  i_wb_stb = 1'b0;\n  i_wb_we  = 1'b0;\n\t\n\n\n\t@(posedge ser_clk) begin reset <= 1'b1; end \n\t@(negedge ser_clk) begin reset <= 1'b0; end\n\t@(posedge ser_clk);\n\t@(negedge ser_clk);\n\tfor (i=0; i<`NUM_TESTS; i=i+1) begin \n\t\tfor (channel=0; channel<32; channel=channel+1) begin \n\t\t\tdata_in_vec = $random; \n\t\t\twb_write_strobe({16'h0000,4*channel[15:0]}, {24'h000000, data_in_vec}); \n\t\t\tif ((channel==0)&&(i==0)) begin\n\t\t\t\t@(posedge ser_clk) begin frame_sync_in <= 1'b1; end \n\t\t\tend else begin\n\t\t\t\t@(posedge ser_clk) begin frame_sync_in <= 1'b0; end \n\t\t\tend\n\t\t\tfor (bits=7; bits>=0; bits=bits-1) begin\n\t\t\t\t@(negedge ser_clk) begin data_out_reg[bits] = data_out; end \n\t\t\tend\n\t\t\tif (data_out_reg !== data_in_vec) begin \n\t\t\t\t$display(\"%t ERROR: failure found when truth_data = %h, channel = %d. Is %h but should be %h\",\n\t\t\t  \t$time, data_in_vec, channel, data_out_reg, data_in_vec); \n\t\t\t\t`ifdef ERRORSTOP\n\t\t\t\t\t$stop;\n\t\t\t\t`endif\n\t\t\tend\n\t\tend\n\tend\n\n\t\n\tfor (i=0; i<`NUM_TESTS; i=i+1) begin\n\t\ttrigger <= 1'b1; \n\t\trand_bit <= $random; \n\t\trand_ch <= $random; \n\t\tframe_sync_in <= 1'b0; \n\t\tfor (channel=0; channel<32; channel=channel+1) begin\n\t\t\tdata_in_vec = $random; \n\t\t\tif (channel == 0) begin\n\t\t\t\tprev_ch0 = data_in_vec; \n\t\t\tend\n\t\t\twb_write_strobe({16'h0000,4*channel[15:0]}, {24'h000000, data_in_vec}); \n\t\t\tif ((channel==1) && (frame_sync_in==1)) begin\n\t\t\t\t@(posedge ser_clk) begin frame_sync_in <= 1'b0; end \n\t\t\tend\n\t\t\tfor (bits=7; bits>=0; bits=bits-1) begin\n\t\t\t\tif ((channel == rand_ch)&&(bits == rand_bit)&&(trigger == 1'b1)) begin \n\t\t\t\t\t@(posedge ser_clk) begin\n\t\t\t\t\t\tframe_sync_in <= 1'b1;\n\t\t\t\t\t\tbits <= 7; \n\t\t\t\t\t\tchannel <= 0;\n\t\t\t\t\t\ttrigger <= 1'b0;\n\t\t\t\t\t\tdata_in_vec <= prev_ch0;\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\t\t@(negedge ser_clk) begin data_out_reg[bits] = data_out; end \n\t\t\tend\n\t\t\tif (data_out_reg !== data_in_vec) begin \n\t\t\t\t$display(\"%t ERROR: failure found when truth_data = %h, channel = %d. Is %h but should be %h\",\n\t\t\t  \t$time, data_in_vec, channel, data_out_reg, data_in_vec); \n\t\t\t\t`ifdef ERRORSTOP\n\t\t\t\t\t$stop;\n\t\t\t\t`endif\n\t\t\tend\n\t\tend\n\tend\n\n  #10 $display(\"%t TEST COMPLETE\", $time);\n  $finish;\nend "
    ]
}