{
    "block_comment": "This block of code represents a finite state machine that reads incoming data from a network, stores the data into an array, and writes the data into a file. The process is triggered by the rising edge of the 'mtx_clk_i' clock signal. The states `RX_IDLE`, `RX_PRE`, `RX_0`, `RX_1`, and `RX_DONE` constitute the stages of data reception, formatting, storage, and post processing. Data is read when 'mrxdv_i' is high with the help of \"mrxd_i\" input. The string of data is stored in 'rxm' array, indexed by 'rx_line_r'. A data packet is written into a file 'pkt_from_amber_file' when the state machine reaches 'RX_DONE' state. Afterwards, the counter 'pkt_from_amber_num' is incremented or reset to 1 if it reached its maximum value.\n"
}