Line number: 
[94, 159]
Comment: 
This block of Verilog code is responsible for shift operations, controlling the entire shift amount process and defining bit-shift configurations for logical single shifts (LSL), logical right shifts (LSR), arithmetic right shifts (ASR), and rotate right shifts (ROR). It initiates variables to identify shift conditions such as if the shift amount equals 32, is over the VirtualBit size, or is non-zero. If an immediate shift value is zero, specific adjustments are made to 'shift_nzero', 'shift_over', and 'shift_amount' based on the shift function in operation. It uses several case statements to assign different values to variables 'low_selector', 'lsl_selector', 'lsr_selector', and 'direction' based on the function type being processed (LSL, LSR, ASR, ROR). Lastly, it assigns the sign bit 'asr_sign' according to condition checks with function type and base value.