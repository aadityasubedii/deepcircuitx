{
    "line_num": [
        [
            203,
            203
        ],
        [
            190,
            200
        ],
        [
            155,
            187
        ]
    ],
    "blocks": [
        "assign o_out   = product[32:1]; ",
        "always @ ( posedge reset, posedge clk ) begin\n\tif (reset) begin\n\t\tcount <= 'd0;\n\t\tproduct <= 'd0;\n\t\to_done <= 'd0;\n\tend else if ( !i_core_stall ) begin\n\t\tcount           <= i_execute ? count_nxt          : count;           \n\t\tproduct         <= i_execute ? product_nxt        : product;        \n\t\to_done          <= i_execute ? count == 6'd31     : o_done;          \n\tend\nend",
        "always @*\n    begin\n    \n    count_nxt           = count;\n    product_nxt         = product;\n    \n    \n    \n    \n    \n    flags_nxt   = { product[32], product[32:1] == 32'd0 }; \n    \n\n    if ( count == 6'd0 )\n        product_nxt = {33'd0, 1'd0, i_b_in, 1'd0 } ;\n    else if ( count <= 6'd33 )\n        product_nxt = { sum[33], sum, product[33:1]} ;\n    else if ( count == 6'd34 && accumulate )\n        begin\n        \n        \n        product_nxt         = { product[64:33], sum_acc1[31:0], 1'd0}; \n        end\n        \n    \n    if (count == 6'd0)  \n        count_nxt   = enable ? 6'd1 : 6'd0;\n    else if ((count == 6'd34 && !accumulate) ||  \n             (count == 6'd35 &&  accumulate)  )  \n        count_nxt   = 6'd0;\n    else\n        count_nxt   = count + 1'd1;\n    end"
    ]
}