{
    "line_num": [
        [
            2554,
            2554
        ],
        [
            2548,
            2552
        ],
        [
            2541,
            2546
        ],
        [
            2529,
            2539
        ],
        [
            2507,
            2516
        ],
        [
            2494,
            2503
        ],
        [
            2481,
            2490
        ],
        [
            2468,
            2477
        ],
        [
            2451,
            2463
        ],
        [
            2436,
            2448
        ],
        [
            2423,
            2433
        ],
        [
            2415,
            2419
        ],
        [
            2411,
            2411
        ],
        [
            2403,
            2404
        ],
        [
            2388,
            2398
        ],
        [
            2377,
            2384
        ],
        [
            2375,
            2375
        ],
        [
            2365,
            2372
        ],
        [
            2352,
            2362
        ],
        [
            2343,
            2349
        ],
        [
            2335,
            2341
        ],
        [
            2327,
            2333
        ],
        [
            2319,
            2325
        ],
        [
            2311,
            2317
        ],
        [
            2303,
            2309
        ],
        [
            2290,
            2300
        ],
        [
            2281,
            2287
        ],
        [
            2273,
            2279
        ],
        [
            2261,
            2271
        ],
        [
            2248,
            2258
        ],
        [
            2240,
            2246
        ],
        [
            2232,
            2238
        ],
        [
            2220,
            2230
        ],
        [
            2201,
            2201
        ],
        [
            2192,
            2198
        ],
        [
            2184,
            2190
        ],
        [
            2172,
            2181
        ],
        [
            2159,
            2169
        ],
        [
            2150,
            2150
        ],
        [
            2141,
            2147
        ],
        [
            2133,
            2139
        ],
        [
            2122,
            2131
        ],
        [
            2108,
            2118
        ],
        [
            2104,
            2106
        ],
        [
            2080,
            2095
        ],
        [
            2051,
            2075
        ],
        [
            2033,
            2048
        ],
        [
            2011,
            2029
        ],
        [
            1996,
            2006
        ],
        [
            1993,
            1993
        ],
        [
            1973,
            1983
        ],
        [
            1968,
            1968
        ],
        [
            1954,
            1964
        ],
        [
            1943,
            1951
        ],
        [
            1930,
            1940
        ],
        [
            1916,
            1926
        ],
        [
            1902,
            1912
        ],
        [
            1899,
            1899
        ],
        [
            1883,
            1893
        ],
        [
            1879,
            1879
        ],
        [
            1869,
            1876
        ],
        [
            1855,
            1865
        ],
        [
            1838,
            1848
        ],
        [
            1835,
            1835
        ],
        [
            1819,
            1825
        ],
        [
            1811,
            1817
        ],
        [
            1802,
            1808
        ],
        [
            1794,
            1800
        ],
        [
            1784,
            1790
        ],
        [
            1776,
            1782
        ],
        [
            1771,
            1771
        ],
        [
            1763,
            1769
        ],
        [
            1755,
            1761
        ],
        [
            1747,
            1753
        ],
        [
            1739,
            1745
        ],
        [
            1731,
            1737
        ],
        [
            1723,
            1729
        ],
        [
            1710,
            1720
        ],
        [
            1680,
            1698
        ],
        [
            1666,
            1676
        ],
        [
            1653,
            1663
        ],
        [
            1637,
            1647
        ],
        [
            1626,
            1633
        ],
        [
            1597,
            1622
        ],
        [
            1575,
            1593
        ],
        [
            1561,
            1571
        ],
        [
            1547,
            1557
        ],
        [
            1533,
            1544
        ],
        [
            1506,
            1516
        ],
        [
            1492,
            1503
        ],
        [
            1479,
            1489
        ],
        [
            1465,
            1475
        ],
        [
            1451,
            1462
        ],
        [
            1438,
            1448
        ],
        [
            1420,
            1434
        ],
        [
            1403,
            1417
        ],
        [
            1398,
            1398
        ],
        [
            1397,
            1397
        ],
        [
            1396,
            1396
        ],
        [
            1392,
            1392
        ],
        [
            1391,
            1391
        ],
        [
            1379,
            1387
        ],
        [
            1367,
            1375
        ],
        [
            1361,
            1364
        ],
        [
            1356,
            1358
        ],
        [
            1350,
            1354
        ],
        [
            1337,
            1347
        ],
        [
            1327,
            1333
        ],
        [
            1316,
            1325
        ],
        [
            1311,
            1311
        ],
        [
            1297,
            1307
        ],
        [
            1282,
            1292
        ],
        [
            1274,
            1280
        ],
        [
            1266,
            1272
        ],
        [
            1258,
            1264
        ],
        [
            1250,
            1256
        ],
        [
            1237,
            1247
        ],
        [
            1224,
            1234
        ],
        [
            1205,
            1212
        ],
        [
            1203,
            1203
        ],
        [
            1020,
            1198
        ],
        [
            1009,
            1009
        ],
        [
            996,
            1006
        ],
        [
            975,
            985
        ],
        [
            973,
            973
        ],
        [
            952,
            962
        ],
        [
            935,
            945
        ],
        [
            921,
            928
        ],
        [
            904,
            914
        ],
        [
            896,
            896
        ],
        [
            895,
            895
        ],
        [
            886,
            893
        ],
        [
            856,
            881
        ],
        [
            820,
            827
        ],
        [
            805,
            815
        ],
        [
            802,
            802
        ],
        [
            794,
            800
        ],
        [
            785,
            791
        ],
        [
            776,
            782
        ],
        [
            758,
            768
        ],
        [
            753,
            753
        ],
        [
            739,
            749
        ],
        [
            736,
            736
        ],
        [
            722,
            732
        ],
        [
            720,
            720
        ],
        [
            706,
            716
        ],
        [
            703,
            703
        ],
        [
            690,
            700
        ],
        [
            669,
            687
        ],
        [
            589,
            665
        ],
        [
            576,
            586
        ],
        [
            573,
            573
        ],
        [
            572,
            572
        ],
        [
            571,
            571
        ],
        [
            558,
            558
        ],
        [
            553,
            556
        ],
        [
            520,
            530
        ]
    ],
    "blocks": [
        "assign Busy_IRQ = Busy_IRQ_sync2 & ~Busy_IRQ_sync3;",
        "always @ (posedge MRxClk)\nbegin\n    Busy_IRQ_syncb1 <=#Tp Busy_IRQ_sync2;\n    Busy_IRQ_syncb2 <=#Tp Busy_IRQ_syncb1;\nend",
        "always @ (posedge WB_CLK_I)\nbegin\n    Busy_IRQ_sync1 <=#Tp Busy_IRQ_rck;\n    Busy_IRQ_sync2 <=#Tp Busy_IRQ_sync1;\n    Busy_IRQ_sync3 <=#Tp Busy_IRQ_sync2;\nend",
        "always @ (posedge MRxClk or posedge Reset)\nbegin\n  if(Reset)\n    Busy_IRQ_rck <=#Tp 1'b0;\n  else\n  if(RxValid & RxStartFrm & ~RxReady)\n    Busy_IRQ_rck <=#Tp 1'b1;\n  else\n  if(Busy_IRQ_syncb2)\n    Busy_IRQ_rck <=#Tp 1'b0;\nend",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    RxE_IRQ <=#Tp 1'b0;\n  else\n  if(RxStatusWrite & RxIRQEn & (~ReceivedPauseFrm | ReceivedPauseFrm & r_PassAll & (~r_RxFlow)))\n    RxE_IRQ <=#Tp RxError;\n  else\n    RxE_IRQ <=#Tp 1'b0;\nend",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    RxB_IRQ <=#Tp 1'b0;\n  else\n  if(RxStatusWrite & RxIRQEn & ReceivedPacketGood & (~ReceivedPauseFrm | ReceivedPauseFrm & r_PassAll & (~r_RxFlow)))\n    RxB_IRQ <=#Tp (~RxError);\n  else\n    RxB_IRQ <=#Tp 1'b0;\nend",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    TxE_IRQ <=#Tp 1'b0;\n  else\n  if(TxStatusWrite & TxIRQEn)\n    TxE_IRQ <=#Tp TxError;\n  else\n    TxE_IRQ <=#Tp 1'b0;\nend",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    TxB_IRQ <=#Tp 1'b0;\n  else\n  if(TxStatusWrite & TxIRQEn)\n    TxB_IRQ <=#Tp ~TxError;\n  else\n    TxB_IRQ <=#Tp 1'b0;\nend",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    begin\n      RxStatusWriteLatched_syncb1 <=#Tp 1'b0;\n      RxStatusWriteLatched_syncb2 <=#Tp 1'b0;\n    end\n  else\n    begin\n      RxStatusWriteLatched_syncb1 <=#Tp RxStatusWriteLatched_sync2;\n      RxStatusWriteLatched_syncb2 <=#Tp RxStatusWriteLatched_syncb1;\n    end\nend",
        "always @ (posedge MRxClk or posedge Reset)\nbegin\n  if(Reset)\n    begin\n      RxStatusWriteLatched_sync1 <=#Tp 1'b0;\n      RxStatusWriteLatched_sync2 <=#Tp 1'b0;\n    end\n  else\n    begin\n      RxStatusWriteLatched_sync1 <=#Tp RxStatusWriteLatched;\n      RxStatusWriteLatched_sync2 <=#Tp RxStatusWriteLatched_sync1;\n    end\nend",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    RxStatusWriteLatched <=#Tp 1'b0;\n  else\n  if(RxStatusWriteLatched_syncb2)\n    RxStatusWriteLatched <=#Tp 1'b0;        \n  else\n  if(RxStatusWrite)\n    RxStatusWriteLatched <=#Tp 1'b1;\nend",
        "reg RxStatusWriteLatched;\nreg RxStatusWriteLatched_sync1;\nreg RxStatusWriteLatched_sync2;\nreg RxStatusWriteLatched_syncb1;\nreg RxStatusWriteLatched_syncb2;",
        "assign RxError = (|RxStatusInLatched[6:3]) | (|RxStatusInLatched[1:0]);",
        "assign TxError = TxUnderRun | RetryLimit | LateCollLatched | CarrierSenseLost;\n",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    RxOverrun <=#Tp 1'b0;\n  else\n  if(RxStatusWrite)\n    RxOverrun <=#Tp 1'b0;\n  else\n  if(RxBufferFull & WriteRxDataToFifo_wb)\n    RxOverrun <=#Tp 1'b1;\nend",
        "always @ (posedge MRxClk or posedge Reset)\nbegin\n  if(Reset)\n    RxStatusInLatched <=#Tp 'h0;\n  else\n  if(LoadRxStatus)\n    RxStatusInLatched <=#Tp RxStatusIn;\nend",
        "assign RxStatusIn = {ReceivedPauseFrm, AddressMiss, RxOverrun, InvalidSymbol, DribbleNibble, ReceivedPacketTooBig, ShortFrame, LatchedCrcError, RxLateCollision};",
        "always @ (posedge MRxClk or posedge Reset)\nbegin\n  if(Reset)\n    LatchedRxLength[15:0] <=#Tp 16'h0;\n  else\n  if(LoadRxStatus)\n    LatchedRxLength[15:0] <=#Tp RxLength[15:0];\nend",
        "always @ (posedge MRxClk or posedge Reset)\nbegin\n  if(Reset)\n    RxAbortLatched <=#Tp 1'b0;\n  else\n  if(RxAbortSyncb2)\n    RxAbortLatched <=#Tp 1'b0;\n  else\n  if(RxAbort)\n    RxAbortLatched <=#Tp 1'b1;\nend",
        "always @ (posedge MRxClk or posedge Reset)\nbegin\n  if(Reset)\n    RxAbortSyncb2 <=#Tp 1'b0;\n  else\n    RxAbortSyncb2 <=#Tp RxAbortSyncb1;\nend",
        "always @ (posedge MRxClk or posedge Reset)\nbegin\n  if(Reset)\n    RxAbortSyncb1 <=#Tp 1'b0;\n  else\n    RxAbortSyncb1 <=#Tp RxAbortSync2;\nend",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    RxAbortSync4 <=#Tp 1'b0;\n  else\n    RxAbortSync4 <=#Tp RxAbortSync3;\nend",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    RxAbortSync3 <=#Tp 1'b0;\n  else\n    RxAbortSync3 <=#Tp RxAbortSync2;\nend",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    RxAbortSync2 <=#Tp 1'b0;\n  else\n    RxAbortSync2 <=#Tp RxAbortSync1;\nend",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    RxAbortSync1 <=#Tp 1'b0;\n  else\n    RxAbortSync1 <=#Tp RxAbortLatched;\nend",
        "always @ (posedge MRxClk or posedge Reset)\nbegin\n  if(Reset)\n    RxEnableWindow <=#Tp 1'b0;\n  else\n  if(RxStartFrm)\n    RxEnableWindow <=#Tp 1'b1;\n  else\n  if(RxEndFrm | RxAbort)\n    RxEnableWindow <=#Tp 1'b0;\nend",
        "always @ (posedge MRxClk or posedge Reset)\nbegin\n  if(Reset)\n    ShiftEndedSync_c2 <=#Tp 1'b0;\n  else\n    ShiftEndedSync_c2 <=#Tp ShiftEndedSync_c1;\nend",
        "always @ (posedge MRxClk or posedge Reset)\nbegin\n  if(Reset)\n    ShiftEndedSync_c1 <=#Tp 1'b0;\n  else\n    ShiftEndedSync_c1 <=#Tp ShiftEndedSync2;\nend",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    ShiftEnded <=#Tp 1'b0;\n  else\n  if(ShiftEndedSync3 & MasterWbRX & m_wb_ack_i & RxBufferAlmostEmpty & ~ShiftEnded)\n    ShiftEnded <=#Tp 1'b1;\n  else\n  if(RxStatusWrite)\n    ShiftEnded <=#Tp 1'b0;\nend",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    ShiftEndedSync3 <=#Tp 1'b0;\n  else\n  if(ShiftEndedSync1 & ~ShiftEndedSync2)\n    ShiftEndedSync3 <=#Tp 1'b1;\n  else\n  if(ShiftEnded)\n    ShiftEndedSync3 <=#Tp 1'b0;\nend",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    ShiftEndedSync2 <=#Tp 1'b0;\n  else\n    ShiftEndedSync2 <=#Tp ShiftEndedSync1;\nend",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    ShiftEndedSync1 <=#Tp 1'b0;\n  else\n    ShiftEndedSync1 <=#Tp ShiftEnded_rck;\nend",
        "always @ (posedge MRxClk or posedge Reset)\nbegin\n  if(Reset)\n    ShiftEnded_rck <=#Tp 1'b0;\n  else\n  if(~RxAbort & SetWriteRxDataToFifo & StartShiftWillEnd)\n    ShiftEnded_rck <=#Tp 1'b1;\n  else\n  if(RxAbort | ShiftEndedSync_c1 & ShiftEndedSync_c2)\n    ShiftEnded_rck <=#Tp 1'b0;\nend",
        "assign RxFifoReset = SyncRxStartFrm_q & ~SyncRxStartFrm_q2;",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    SyncRxStartFrm_q2 <=#Tp 0;\n  else\n    SyncRxStartFrm_q2 <=#Tp SyncRxStartFrm_q;\nend",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    SyncRxStartFrm_q <=#Tp 0;\n  else\n    SyncRxStartFrm_q <=#Tp SyncRxStartFrm;\nend",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    SyncRxStartFrm <=#Tp 0;\n  else\n  if(LatchedRxStartFrm)\n    SyncRxStartFrm <=#Tp 1;\n  else\n    SyncRxStartFrm <=#Tp 0;\nend",
        "always @ (posedge MRxClk or posedge Reset)\nbegin\n  if(Reset)\n    LatchedRxStartFrm <=#Tp 0;\n  else\n  if(RxStartFrm & ~SyncRxStartFrm_q)\n    LatchedRxStartFrm <=#Tp 1;\n  else\n  if(SyncRxStartFrm_q)\n    LatchedRxStartFrm <=#Tp 0;\nend",
        "assign WriteRxDataToFifo_wb = WriteRxDataToFifoSync2 & ~WriteRxDataToFifoSync3;",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    WriteRxDataToFifoSync3 <=#Tp 1'b0;\n  else\n    WriteRxDataToFifoSync3 <=#Tp WriteRxDataToFifoSync2;\nend",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    WriteRxDataToFifoSync2 <=#Tp 1'b0;\n  else\n    WriteRxDataToFifoSync2 <=#Tp WriteRxDataToFifoSync1;\nend",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    WriteRxDataToFifoSync1 <=#Tp 1'b0;\n  else\n  if(WriteRxDataToFifo)\n    WriteRxDataToFifoSync1 <=#Tp 1'b1;\n  else\n    WriteRxDataToFifoSync1 <=#Tp 1'b0;\nend",
        "always @ (posedge MRxClk or posedge Reset)\nbegin\n  if(Reset)\n    WriteRxDataToFifo <=#Tp 1'b0;\n  else\n  if(SetWriteRxDataToFifo & ~RxAbort)\n    WriteRxDataToFifo <=#Tp 1'b1;\n  else\n  if(WriteRxDataToFifoSync2 | RxAbort)\n    WriteRxDataToFifo <=#Tp 1'b0;\nend",
        "assign SetWriteRxDataToFifo = (RxValid & RxReady & ~RxStartFrm & RxEnableWindow & (&RxByteCnt)) | \n                              (RxValid & RxReady &  RxStartFrm & (&RxPointerLSB_rst))           | \n                              (ShiftWillEnd & LastByteIn & (&RxByteCnt));",
        "always @ (posedge MRxClk or posedge Reset)\nbegin\n  if(Reset)\n    RxDataLatched2 <=#Tp 32'h0;\n  else\n  if(SetWriteRxDataToFifo & ~ShiftWillEnd)\n    RxDataLatched2 <=#Tp {RxDataLatched1[31:8], RxData};              \n  else\n  if(SetWriteRxDataToFifo & ShiftWillEnd)\n    case(RxValidBytes)  \n      0 : RxDataLatched2 <=#Tp {RxDataLatched1[31:8],  RxData};       \n      1 : RxDataLatched2 <=#Tp {RxDataLatched1[31:24], 24'h0};\n      2 : RxDataLatched2 <=#Tp {RxDataLatched1[31:16], 16'h0};\n      3 : RxDataLatched2 <=#Tp {RxDataLatched1[31:8],   8'h0};\n    endcase\nend",
        "always @ (posedge MRxClk or posedge Reset)\nbegin\n  if(Reset)\n    RxDataLatched1       <=#Tp 24'h0;\n  else\n  if(RxValid & RxReady & ~LastByteIn)\n    if(RxStartFrm)\n    begin\n      case(RxPointerLSB_rst)     \n        2'h0:        RxDataLatched1[31:24] <=#Tp RxData;            \n        2'h1:        RxDataLatched1[23:16] <=#Tp RxData;\n        2'h2:        RxDataLatched1[15:8]  <=#Tp RxData;\n        2'h3:        RxDataLatched1        <=#Tp RxDataLatched1;\n      endcase\n    end\n    else if (RxEnableWindow)\n    begin\n      case(RxByteCnt)     \n        2'h0:        RxDataLatched1[31:24] <=#Tp RxData;            \n        2'h1:        RxDataLatched1[23:16] <=#Tp RxData;\n        2'h2:        RxDataLatched1[15:8]  <=#Tp RxData;\n        2'h3:        RxDataLatched1        <=#Tp RxDataLatched1;\n      endcase\n    end\nend",
        "always @ (posedge MRxClk or posedge Reset)\nbegin\n  if(Reset)\n    RxValidBytes <=#Tp 2'h1;\n  else\n  if(RxValid & RxStartFrm)\n    case(RxPointerLSB_rst)  \n      2'h0 : RxValidBytes <=#Tp 2'h1;\n      2'h1 : RxValidBytes <=#Tp 2'h2;\n      2'h2 : RxValidBytes <=#Tp 2'h3;\n      2'h3 : RxValidBytes <=#Tp 2'h0;\n    endcase\n  else\n  if(RxValid & ~LastByteIn & ~RxStartFrm & RxEnableWindow)\n    RxValidBytes <=#Tp RxValidBytes + 1'b1;\nend",
        "always @ (posedge MRxClk or posedge Reset)\nbegin\n  if(Reset)\n    RxByteCnt <=#Tp 2'h0;\n  else\n  if(ShiftEnded_rck | RxAbort)\n    RxByteCnt <=#Tp 2'h0;\n  else\n  if(RxValid & RxStartFrm & RxReady)\n    case(RxPointerLSB_rst)  \n      2'h0 : RxByteCnt <=#Tp 2'h1;\n      2'h1 : RxByteCnt <=#Tp 2'h2;\n      2'h2 : RxByteCnt <=#Tp 2'h3;\n      2'h3 : RxByteCnt <=#Tp 2'h0;\n    endcase\n  else\n  if(RxValid & RxEnableWindow & RxReady | LastByteIn)\n    RxByteCnt <=#Tp RxByteCnt + 1'b1;\nend",
        "always @ (posedge MRxClk or posedge Reset)\nbegin\n  if(Reset)\n    ShiftWillEnd <=#Tp 1'b0;\n  else\n  if(ShiftEnded_rck | RxAbort)\n    ShiftWillEnd <=#Tp 1'b0;\n  else\n  if(StartShiftWillEnd)\n    ShiftWillEnd <=#Tp 1'b1;\nend",
        "assign StartShiftWillEnd = LastByteIn  | RxValid & RxEndFrm & (&RxByteCnt) & RxEnableWindow;",
        "always @ (posedge MRxClk or posedge Reset)\nbegin\n  if(Reset)\n    LastByteIn <=#Tp 1'b0;\n  else\n  if(ShiftWillEnd & (&RxByteCnt) | RxAbort)\n    LastByteIn <=#Tp 1'b0;\n  else\n  if(RxValid & RxReady & RxEndFrm & ~(&RxByteCnt) & RxEnableWindow)\n    LastByteIn <=#Tp 1'b1;\nend",
        "assign RxStatusWrite = ShiftEnded & RxEn & RxEn_q;",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    RxEn_needed <=#Tp 1'b0;\n  else\n  if(~RxReady & r_RxEn & WbEn & ~WbEn_q)\n    RxEn_needed <=#Tp 1'b1;\n  else\n  if(RxPointerRead & RxEn & RxEn_q)\n    RxEn_needed <=#Tp 1'b0;\nend",
        "always @ (RxPointerLSB_rst)\nbegin\n  case(RxPointerLSB_rst[1:0])  \n    2'h0 : RxByteSel[3:0] = 4'hf;\n    2'h1 : RxByteSel[3:0] = 4'h7;\n    2'h2 : RxByteSel[3:0] = 4'h3;\n    2'h3 : RxByteSel[3:0] = 4'h1;\n  endcase\nend",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    RxPointerLSB_rst[1:0] <=#Tp 0;\n  else\n  if(MasterWbRX & m_wb_ack_i)                 \n    RxPointerLSB_rst[1:0] <=#Tp 0;\n  else\n  if(RxEn & RxEn_q & RxPointerRead)\n    RxPointerLSB_rst[1:0] <=#Tp ram_do[1:0];\nend",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    RxPointerMSB <=#Tp 30'h0;\n  else\n  if(RxEn & RxEn_q & RxPointerRead)\n    RxPointerMSB <=#Tp ram_do[31:2];\n  else\n  if(MasterWbRX & m_wb_ack_i)\n      RxPointerMSB <=#Tp RxPointerMSB + 1'b1; \nend",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    RxPointerRead <=#Tp 1'b0;\n  else\n  if(StartRxPointerRead)\n    RxPointerRead <=#Tp 1'b1;\n  else\n  if(RxEn & RxEn_q)\n    RxPointerRead <=#Tp 1'b0;\nend",
        "assign StartRxPointerRead = RxBDRead & RxBDReady;",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    RxReady <=#Tp 1'b0;\n  else\n  if(ShiftEnded | RxAbortSync2 & ~RxAbortSync3 | ~r_RxEn & r_RxEn_q)\n    RxReady <=#Tp 1'b0;\n  else\n  if(RxEn & RxEn_q & RxPointerRead)\n    RxReady <=#Tp 1'b1;\nend",
        "assign RxStatus_s = (RxEn & RxEn_q & RxBDRead) ? ram_do[14:13] : RxStatus;",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    RxStatus <=#Tp 2'h0;\n  else\n  if(RxEn & RxEn_q & RxBDRead)\n    RxStatus <=#Tp ram_do[14:13];\nend",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    RxBDReady <=#Tp 1'b0;\n  else\n  if(RxPointerRead)\n    RxBDReady <=#Tp 1'b0;\n  else\n  if(RxEn & RxEn_q & RxBDRead)\n    RxBDReady <=#Tp ram_do[15]; \nend",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    RxBDRead <=#Tp 1'b0;\n  else\n  if(StartRxBDRead & ~RxReady)\n    RxBDRead <=#Tp 1'b1;\n  else\n  if(RxBDReady)\n    RxBDRead <=#Tp 1'b0;\nend",
        "assign StartRxBDRead = RxStatusWrite | RxAbortSync3 & ~RxAbortSync4 | r_RxEn & ~r_RxEn_q;",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    TxAbort_wb <=#Tp 1'b0;\n  else\n    TxAbort_wb <=#Tp TxAbortSync1;\nend",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    TxAbortSync1 <=#Tp 1'b0;\n  else\n    TxAbortSync1 <=#Tp TxAbort;\nend",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    TxDone_wb <=#Tp 1'b0;\n  else\n    TxDone_wb <=#Tp TxDoneSync1;\nend",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    TxDoneSync1 <=#Tp 1'b0;\n  else\n    TxDoneSync1 <=#Tp TxDone;\nend",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    TxRetry_wb <=#Tp 1'b0;\n  else\n    TxRetry_wb <=#Tp TxRetrySync1;\nend",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    TxRetrySync1 <=#Tp 1'b0;\n  else\n    TxRetrySync1 <=#Tp TxRetry;\nend",
        "assign ReadTxDataFromFifo_wb = ReadTxDataFromFifo_sync2 & ~ReadTxDataFromFifo_sync3;",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    ReadTxDataFromFifo_sync3 <=#Tp 1'b0;\n  else\n    ReadTxDataFromFifo_sync3 <=#Tp ReadTxDataFromFifo_sync2;\nend",
        "always @ (posedge MTxClk or posedge Reset)\nbegin\n  if(Reset)\n    ReadTxDataFromFifo_syncb3 <=#Tp 1'b0;\n  else\n    ReadTxDataFromFifo_syncb3 <=#Tp ReadTxDataFromFifo_syncb2;\nend",
        "always @ (posedge MTxClk or posedge Reset)\nbegin\n  if(Reset)\n    ReadTxDataFromFifo_syncb2 <=#Tp 1'b0;\n  else\n    ReadTxDataFromFifo_syncb2 <=#Tp ReadTxDataFromFifo_syncb1;\nend",
        "always @ (posedge MTxClk or posedge Reset)\nbegin\n  if(Reset)\n    ReadTxDataFromFifo_syncb1 <=#Tp 1'b0;\n  else\n    ReadTxDataFromFifo_syncb1 <=#Tp ReadTxDataFromFifo_sync2;\nend",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    ReadTxDataFromFifo_sync2 <=#Tp 1'b0;\n  else\n    ReadTxDataFromFifo_sync2 <=#Tp ReadTxDataFromFifo_sync1;\nend",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    ReadTxDataFromFifo_sync1 <=#Tp 1'b0;\n  else\n    ReadTxDataFromFifo_sync1 <=#Tp ReadTxDataFromFifo_tck;\nend",
        "always @ (posedge MTxClk or posedge Reset)\nbegin\n  if(Reset)\n    ReadTxDataFromFifo_tck <=#Tp 1'b0;\n  else\n  if(TxStartFrm_sync2 & ~TxStartFrm | TxUsedData & Flop & TxByteCnt == 2'h3 & ~LastWord | TxStartFrm & TxUsedData & Flop & TxByteCnt == 2'h0)\n     ReadTxDataFromFifo_tck <=#Tp 1'b1;\n  else\n  if(ReadTxDataFromFifo_syncb2 & ~ReadTxDataFromFifo_syncb3)\n    ReadTxDataFromFifo_tck <=#Tp 1'b0;\nend",
        "always @ (posedge MTxClk or posedge Reset)\nbegin\n  if(Reset)\n    TxByteCnt <=#Tp 2'h0;\n  else\n  if(TxAbort_q | TxRetry_q)\n    TxByteCnt <=#Tp 2'h0;\n  else\n  if(TxStartFrm & ~TxUsedData)\n    case(TxPointerLSB)  \n      2'h0 : TxByteCnt <=#Tp 2'h1;\n      2'h1 : TxByteCnt <=#Tp 2'h2;\n      2'h2 : TxByteCnt <=#Tp 2'h3;\n      2'h3 : TxByteCnt <=#Tp 2'h0;\n    endcase\n  else\n  if(TxUsedData & Flop)\n    TxByteCnt <=#Tp TxByteCnt + 1'b1;\nend",
        "always @ (posedge MTxClk or posedge Reset)\nbegin\n  if(Reset)\n    TxUnderRun <=#Tp 1'b0;\n  else\n  if(BlockingTxStatusWrite_sync2)\n    TxUnderRun <=#Tp 1'b0;\n  else\n  if(TxUnderRun_sync1)\n    TxUnderRun <=#Tp 1'b1;\nend",
        "always @ (posedge MTxClk or posedge Reset)\nbegin\n  if(Reset)\n    TxUnderRun_sync1 <=#Tp 1'b0;\n  else\n  if(TxUnderRun_wb)\n    TxUnderRun_sync1 <=#Tp 1'b1;\n  else\n  if(BlockingTxStatusWrite_sync2)\n    TxUnderRun_sync1 <=#Tp 1'b0;\nend",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    TxUnderRun_wb <=#Tp 1'b0;\n  else\n  if(TxAbortPulse)\n    TxUnderRun_wb <=#Tp 1'b0;\n  else\n  if(TxBufferEmpty & ReadTxDataFromFifo_wb)\n    TxUnderRun_wb <=#Tp 1'b1;\nend",
        "always @ (posedge MTxClk or posedge Reset)\nbegin\n  if(Reset)\n    TxDataLatched[31:0] <=#Tp 32'h0;\n  else\n if(TxStartFrm_sync2 & ~TxStartFrm | TxUsedData & Flop & TxByteCnt == 2'h3 | TxStartFrm & TxUsedData & Flop & TxByteCnt == 2'h0)\n    TxDataLatched[31:0] <=#Tp TxData_wb[31:0];\nend",
        "always @ (posedge MTxClk or posedge Reset)\nbegin\n  if(Reset)\n    TxData <=#Tp 0;\n  else\n  if(TxStartFrm_sync2 & ~TxStartFrm)\n    case(TxPointerLSB)  \n      2'h0 : TxData <=#Tp TxData_wb[31:24];                  \n      2'h1 : TxData <=#Tp TxData_wb[23:16];                  \n      2'h2 : TxData <=#Tp TxData_wb[15:08];                  \n      2'h3 : TxData <=#Tp TxData_wb[07:00];                  \n    endcase\n  else\n  if(TxStartFrm & TxUsedData & TxPointerLSB==2'h3)\n    TxData <=#Tp TxData_wb[31:24];                           \n  else\n  if(TxUsedData & Flop)\n    begin\n      case(TxByteCnt)  \n        0 : TxData <=#Tp TxDataLatched[31:24];               \n        1 : TxData <=#Tp TxDataLatched[23:16];\n        2 : TxData <=#Tp TxDataLatched[15:8];\n        3 : TxData <=#Tp TxDataLatched[7:0];\n      endcase\n    end\nend",
        "always @ (posedge MTxClk or posedge Reset)\nbegin\n  if(Reset)\n    TxEndFrm <=#Tp 1'b0;\n  else\n  if(Flop & TxEndFrm | TxAbort | TxRetry_q)\n    TxEndFrm <=#Tp 1'b0;        \n  else\n  if(Flop & LastWord)\n    begin\n      case (TxValidBytesLatched)  \n        1 : TxEndFrm <=#Tp TxByteCnt == 2'h0;\n        2 : TxEndFrm <=#Tp TxByteCnt == 2'h1;\n        3 : TxEndFrm <=#Tp TxByteCnt == 2'h2;\n        0 : TxEndFrm <=#Tp TxByteCnt == 2'h3;\n        default : TxEndFrm <=#Tp 1'b0;\n      endcase\n    end\nend",
        "always @ (posedge MTxClk or posedge Reset)\nbegin\n  if(Reset)\n    LastWord <=#Tp 1'b0;\n  else\n  if((TxEndFrm | TxAbort | TxRetry) & Flop)\n    LastWord <=#Tp 1'b0;\n  else\n  if(TxUsedData & Flop & TxByteCnt == 2'h3)\n    LastWord <=#Tp TxEndFrm_wb;\nend",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    TxDonePacketBlocked <=#Tp 1'b0;\n  else\n  if(!TxDone_wb & TxDone_wb_q)\n    TxDonePacketBlocked <=#Tp 1'b0;\n  else\n  if(TxDonePacket)\n    TxDonePacketBlocked <=#Tp 1'b1;\nend",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    TxDonePacket_NotCleared <=#Tp 1'b0;\n  else\n  if(TxEn & TxEn_q & TxDonePacket_NotCleared)\n    TxDonePacket_NotCleared <=#Tp 1'b0;\n  else\n  if(TxDone_wb & !tx_burst_en & MasterWbTX & MasterAccessFinished & (~TxDonePacketBlocked) | \n     TxDone_wb & !MasterWbTX & (~TxDonePacketBlocked))\n    TxDonePacket_NotCleared <=#Tp 1'b1;\nend",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    TxRetryPacketBlocked <=#Tp 1'b0;\n  else\n  if(!TxRetry_wb & TxRetry_wb_q)\n    TxRetryPacketBlocked <=#Tp 1'b0;\n  else\n  if(TxRetryPacket)\n    TxRetryPacketBlocked <=#Tp 1'b1;\nend",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    TxRetryPacket_NotCleared <=#Tp 1'b0;\n  else\n  if(StartTxBDRead)\n    TxRetryPacket_NotCleared <=#Tp 1'b0;\n  else\n  if(TxRetry_wb & !tx_burst_en & MasterWbTX & MasterAccessFinished & !TxRetryPacketBlocked | \n     TxRetry_wb & !MasterWbTX & !TxRetryPacketBlocked)\n    TxRetryPacket_NotCleared <=#Tp 1'b1;\nend",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    TxRetryPacket <=#Tp 1'b0;\n  else\n  if(TxRetry_wb & !tx_burst_en & MasterWbTX & MasterAccessFinished & !TxRetryPacketBlocked | \n     TxRetry_wb & !MasterWbTX & !TxRetryPacketBlocked)\n    TxRetryPacket <=#Tp 1'b1;\n  else\n    TxRetryPacket <=#Tp 1'b0;\nend",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    TxAbortPacketBlocked <=#Tp 1'b0;\n  else\n  if(!TxAbort_wb & TxAbort_wb_q)\n    TxAbortPacketBlocked <=#Tp 1'b0;\n  else\n  if(TxAbortPacket)\n    TxAbortPacketBlocked <=#Tp 1'b1;\nend",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    TxAbortPacket_NotCleared <=#Tp 1'b0;\n  else\n  if(TxEn & TxEn_q & TxAbortPacket_NotCleared)\n    TxAbortPacket_NotCleared <=#Tp 1'b0;\n  else\n  if(TxAbort_wb & (~tx_burst_en) & MasterWbTX & MasterAccessFinished & (~TxAbortPacketBlocked) |\n     TxAbort_wb & (~MasterWbTX) & (~TxAbortPacketBlocked))\n    TxAbortPacket_NotCleared <=#Tp 1'b1;\nend",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    TxAbortPacket <=#Tp 1'b0;\n  else\n  if(TxAbort_wb & (~tx_burst_en) & MasterWbTX & MasterAccessFinished & (~TxAbortPacketBlocked) |\n     TxAbort_wb & (~MasterWbTX) & (~TxAbortPacketBlocked))\n    TxAbortPacket <=#Tp 1'b1;\n  else\n    TxAbortPacket <=#Tp 1'b0;\nend",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    begin\n      TxDone_wb_q   <=#Tp 1'b0;\n      TxAbort_wb_q  <=#Tp 1'b0;\n      TxRetry_wb_q  <=#Tp 1'b0;\n    end\n  else\n    begin\n      TxDone_wb_q   <=#Tp TxDone_wb;\n      TxAbort_wb_q  <=#Tp TxAbort_wb;\n      TxRetry_wb_q  <=#Tp TxRetry_wb;\n    end\nend",
        "always @ (posedge MTxClk or posedge Reset)\nbegin\n  if(Reset)\n    begin\n      TxAbort_q      <=#Tp 1'b0;\n      TxRetry_q      <=#Tp 1'b0;\n      TxUsedData_q   <=#Tp 1'b0;\n    end\n  else\n    begin\n      TxAbort_q      <=#Tp TxAbort;\n      TxRetry_q      <=#Tp TxRetry;\n      TxUsedData_q   <=#Tp TxUsedData;\n    end\nend",
        "assign TxAbortPulse   = TxAbort_wb   & ~TxAbort_wb_q;",
        "assign TxDonePulse    = TxDone_wb    & ~TxDone_wb_q;",
        "assign TxRetryPulse   = TxRetry_wb   & ~TxRetry_wb_q;",
        "assign TxBDDataIn = {LatchedTxLength, 1'b0, TxStatus, 2'h0, TxStatusInLatched};",
        "assign RxBDDataIn = {LatchedRxLength, 1'b0, RxStatus_s, 4'h0, RxStatusInLatched};",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    RxBDAddress <=#Tp 7'h0;\n  else if(r_RxEn & (~r_RxEn_q))\n    RxBDAddress <=#Tp r_TxBDNum[6:0];\n  else if(RxStatusWrite)\n    RxBDAddress <=#Tp TempRxBDAddress;\nend",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    TxBDAddress <=#Tp 7'h0;\n  else if (r_TxEn & (~r_TxEn_q))\n    TxBDAddress <=#Tp 7'h0;\n  else if (TxStatusWrite)\n    TxBDAddress <=#Tp TempTxBDAddress;\nend",
        "assign TempTxBDAddress[7:1] = {7{ TxStatusWrite     & ~WrapTxStatusBit}}   & (TxBDAddress + 1'b1) ; \nassign TempRxBDAddress[7:1] = {7{ WrapRxStatusBit}} & (r_TxBDNum[6:0])     | \n                              {7{~WrapRxStatusBit}} & (RxBDAddress + 1'b1) ; \n",
        "assign RxIRQEn         = RxStatus_s[14];\nassign WrapRxStatusBit = RxStatus_s[13];\n",
        "assign TxIRQEn          = TxStatus[14];\nassign WrapTxStatusBit  = TxStatus[13];\nassign PerPacketPad     = TxStatus[12];\nassign PerPacketCrcEn   = TxStatus[11];\n",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    TxValidBytesLatched <=#Tp 2'h0;\n  else\n  if(LatchValidBytes & ~LatchValidBytes_q)\n    TxValidBytesLatched <=#Tp TxValidBytes;\n  else\n  if(TxRetryPulse | TxDonePulse | TxAbortPulse)\n    TxValidBytesLatched <=#Tp 2'h0;\nend",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    LatchValidBytes_q <=#Tp 1'b0;\n  else\n    LatchValidBytes_q <=#Tp LatchValidBytes;\nend",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    LatchValidBytes <=#Tp 1'b0;\n  else\n  if(TxLengthLt4 & TxBDReady)\n    LatchValidBytes <=#Tp 1'b1;\n  else\n    LatchValidBytes <=#Tp 1'b0;\nend",
        "assign TxValidBytes = TxLengthLt4 ? TxLength[1:0] : 2'b0;",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    TxEndFrm_wb <=#Tp 1'b0;\n  else\n  if(TxLengthEq0 & TxBufferAlmostEmpty & TxUsedData)\n    TxEndFrm_wb <=#Tp 1'b1;\n  else\n  if(TxRetryPulse | TxDonePulse | TxAbortPulse)\n    TxEndFrm_wb <=#Tp 1'b0;\nend",
        "always @ (posedge MTxClk or posedge Reset)\nbegin\n  if(Reset)\n    TxStartFrm <=#Tp 1'b0;\n  else\n  if(TxStartFrm_sync2)\n    TxStartFrm <=#Tp 1'b1;\n  else\n  if(TxUsedData_q | ~TxStartFrm_sync2 & (TxRetry & (~TxRetry_q) | TxAbort & (~TxAbort_q)))\n    TxStartFrm <=#Tp 1'b0;\nend",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    TxStartFrm_syncb2 <=#Tp 1'b0;\n  else\n    TxStartFrm_syncb2 <=#Tp TxStartFrm_syncb1;\nend",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    TxStartFrm_syncb1 <=#Tp 1'b0;\n  else\n    TxStartFrm_syncb1 <=#Tp TxStartFrm_sync2;\nend",
        "always @ (posedge MTxClk or posedge Reset)\nbegin\n  if(Reset)\n    TxStartFrm_sync2 <=#Tp 1'b0;\n  else\n    TxStartFrm_sync2 <=#Tp TxStartFrm_sync1;\nend",
        "always @ (posedge MTxClk or posedge Reset)\nbegin\n  if(Reset)\n    TxStartFrm_sync1 <=#Tp 1'b0;\n  else\n    TxStartFrm_sync1 <=#Tp TxStartFrm_wb;\nend",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    StartOccured <=#Tp 1'b0;\n  else\n  if(TxStartFrm_wb)\n    StartOccured <=#Tp 1'b1;\n  else\n  if(ResetTxBDReady)\n    StartOccured <=#Tp 1'b0;\nend",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    TxStartFrm_wb <=#Tp 1'b0;\n  else\n  if(TxBDReady & ~StartOccured & (TxBufferFull | TxLengthEq0))\n    TxStartFrm_wb <=#Tp 1'b1;\n  else\n  if(TxStartFrm_syncb2)\n    TxStartFrm_wb <=#Tp 1'b0;\nend",
        "eth_fifo #(`ETH_TX_FIFO_DATA_WIDTH, `ETH_TX_FIFO_DEPTH, `ETH_TX_FIFO_CNT_WIDTH)\ntx_fifo ( .data_in(m_wb_dat_i),                             .data_out(TxData_wb), \n          .clk(WB_CLK_I),                                   .reset(Reset), \n          .write(MasterWbTX & m_wb_ack_i),                  .read(ReadTxDataFromFifo_wb & ~TxBufferEmpty),\n          .clear(TxFifoClear),                              .full(TxBufferFull), \n          .almost_full(TxBufferAlmostFull),                 .almost_empty(TxBufferAlmostEmpty), \n          .empty(TxBufferEmpty),                            .cnt(txfifo_cnt)\n        );",
        "assign TxFifoClear = (TxAbortPacket | TxRetryPacket);",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    begin\n      MasterWbTX <=#Tp 1'b0;\n      MasterWbRX <=#Tp 1'b0;\n      m_wb_adr_o <=#Tp 30'h0;\n      m_wb_cyc_o <=#Tp 1'b0;\n      m_wb_we_o  <=#Tp 1'b0;\n      m_wb_sel_o <=#Tp 4'h0;\n      cyc_cleared<=#Tp 1'b0;\n      tx_burst_cnt<=#Tp 0;\n      rx_burst_cnt<=#Tp 0;\n      IncrTxPointer<=#Tp 1'b0;\n      tx_burst_en<=#Tp 1'b1;\n      rx_burst_en<=#Tp 1'b0;\n      `ifdef ETH_WISHBONE_B3\n        m_wb_cti_o <=#Tp 3'b0;\n      `endif\n    end\n  else\n    begin\n      \n      casex ({MasterWbTX, MasterWbRX, ReadTxDataFromMemory_2, WriteRxDataToMemory, MasterAccessFinished, cyc_cleared, tx_burst, rx_burst})  \n        8'b00_10_00_10,             \n        8'b10_1x_10_1x,             \n        8'b10_10_01_10,             \n        8'b01_1x_01_1x :            \n          begin\n            MasterWbTX <=#Tp 1'b1;  \n            MasterWbRX <=#Tp 1'b0;\n            m_wb_cyc_o <=#Tp 1'b1;\n            m_wb_we_o  <=#Tp 1'b0;\n            m_wb_sel_o <=#Tp 4'hf;\n            cyc_cleared<=#Tp 1'b0;\n            IncrTxPointer<=#Tp 1'b1;\n            tx_burst_cnt <=#Tp tx_burst_cnt+3'h1;\n            if(tx_burst_cnt==0)\n              m_wb_adr_o <=#Tp TxPointerMSB;\n            else\n              m_wb_adr_o <=#Tp m_wb_adr_o+1'b1;\n\n            if(tx_burst_cnt==(`ETH_BURST_LENGTH-1))\n              begin\n                tx_burst_en<=#Tp 1'b0;\n              `ifdef ETH_WISHBONE_B3\n                m_wb_cti_o <=#Tp 3'b111;\n              `endif\n              end\n            else\n              begin\n              `ifdef ETH_WISHBONE_B3\n                m_wb_cti_o <=#Tp 3'b010;\n              `endif\n              end\n          end\n        8'b00_x1_00_x1,             \n        8'b01_x1_10_x1,             \n        8'b01_01_01_01,             \n        8'b10_x1_01_x1 :            \n          begin\n            MasterWbTX <=#Tp 1'b0;  \n            MasterWbRX <=#Tp 1'b1;\n            m_wb_cyc_o <=#Tp 1'b1;\n            m_wb_we_o  <=#Tp 1'b1;\n            m_wb_sel_o <=#Tp RxByteSel;\n            IncrTxPointer<=#Tp 1'b0;\n            cyc_cleared<=#Tp 1'b0;\n            rx_burst_cnt <=#Tp rx_burst_cnt+3'h1;\n\n            if(rx_burst_cnt==0)\n              m_wb_adr_o <=#Tp RxPointerMSB;\n            else\n              m_wb_adr_o <=#Tp m_wb_adr_o+1'b1;\n\n            if(rx_burst_cnt==(`ETH_BURST_LENGTH-1))\n              begin\n                rx_burst_en<=#Tp 1'b0;\n              `ifdef ETH_WISHBONE_B3\n                m_wb_cti_o <=#Tp 3'b111;\n              `endif\n              end\n            else\n              begin\n              `ifdef ETH_WISHBONE_B3\n                m_wb_cti_o <=#Tp 3'b010;\n              `endif\n              end\n          end\n        8'b00_x1_00_x0 :            \n          begin\n            MasterWbTX <=#Tp 1'b0;\n            MasterWbRX <=#Tp 1'b1;\n            m_wb_adr_o <=#Tp RxPointerMSB;\n            m_wb_cyc_o <=#Tp 1'b1;\n            m_wb_we_o  <=#Tp 1'b1;\n            m_wb_sel_o <=#Tp RxByteSel;\n            IncrTxPointer<=#Tp 1'b0;\n          end\n        8'b00_10_00_00 :            \n          begin\n            MasterWbTX <=#Tp 1'b1;\n            MasterWbRX <=#Tp 1'b0;\n            m_wb_adr_o <=#Tp TxPointerMSB;\n            m_wb_cyc_o <=#Tp 1'b1;\n            m_wb_we_o  <=#Tp 1'b0;\n            m_wb_sel_o <=#Tp 4'hf;\n            IncrTxPointer<=#Tp 1'b1;\n          end\n        8'b10_10_01_00,             \n        8'b01_1x_01_0x  :           \n          begin\n            MasterWbTX <=#Tp 1'b1;\n            MasterWbRX <=#Tp 1'b0;\n            m_wb_adr_o <=#Tp TxPointerMSB;\n            m_wb_cyc_o <=#Tp 1'b1;\n            m_wb_we_o  <=#Tp 1'b0;\n            m_wb_sel_o <=#Tp 4'hf;\n            cyc_cleared<=#Tp 1'b0;\n            IncrTxPointer<=#Tp 1'b1;\n          end\n        8'b01_01_01_00,             \n        8'b10_x1_01_x0  :           \n          begin\n            MasterWbTX <=#Tp 1'b0;\n            MasterWbRX <=#Tp 1'b1;\n            m_wb_adr_o <=#Tp RxPointerMSB;\n            m_wb_cyc_o <=#Tp 1'b1;\n            m_wb_we_o  <=#Tp 1'b1;\n            m_wb_sel_o <=#Tp RxByteSel;\n            cyc_cleared<=#Tp 1'b0;\n            IncrTxPointer<=#Tp 1'b0;\n          end\n        8'b01_01_10_00,             \n        8'b01_1x_10_x0,             \n        8'b10_10_10_00,             \n        8'b10_x1_10_0x :            \n          begin\n            m_wb_cyc_o <=#Tp 1'b0;  \n            cyc_cleared<=#Tp 1'b1;\n            IncrTxPointer<=#Tp 1'b0;\n            tx_burst_cnt<=#Tp 0;\n            tx_burst_en<=#Tp txfifo_cnt<(`ETH_TX_FIFO_DEPTH-`ETH_BURST_LENGTH) & (TxLength>(`ETH_BURST_LENGTH*4+4));\n            rx_burst_cnt<=#Tp 0;\n            rx_burst_en<=#Tp MasterWbRX ? enough_data_in_rxfifo_for_burst_plus1 : enough_data_in_rxfifo_for_burst;  \n            `ifdef ETH_WISHBONE_B3\n              m_wb_cti_o <=#Tp 3'b0;\n            `endif\n          end\n        8'bxx_00_10_00,             \n        8'bxx_00_01_00 :            \n          begin\n            MasterWbTX <=#Tp 1'b0;\n            MasterWbRX <=#Tp 1'b0;\n            m_wb_cyc_o <=#Tp 1'b0;\n            cyc_cleared<=#Tp 1'b0;\n            IncrTxPointer<=#Tp 1'b0;\n            rx_burst_cnt<=#Tp 0;\n            rx_burst_en<=#Tp MasterWbRX ? enough_data_in_rxfifo_for_burst_plus1 : enough_data_in_rxfifo_for_burst;  \n            `ifdef ETH_WISHBONE_B3\n              m_wb_cti_o <=#Tp 3'b0;\n            `endif\n          end\n        8'b00_00_00_00:             \n          begin\n            tx_burst_cnt<=#Tp 0;\n            tx_burst_en<=#Tp txfifo_cnt<(`ETH_TX_FIFO_DEPTH-`ETH_BURST_LENGTH) & (TxLength>(`ETH_BURST_LENGTH*4+4));\n          end\n        default:                    \n          begin\n            MasterWbTX <=#Tp MasterWbTX;\n            MasterWbRX <=#Tp MasterWbRX;\n            m_wb_cyc_o <=#Tp m_wb_cyc_o;\n            m_wb_sel_o <=#Tp m_wb_sel_o;\n            IncrTxPointer<=#Tp IncrTxPointer;\n          end\n      endcase\n    end\nend",
        "assign MasterAccessFinished = m_wb_ack_i | m_wb_err_i;",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    BlockReadTxDataFromMemory <=#Tp 1'b0;\n  else\n  if((TxBufferAlmostFull | TxLength <= 4)& MasterWbTX & (~cyc_cleared) & (!(TxAbortPacket_NotCleared | TxRetryPacket_NotCleared)))\n    BlockReadTxDataFromMemory <=#Tp 1'b1;\n  else\n  if(ReadTxDataFromFifo_wb | TxDonePacket | TxAbortPacket | TxRetryPacket)\n    BlockReadTxDataFromMemory <=#Tp 1'b0;\nend",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    ReadTxDataFromMemory <=#Tp 1'b0;\n  else\n  if(TxLengthEq0 | TxAbortPulse | TxRetryPulse)\n    ReadTxDataFromMemory <=#Tp 1'b0;\n  else\n  if(SetReadTxDataFromMemory)\n    ReadTxDataFromMemory <=#Tp 1'b1;\nend",
        "assign SetReadTxDataFromMemory = TxEn & TxEn_q & TxPointerRead;",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    BlockingIncrementTxPointer <=#Tp 0;\n  else\n  if(MasterAccessFinished)\n    BlockingIncrementTxPointer <=#Tp 0;\n  else\n  if(IncrTxPointer)\n    BlockingIncrementTxPointer <=#Tp 1'b1;\nend",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    TxPointerLSB_rst[1:0] <=#Tp 0;\n  else\n  if(TxEn & TxEn_q & TxPointerRead)\n    TxPointerLSB_rst[1:0] <=#Tp ram_do[1:0];\n  else\n  if(MasterWbTX & m_wb_ack_i)                 \n    TxPointerLSB_rst[1:0] <=#Tp 0;\nend",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    TxPointerLSB[1:0] <=#Tp 0;\n  else\n  if(TxEn & TxEn_q & TxPointerRead)\n    TxPointerLSB[1:0] <=#Tp ram_do[1:0];\nend",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    TxPointerMSB <=#Tp 30'h0;\n  else\n  if(TxEn & TxEn_q & TxPointerRead)\n    TxPointerMSB <=#Tp ram_do[31:2];\n  else\n  if(IncrTxPointer & ~BlockingIncrementTxPointer)\n    TxPointerMSB <=#Tp TxPointerMSB + 1'b1;     \nend",
        "assign TxLengthLt4 = TxLength < 4;",
        "assign TxLengthEq0 = TxLength == 0;",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    LatchedTxLength <=#Tp 16'h0;\n  else\n  if(TxEn & TxEn_q & TxBDRead)\n    LatchedTxLength <=#Tp ram_do[31:16];\nend",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    TxLength <=#Tp 16'h0;\n  else\n  if(TxEn & TxEn_q & TxBDRead)\n    TxLength <=#Tp ram_do[31:16];\n  else\n  if(MasterWbTX & m_wb_ack_i)\n    begin\n      if(TxLengthLt4)\n        TxLength <=#Tp 16'h0;\n      else\n      if(TxPointerLSB_rst==2'h0)\n        TxLength <=#Tp TxLength - 3'h4;    \n      else\n      if(TxPointerLSB_rst==2'h1)\n        TxLength <=#Tp TxLength - 3'h3;    \n      else\n      if(TxPointerLSB_rst==2'h2)\n        TxLength <=#Tp TxLength - 3'h2;    \n      else\n      if(TxPointerLSB_rst==2'h3)\n        TxLength <=#Tp TxLength - 3'h1;    \n    end\nend",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    TxStatus <=#Tp 4'h0;\n  else\n  if(TxEn & TxEn_q & TxBDRead)\n    TxStatus <=#Tp ram_do[14:11];\nend",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    BlockingTxBDRead <=#Tp 1'b0;\n  else\n  if(StartTxBDRead)\n    BlockingTxBDRead <=#Tp 1'b1;\n  else\n  if(~StartTxBDRead & ~TxBDReady)\n    BlockingTxBDRead <=#Tp 1'b0;\nend",
        "assign RstDeferLatched = BlockingTxStatusWrite_sync2 & ~BlockingTxStatusWrite_sync3;",
        "always @ (posedge MTxClk or posedge Reset)\nbegin\n  if(Reset)\n    BlockingTxStatusWrite_sync3 <=#Tp 1'b0;\n  else\n    BlockingTxStatusWrite_sync3 <=#Tp BlockingTxStatusWrite_sync2;\nend",
        "always @ (posedge MTxClk or posedge Reset)\nbegin\n  if(Reset)\n    BlockingTxStatusWrite_sync2 <=#Tp 1'b0;\n  else\n    BlockingTxStatusWrite_sync2 <=#Tp BlockingTxStatusWrite_sync1;\nend",
        "always @ (posedge MTxClk or posedge Reset)\nbegin\n  if(Reset)\n    BlockingTxStatusWrite_sync1 <=#Tp 1'b0;\n  else\n    BlockingTxStatusWrite_sync1 <=#Tp BlockingTxStatusWrite;\nend",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    BlockingTxStatusWrite <=#Tp 1'b0;\n  else\n  if(~TxDone_wb & ~TxAbort_wb)\n    BlockingTxStatusWrite <=#Tp 1'b0;\n  else\n  if(TxStatusWrite)\n    BlockingTxStatusWrite <=#Tp 1'b1;\nend",
        "assign TxStatusWrite = (TxDonePacket_NotCleared | TxAbortPacket_NotCleared) & TxEn & TxEn_q & ~BlockingTxStatusWrite;",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    TxPointerRead <=#Tp 1'b0;\n  else\n  if(StartTxPointerRead)\n    TxPointerRead <=#Tp 1'b1;\n  else\n  if(TxEn_q)\n    TxPointerRead <=#Tp 1'b0;\nend",
        "assign StartTxPointerRead = TxBDRead & TxBDReady;",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    TxBDRead <=#Tp 1'b1;\n  else\n  if(StartTxBDRead)\n    TxBDRead <=#Tp 1'b1;\n  else\n  if(TxBDReady)\n    TxBDRead <=#Tp 1'b0;\nend",
        "assign StartTxBDRead = (TxRetryPacket_NotCleared | TxStatusWrite) & ~BlockingTxBDRead & ~TxBDReady;",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    TxBDReady <=#Tp 1'b0;\n  else\n  if(TxEn & TxEn_q & TxBDRead)\n    TxBDReady <=#Tp ram_do[15] & (ram_do[31:16] > 4); \n  else                                                \n  if(ResetTxBDReady)\n    TxBDReady <=#Tp 1'b0;\nend",
        "assign ResetTxBDReady = TxDonePulse | TxAbortPulse | TxRetryPulse;",
        "always @ (posedge MTxClk or posedge Reset)\nbegin\n  if(Reset)\n    Flop <=#Tp 1'b0;\n  else\n  if(TxDone | TxAbort | TxRetry_q)\n    Flop <=#Tp 1'b0;\n  else\n  if(TxUsedData)\n    Flop <=#Tp ~Flop;\nend",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    begin\n      WbEn_q <=#Tp 1'b0;\n      RxEn_q <=#Tp 1'b0;\n      TxEn_q <=#Tp 1'b0;\n      r_TxEn_q <=#Tp 1'b0;\n      r_RxEn_q <=#Tp 1'b0;\n    end\n  else\n    begin\n      WbEn_q <=#Tp WbEn;\n      RxEn_q <=#Tp RxEn;\n      TxEn_q <=#Tp TxEn;\n      r_TxEn_q <=#Tp r_TxEn;\n      r_RxEn_q <=#Tp r_RxEn;\n    end\nend",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    begin\n      WbEn <=#Tp 1'b1;\n      RxEn <=#Tp 1'b0;\n      TxEn <=#Tp 1'b0;\n      ram_addr <=#Tp 8'h0;\n      ram_di <=#Tp 32'h0;\n      BDRead <=#Tp 1'b0;\n      BDWrite <=#Tp 1'b0;\n    end\n  else\n    begin\n      \n      case ({WbEn_q, RxEn_q, TxEn_q, RxEn_needed, TxEn_needed})  \n        5'b100_10, 5'b100_11 :\n          begin\n            WbEn <=#Tp 1'b0;\n            RxEn <=#Tp 1'b1;  \n            TxEn <=#Tp 1'b0;\n            ram_addr <=#Tp {RxBDAddress, RxPointerRead};\n            ram_di <=#Tp RxBDDataIn;\n          end\n        5'b100_01 :\n          begin\n            WbEn <=#Tp 1'b0;\n            RxEn <=#Tp 1'b0;\n            TxEn <=#Tp 1'b1;  \n            ram_addr <=#Tp {TxBDAddress, TxPointerRead};\n            ram_di <=#Tp TxBDDataIn;\n          end\n        5'b010_00, 5'b010_10 :\n          begin\n            WbEn <=#Tp 1'b1;  \n            RxEn <=#Tp 1'b0;\n            TxEn <=#Tp 1'b0;\n            ram_addr <=#Tp WB_ADR_I[9:2];\n            ram_di <=#Tp WB_DAT_I;\n            BDWrite <=#Tp BDCs[3:0] & {4{WB_WE_I}};\n            BDRead <=#Tp (|BDCs) & ~WB_WE_I;\n          end\n        5'b010_01, 5'b010_11 :\n          begin\n            WbEn <=#Tp 1'b0;\n            RxEn <=#Tp 1'b0;\n            TxEn <=#Tp 1'b1;  \n            ram_addr <=#Tp {TxBDAddress, TxPointerRead};\n            ram_di <=#Tp TxBDDataIn;\n          end\n        5'b001_00, 5'b001_01, 5'b001_10, 5'b001_11 :\n          begin\n            WbEn <=#Tp 1'b1;  \n            RxEn <=#Tp 1'b0;\n            TxEn <=#Tp 1'b0;\n            ram_addr <=#Tp WB_ADR_I[9:2];\n            ram_di <=#Tp WB_DAT_I;\n            BDWrite <=#Tp BDCs[3:0] & {4{WB_WE_I}};\n            BDRead <=#Tp (|BDCs) & ~WB_WE_I;\n          end\n        5'b100_00 :\n          begin\n            WbEn <=#Tp 1'b0;  \n          end\n        5'b000_00 :\n          begin\n            WbEn <=#Tp 1'b1;  \n            RxEn <=#Tp 1'b0;\n            TxEn <=#Tp 1'b0;\n            ram_addr <=#Tp WB_ADR_I[9:2];\n            ram_di <=#Tp WB_DAT_I;\n            BDWrite <=#Tp BDCs[3:0] & {4{WB_WE_I}};\n            BDRead <=#Tp (|BDCs) & ~WB_WE_I;\n          end\n      endcase\n    end\nend",
        "always @ (posedge WB_CLK_I or posedge Reset)\nbegin\n  if(Reset)\n    TxEn_needed <=#Tp 1'b0;\n  else\n  if(~TxBDReady & r_TxEn & WbEn & ~WbEn_q)\n    TxEn_needed <=#Tp 1'b1;\n  else\n  if(TxPointerRead & TxEn & TxEn_q)\n    TxEn_needed <=#Tp 1'b0;\nend",
        "assign ram_oe = BDRead & WbEn & WbEn_q | TxEn & TxEn_q & (TxBDRead | TxPointerRead) | RxEn & RxEn_q & (RxBDRead | RxPointerRead);",
        "assign ram_we = (BDWrite & {4{(WbEn & WbEn_q)}}) | {4{(TxStatusWrite | RxStatusWrite)}};",
        "assign ram_ce = 1'b1;",
        "assign WB_DAT_O = ram_do;",
        "always @ (posedge WB_CLK_I)\nbegin\n  WB_ACK_O <=#Tp (|BDWrite) & WbEn & WbEn_q | BDRead & WbEn & ~WbEn_q;\nend",
        "\nreg             WB_ACK_O;\n\nwire    [8:0]   RxStatusIn;\nreg     [8:0]   RxStatusInLatched;\n\nreg WbEn, WbEn_q;\nreg RxEn, RxEn_q;\nreg TxEn, TxEn_q;\nreg r_TxEn_q;\nreg r_RxEn_q;"
    ]
}