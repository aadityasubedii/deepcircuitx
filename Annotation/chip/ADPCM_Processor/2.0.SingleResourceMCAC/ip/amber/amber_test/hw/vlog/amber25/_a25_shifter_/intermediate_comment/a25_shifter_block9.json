{
    "block_comment": "This block performs a logical shift left (LSL) operation on input 'i_in' based on the shift amount 'i_shift_amount' and can conditionally include a carry-in input. If 'FULL_BARREL' equals 1, the operation is executed in a single cycle. Depending on the shift amount, different bits from the input are selected and concatenated with zeroes at the LSB end to create output lsl_out. If 'i_shift_imm_zero' equals 1 or 'i_shift_amount' is 0, the carry in value and the original input are used without shift. For shift amounts from 1 to 32, an equivalent number of lower bits are dropped from the input and replaced by zeroes. If 'i_shift_amount' is larger than 32, only zeroes are returned."
}