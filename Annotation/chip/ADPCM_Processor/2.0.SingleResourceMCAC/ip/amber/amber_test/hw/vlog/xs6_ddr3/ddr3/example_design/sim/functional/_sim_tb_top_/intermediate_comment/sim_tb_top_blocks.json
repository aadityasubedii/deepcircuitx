{
    "line_num": [
        [
            269,
            294
        ],
        [
            223,
            263
        ],
        [
            148,
            148
        ],
        [
            143,
            147
        ],
        [
            137,
            137
        ],
        [
            136,
            136
        ],
        [
            133,
            134
        ],
        [
            131,
            133
        ]
    ],
    "blocks": [
        "   begin : Logging\n      fork\n         begin : calibration_done\n            wait (calib_done);\n            $display(\"Calibration Done\");\n            #50000000;\n            if (!error) begin\n               $display(\"TEST PASSED\");\n            end   \n            else begin\n               $display(\"TEST FAILED: DATA ERROR\");\t\t \n            end\n            disable calib_not_done;\n\t    $finish;\n         end\t \n         \n         begin : calib_not_done\n            #200000000;\n            if (!calib_done) begin\n               $display(\"TEST FAILED: INITIALIZATION DID NOT COMPLETE\");\n            end\n            disable calibration_done;\n\t    $finish;\n         end\n      join\t \n   end      ",
        "   generate\n   if(C3_NUM_DQ_PINS == 16) begin : MEM_INST3\n     ddr3_model_c3 u_mem_c3(\n      .ck         (mcb3_dram_ck),\n      .ck_n       (mcb3_dram_ck_n),\n      .cke        (mcb3_dram_cke),\n      .cs_n       (1'b0),\n      .ras_n      (mcb3_dram_ras_n),\n      .cas_n      (mcb3_dram_cas_n),\n      .we_n       (mcb3_dram_we_n),\n      .dm_tdqs    ({mcb3_dram_udm,mcb3_dram_dm}),\n      .ba         (mcb3_dram_ba),\n      .addr       (mcb3_dram_a),\n      .dq         (mcb3_dram_dq),\n      .dqs        ({mcb3_dram_udqs,mcb3_dram_dqs}),\n      .dqs_n      ({mcb3_dram_udqs_n,mcb3_dram_dqs_n}),\n      .tdqs_n     (),\n      .odt        (mcb3_dram_odt),\n      .rst_n      (mcb3_dram_reset_n)\n      );\n   end else begin\n     ddr3_model_c3 u_mem_c3(\n      .ck         (mcb3_dram_ck),\n      .ck_n       (mcb3_dram_ck_n),\n      .cke        (mcb3_dram_cke),\n      .cs_n       (1'b0),\n      .ras_n      (mcb3_dram_ras_n),\n      .cas_n      (mcb3_dram_cas_n),\n      .we_n       (mcb3_dram_we_n),\n      .dm_tdqs    (mcb3_dram_dm),\n      .ba         (mcb3_dram_ba),\n      .addr       (mcb3_dram_a),\n      .dq         (mcb3_dram_dq),\n      .dqs        (mcb3_dram_dqs),\n      .dqs_n      (mcb3_dram_dqs_n),\n      .tdqs_n     (),\n      .odt        (mcb3_dram_odt),\n      .rst_n      (mcb3_dram_reset_n)\n     );\n  end\nendgenerate",
        "   assign c3_sys_rst_i = C3_RST_ACT_LOW ? c3_sys_rst : ~c3_sys_rst;",
        "   initial begin\n      c3_sys_rst = 1'b0;\t\t\n      #20000;\n      c3_sys_rst = 1'b1;\n   end",
        "   assign                c3_sys_clk_n = ~c3_sys_clk;",
        "   assign                c3_sys_clk_p = c3_sys_clk;",
        "   always\n      #(C3_MEMCLK_PERIOD/2) c3_sys_clk = ~c3_sys_clk;",
        "   initial\n      c3_sys_clk = 1'b0;\n   always"
    ]
}