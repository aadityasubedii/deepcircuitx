{
    "line_num": [
        [
            169,
            183
        ],
        [
            161,
            161
        ],
        [
            128,
            159
        ],
        [
            106,
            121
        ],
        [
            95,
            100
        ]
    ],
    "blocks": [
        "    always @( posedge i_clk )\n        begin\n        if (start_write)\n            $display(\"DDR3 Write Addr 0x%08x Data 0x%08h %08h %08h %08h, BE %d%d%d%d %d%d%d%d %d%d%d%d %d%d%d%d\", \n                     i_i_wb_adr, i_mwdata[127:96], i_mwdata[95:64], i_mwdata[63:32], i_mwdata[31:0],\n                     i_mwben[15], i_mwben[14], i_mwben[13], i_mwben[12], \n                     i_mwben[11], i_mwben[10], i_mwben[9],  i_mwben[8], \n                     i_mwben[7],  i_mwben[6],  i_mwben[5],  i_mwben[4], \n                     i_mwben[3],  i_mwben[2],  i_mwben[1],  i_mwben[0] \n                     );\n                     \n        if (i_rd_empty == 1'd0)\n            $display(\"DDR3 Read  Addr 0x%08x Data 0x%08h %08h %08h %08h\", \n                     i_i_wb_adr, i_rd_data[127:96], i_rd_data [95:64], i_rd_data [63:32], i_rd_data [31:0]);\n        end",
        "assign o_wb_ack = i_wb_stb && ( start_write || read_ack );",
        "always @( posedge i_clk )\n    begin\n    if ( read_ack )\n        read_ready <= 1'd1;\n    else if ( start_read )\n        read_ready <= 1'd0;\n    \n    start_write_d1  <= start_write;\n    start_read_d1   <= start_read;\n    wb_adr_d1       <= i_wb_adr;\n    \n    if ( start_read  )\n        start_read_hold <= 1'd1;\n    else if ( read_ack )\n        start_read_hold <= 1'd0;\n    \n    if ( i_rd_empty == 1'd0 && start_read_hold )\n        begin\n        `ifdef XILINX_VIRTEX6_FPGA\n            o_wb_dat  <= i_wb_adr[2] == 2'd2   ? i_rd_data[  31:0] :\n                                                 i_rd_data[ 63:32] ;\n        `else\n            o_wb_dat  <= i_wb_adr[3:2] == 2'd0 ? i_rd_data[ 31: 0] :\n                         i_wb_adr[3:2] == 2'd1 ? i_rd_data[ 63:32] :\n                         i_wb_adr[3:2] == 2'd2 ? i_rd_data[ 95:64] :\n                                                 i_rd_data[127:96] ;\n        `endif\n        read_ack  <= 1'd1;\n        end\n    else\n        read_ack  <= 1'd0;\n    end",
        "always @( posedge i_clk )\n    begin\n    o_wr_en          <= start_write;\n    \n    `ifdef XILINX_VIRTEX6_FPGA\n        o_wr_mask        <= i_wb_adr[2] == 2'd2 ? { 8'h0, 4'hf,  ~i_wb_sel        } : \n                                                  { 8'h0,        ~i_wb_sel, 4'hf  } ; \n    `else\n        o_wr_mask        <= i_wb_adr[3:2] == 2'd0 ? { 12'hfff, ~i_wb_sel          } : \n                            i_wb_adr[3:2] == 2'd1 ? { 8'hff,   ~i_wb_sel, 4'hf    } : \n                            i_wb_adr[3:2] == 2'd2 ? { 4'hf,    ~i_wb_sel, 8'hff   } : \n                                                    {          ~i_wb_sel, 12'hfff } ; \n    `endif\n    \n    o_wr_data        <= {4{i_wb_dat}};\n    end",
        "always @( posedge i_clk )\n    begin\n    o_cmd_byte_addr  <= {wb_adr_d1[29:4], 4'd0};\n    o_cmd_en         <= !ddr3_busy && ( start_write_d1 || start_read_d1 );\n    o_cmd_instr      <= start_write_d1 ? 3'd0 : 3'd1;\n    end"
    ]
}