{
    "line_num": [
        [
            785,
            833
        ],
        [
            657,
            781
        ],
        [
            550,
            650
        ],
        [
            530,
            548
        ],
        [
            340,
            371
        ]
    ],
    "blocks": [
        "ethmac_wb #(\n    .WB_DWIDTH              ( WB_DWIDTH         ),\n    .WB_SWIDTH              ( WB_SWIDTH         )\n    )\nu_ethmac_wb (\n    \n    .o_m_wb_adr             ( m_wb_adr   [0]    ),\n    .o_m_wb_sel             ( m_wb_sel   [0]    ),\n    .o_m_wb_we              ( m_wb_we    [0]    ),\n    .i_m_wb_rdat            ( m_wb_dat_r [0]    ),\n    .o_m_wb_wdat            ( m_wb_dat_w [0]    ),\n    .o_m_wb_cyc             ( m_wb_cyc   [0]    ),\n    .o_m_wb_stb             ( m_wb_stb   [0]    ),\n    .i_m_wb_ack             ( m_wb_ack   [0]    ),\n    .i_m_wb_err             ( m_wb_err   [0]    ),\n\n    \n    .i_s_wb_adr             ( s_wb_adr   [0]    ),\n    .i_s_wb_sel             ( s_wb_sel   [0]    ),\n    .i_s_wb_we              ( s_wb_we    [0]    ),\n    .i_s_wb_cyc             ( s_wb_cyc   [0]    ),\n    .i_s_wb_stb             ( s_wb_stb   [0]    ),\n    .o_s_wb_ack             ( s_wb_ack   [0]    ),\n    .i_s_wb_wdat            ( s_wb_dat_w [0]    ),\n    .o_s_wb_rdat            ( s_wb_dat_r [0]    ),\n    .o_s_wb_err             ( s_wb_err   [0]    ),\n\n    \n    .i_m_wb_adr             ( emm_wb_adr        ),\n    .i_m_wb_sel             ( emm_wb_sel        ),\n    .i_m_wb_we              ( emm_wb_we         ),\n    .o_m_wb_rdat            ( emm_wb_rdat       ),\n    .i_m_wb_wdat            ( emm_wb_wdat       ),\n    .i_m_wb_cyc             ( emm_wb_cyc        ),\n    .i_m_wb_stb             ( emm_wb_stb        ),\n    .o_m_wb_ack             ( emm_wb_ack        ),\n    .o_m_wb_err             ( emm_wb_err        ),\n\n    \n    .o_s_wb_adr             ( ems_wb_adr        ),\n    .o_s_wb_sel             ( ems_wb_sel        ),\n    .o_s_wb_we              ( ems_wb_we         ),\n    .i_s_wb_rdat            ( ems_wb_rdat       ),\n    .o_s_wb_wdat            ( ems_wb_wdat       ),\n    .o_s_wb_cyc             ( ems_wb_cyc        ),\n    .o_s_wb_stb             ( ems_wb_stb        ),\n    .i_s_wb_ack             ( ems_wb_ack        ),\n    .i_s_wb_err             ( ems_wb_err        )\n);",
        "wishbone_arbiter #(\n    .WB_DWIDTH              ( WB_DWIDTH         ),\n    .WB_SWIDTH              ( WB_SWIDTH         )\n    )\nu_wishbone_arbiter (\n    .i_wb_clk               ( sys_clk           ),\n\n    \n    .i_m0_wb_adr            ( m_wb_adr   [0]    ),\n    .i_m0_wb_sel            ( m_wb_sel   [0]    ),\n    .i_m0_wb_we             ( m_wb_we    [0]    ),\n    .o_m0_wb_dat            ( m_wb_dat_r [0]    ),\n    .i_m0_wb_dat            ( m_wb_dat_w [0]    ),\n    .i_m0_wb_cyc            ( m_wb_cyc   [0]    ),\n    .i_m0_wb_stb            ( m_wb_stb   [0]    ),\n    .o_m0_wb_ack            ( m_wb_ack   [0]    ),\n    .o_m0_wb_err            ( m_wb_err   [0]    ),\n\n\n    \n    .i_m1_wb_adr            ( m_wb_adr   [1]    ),\n    .i_m1_wb_sel            ( m_wb_sel   [1]    ),\n    .i_m1_wb_we             ( m_wb_we    [1]    ),\n    .o_m1_wb_dat            ( m_wb_dat_r [1]    ),\n    .i_m1_wb_dat            ( m_wb_dat_w [1]    ),\n    .i_m1_wb_cyc            ( m_wb_cyc   [1]    ),\n    .i_m1_wb_stb            ( m_wb_stb   [1]    ),\n    .o_m1_wb_ack            ( m_wb_ack   [1]    ),\n    .o_m1_wb_err            ( m_wb_err   [1]    ),\n\n\n    \n    .o_s0_wb_adr            ( s_wb_adr   [0]    ),\n    .o_s0_wb_sel            ( s_wb_sel   [0]    ),\n    .o_s0_wb_we             ( s_wb_we    [0]    ),\n    .i_s0_wb_dat            ( s_wb_dat_r [0]    ),\n    .o_s0_wb_dat            ( s_wb_dat_w [0]    ),\n    .o_s0_wb_cyc            ( s_wb_cyc   [0]    ),\n    .o_s0_wb_stb            ( s_wb_stb   [0]    ),\n    .i_s0_wb_ack            ( s_wb_ack   [0]    ),\n    .i_s0_wb_err            ( s_wb_err   [0]    ),\n\n\n    \n    .o_s1_wb_adr            ( s_wb_adr   [1]    ),\n    .o_s1_wb_sel            ( s_wb_sel   [1]    ),\n    .o_s1_wb_we             ( s_wb_we    [1]    ),\n    .i_s1_wb_dat            ( s_wb_dat_r [1]    ),\n    .o_s1_wb_dat            ( s_wb_dat_w [1]    ),\n    .o_s1_wb_cyc            ( s_wb_cyc   [1]    ),\n    .o_s1_wb_stb            ( s_wb_stb   [1]    ),\n    .i_s1_wb_ack            ( s_wb_ack   [1]    ),\n    .i_s1_wb_err            ( s_wb_err   [1]    ),\n\n\n    \n    .o_s2_wb_adr            ( s_wb_adr   [2]    ),\n    .o_s2_wb_sel            ( s_wb_sel   [2]    ),\n    .o_s2_wb_we             ( s_wb_we    [2]    ),\n    .i_s2_wb_dat            ( s_wb_dat_r [2]    ),\n    .o_s2_wb_dat            ( s_wb_dat_w [2]    ),\n    .o_s2_wb_cyc            ( s_wb_cyc   [2]    ),\n    .o_s2_wb_stb            ( s_wb_stb   [2]    ),\n    .i_s2_wb_ack            ( s_wb_ack   [2]    ),\n    .i_s2_wb_err            ( s_wb_err   [2]    ),\n\n\n    \n    .o_s3_wb_adr            ( s_wb_adr   [3]    ),\n    .o_s3_wb_sel            ( s_wb_sel   [3]    ),\n    .o_s3_wb_we             ( s_wb_we    [3]    ),\n    .i_s3_wb_dat            ( s_wb_dat_r [3]    ),\n    .o_s3_wb_dat            ( s_wb_dat_w [3]    ),\n    .o_s3_wb_cyc            ( s_wb_cyc   [3]    ),\n    .o_s3_wb_stb            ( s_wb_stb   [3]    ),\n    .i_s3_wb_ack            ( s_wb_ack   [3]    ),\n    .i_s3_wb_err            ( s_wb_err   [3]    ),\n\n\n    \n    .o_s4_wb_adr            ( s_wb_adr   [4]    ),\n    .o_s4_wb_sel            ( s_wb_sel   [4]    ),\n    .o_s4_wb_we             ( s_wb_we    [4]    ),\n    .i_s4_wb_dat            ( s_wb_dat_r [4]    ),\n    .o_s4_wb_dat            ( s_wb_dat_w [4]    ),\n    .o_s4_wb_cyc            ( s_wb_cyc   [4]    ),\n    .o_s4_wb_stb            ( s_wb_stb   [4]    ),\n    .i_s4_wb_ack            ( s_wb_ack   [4]    ),\n    .i_s4_wb_err            ( s_wb_err   [4]    ),\n\n\n    \n    .o_s5_wb_adr            ( s_wb_adr   [5]    ),\n    .o_s5_wb_sel            ( s_wb_sel   [5]    ),\n    .o_s5_wb_we             ( s_wb_we    [5]    ),\n    .i_s5_wb_dat            ( s_wb_dat_r [5]    ),\n    .o_s5_wb_dat            ( s_wb_dat_w [5]    ),\n    .o_s5_wb_cyc            ( s_wb_cyc   [5]    ),\n    .o_s5_wb_stb            ( s_wb_stb   [5]    ),\n    .i_s5_wb_ack            ( s_wb_ack   [5]    ),\n    .i_s5_wb_err            ( s_wb_err   [5]    ),\n\n\n    \n    .o_s6_wb_adr            ( s_wb_adr   [6]    ),\n    .o_s6_wb_sel            ( s_wb_sel   [6]    ),\n    .o_s6_wb_we             ( s_wb_we    [6]    ),\n    .i_s6_wb_dat            ( s_wb_dat_r [6]    ),\n    .o_s6_wb_dat            ( s_wb_dat_w [6]    ),\n    .o_s6_wb_cyc            ( s_wb_cyc   [6]    ),\n    .o_s6_wb_stb            ( s_wb_stb   [6]    ),\n    .i_s6_wb_ack            ( s_wb_ack   [6]    ),\n    .i_s6_wb_err            ( s_wb_err   [6]    ),\n\n\n    \n    .o_s7_wb_adr            ( s_wb_adr   [7]    ),\n    .o_s7_wb_sel            ( s_wb_sel   [7]    ),\n    .o_s7_wb_we             ( s_wb_we    [7]    ),\n    .i_s7_wb_dat            ( s_wb_dat_r [7]    ),\n    .o_s7_wb_dat            ( s_wb_dat_w [7]    ),\n    .o_s7_wb_cyc            ( s_wb_cyc   [7]    ),\n    .o_s7_wb_stb            ( s_wb_stb   [7]    ),\n    .i_s7_wb_ack            ( s_wb_ack   [7]    ),\n    .i_s7_wb_err            ( s_wb_err   [7]    )",
        "`endif\n\n\n`ifdef XILINX_SPARTAN6_FPGA\n    \n    \n    \n    \n    wb_xs6_ddr3_bridge   #(\n        .WB_DWIDTH              ( WB_DWIDTH             ),\n        .WB_SWIDTH              ( WB_SWIDTH             )\n        )\n    u_wb_xs6_ddr3_bridge(\n        .i_clk                  ( sys_clk               ),\n\n        .o_cmd_en               ( c3_p0_cmd_en          ),\n        .o_cmd_instr            ( c3_p0_cmd_instr       ),\n        .o_cmd_byte_addr        ( c3_p0_cmd_byte_addr   ),\n        .i_cmd_full             ( c3_p0_cmd_full        ),\n        .i_wr_full              ( c3_p0_wr_full         ),\n        .o_wr_en                ( c3_p0_wr_en           ),\n        .o_wr_mask              ( c3_p0_wr_mask         ),\n        .o_wr_data              ( c3_p0_wr_data         ),\n        .i_rd_data              ( c3_p0_rd_data         ),\n        .i_rd_empty             ( c3_p0_rd_empty        ),\n\n        .i_mem_ctrl             ( test_mem_ctrl         ),\n        .i_wb_adr               ( s_wb_adr  [2]         ),\n        .i_wb_sel               ( s_wb_sel  [2]         ),\n        .i_wb_we                ( s_wb_we   [2]         ),\n        .o_wb_dat               ( s_wb_dat_r[2]         ),\n        .i_wb_dat               ( s_wb_dat_w[2]         ),\n        .i_wb_cyc               ( s_wb_cyc  [2]         ),\n        .i_wb_stb               ( s_wb_stb  [2]         ),\n        .o_wb_ack               ( s_wb_ack  [2]         ),\n        .o_wb_err               ( s_wb_err  [2]         )\n    );\n\n\n    \n    \n    \n    ddr3 u_ddr3  (\n\n                \n               .mcb3_dram_dq            ( ddr3_dq               ),\n               .mcb3_dram_a             ( ddr3_addr             ),\n               .mcb3_dram_ba            ( ddr3_ba               ),\n               .mcb3_dram_ras_n         ( ddr3_ras_n            ),\n               .mcb3_dram_cas_n         ( ddr3_cas_n            ),\n               .mcb3_dram_we_n          ( ddr3_we_n             ),\n               .mcb3_dram_odt           ( ddr3_odt              ),\n               .mcb3_dram_reset_n       ( ddr3_reset_n          ),\n               .mcb3_dram_cke           ( ddr3_cke              ),\n               .mcb3_dram_udm           ( ddr3_dm[1]            ),\n               .mcb3_dram_dm            ( ddr3_dm[0]            ),\n               .mcb3_rzq                ( mcb3_rzq              ),\n               .mcb3_dram_udqs          ( ddr3_dqs_p[1]         ),\n               .mcb3_dram_dqs           ( ddr3_dqs_p[0]         ),\n               .mcb3_dram_udqs_n        ( ddr3_dqs_n[1]         ),\n               .mcb3_dram_dqs_n         ( ddr3_dqs_n[0]         ),\n               .mcb3_dram_ck            ( ddr3_ck_p             ),\n               .mcb3_dram_ck_n          ( ddr3_ck_n             ),\n\n               .c3_sys_clk              ( clk_200               ),\n               .c3_sys_rst_i            ( brd_rst               ), \n               .c3_clk0                 (                       ),\n               .c3_rst0                 (                       ),\n               .c3_calib_done           ( phy_init_done         ),\n\n               .c3_p0_cmd_clk           ( sys_clk               ),\n\n               .c3_p0_cmd_en            ( c3_p0_cmd_en          ),\n               .c3_p0_cmd_instr         ( c3_p0_cmd_instr       ),\n               .c3_p0_cmd_bl            ( 6'd0                  ),\n               .c3_p0_cmd_byte_addr     ( c3_p0_cmd_byte_addr   ),\n               .c3_p0_cmd_empty         (                       ),\n               .c3_p0_cmd_full          ( c3_p0_cmd_full        ),\n\n               .c3_p0_wr_clk            ( sys_clk               ),\n\n               .c3_p0_wr_en             ( c3_p0_wr_en           ),\n               .c3_p0_wr_mask           ( c3_p0_wr_mask         ),\n               .c3_p0_wr_data           ( c3_p0_wr_data         ),\n               .c3_p0_wr_full           ( c3_p0_wr_full         ),\n               .c3_p0_wr_empty          (                       ),\n               .c3_p0_wr_count          (                       ),\n               .c3_p0_wr_underrun       (                       ),\n               .c3_p0_wr_error          (                       ),\n\n               .c3_p0_rd_clk            ( sys_clk               ),\n\n               .c3_p0_rd_en             ( 1'd1                  ),\n               .c3_p0_rd_data           ( c3_p0_rd_data         ),\n               .c3_p0_rd_full           (                       ),\n               .c3_p0_rd_empty          ( c3_p0_rd_empty        ),\n               .c3_p0_rd_count          (                       ),\n               .c3_p0_rd_overflow       (                       ),\n               .c3_p0_rd_error          (                       )\n       );\n`endif",
        "    assign phy_init_done = 1'd1;\n\n    main_mem #(\n                .WB_DWIDTH             ( WB_DWIDTH             ),\n                .WB_SWIDTH             ( WB_SWIDTH             )\n                )\n    u_main_mem (\n               .i_clk                  ( sys_clk               ),\n               .i_mem_ctrl             ( test_mem_ctrl         ),\n               .i_wb_adr               ( s_wb_adr  [2]         ),\n               .i_wb_sel               ( s_wb_sel  [2]         ),\n               .i_wb_we                ( s_wb_we   [2]         ),\n               .o_wb_dat               ( s_wb_dat_r[2]         ),\n               .i_wb_dat               ( s_wb_dat_w[2]         ),\n               .i_wb_cyc               ( s_wb_cyc  [2]         ),\n               .i_wb_stb               ( s_wb_stb  [2]         ),\n               .o_wb_ack               ( s_wb_ack  [2]         ),\n               .o_wb_err               ( s_wb_err  [2]         )\n            );",
        "generate\nif (WB_DWIDTH == 32) begin : boot_mem32\n    boot_mem32 u_boot_mem (\n        .i_wb_clk               ( sys_clk         ),\n        .i_wb_rst               ( sys_rst         ),\n        .i_wb_adr               ( s_wb_adr  [1]   ),\n        .i_wb_sel               ( s_wb_sel  [1]   ),\n        .i_wb_we                ( s_wb_we   [1]   ),\n        .o_wb_dat               ( s_wb_dat_r[1]   ),\n        .i_wb_dat               ( s_wb_dat_w[1]   ),\n        .i_wb_cyc               ( s_wb_cyc  [1]   ),\n        .i_wb_stb               ( s_wb_stb  [1]   ),\n        .o_wb_ack               ( s_wb_ack  [1]   ),\n        .o_wb_err               ( s_wb_err  [1]   )\n    );\nend\nelse begin : boot_mem128\n    boot_mem128 u_boot_mem (\n        .i_wb_clk               ( sys_clk         ),\n        .i_wb_rst               ( sys_rst         ),\n        .i_wb_adr               ( s_wb_adr  [1]   ),\n        .i_wb_sel               ( s_wb_sel  [1]   ),\n        .i_wb_we                ( s_wb_we   [1]   ),\n        .o_wb_dat               ( s_wb_dat_r[1]   ),\n        .i_wb_dat               ( s_wb_dat_w[1]   ),\n        .i_wb_cyc               ( s_wb_cyc  [1]   ),\n        .i_wb_stb               ( s_wb_stb  [1]   ),\n        .o_wb_ack               ( s_wb_ack  [1]   ),\n        .o_wb_err               ( s_wb_err  [1]   )\n    );\nend\nendgenerate"
    ]
}