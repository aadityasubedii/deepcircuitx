{
    "line_num": [
        [
            382,
            403
        ],
        [
            373,
            378
        ],
        [
            368,
            371
        ],
        [
            355,
            381
        ],
        [
            347,
            351
        ],
        [
            338,
            344
        ],
        [
            332,
            353
        ],
        [
            305,
            331
        ],
        [
            121,
            298
        ]
    ],
    "blocks": [
        "task wb_write_strobe_d;\n\t\n\tinput [31:0] wb_waddress_test_d;\t\n\tinput [31:0] wb_data_test_d;\t\t\n\n\tbegin\n\t\t@(posedge clk) begin\t\t\t\n\t\t\ti_wb_adr_d <= wb_waddress_test_d;\t\n\t\t\ti_wb_cyc_d <= 1'b1;\t\t\t\n\t\t\ti_wb_stb_d <= 1'b1;\t\t\t\n\t\t\ti_wb_we_d  <= 1'b1;\t\t\t\n\t\t\ti_wb_dat_d <= wb_data_test_d;\t\n\t\tend\n\n\n\t\t@(posedge clk) begin\n\t\t\ti_wb_we_d  <= 1'b0;\t\t\t\n\t\t\ti_wb_cyc_d <= 1'b0;\t\t\t\n\t\t\ti_wb_stb_d <= 1'b0;\t\t\t\n\t\tend\n\tend\nendtask",
        "\t\tif (o_wb_dat_d !== truth_data_test_d) begin\n\t\t\t$display(\"%t DECODER ERROR: failure found when truth_data_d = %h, and wishbone has %h\", $time, truth_data_test_d, o_wb_dat_d); \n\t\t\t`ifdef ERRORSTOP\n\t\t\t\t$stop;\n\t\t\t`endif\n\t\tend",
        "\t\t@(posedge clk) begin\n\t\t\ti_wb_cyc_d <= 1'b0;\n\t\t\ti_wb_stb_d <= 1'b0;\n\t\tend",
        "task wb_read_strobe_d;\n\t\n\tinput [31:0] wb_address_test_d;\t\t\t\t\n\tinput [31:0] truth_data_test_d;\n\n\tbegin\n\n\t\ti_wb_adr_d <= wb_address_test_d;\t\n\t\ti_wb_cyc_d <= 1'b1;\t\t\t\n\t\ti_wb_stb_d <= 1'b1;\t\t\t\n\t\ti_wb_we_d  <= 1'b0;\t\t\t\n\n\t\t@(posedge o_wb_ack_d); \n\t\t@(posedge clk) begin\n\t\t\ti_wb_cyc_d <= 1'b0;\n\t\t\ti_wb_stb_d <= 1'b0;\n\t\tend\n\n\t\tif (o_wb_dat_d !== truth_data_test_d) begin\n\t\t\t$display(\"%t DECODER ERROR: failure found when truth_data_d = %h, and wishbone has %h\", $time, truth_data_test_d, o_wb_dat_d); \n\t\t\t`ifdef ERRORSTOP\n\t\t\t\t$stop;\n\t\t\t`endif\n\t\tend\n\n\tend\nendtask",
        "\t\t@(posedge clk) begin\n\t\t\ti_wb_we_e  <= 1'b0;\t\t\t\n\t\t\ti_wb_cyc_e <= 1'b0;\t\t\t\n\t\t\ti_wb_stb_e <= 1'b0;\t\t\t\n\t\tend",
        "\t\t@(posedge clk) begin\t\t\t\n\t\t\ti_wb_adr_e <= wb_waddress_test_e;\t\n\t\t\ti_wb_cyc_e <= 1'b1;\t\t\t\n\t\t\ti_wb_stb_e <= 1'b1;\t\t\t\n\t\t\ti_wb_we_e  <= 1'b1;\t\t\t\n\t\t\ti_wb_dat_e <= wb_data_test_e;\t\n\t\tend",
        "task wb_write_strobe_e;\n\t\n\tinput [31:0] wb_waddress_test_e;\t\n\tinput [31:0] wb_data_test_e;\t\t\n\n\tbegin\n\t\t@(posedge clk) begin\t\t\t\n\t\t\ti_wb_adr_e <= wb_waddress_test_e;\t\n\t\t\ti_wb_cyc_e <= 1'b1;\t\t\t\n\t\t\ti_wb_stb_e <= 1'b1;\t\t\t\n\t\t\ti_wb_we_e  <= 1'b1;\t\t\t\n\t\t\ti_wb_dat_e <= wb_data_test_e;\t\n\t\tend\n\n\n\t\t@(posedge clk) begin\n\t\t\ti_wb_we_e  <= 1'b0;\t\t\t\n\t\t\ti_wb_cyc_e <= 1'b0;\t\t\t\n\t\t\ti_wb_stb_e <= 1'b0;\t\t\t\n\t\tend\n\tend\nendtask",
        "task wb_read_strobe_e;\n\t\n\tinput [31:0] wb_address_test_e;\t\t\t\t\n\tinput [31:0] truth_data_test_e;\n\n\tbegin\n\n\t\ti_wb_adr_e <= wb_address_test_e;\t\n\t\ti_wb_cyc_e <= 1'b1;\t\t\t\n\t\ti_wb_stb_e <= 1'b1;\t\t\t\n\t\ti_wb_we_e  <= 1'b0;\t\t\t\n\n\t\t@(posedge o_wb_ack_e); \n\t\t@(posedge clk) begin\n\t\t\ti_wb_cyc_e <= 1'b0;\n\t\t\ti_wb_stb_e <= 1'b0;\n\t\tend\n\n\t\tif (o_wb_dat_e !== truth_data_test_e) begin\n\t\t\t$display(\"%t ENCODER ERROR: failure found when truth_data_e = %h\", $time, truth_data_test_e, o_wb_dat_e, truth_data_test_e); \n\t\t\t`ifdef ERRORSTOP\n\t\t\t\t$stop;\n\t\t\t`endif\n\t\tend\n\n\tend\nendtask",
        "initial\nbegin\n    $timeformat(-9,2,\"ns\", 16);\n`ifdef SDFSCAN\n    $sdf_annotate(\"sdf/CFG_INT_saed32nm_scan.sdf\", test.top);\n`endif\n    clk = 1'b0;\n    scan_in0 = 1'b0;\n    scan_in1 = 1'b0;\n    scan_in2 = 1'b0;\n    scan_in3 = 1'b0;\n    scan_in4 = 1'b0;\n    scan_enable = 1'b0;\n    test_mode = 1'b0;\n\n    cs = 1'b1;\n    rs = 1'b0;\n    ws = 1'b0;\n\n    w_data = 8'b00000000;\n    addrs = 7'b0000000;\n    i_wb_cyc_e = 1'b0;\n    i_wb_stb_e = 1'b0;\n    i_wb_cyc_d = 1'b0;\n    i_wb_stb_d = 1'b0;\n    i_wb_sel_e = 1'b0;\n    i_wb_sel_d = 1'b0;\n    wb_address = 32'h00000000;\n    data_check = 3'b000;\n\n   \n   reset = 1'b0;\n   @(posedge clk);\n   reset = 1'b1;\n   repeat(2)\n       @(posedge clk);\n   reset = 1'b0;\n   for (i = 0; i<32; i=i+1) begin\n  \tenc_ch[i] <= 3'b000;\n   \tdec_ch[i] <= 3'b000;\n   end\n\n\n\n\n\trs = 1'b0;\n\tfor (i=0; i<1000; i = i+1) begin\n\t\tws <= 1'b1;\n\t\trepeat(2)\n\t\t@(posedge clk);\n\t\tw_data[2:0] = $random;\n\t\trand_ch[4:0] = $random;\n\t\taddrs = {2'b00, rand_ch[4:0]};\n\t\t\n\t\t@(posedge clk);\n\t\t\n\t\tws <= 1'b0;\n\t\trepeat (3)\n\t\t\t@(posedge clk);\n\t\tdec_ch[addrs[4:0]] = w_data[2:0];\n\n\t\t@(posedge clk);\n\t\tif(i==15) begin \n\t\t\twb_read_strobe_d (CONFIG_DONE_REG,{29'h00000000, 3'b000});\n\t\tend\t\n\tend\n\n\t\n\t@(posedge clk);\n\twb_read_strobe_d (CONFIG_DONE_REG,{29'h00000000, 3'b001});\n\n\t\n\n\t@(posedge clk);\n\tfor (j=0; j<1000; j=j+1) begin\n\t\tws <= 1'b1;\n\t\trepeat (2)\n\t\t@(posedge clk);\n\t\trand_ch[4:0] = $random;\n\t\taddrs <= {2'b01, rand_ch[4:0]};\n\t\tw_data[2:0] <= $random;\n\t\t@(posedge clk);\n\t\tws = 1'b0;\n\t\trepeat (3)\n\t\t\t@(posedge clk);\n\t\tenc_ch[addrs[4:0]] <= w_data[2:0];\n\n\t\t@(posedge clk);\n\t\tif(i==15) begin \n\t\t\twb_read_strobe_e (CONFIG_DONE_REG,{29'h00000000, 3'b000});\n\t\tend\t\n\tend\n\n\t\n\t@(posedge clk);\n\twb_read_strobe_e (CONFIG_DONE_REG,{29'h00000000, 3'b001});\n\t@(posedge clk);\n\n\n\tws = 1'b0;\n\taddrs[5] = 1'b0;\n\t$display(\"THIS HAPPENED: dec_ch0 is %h\", dec_ch[0]);\n\tfor(k=0; k<1000; k = k+1) begin\n\t\trand_ch[4:0] <= $random;\n\t\tdata_check <= dec_ch[rand_ch[4:0]];\n\t\taddrs[4:0] <= {2'b00, rand_ch[4:0]};\n\t\t@(posedge clk);\n\t\trs = 1'b1;\n\t\t@(posedge clk);\n\t\twb_address = 4*addrs[4:0];\n\t\twb_read_strobe_d (wb_address,{29'h00000000, data_check[2:0]});\n\t\trs = 1'b0;\n\t\tif (r_data[2:0] !== data_check) begin\n\t\t\t$display(\"%t DECODER ERROR: failure found. r_data should be %h , but is %h. Address is %h\", $time, data_check, r_data, addrs); \n\t\t\t`ifdef ERRORSTOP\n\t\t\t\t$stop;\n\t\t\t`endif\n\t\tend\t\t\n\t\t\n\tend\n\n\n\taddrs[5] = 1'b1;\n\tfor(l=0; l<1000; l = l+1) begin\n\t\trand_ch[4:0] <= $random;\n\t\tdata_check <= enc_ch[rand_ch[4:0]];\n\t\taddrs[4:0] <= rand_ch[4:0];\n\t\t@(posedge clk);\n\t\trs = 1'b1;\n\t\t@(posedge clk);\n\t\twb_address = 4*addrs[4:0];\n\t\twb_read_strobe_e (wb_address,{29'h00000000, data_check[2:0]});\n\t\trs = 1'b0;\n\t\tif (r_data[2:0] !== data_check) begin\n\t\t\t$display(\"%t ENCODER ERROR: failure found. r_data should be %h , but is %h\", $time, data_check, r_data); \n\t\t\t`ifdef ERRORSTOP\n\t\t\t\t$stop;\n\t\t\t`endif\n\t\tend\n\tend\n\n\n\n\t@(posedge clk);\n\twb_write_strobe_e(CONFIG_CORE_READY,32'h00000001); \n\t@(posedge clk);\n\taddrs = 7'b1100000;\n\t@(posedge clk);\n\trs = 1'b1;\n\t@(posedge clk);\n\trs = 1'b0;\n\tif (r_data !== 1) begin\n\t\t$display(\"%t ENCODER ERROR: Encoder core ready register not correct\",$time);\n\tend\n\telse begin\n\t\t$display(\"%t Encoder core and config module handshake correct\",$time);\n\tend\n\n\t@(posedge clk);\n\twb_write_strobe_d(CONFIG_CORE_READY,32'h00000001); \n\t@(posedge clk);\n\taddrs = 7'b1000000;\n\t@(posedge clk);\n\trs = 1'b1;\n\t@(posedge clk);\n\trs = 1'b0;\n\tif (r_data !== 1) begin\n\t\t$display(\"%t DECODER ERROR: Decoder core ready register not correct\",$time);\n\tend\n\telse begin\n\t\t$display(\"%t Decoder core and config module handshake correct\",$time);\n\tend\n\n\t@(posedge clk);\n\t@(posedge clk);\n\t$display(\"TEST COMPLETE!\"); \n   \t$finish;   \nend "
    ]
}