{
    "line_num": [
        [
            277,
            293
        ],
        [
            242,
            274
        ],
        [
            206,
            238
        ],
        [
            102,
            203
        ],
        [
            100,
            100
        ],
        [
            83,
            98
        ]
    ],
    "blocks": [
        "initial begin\n    \n    repeat(2)\n        @(posedge clk);\n    @(posedge clk);\n    while(1) begin\n        @(posedge clk);\n\tif(start_fs_check) begin\n    \t    if(o_frame_syn !== exp_frame_syn) begin\n       \t     $display(\"%t ERROR: Frame sync not as expected\", $time);\n`ifdef ERRORSTOP\n           \t $stop;\n`endif\n            end \n\tend \n    end \nend ",
        "initial begin\n    \n    start_fs_check = 1'b0;\n    repeat(2)\n        @(posedge clk);\n    @(posedge clk);\n    \n    for (exp_k=0;exp_k<1048576;exp_k=exp_k+1) begin\n        for (exp_channel = 0; exp_channel<32; exp_channel = exp_channel+1) begin\n            for (exp_bits=7; exp_bits>=0; exp_bits = exp_bits-1) begin\n              \nif(k==12) start_fs_check = 1'b1;\nif(exp_k>10) begin\n                if(exp_channel == 0 && exp_bits == 7) begin\n                    exp_frame_syn <= #PROPDLY 1'b1;\n                end\n                else if(exp_channel == 0 && exp_bits != 7) begin\n                        exp_frame_syn <= #PROPDLY 1'b1;\n                end\n                else if(exp_channel != 0 && exp_bits == 7) begin\n                    exp_frame_syn <= #PROPDLY 1'b0;\n                end\n                else begin\n                        exp_frame_syn <= #PROPDLY 1'b0;\n                end\n\nend\n\t\t@(posedge o_serial_clk);\n               \n            end \n        end \n    end \nend ",
        "initial begin\n    \n    repeat(2)\n        @(posedge clk);\n    @(posedge clk);\n\n    \n    for (k=0;k<1048576;k=k+1) begin\n        if(fs_enabled) begin \n            for (channel = 0; channel<32; channel = channel+1) begin\n                for (bits=7; bits>=0; bits = bits-1) begin\n                  \nif(k>10) begin\n\t\t            if(channel == 0 && bits == 7) begin\n\t\t                i_frame_syn <= #PROPDLY 1'b1;\n\t\t            end\n\t\t            else if(channel == 0 && bits != 7) begin\n\t\t                    i_frame_syn <= #PROPDLY 1'b1;\n\t\t            end\n\t\t            else if(channel != 0 && bits == 7) begin\n\t\t                i_frame_syn <= #PROPDLY 1'b0;\n\t\t            end\n\t\t            else begin\n\t\t                    i_frame_syn <= #PROPDLY 1'b0;\n\t\t            end\nend\n\t\t\t@(posedge i_serial_clk);\n                    \n                end \n            end \n        end \n    end \nend ",
        "initial\nbegin\n    $timeformat(-9,3,\"ns\",16);\n`ifdef SDFSCAN\n    $sdf_annotate(\"sdf/CLK_GEN_saed32nm_scan.sdf\", test.top);\n`endif\n    clk = 1'b0;\n    reset = 1'b0;\n    i_frame_syn = 1'b0;\n    exp_frame_syn = 1'b0;\n    scan_in0 = 1'b0;\n    scan_in1 = 1'b0;\n    scan_in2 = 1'b0;\n    scan_in3 = 1'b0;\n    scan_in4 = 1'b0;\n    scan_enable = 1'b0;\n    test_mode = 1'b0;\n    fs_enabled = 1'b1; \n    k = 0;\n    exp_k = 0;\n    bits = 0;\n    exp_bits = 0;\n    channel = 0;\n    exp_channel = 0;\n\n    \n    @(posedge clk);\n    reset <= 1'b1;\n    repeat(2)\n        @(posedge clk);\n    reset <= 1'b0;\n    @(posedge clk);\n\n    \n    @(posedge o_sys_clk);\n    sys_clk_start = $time;\n    @(posedge o_sys_clk);\n    sys_clk_end = $time;\n    @(posedge clk);\n    $display(\"Start of clk period at: %t\", sys_clk_start);\n    $display(\"End of clk period at : %t\", sys_clk_end);\n    $display(\"Clk period. Expected: %t. Obtained: %t\", `SYS_CLK_PERIOD*1000, (sys_clk_end-sys_clk_start));\n    if( ((sys_clk_end-sys_clk_start) >  (`SYS_CLK_PERIOD*1000)+5) ||  ((sys_clk_end-sys_clk_start) <  (`SYS_CLK_PERIOD*1000)-5)) begin\n        $display(\"%t ERROR: System clock period not as expected\", $time);\n`ifdef ERRORSTOP\n        $stop;\n`endif\n    end\n    $display(\"-----------------------------------\");\n\n    \n    @(posedge o_co_proc_clk);\n    co_proc_clk_start = $time;\n    @(posedge o_co_proc_clk);\n    co_proc_clk_end = $time;\n    @(posedge clk);\n    $display(\"Start of co-proc clk period at: %t\", co_proc_clk_start);\n    $display(\"End of co-proc clk period at: %t\", co_proc_clk_end);\n    $display(\"Co-proc Clk period. Expected: %t. Obtained: %t\", `CO_CLK_PERIOD*1000, (co_proc_clk_end-co_proc_clk_start));\n    if( ((co_proc_clk_end-co_proc_clk_start) >  (`CO_CLK_PERIOD*1000)+10) ||  ((co_proc_clk_end-co_proc_clk_start) <  (`CO_CLK_PERIOD*1000)-10)) begin\n        $display(\"%t ERROR: Co-processor clock period not as expected\", $time);\n`ifdef ERRORSTOP\n        $stop;\n`endif\n    end\n    $display(\"-----------------------------------\");\n\n    \n    @(posedge o_serial_clk);\n    ser_clk_start = $time;\n    @(posedge o_serial_clk);\n    ser_clk_end = $time;\n    @(posedge clk);\n    $display(\"Start of serial clk period at: %t\", ser_clk_start);\n    $display(\"End of serial clk period at: %t\", ser_clk_end);\n    $display(\"Serial Clk period. Expected: %t. Obtained: %t\", `SER_CLK_PERIOD*1000, (ser_clk_end-ser_clk_start));\n    if( ((ser_clk_end-ser_clk_start) >  (`SER_CLK_PERIOD*1000)+125) ||  ((ser_clk_end-ser_clk_start) <  (`SER_CLK_PERIOD*1000)-125)) begin\n        $display(\"%t ERROR: Serial clock period not as expected\", $time);\n`ifdef ERRORSTOP\n        $stop;\n`endif\n    end\n    $display(\"-----------------------------------\");\n\n    \n    repeat(1024)\n        @(posedge o_serial_clk);\n    \n    repeat(35530)\n        @(posedge o_serial_clk);\n\n    \n    fs_enabled = 1'b0;\n    repeat(30016)\n        @(posedge o_serial_clk);\n\n    \n    repeat(4)\n        @(posedge clk);\n    #10 $display(\"%t TEST COMPLETE\", $time);\n    $finish;\nend ",
        "assign i_serial_clk = ser_clk;",
        "always @ (posedge clk, posedge reset) begin \n\tif(reset) begin\n\t\tser_clk   <= 1'b0;\n\t\tser_count <= 0;\n\tend\n\telse begin\n\t\tif (ser_count != 8'h3B) begin \n\t\t\tser_count <= ser_count + 1'b1;\n\t\t\tser_clk   <= ser_clk;\n\t\tend\n\t\telse begin\n\t\t\tser_count <= 0;\n\t\t\tser_clk   <= ~ ser_clk;\n\t\tend\n\tend\nend"
    ]
}