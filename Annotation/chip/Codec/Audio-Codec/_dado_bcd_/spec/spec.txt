Module name: dado_bcd. 
Module specification: The module `dado_bcd` is designed to convert a 26-bit binary input `dado` into an 8-digit Binary-Coded Decimal (BCD) format, outputting each BCD digit through eight 4-bit registers named from `zero` to `sete`. The input port `dado` receives the binary number to be converted, with the outputs `zero` (least significant digit) to `sete` (most significant digit) each representing a single BCD digit of the converted number. Internally, an integer `i` functions as a loop iterator, controlling a 26-iteration loop important for implementing the Double Dabble algorithm essential for the conversion. In this algorithm, before each shift operation, the module checks if any BCD register is greater than or equal to 5 and if so, adjusts it by adding 3 to ensure correct decimal representation. The conversion loop within the always block first initializes all BCD digit outputs to zero. Then, it carries out sequential processing for each bit of `dado`, shifting and adjusting the BCD values to represent the number in BCD format accurately. Each cycle of the loop shifts these digits, moves the highest bit of one BCD output to the lowest bit of the next significant BCD output, ensuring correct placement of weighted values across all outputs, with the least significant bit of the input `dado` being directly fed to the `zero` register at each iteration.