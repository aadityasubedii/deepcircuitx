Module name: in_lj. Module specification: The 'in_lj' module is designed to facilitate the interfacing with an audio ADC by serially sampling incoming audio data and segregating it into separate left and right channel data streams. The module has customizable data width through the DATA_WIDTH parameter and is synchronized by a Bit Clock (BCLK). It processes data when the 'start' signal is active. The module has several input ports: 'BCLK' for the bit clock, 'ADCDAT' for serial digital audio data from the ADC, and 'start' to initiate sampling. Output ports include 'ADCLRC' to indicate channel switching, 'data_ready' signaling data availability, 'left_data' and 'right_data' holding the audio samples for the respective channels, a 'counter' showing the number of bits processed, and a 'debug' port providing internal state information. Internally, 'bit_counter' (6-bit) tracks bits processed and 'running' indicates the active sampling state. The main always block triggers on the positive edge of BCLK, handling data sampling, bit counting, and channel separation based on 'bit_counter'. Conditional checks adjust bit_counter and manage muxing of bit stream into 'left_data' and 'right_data', reset the counter and 'running' state after completion, and update 'data_ready' and 'ADCLRC' as needed, thereby ensuring synchronization and data alignment.