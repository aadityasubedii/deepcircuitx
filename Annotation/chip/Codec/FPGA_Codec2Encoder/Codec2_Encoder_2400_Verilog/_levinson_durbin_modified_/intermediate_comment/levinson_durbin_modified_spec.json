{
    "spec": "Module name: levinson_durbin_modified. Module specification: The levinson_durbin_modified module implements the Levinson-Durbin algorithm for linear predictive coding (LPC) analysis, calculating LPC coefficients from autocorrelation values. It uses input ports startld (initiates algorithm), clk (clock), and rst (reset), and output ports check_k and check_e (verification outputs) and doneld (completion indicator). The module employs a state machine to control the algorithm's execution, utilizing internal signals such as STATE, NEXT_STATE, R0-R10 (autocorrelation values), a0-a120 (LPC coefficients), i, j1, k (reflection coefficient), e (prediction error), and various multiplication and addition inputs (m1_in1 to m9_in2, a1_in1 to a9_in2). The module is",
    "gpt-message": [
        {
            "role": "system",
            "content": "You are an expert in hardware design with a deep understanding of Verilog RTL codes. Now I want to train a large language model for code comment generation tasks specifically focused on Verilog RTL codes. And I want you to help me process the raw data, transforming it into suitable formats that can serve as inputs and outputs for the model."
        },
        {
            "role": "user",
            "content": "Name of the module and its functionality is as follows: \nModule name: levinson_durbin_modified\n\nExplanation: This module implements the Levinson-Durbin algorithm, which is used for linear predictive coding (LPC) analysis. It calculates LPC coefficients from autocorrelation values. The module uses a state machine to control the algorithm's steps, including initialization, coefficient calculation, error estimation, and final LPC coefficient computation. It processes input autocorrelation values (R0-R10) and outputs the resulting LPC coefficients. The module also includes logic for fixed-point arithmetic operations and uses multiple multiplication and addition units to perform the necessary calculations efficiently."
        },
        {
            "role": "user",
            "content": "Input and output ports and their explanation is as follows: \nBased on the given Verilog code, here are the input and output ports of the levinson_durbin_modified module:\n\nInput ports: startld, clk, rst. \nExplanation: \n- startld: Initiates the Levinson-Durbin algorithm\n- clk: Clock input for synchronous operations\n- rst: Reset signal to initialize the module\n\nOutput ports: check_k, check_e, doneld. \nExplanation:\n- check_k: Outputs the calculated reflection coefficient for verification\n- check_e: Outputs the calculated prediction error for verification\n- doneld: Indicates completion of the Levinson-Durbin algorithm\n\nThe module uses these ports to control the algorithm's execution, provide timing and reset functionality, and output key results for verification purposes."
        },
        {
            "role": "user",
            "content": "Internal signals and their explanation is as follows: \nInternal signals:\nSTATE, NEXT_STATE, R0-R10, a0-a120, i, j1, k, e, sum, m1_in1, m1_in2, m2_in1, m2_in2, m3_in1, m3_in2, m4_in1, m4_in2, m5_in1, m5_in2, m6_in1, m6_in2, m7_in1, m7_in2, m8_in1, m8_in2, m9_in1, m9_in2, a1_in1, a1_in2, a2_in1, a2_in2, a3_in1, a3_in2, a4_in1, a4_in2, a5_in1, a5_in2, a6_in1, a6_in2, a7_in1, a7_in2, a8_in1, a8_in2, a9_in1, a9_in2, gt1_in1, gt1_in2, j, startdiv, div_in, addr_ld, in_lpc, re_ld, we_ld.\n\nExplanation:\n- STATE, NEXT_STATE: Control the state machine for algorithm execution\n- R0-R10: Store input autocorrelation values\n- a0-a120: Store intermediate and final LPC coefficients\n- i, j1, j: Loop counters for various algorithm stages\n- k: Reflection coefficient\n- e: Prediction error\n- sum: Accumulator for intermediate calculations\n- m1_in1 to m9_in2: Inputs for multiple multiplication units\n- a1_in1 to a9_in2: Inputs for multiple addition units\n- gt1_in1, gt1_in2: Inputs for comparison operations\n- startdiv, div_in: Control signals for division operations\n- addr_ld, in_lpc, re_ld, we_ld: Signals for LPC coefficient memory operations\n\nThese internal signals are used for storing intermediate results, controlling algorithm flow, performing arithmetic operations, and managing memory accesses throughout the Levinson-Durbin algorithm implementation."
        },
        {
            "role": "user",
            "content": "Original Verilog code is as follows: \n```verilog\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmodule levinson_durbin_modified (startld,clk,rst,\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tcheck_k,check_e,\n\t\t\t\t\t\t\t\tdoneld);\n\n\n\n\n\n\n\tparameter N = 32;\n\tparameter Q = 16;\n\t\n\tparameter N1 = 80;\n    parameter Q1 = 16;\n\t\n\tparameter N2 = 48;\n    parameter Q2 = 16;\n\n\tinput clk,rst,startld;\n\treg [N-1:0] R0,R1,R2,R3,R4,R5,\n\t\t\t\t\t\t\t\tR6,R7,R8,R9,R10;\n\toutput reg [N-1:0]  check_k,check_e;\n\toutput reg doneld;\n\t\n\t\n\t\n\t\n\n\t\n\n\n\n\n\nparameter START \t\t\t\t\t\t\t= 8'd0,\n          INIT \t\t\t\t\t\t\t= 8'd1,\n          INIT_LOOP \t\t\t\t\t\t= 8'd2,\n          CHECK_I \t\t\t\t\t\t= 8'd3,\n          START_J1 \t\t\t\t\t\t= 8'd4,\n          CHECK_J1 \t\t\t\t\t\t= 8'd5,\n          SET_A_R \t\t\t\t\t\t= 8'd6,\n          CALC_SUM \t\t\t\t\t\t= 8'd8,\n          INCR_J1 \t\t\t\t\t\t= 8'd9,\n          PRE_CALC_K \t\t\t\t\t= 8'd10,\n          CALC_K \t\t\t\t\t\t\t= 8'd11,\n          SET_K \t\t\t\t\t\t\t= 8'd12,\n          PRE_CALC_E \t\t\t\t\t= 8'd13,\n          CALC1_E \t\t\t\t\t\t= 8'd14,\n          CALC2_E \t\t\t\t\t\t= 8'd15,\n          SET_E \t\t\t\t\t\t\t= 8'd16,\n          INCR_I \t\t\t\t\t\t\t= 8'd17,\n\t\t\t CHECK_GT \t\t\t\t\t\t= 8'd18,\n\t\t\t CHECK_K \t\t\t\t\t\t= 8'd19,\n\t\t\t SET_A \t\t\t\t\t\t\t= 8'd20,\n\t\t\t\n\t\t\t CALC1_A \t\t\t\t\t\t= 8'd22,\n\t\t\t CALC2_A \t\t\t\t\t\t= 8'd23,\n\t\t\t FINAL_CALC_A \t\t\t\t\t= 8'd24,\n\t\t\t INCR_J2 \t\t\t\t\t\t= 8'd25,\n\t\t\t SET_SUM \t\t\t\t\t\t= 8'd26,\n          DONE \t\t\t\t\t\t\t= 8'd27,\n\t\t\t START_DIV \t\t\t\t\t\t= 8'd28,\n\t\t\t CALC_LPC \t\t\t\t\t\t= 8'd29,\n\t\t\t PRE_CALC_A_I_2 \t\t\t\t= 8'd30,\n\t\t\t CALC_A_I_2 \t\t\t\t\t= 8'd31,\n\t\t\t FINAL_CALC_A_I_2 \t\t\t= 8'd32,\n\t\t\t PRE_CALC_A_I_3 \t\t\t\t= 8'd33,\n\t\t\t CALC_A_I_3 \t\t\t\t\t= 8'd34,\n\t\t\t FINAL_CALC_A_I_3 \t\t\t= 8'd35,\n\t\t\t PRE_CALC_A_I_4 \t\t\t\t= 8'd36,\n\t\t\t CALC_A_I_4 \t\t\t\t\t= 8'd37,\n\t\t\t FINAL_CALC_A_I_4 \t\t\t= 8'd38,\n\t\t\t PRE_CALC_A_I_5 \t\t\t\t= 8'd39,\n\t\t\t CALC_A_I_5 \t\t\t\t\t= 8'd40,\n\t\t\t FINAL_CALC_A_I_5 \t\t\t= 8'd41,\n\t\t\t PRE_CALC_A_I_6 \t\t\t\t= 8'd42,\n\t\t\t CALC_A_I_6 \t\t\t\t\t= 8'd43,\n\t\t\t FINAL_CALC_A_I_6 \t\t\t= 8'd44,\n\t\t\t PRE_CALC_A_I_7 \t\t\t\t= 8'd45,\n\t\t\t CALC_A_I_7\t\t\t\t\t\t= 8'd46,\n\t\t\t FINAL_CALC_A_I_7 \t\t\t= 8'd47,\n\t\t\t PRE_CALC_A_I_8 \t\t\t\t= 8'd48,\n\t\t\t CALC_A_I_8 \t\t\t\t\t= 8'd49,\n\t\t\t FINAL_CALC_A_I_8 \t\t\t= 8'd50,\n\t\t\t PRE_CALC_A_I_9 \t\t\t\t= 8'd51,\n\t\t\t CALC_A_I_9 \t\t\t\t\t= 8'd52,\n\t\t\t FINAL_CALC_A_I_9 \t\t\t= 8'd53,\n\t\t\t PRE_CALC_A_I_10 \t\t\t\t= 8'd54,\n\t\t\t CALC_A_I_10 \t\t\t\t\t= 8'd55,\n\t\t\t FINAL_CALC_A_I_10 \t\t\t= 8'd7,\n\t\t\t CHECK_WHICH_I_FOR_A\t\t\t= 8'd56,\n\t\t\t INIT_FOR_LPC \t\t\t\t\t= 8'd57,\n\t\t\t CHECK_J \t\t\t\t\t\t= 8'd58,\n\t\t\t SET_ADDR_LPC \t\t\t\t\t= 8'd59,\n\t\t\t SET_LPC \t\t\t\t\t\t= 8'd60,\n\t\t\t INCR_J\t\t\t\t\t\t\t= 8'd61,\n\t\t\t SET_DELAY1 = 8'd62,\n\t\t\t SET_DELAY2 = 8'd63;\n\t\t\t \n\t\t\t \n\t\t\t \n\nreg [7:0] STATE, NEXT_STATE;\n\n\n\n\n\n\nparameter [N-1:0] NUMBER_ONE = 32'b0_000000000000001_0000000000000000;\n\nparameter [6:0]\tORDER = 7'd10;\n\nreg [N-1:0] \ta0 = 32'b0,\n\t\t\t\t\ta1 = 32'b0,\n\t\t\t\t\ta2 = 32'b0,\n\t\t\t\t\ta3 = 32'b0,\n\t\t\t\t\ta4 = 32'b0,\n\t\t\t\t\ta5 = 32'b0,\n\t\t\t\t\ta6 = 32'b0,\n\t\t\t\t\ta7 = 32'b0,\n\t\t\t\t\ta8 = 32'b0,\n\t\t\t\t\ta9 = 32'b0,\n\t\t\t\t\ta10 = 32'b0,\n\t\t\t\t\ta11 = 32'b0,\n\t\t\t\t\ta12 = 32'b0,\n\t\t\t\t\ta13 = 32'b0,\n\t\t\t\t\ta14 = 32'b0,\n\t\t\t\t\ta15 = 32'b0,\n\t\t\t\t\ta16 = 32'b0,\n\t\t\t\t\ta17 = 32'b0,\n\t\t\t\t\ta18 = 32'b0,\n\t\t\t\t\ta19 = 32'b0,\n\t\t\t\t\ta20 = 32'b0,\n\t\t\t\t\ta21 = 32'b0,\n\t\t\t\t\ta22 = 32'b0,\n\t\t\t\t\ta23 = 32'b0,\n\t\t\t\t\ta24 = 32'b0,\n\t\t\t\t\ta25 = 32'b0,\n\t\t\t\t\ta26 = 32'b0,\n\t\t\t\t\ta27 = 32'b0,\n\t\t\t\t\ta28 = 32'b0,\n\t\t\t\t\ta29 = 32'b0,\n\t\t\t\t\ta30 = 32'b0,\n\t\t\t\t\ta31 = 32'b0,\n\t\t\t\t\ta32 = 32'b0,\n\t\t\t\t\ta33 = 32'b0,\n\t\t\t\t\ta34 = 32'b0,\n\t\t\t\t\ta35 = 32'b0,\n\t\t\t\t\ta36 = 32'b0,\n\t\t\t\t\ta37 = 32'b0,\n\t\t\t\t\ta38 = 32'b0,\n\t\t\t\t\ta39 = 32'b0,\n\t\t\t\t\ta40 = 32'b0,\n\t\t\t\t\ta41 = 32'b0,\n\t\t\t\t\ta42 = 32'b0,\n\t\t\t\t\ta43 = 32'b0,\n\t\t\t\t\ta44 = 32'b0,\n\t\t\t\t\ta45 = 32'b0,\n\t\t\t\t\ta46 = 32'b0,\n\t\t\t\t\ta47 = 32'b0,\n\t\t\t\t\ta48 = 32'b0,\n\t\t\t\t\ta49 = 32'b0,\n\t\t\t\t\ta50 = 32'b0,\n\t\t\t\t\ta51 = 32'b0,\n\t\t\t\t\ta52 = 32'b0,\n\t\t\t\t\ta53 = 32'b0,\n\t\t\t\t\ta54 = 32'b0,\n\t\t\t\t\ta55 = 32'b0,\n\t\t\t\t\ta56 = 32'b0,\n\t\t\t\t\ta57 = 32'b0,\n\t\t\t\t\ta58 = 32'b0,\n\t\t\t\t\ta59 = 32'b0,\n\t\t\t\t\ta60 = 32'b0,\n\t\t\t\t\ta61 = 32'b0,\n\t\t\t\t\ta62 = 32'b0,\n\t\t\t\t\ta63 = 32'b0,\n\t\t\t\t\ta64 = 32'b0,\n\t\t\t\t\ta65 = 32'b0,\n\t\t\t\t\ta66 = 32'b0,\n\t\t\t\t\ta67 = 32'b0,\n\t\t\t\t\ta68 = 32'b0,\n\t\t\t\t\ta69 = 32'b0,\n\t\t\t\t\ta70 = 32'b0,\n\t\t\t\t\ta71 = 32'b0,\n\t\t\t\t\ta72 = 32'b0,\n\t\t\t\t\ta73 = 32'b0,\n\t\t\t\t\ta74 = 32'b0,\n\t\t\t\t\ta75 = 32'b0,\n\t\t\t\t\ta76 = 32'b0,\n\t\t\t\t\ta77 = 32'b0,\n\t\t\t\t\ta78 = 32'b0,\n\t\t\t\t\ta79 = 32'b0,\n\t\t\t\t\ta80 = 32'b0,\n\t\t\t\t\ta81 = 32'b0,\n\t\t\t\t\ta82 = 32'b0,\n\t\t\t\t\ta83 = 32'b0,\n\t\t\t\t\ta84 = 32'b0,\n\t\t\t\t\ta85 = 32'b0,\n\t\t\t\t\ta86 = 32'b0,\n\t\t\t\t\ta87 = 32'b0,\n\t\t\t\t\ta88 = 32'b0,\n\t\t\t\t\ta89 = 32'b0,\n\t\t\t\t\ta90 = 32'b0,\n\t\t\t\t\ta91 = 32'b0,\n\t\t\t\t\ta92 = 32'b0,\n\t\t\t\t\ta93 = 32'b0,\n\t\t\t\t\ta94 = 32'b0,\n\t\t\t\t\ta95 = 32'b0,\n\t\t\t\t\ta96 = 32'b0,\n\t\t\t\t\ta97 = 32'b0,\n\t\t\t\t\ta98 = 32'b0,\n\t\t\t\t\ta99 = 32'b0,\n\t\t\t\t\ta100 = 32'b0,\n\t\t\t\t\ta101 = 32'b0,\n\t\t\t\t\ta102 = 32'b0,\n\t\t\t\t\ta103 = 32'b0,\n\t\t\t\t\ta104 = 32'b0,\n\t\t\t\t\ta105 = 32'b0,\n\t\t\t\t\ta106 = 32'b0,\n\t\t\t\t\ta107 = 32'b0,\n\t\t\t\t\ta108 = 32'b0,\n\t\t\t\t\ta109 = 32'b0,\n\t\t\t\t\ta110 = 32'b0,\n\t\t\t\t\ta111 = 32'b0,\n\t\t\t\t\ta112 = 32'b0,\n\t\t\t\t\ta113 = 32'b0,\n\t\t\t\t\ta114 = 32'b0,\n\t\t\t\t\ta115 = 32'b0,\n\t\t\t\t\ta116 = 32'b0,\n\t\t\t\t\ta117 = 32'b0,\n\t\t\t\t\ta118 = 32'b0,\n\t\t\t\t\ta119 = 32'b0,\n\t\t\t\t\ta120 = 32'b0;\n\t\t\t\t\t\t\t\t\t\n\nreg [6:0] \t\t\ti;\nreg [6:0]   \t\tj1;\nreg [N-1:0] \t\tk,e;\nreg [N-1:0]\t\t\tsum;\nreg [N-1:0] \t\tm1_in1, m1_in2,\n\t\t\t\t\t\tm2_in1, m2_in2,\n\t\t\t\t\t\tm3_in1, m3_in2,\n\t\t\t\t\t\tm4_in1, m4_in2,\n\t\t\t\t\t\tm5_in1, m5_in2,\n\t\t\t\t\t\tm6_in1, m6_in2,\n\t\t\t\t\t\tm7_in1, m7_in2,\n\t\t\t\t\t\tm8_in1, m8_in2,\n\t\t\t\t\t\tm9_in1, m9_in2,\n\t\t\t\t\t\t\n\t\t\t\t\t\ta1_in1, a1_in2,\n\t\t\t\t\t\ta2_in1, a2_in2,\n\t\t\t\t\t\ta3_in1, a3_in2,\n\t\t\t\t\t\ta4_in1, a4_in2,\n\t\t\t\t\t\ta5_in1, a5_in2,\n\t\t\t\t\t\ta6_in1, a6_in2,\n\t\t\t\t\t\ta7_in1, a7_in2,\n\t\t\t\t\t\ta8_in1, a8_in2,\n\t\t\t\t\t\ta9_in1, a9_in2,\n\t\t\t\t\t\t\n\t\t\t\t\t\tgt1_in1, gt1_in2;\n\t\t\t\t\t\t\nwire [N-1:0]\t\tm1_out, a1_out, \n\t\t\t\t\t\tm2_out, a2_out, \n\t\t\t\t\t\tm3_out, a3_out, \n\t\t\t\t\t\tm4_out, a4_out, \n\t\t\t\t\t\tm5_out, a5_out, \n\t\t\t\t\t\tm6_out, a6_out, \n\t\t\t\t\t\tm7_out, a7_out, \n\t\t\t\t\t\tm8_out, a8_out, \n\t\t\t\t\t\tm9_out, a9_out, \n\t\t\t\t\t\tdiv_ans;\n\t\t\t\t\t\t\nwire \t\t\t\t\tgt1;\n\nwire donediv;\nreg [3:0] j;\nreg startdiv;\nreg [N-1:0] div_in;\n\n\n\n\n\nqmult\t\t\t \t #(Q,N) \t\t\t    qmult1\t   (m1_in1,m1_in2,m1_out);\nqmult\t\t\t \t #(Q,N) \t\t\t    qmult2\t   (m2_in1,m2_in2,m2_out);\nqmult\t\t\t \t #(Q,N) \t\t\t    qmult3\t   (m3_in1,m3_in2,m3_out);\nqmult\t\t\t \t #(Q,N) \t\t\t    qmult4\t   (m4_in1,m4_in2,m4_out);\nqmult\t\t\t \t #(Q,N) \t\t\t    qmult5\t   (m5_in1,m5_in2,m5_out);\nqmult\t\t\t \t #(Q,N) \t\t\t    qmult6\t   (m6_in1,m6_in2,m6_out);\nqmult\t\t\t \t #(Q,N) \t\t\t    qmult7\t   (m7_in1,m7_in2,m7_out);\nqmult\t\t\t \t #(Q,N) \t\t\t    qmult8\t   (m8_in1,m8_in2,m8_out);\nqmult\t\t\t \t #(Q,N) \t\t\t    qmult9\t   (m9_in1,m9_in2,m9_out);\n\nqadd  \t\t\t #(Q,N)\t\t\t\t adder1    \t(a1_in1,a1_in2,a1_out);\nqadd  \t\t\t #(Q,N)\t\t\t\t adder2    \t(a2_in1,a2_in2,a2_out);\nqadd  \t\t\t #(Q,N)\t\t\t\t adder3    \t(a3_in1,a3_in2,a3_out);\nqadd  \t\t\t #(Q,N)\t\t\t\t adder4    \t(a4_in1,a4_in2,a4_out);\nqadd  \t\t\t #(Q,N)\t\t\t\t adder5    \t(a5_in1,a5_in2,a5_out);\nqadd  \t\t\t #(Q,N)\t\t\t\t adder6    \t(a6_in1,a6_in2,a6_out);\nqadd  \t\t\t #(Q,N)\t\t\t\t adder7    \t(a7_in1,a7_in2,a7_out);\nqadd  \t\t\t #(Q,N)\t\t\t\t adder8    \t(a8_in1,a8_in2,a8_out);\nqadd  \t\t\t #(Q,N)\t\t\t\t adder9    \t(a9_in1,a9_in2,a9_out);\n\nfpgreaterthan\t #(Q,N)    \t\t\t fpgt1      (gt1_in1,gt1_in2,gt1);\nfpdiv_clk  divider1   (startdiv,clk,rst,div_in,div_ans,donediv);\n\nreg [3:0] addr_ld;\nreg [N-1:0] in_lpc;\nreg re_ld,we_ld;\nwire [N-1:0] out_lpc;\n\nRAM_ld_lpcs RAM_ld (addr_ld,clk,in_lpc,re_ld,we_ld,out_lpc);\n \n\n\n\n\nalways@(posedge clk or negedge rst)     \nbegin\n\n\tif (rst == 1'b0)\n\t\tSTATE <= START;\n\telse\n\t\tSTATE <= NEXT_STATE;\n\nend\n\n\nalways@(*)                              \nbegin\n\tcase(STATE)\n\n\tSTART:\n\tbegin\n\t\tif(startld == 1'b1)\n\t\tbegin\n\t\t\tNEXT_STATE = INIT;\n\t\tend\n\t\telse\n\t\tbegin\n\t\t\tNEXT_STATE = START;\n\t\tend\n\tend\n\n\tINIT:\n\tbegin\n\t\tNEXT_STATE = INIT_LOOP;\n\tend\n\n\tINIT_LOOP:\n\tbegin\n\t\tNEXT_STATE = CHECK_I;\n\tend\n\n\tCHECK_I:\n\tbegin\n\t\tif(i <= ORDER)\n\t\tbegin\n\t\t\tNEXT_STATE = START_J1;\n\t\tend\n\t\telse\n\t\tbegin\n\t\t\tNEXT_STATE = INIT_FOR_LPC;\n\t\tend\n\tend\n\n\tSTART_J1:\n\tbegin\n\t\tNEXT_STATE = CHECK_J1;\n\tend\n\n\tCHECK_J1:\n\tbegin\n\t\tif(j1 <= (i-1))\n\t\tbegin\n\t\t\tNEXT_STATE = SET_A_R;\n\t\tend\n\t\telse\n\t\tbegin\n\t\t\tNEXT_STATE = START_DIV;\n\t\tend\n\tend\n\n\tSET_A_R:\n\tbegin\n\t\tNEXT_STATE = CALC_SUM;\n\tend\n\n\n\n\n\n\n\tCALC_SUM:\n\tbegin\n\t\tNEXT_STATE = SET_SUM;\n\tend\n\t\n\tSET_SUM:\n\tbegin\n\t\tNEXT_STATE = INCR_J1;\n\tend\n\n\tINCR_J1:\n\tbegin\n\t\tNEXT_STATE = CHECK_J1;\n\tend\n\t\n\n\n\n\n\n\tSTART_DIV:\n\tbegin\n\t\tNEXT_STATE = PRE_CALC_K;\n\tend\n\t\n\tPRE_CALC_K:\n\tbegin\n\t\tif(donediv)\n\t\tbegin\n\t\t\tNEXT_STATE = CALC_K;\n\t\tend\n\t\telse\n\t\tbegin\n\t\t\tNEXT_STATE = PRE_CALC_K;\n\t\tend\n\t\t\n\tend\n\n\tCALC_K:\n\tbegin\n\t\tNEXT_STATE = SET_K;\n\tend\n\n\tSET_K:\n\tbegin\n\t\tNEXT_STATE = CHECK_GT;\n\tend\n\t\n\tCHECK_GT:\n\tbegin\n\t\tNEXT_STATE = CHECK_K;\n\tend\n\t\n\tCHECK_K:\n\tbegin\n\t\tNEXT_STATE = SET_A;\n\tend\n\t\n\tSET_A:\n\tbegin\n\t\tNEXT_STATE = CHECK_WHICH_I_FOR_A;\n\tend\n\t\n\t\n\n\n\n\n\n\n\n\n\n\n\t\n\tCHECK_WHICH_I_FOR_A:\n\tbegin\n\t\tif(i == 7'd1)\n\t\tbegin\n\t\t\tNEXT_STATE = PRE_CALC_E;\n\t\tend\n\t\telse if (i == 7'd2)\n\t\tbegin\n\t\t\tNEXT_STATE = PRE_CALC_A_I_2;\n\t\tend\n\t\telse if (i == 7'd3)\n\t\tbegin\n\t\t\tNEXT_STATE = PRE_CALC_A_I_3;\n\t\tend\n\t\telse if (i == 7'd4)\n\t\tbegin\n\t\t\tNEXT_STATE = PRE_CALC_A_I_4;\n\t\tend\n\t\telse if (i == 7'd5)\n\t\tbegin\n\t\t\tNEXT_STATE = PRE_CALC_A_I_5;\n\t\tend\n\t\telse if (i == 7'd6)\n\t\tbegin\n\t\t\tNEXT_STATE = PRE_CALC_A_I_6;\n\t\tend\n\t\telse if (i == 7'd7)\n\t\tbegin\n\t\t\tNEXT_STATE = PRE_CALC_A_I_7;\n\t\tend\n\t\telse if (i == 7'd8)\n\t\tbegin\n\t\t\tNEXT_STATE = PRE_CALC_A_I_8;\n\t\tend\n\t\telse if (i == 7'd9)\n\t\tbegin\n\t\t\tNEXT_STATE = PRE_CALC_A_I_9;\n\t\tend\n\t\telse if (i == 7'd10)\n\t\tbegin\n\t\t\tNEXT_STATE = PRE_CALC_A_I_10;\n\t\tend\n\t\t\n\tend\n\t\n\tPRE_CALC_A_I_2:\n\tbegin\n\t\tNEXT_STATE = CALC_A_I_2;\n\tend\n\t\n\tCALC_A_I_2:\n\tbegin\n\t\tNEXT_STATE = FINAL_CALC_A_I_2;\n\tend\n\t\n\tFINAL_CALC_A_I_2:\n\tbegin\n\t\tNEXT_STATE = PRE_CALC_E;\n\tend\n\t\n\tPRE_CALC_A_I_3:\n\tbegin\n\t\tNEXT_STATE = CALC_A_I_3;\n\tend\n\t\n\tCALC_A_I_3:\n\tbegin\n\t\tNEXT_STATE = FINAL_CALC_A_I_3;\n\tend\n\t\n\tFINAL_CALC_A_I_3:\n\tbegin\n\t\tNEXT_STATE = PRE_CALC_E;\n\tend\n\n\tPRE_CALC_A_I_4:\n\tbegin\n\t\tNEXT_STATE = CALC_A_I_4;\n\tend\n\t\n\tCALC_A_I_4:\n\tbegin\n\t\tNEXT_STATE = FINAL_CALC_A_I_4;\n\tend\n\t\n\tFINAL_CALC_A_I_4:\n\tbegin\n\t\tNEXT_STATE = PRE_CALC_E;\n\tend\n\t\n\tPRE_CALC_A_I_5:\n\tbegin\n\t\tNEXT_STATE = CALC_A_I_5;\n\tend\n\t\n\tCALC_A_I_5:\n\tbegin\n\t\tNEXT_STATE = FINAL_CALC_A_I_5;\n\tend\n\t\n\tFINAL_CALC_A_I_5:\n\tbegin\n\t\tNEXT_STATE = PRE_CALC_E;\n\tend\n\t\n\tPRE_CALC_A_I_6:\n\tbegin\n\t\tNEXT_STATE = CALC_A_I_6;\n\tend\n\t\n\tCALC_A_I_6:\n\tbegin\n\t\tNEXT_STATE = FINAL_CALC_A_I_6;\n\tend\n\t\n\tFINAL_CALC_A_I_6:\n\tbegin\n\t\tNEXT_STATE = PRE_CALC_E;\n\tend\n\t\n\tPRE_CALC_A_I_7:\n\tbegin\n\t\tNEXT_STATE = CALC_A_I_7;\n\tend\n\t\n\tCALC_A_I_7:\n\tbegin\n\t\tNEXT_STATE = FINAL_CALC_A_I_7;\n\tend\n\t\n\tFINAL_CALC_A_I_7:\n\tbegin\n\t\tNEXT_STATE = PRE_CALC_E;\n\tend\n\t\n\tPRE_CALC_A_I_8:\n\tbegin\n\t\tNEXT_STATE = CALC_A_I_8;\n\tend\n\t\n\tCALC_A_I_8:\n\tbegin\n\t\tNEXT_STATE = FINAL_CALC_A_I_8;\n\tend\n\t\n\tFINAL_CALC_A_I_8:\n\tbegin\n\t\tNEXT_STATE = PRE_CALC_E;\n\tend\n\t\n\tPRE_CALC_A_I_9:\n\tbegin\n\t\tNEXT_STATE = CALC_A_I_9;\n\tend\n\t\n\tCALC_A_I_9:\n\tbegin\n\t\tNEXT_STATE = FINAL_CALC_A_I_9;\n\tend\n\t\n\tFINAL_CALC_A_I_9:\n\tbegin\n\t\tNEXT_STATE = PRE_CALC_E;\n\tend\n\t\n\tPRE_CALC_A_I_10:\n\tbegin\n\t\tNEXT_STATE = CALC_A_I_10;\n\tend\n\t\n\tCALC_A_I_10:\n\tbegin\n\t\tNEXT_STATE = FINAL_CALC_A_I_10;\n\tend\n\t\n\tFINAL_CALC_A_I_10:\n\tbegin\n\t\tNEXT_STATE = PRE_CALC_E;\n\tend\n\t\n\tPRE_CALC_E:\n\tbegin\n\t\tNEXT_STATE = CALC1_E;\n\tend\n\n\tCALC1_E:\n\tbegin\n\t\tNEXT_STATE = CALC2_E;\n\tend\n\n\tCALC2_E:\n\tbegin\n\t\tNEXT_STATE = SET_E;\n\tend\n\n\tSET_E:\n\tbegin\n\t\tNEXT_STATE = INCR_I;\n\tend\n\n\tINCR_I:\n\tbegin\n\t\tNEXT_STATE = CHECK_I;\n\tend\n\t\n\tINIT_FOR_LPC:\n\tbegin\n\t\tNEXT_STATE = CHECK_J;\n\tend\n\t\n\tCHECK_J:\n\tbegin\n\t\tif(j <= 10'd10)\n\t\tbegin\n\t\t\tNEXT_STATE = SET_ADDR_LPC;\n\t\tend\n\t\telse\n\t\tbegin\n\t\t\tNEXT_STATE = DONE;\n\t\tend\n\tend\n\t\n\tSET_ADDR_LPC:\n\tbegin\n\t\tNEXT_STATE = SET_DELAY1;\n\tend\n\t\n\tSET_DELAY1:\n\tbegin\n\t\tNEXT_STATE = SET_DELAY2;\n\tend\n\t\n\tSET_DELAY2:\n\tbegin\n\t\tNEXT_STATE = SET_LPC;\n\tend\n\t\n\tSET_LPC:\n\tbegin\n\t\tNEXT_STATE = INCR_J;\n\tend\n\t\t\t\t\n\tINCR_J:\n\tbegin\n\t\tNEXT_STATE = CHECK_J;\n\tend \n\t\n\t\n\n\n\n\n\tDONE:\n\tbegin\n\t\tNEXT_STATE = DONE;\n\tend\n\n\tdefault:\n\tbegin\n\t\tNEXT_STATE = DONE;\n\tend\n\n\tendcase\nend\n\n\nalways@(posedge clk or negedge rst)     \nbegin\n\n\tif (rst == 1'b0)\n\tbegin\n\n\t\tdoneld <= 1'b0;\n\n\tend\n\n\telse\n\tbegin\n\t\tcase(STATE)\n\n\t\tSTART:\n\t\tbegin\n\t\t\tdoneld <= 1'b0;\n\t\t\tstartdiv <= 1'b0;\n\t\t\tsum <= 32'b0;\n\t\t\t\n\t\t\t R0  <= {16'h5666,16'hE9FF};\n\t\t\t\tR1  <= {16'h3DE8,16'h8F00};\n\t\t\t\tR2  <= {16'h1706,16'h20C0};\n\t\t\t\tR3  <= {1'b1,15'h11BC,16'h8E5F};\n\t\t\t\tR4  <= {1'b1,15'h2A1C,16'hDB80};\n\t\t\t\tR5  <= {1'b1,15'h2317,16'hE6BF};\n\t\t\t\tR6  <= {1'b1,15'h1A93,16'h24};\n\t\t\t\tR7  <= {1'b1,15'hC4F,16'h138F};\n\t\t\t\tR8  <= {1'b1,15'hC0C,16'hEFAF};\n\t\t\t\tR9  <= {1'b1,15'h141B,16'hADDF};\n\t\t\t\tR10 <= {1'b1,15'h11F4,16'h6D5F};   \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\n\n\n\n\n\n\n\n\n\n\t\tend\n\n\t\tINIT:\n\t\tbegin\n\t\t\t\n\t\tend\n\n\t\tINIT_LOOP:\n\t\tbegin\n\t\t\te <= R0;\n\t\t\ti <= 7'b1;\n\t\t\t\n\t\tend\n\n\t\tCHECK_I:\n\t\tbegin\n\t\t\t\n\t\tend\n\n\t\tSTART_J1:\n\t\tbegin\n\t\t\tsum <= 32'b0;\n\t\t\tj1 <= 7'b1;\n\t\tend\n\n\t\tCHECK_J1:\n\t\tbegin\n\t\t\n\t\tend\n\n\t\tSET_A_R:\n\t\tbegin\n\t\t\tcase ((7'd11*(i-7'd1)) + j1)\n\t\t\t\t7'd0 : m1_in1 <= a0;\n\t\t\t\t7'd1 : m1_in1 <= a1;\n\t\t\t\t7'd2 : m1_in1 <= a2;\n\t\t\t\t7'd3 : m1_in1 <= a3;\n\t\t\t\t7'd4 : m1_in1 <= a4;\n\t\t\t\t7'd5 : m1_in1 <= a5;\n\t\t\t\t7'd6 : m1_in1 <= a6;\n\t\t\t\t7'd7 : m1_in1 <= a7;\n\t\t\t\t7'd8 : m1_in1 <= a8;\n\t\t\t\t7'd9 : m1_in1 <= a9;\n\t\t\t\t7'd10 : m1_in1 <= a10;\n\t\t\t\t7'd11 : m1_in1 <= a11;\n\t\t\t\t7'd12 : m1_in1 <= a12;\n\t\t\t\t7'd13 : m1_in1 <= a13;\n\t\t\t\t7'd14 : m1_in1 <= a14;\n\t\t\t\t7'd15 : m1_in1 <= a15;\n\t\t\t\t7'd16 : m1_in1 <= a16;\n\t\t\t\t7'd17 : m1_in1 <= a17;\n\t\t\t\t7'd18 : m1_in1 <= a18;\n\t\t\t\t7'd19 : m1_in1 <= a19;\n\t\t\t\t7'd20 : m1_in1 <= a20;\n\t\t\t\t7'd21 : m1_in1 <= a21;\n\t\t\t\t7'd22 : m1_in1 <= a22;\n\t\t\t\t7'd23 : m1_in1 <= a23;\n\t\t\t\t7'd24 : m1_in1 <= a24;\n\t\t\t\t7'd25 : m1_in1 <= a25;\n\t\t\t\t7'd26 : m1_in1 <= a26;\n\t\t\t\t7'd27 : m1_in1 <= a27;\n\t\t\t\t7'd28 : m1_in1 <= a28;\n\t\t\t\t7'd29 : m1_in1 <= a29;\n\t\t\t\t7'd30 : m1_in1 <= a30;\n\t\t\t\t7'd31 : m1_in1 <= a31;\n\t\t\t\t7'd32 : m1_in1 <= a32;\n\t\t\t\t7'd33 : m1_in1 <= a33;\n\t\t\t\t7'd34 : m1_in1 <= a34;\n\t\t\t\t7'd35 : m1_in1 <= a35;\n\t\t\t\t7'd36 : m1_in1 <= a36;\n\t\t\t\t7'd37 : m1_in1 <= a37;\n\t\t\t\t7'd38 : m1_in1 <= a38;\n\t\t\t\t7'd39 : m1_in1 <= a39;\n\t\t\t\t7'd40 : m1_in1 <= a40;\n\t\t\t\t7'd41 : m1_in1 <= a41;\n\t\t\t\t7'd42 : m1_in1 <= a42;\n\t\t\t\t7'd43 : m1_in1 <= a43;\n\t\t\t\t7'd44 : m1_in1 <= a44;\n\t\t\t\t7'd45 : m1_in1 <= a45;\n\t\t\t\t7'd46 : m1_in1 <= a46;\n\t\t\t\t7'd47 : m1_in1 <= a47;\n\t\t\t\t7'd48 : m1_in1 <= a48;\n\t\t\t\t7'd49 : m1_in1 <= a49;\n\t\t\t\t7'd50 : m1_in1 <= a50;\n\t\t\t\t7'd51 : m1_in1 <= a51;\n\t\t\t\t7'd52 : m1_in1 <= a52;\n\t\t\t\t7'd53 : m1_in1 <= a53;\n\t\t\t\t7'd54 : m1_in1 <= a54;\n\t\t\t\t7'd55 : m1_in1 <= a55;\n\t\t\t\t7'd56 : m1_in1 <= a56;\n\t\t\t\t7'd57 : m1_in1 <= a57;\n\t\t\t\t7'd58 : m1_in1 <= a58;\n\t\t\t\t7'd59 : m1_in1 <= a59;\n\t\t\t\t7'd60 : m1_in1 <= a60;\n\t\t\t\t7'd61 : m1_in1 <= a61;\n\t\t\t\t7'd62 : m1_in1 <= a62;\n\t\t\t\t7'd63 : m1_in1 <= a63;\n\t\t\t\t7'd64 : m1_in1 <= a64;\n\t\t\t\t7'd65 : m1_in1 <= a65;\n\t\t\t\t7'd66 : m1_in1 <= a66;\n\t\t\t\t7'd67 : m1_in1 <= a67;\n\t\t\t\t7'd68 : m1_in1 <= a68;\n\t\t\t\t7'd69 : m1_in1 <= a69;\n\t\t\t\t7'd70 : m1_in1 <= a70;\n\t\t\t\t7'd71 : m1_in1 <= a71;\n\t\t\t\t7'd72 : m1_in1 <= a72;\n\t\t\t\t7'd73 : m1_in1 <= a73;\n\t\t\t\t7'd74 : m1_in1 <= a74;\n\t\t\t\t7'd75 : m1_in1 <= a75;\n\t\t\t\t7'd76 : m1_in1 <= a76;\n\t\t\t\t7'd77 : m1_in1 <= a77;\n\t\t\t\t7'd78 : m1_in1 <= a78;\n\t\t\t\t7'd79 : m1_in1 <= a79;\n\t\t\t\t7'd80 : m1_in1 <= a80;\n\t\t\t\t7'd81 : m1_in1 <= a81;\n\t\t\t\t7'd82 : m1_in1 <= a82;\n\t\t\t\t7'd83 : m1_in1 <= a83;\n\t\t\t\t7'd84 : m1_in1 <= a84;\n\t\t\t\t7'd85 : m1_in1 <= a85;\n\t\t\t\t7'd86 : m1_in1 <= a86;\n\t\t\t\t7'd87 : m1_in1 <= a87;\n\t\t\t\t7'd88 : m1_in1 <= a88;\n\t\t\t\t7'd89 : m1_in1 <= a89;\n\t\t\t\t7'd90 : m1_in1 <= a90;\n\t\t\t\t7'd91 : m1_in1 <= a91;\n\t\t\t\t7'd92 : m1_in1 <= a92;\n\t\t\t\t7'd93 : m1_in1 <= a93;\n\t\t\t\t7'd94 : m1_in1 <= a94;\n\t\t\t\t7'd95 : m1_in1 <= a95;\n\t\t\t\t7'd96 : m1_in1 <= a96;\n\t\t\t\t7'd97 : m1_in1 <= a97;\n\t\t\t\t7'd98 : m1_in1 <= a98;\n\t\t\t\t7'd99 : m1_in1 <= a99;\n\t\t\t\t7'd100 : m1_in1 <= a100;\n\t\t\t\t7'd101 : m1_in1 <= a101;\n\t\t\t\t7'd102 : m1_in1 <= a102;\n\t\t\t\t7'd103 : m1_in1 <= a103;\n\t\t\t\t7'd104 : m1_in1 <= a104;\n\t\t\t\t7'd105 : m1_in1 <= a105;\n\t\t\t\t7'd106 : m1_in1 <= a106;\n\t\t\t\t7'd107 : m1_in1 <= a107;\n\t\t\t\t7'd108 : m1_in1 <= a108;\n\t\t\t\t7'd109 : m1_in1 <= a109;\n\t\t\t\t7'd110 : m1_in1 <= a110;\n\t\t\t\t7'd111 : m1_in1 <= a111;\n\t\t\t\t7'd112 : m1_in1 <= a112;\n\t\t\t\t7'd113 : m1_in1 <= a113;\n\t\t\t\t7'd114 : m1_in1 <= a114;\n\t\t\t\t7'd115 : m1_in1 <= a115;\n\t\t\t\t7'd116 : m1_in1 <= a116;\n\t\t\t\t7'd117 : m1_in1 <= a117;\n\t\t\t\t7'd118 : m1_in1 <= a118;\n\t\t\t\t7'd119 : m1_in1 <= a119;\n\t\t\t\t7'd120 : m1_in1 <= a120;\n\t\t\tendcase\n\t\t\tcase (i-j1)\n\t\t\t\t4'd0 : m1_in2 <= R0;\n\t\t\t\t4'd1 : m1_in2 <= R1;\n\t\t\t\t4'd2 : m1_in2 <= R2;\n\t\t\t\t4'd3 : m1_in2 <= R3;\n\t\t\t\t4'd4 : m1_in2 <= R4;\n\t\t\t\t4'd5 : m1_in2 <= R5;\n\t\t\t\t4'd6 : m1_in2 <= R6;\n\t\t\t\t4'd7 : m1_in2 <= R7;\n\t\t\t\t4'd8 : m1_in2 <= R8;\n\t\t\t\t4'd9 : m1_in2 <= R9;\n\t\t\t\t4'd10: m1_in2 <= R10;\n\t\t\tendcase\n\t\t\t\n\t\t\t\n\t\t\t\n\t\tend\n\n\n\n\n\n\n\t\tCALC_SUM:\n\t\tbegin\n\n\t\t\ta1_in1 <= sum;\n\t\t\ta1_in2 <= m1_out;\n\t\t\t\n\t\t\t\n\t\tend\n\t\t\n\t\tSET_SUM:\n\t\tbegin\n\t\t\tsum <= a1_out;\n\t\t\t\n\t\tend\n\n\t\tINCR_J1:\n\t\tbegin\n\t\t\tj1 <= j1 + 7'd1;\n\t\t\t\n\t\tend\n\t\t\n\n\n\n\n\n\t\tSTART_DIV:\n\t\tbegin\n\t\t\tstartdiv <= 1'b1;\n\t\tend\n\n\t\tPRE_CALC_K:\n\t\tbegin\n\t\t\tcase (i)\n\t\t\t\t4'd0 : a1_in1 <= R0;\n\t\t\t\t4'd1 : a1_in1 <= R1;\n\t\t\t\t4'd2 : a1_in1 <= R2;\n\t\t\t\t4'd3 : a1_in1 <= R3;\n\t\t\t\t4'd4 : a1_in1 <= R4;\n\t\t\t\t4'd5 : a1_in1 <= R5;\n\t\t\t\t4'd6 : a1_in1 <= R6;\n\t\t\t\t4'd7 : a1_in1 <= R7;\n\t\t\t\t4'd8 : a1_in1 <= R8;\n\t\t\t\t4'd9 : a1_in1 <= R9;\n\t\t\t\t4'd10: a1_in1 <= R10;\n\t\t\tendcase\n\t\t\ta1_in2 <= sum;\t\n\t\t\t\n\t\t\t div_in <= e;\n\t\t\t startdiv <= 1'b0;\n\t\t\t\n\t\tend\n\n\t\tCALC_K:\n\t\tbegin\n\t\t\tm1_in1 <= a1_out;\n\t\t\tm1_in2 <= div_ans;\n\t\t\tif(i == 1'b1)\n\t\t\tbegin\n\t\t\t\tcheck_k <= div_ans;\n\t\t\t\tcheck_e <= e;\n\t\t\tend\n\t\t\t\n\t\tend\n\n\t\tSET_K:\n\t\tbegin\n\t\t  \n\t\t\n\t\t\tk <= {(m1_out[N-1] == 0)?1'b1:1'b0,m1_out[N-2:0]};\n\t\t\t\n\t\tend\n\t\t\n\t\tCHECK_GT:\n\t\tbegin\n\t\t\tgt1_in1 <= {(k[N-1] == 1)?1'b0:1'b0,k[N-2:0]};\n\t\t\tgt1_in2 <= NUMBER_ONE;\n\t\t\t\n\t\t\t\n\t\t\t\n\t\tend\n\t\t\n\t\tCHECK_K:\n\t\tbegin\n\t\t\tif(gt1)\n\t\t\tbegin\n\t\t\t\tk <= 32'b0;\n\t\t\tend\n\t\t\telse\n\t\t\tbegin\n\t\t\t\tk <= k;\n\t\t\tend\n\t\tend\n\t\t\n\t\tSET_A:\n\t\tbegin\n\t\t\tcase (i)\n\t\t\t7'd1  : a12  <= k;\n\t\t\t7'd2  : a24  <= k;\n\t\t\t7'd3  : a36  <= k;\n\t\t\t7'd4  : a48  <= k;\n\t\t\t7'd5  : a60  <= k;\n\t\t\t7'd6  : a72  <= k;\n\t\t\t7'd7  : a84  <= k;\n\t\t\t7'd8  : a96  <= k;\n\t\t\t7'd9  : a108 <= k;\n\t\t\t7'd10 : a120 <= k;\n\t\t\t\n\t\t\tendcase\n\t\tend\n\t\t\n\t\tCHECK_WHICH_I_FOR_A:\n\t\tbegin\n\t\t\t\n\t\tend\n\t\t\n\t\t\n\t\t\n\t\tPRE_CALC_A_I_2:\n\t\tbegin\n\t\t\tm1_in1 <= k;\n\t\t\tm1_in2 <= a12;\n\t\t\ta1_in1 <= a12;\n\t\tend\n\t\t\n\t\tCALC_A_I_2:\n\t\tbegin\n\t\t\ta1_in2 <= m1_out;\n\t\tend\n\t\t\n\t\tFINAL_CALC_A_I_2:\n\t\tbegin\n\t\t\ta23 <= a1_out;\n\t\tend\n\n\t\t\n\n\n\t\tPRE_CALC_A_I_3:\n\t\tbegin\n\t\t\tm1_in1 <= k;\n\t\t\tm1_in2 <= a24;\n\t\t\tm2_in1 <= k;\n\t\t\tm2_in2  <= a23;\n\t\t\ta1_in1 <= a23;\n\t\t\ta2_in1 <= a24;\n\t\tend\n\t\t\n\t\tCALC_A_I_3:\n\t\tbegin\n\t\t\ta1_in2 <= m1_out;\n\t\t\ta2_in2 <= m2_out;\n\t\tend\n\t\t\n\t\tFINAL_CALC_A_I_3:\n\t\tbegin\n\t\t\ta34 <= a1_out;\n\t\t\ta35 <= a2_out;\n\t\tend\n\n\t\t\n\n\n\n\t\tPRE_CALC_A_I_4:\n\t\tbegin\n\t\t\tm1_in1 <= k;\n\t\t\tm1_in2 <= a36;\n\t\t\tm2_in1 <= k;\n\t\t\tm2_in2 <= a35;\n\t\t\tm3_in1 <= k;\n\t\t\tm3_in2 <= a34;\n\t\t\ta1_in1 <= a34;\n\t\t\ta2_in1 <= a35;\n\t\t\ta3_in1 <= a36;\n\t\tend\n\t\t\n\t\tCALC_A_I_4:\n\t\tbegin\n\t\t\ta1_in2 <= m1_out;\n\t\t\ta2_in2 <= m2_out;\n\t\t\ta3_in2 <= m3_out;\n\t\t\t\n\t\tend\n\t\t\n\t\tFINAL_CALC_A_I_4:\n\t\tbegin\n\t\t\ta45 <= a1_out;\n\t\t\ta46 <= a2_out;\n\t\t\ta47 <= a3_out;\n\t\tend\n\t\t\n\t\t\n\n\n\n\n\t\tPRE_CALC_A_I_5:\n\t\tbegin\n\t\t\tm1_in1 <= k;\n\t\t\tm1_in2 <= a48;\n\t\t\ta1_in1 <= a45;\n\t\t\tm2_in1 <= k;\n\t\t\tm2_in2 <= a47;\n\t\t\ta2_in1 <= a46;\n\t\t\tm3_in1 <= k;\n\t\t\tm3_in2 <= a46;\n\t\t\ta3_in1 <= a47;\n\t\t\tm4_in1 <= k;\n\t\t\tm4_in2 <= a45;\n\t\t\ta4_in1 <= a48;\n\t\tend\n\t\t\n\t\tCALC_A_I_5:\n\t\tbegin\n\t\t\ta1_in2 <= m1_out;\n\t\t\ta2_in2 <= m2_out;\n\t\t\ta3_in2 <= m3_out;\n\t\t\ta4_in2 <= m4_out;\n\t\t\t\n\t\tend\n\t\t\n\t\tFINAL_CALC_A_I_5:\n\t\tbegin\n\t\t\ta56 <= a1_out;\n\t\t\ta57 <= a2_out;\n\t\t\ta58 <= a3_out;\n\t\t\ta59 <= a4_out;\n\t\tend\n\t\t\n\t\t\n\t\t\n\n\n\n\n\n\t\tPRE_CALC_A_I_6:\n\t\tbegin\n\t\t\tm1_in1 <= k;\n\t\t\tm1_in2 <= a60;\n\t\t\ta1_in1 <= a56;\n\t\t\tm2_in1 <= k;\n\t\t\tm2_in2 <= a59;\n\t\t\ta2_in1 <= a57;\n\t\t\tm3_in1 <= k;\n\t\t\tm3_in2 <= a58;\n\t\t\ta3_in1 <= a58;\n\t\t\tm4_in1 <= k;\n\t\t\tm4_in2 <= a57;\n\t\t\ta4_in1 <= a59;\n\t\t\tm5_in1 <= k;\n\t\t\tm5_in2 <= a56;\n\t\t\ta5_in1 <= a60;\n\t\tend\n\t\t\n\t\tCALC_A_I_6:\n\t\tbegin\n\t\t\ta1_in2 <= m1_out;\n\t\t\ta2_in2 <= m2_out;\n\t\t\ta3_in2 <= m3_out;\n\t\t\ta4_in2 <= m4_out;\n\t\t\ta5_in2 <= m5_out;\n\t\t\t\n\t\tend\n\t\t\n\t\tFINAL_CALC_A_I_6:\n\t\tbegin\n\t\t\ta67 <= a1_out;\n\t\t\ta68 <= a2_out;\n\t\t\ta69 <= a3_out;\n\t\t\ta70 <= a4_out;\n\t\t\ta71 <= a5_out;\n\t\tend\n\t\t\n\t\t\n\n\n\n\n\n\n\t\tPRE_CALC_A_I_7:\n\t\tbegin\n\t\t\tm1_in1 <= k;\n\t\t\tm1_in2 <= a72;\n\t\t\ta1_in1 <= a67;\n\t\t\tm2_in1 <= k;\n\t\t\tm2_in2 <= a71;\n\t\t\ta2_in1 <= a68;\n\t\t\tm3_in1 <= k;\n\t\t\tm3_in2 <= a70;\n\t\t\ta3_in1 <= a69;\n\t\t\tm4_in1 <= k;\n\t\t\tm4_in2 <= a69;\n\t\t\ta4_in1 <= a70;\n\t\t\tm5_in1 <= k;\n\t\t\tm5_in2 <= a68;\n\t\t\ta5_in1 <= a71;\n\t\t\tm6_in1 <= k;\n\t\t\tm6_in2 <= a67;\n\t\t\ta6_in1 <= a72;\n\t\tend\n\t\t\n\t\tCALC_A_I_7:\n\t\tbegin\n\t\t\ta1_in2 <= m1_out;\n\t\t\ta2_in2 <= m2_out;\n\t\t\ta3_in2 <= m3_out;\n\t\t\ta4_in2 <= m4_out;\n\t\t\ta5_in2 <= m5_out;\n\t\t\ta6_in2 <= m6_out;\n\t\t\t\n\t\tend\n\t\t\n\t\tFINAL_CALC_A_I_7:\n\t\tbegin\n\t\t\ta78 <= a1_out;\n\t\t\ta79 <= a2_out;\n\t\t\ta80 <= a3_out;\n\t\t\ta81 <= a4_out;\n\t\t\ta82 <= a5_out;\n\t\t\ta83 <= a6_out;\n\t\tend\n\t\t\n\t\t\n\n\n\n\n\n\n\n\t\tPRE_CALC_A_I_8:\n\t\tbegin\n\t\t\tm1_in1 <= k;\n\t\t\tm1_in2 <= a84;\n\t\t\ta1_in1 <= a78;\n\t\t\tm2_in1 <= k;\n\t\t\tm2_in2 <= a83;\n\t\t\ta2_in1 <= a79;\n\t\t\tm3_in1 <= k;\n\t\t\tm3_in2 <= a82;\n\t\t\ta3_in1 <= a80;\n\t\t\tm4_in1 <= k;\n\t\t\tm4_in2 <= a81;\n\t\t\ta4_in1 <= a81;\n\t\t\tm5_in1 <= k;\n\t\t\tm5_in2 <= a80;\n\t\t\ta5_in1 <= a82;\n\t\t\tm6_in1 <= k;\n\t\t\tm6_in2 <= a79;\n\t\t\ta6_in1 <= a83;\n\t\t\tm7_in1 <= k;\n\t\t\tm7_in2 <= a78;\n\t\t\ta7_in1 <= a84;\n\t\tend\n\t\t\n\t\tCALC_A_I_8:\n\t\tbegin\n\t\t\ta1_in2 <= m1_out;\n\t\t\ta2_in2 <= m2_out;\n\t\t\ta3_in2 <= m3_out;\n\t\t\ta4_in2 <= m4_out;\n\t\t\ta5_in2 <= m5_out;\n\t\t\ta6_in2 <= m6_out;\n\t\t\ta7_in2 <= m7_out;\n\t\t\t\n\t\tend\n\t\t\n\t\tFINAL_CALC_A_I_8:\n\t\tbegin\n\t\t\ta89 <= a1_out;\n\t\t\ta90 <= a2_out;\n\t\t\ta91 <= a3_out;\n\t\t\ta92 <= a4_out;\n\t\t\ta93 <= a5_out;\n\t\t\ta94 <= a6_out;\n\t\t\ta95 <= a7_out;\n\t\tend\n\t\t\n\t\t\n\t\t\n\n\n\n\n\n\n\n\n\t\tPRE_CALC_A_I_9:\n\t\tbegin\n\t\t\tm1_in1 <= k;\n\t\t\tm1_in2 <= a96;\n\t\t\ta1_in1 <= a89;\n\t\t\tm2_in1 <= k;\n\t\t\tm2_in2 <= a95;\n\t\t\ta2_in1 <= a90;\n\t\t\tm3_in1 <= k;\n\t\t\tm3_in2 <= a94;\n\t\t\ta3_in1 <= a91;\n\t\t\tm4_in1 <= k;\n\t\t\tm4_in2 <= a93;\n\t\t\ta4_in1 <= a92;\n\t\t\tm5_in1 <= k;\n\t\t\tm5_in2 <= a92;\n\t\t\ta5_in1 <= a93;\n\t\t\tm6_in1 <= k;\n\t\t\tm6_in2 <= a91;\n\t\t\ta6_in1 <= a94;\n\t\t\tm7_in1 <= k;\n\t\t\tm7_in2 <= a90;\n\t\t\ta7_in1 <= a95;\n\t\t\tm8_in1 <= k;\n\t\t\tm8_in2 <= a89;\n\t\t\ta8_in1 <= a96;\n\t\tend\n\t\t\n\t\tCALC_A_I_9:\n\t\tbegin\n\t\t\ta1_in2 <= m1_out;\n\t\t\ta2_in2 <= m2_out;\n\t\t\ta3_in2 <= m3_out;\n\t\t\ta4_in2 <= m4_out;\n\t\t\ta5_in2 <= m5_out;\n\t\t\ta6_in2 <= m6_out;\n\t\t\ta7_in2 <= m7_out;\n\t\t\ta8_in2 <= m8_out;\n\t\t\t\n\t\tend\n\t\t\n\t\tFINAL_CALC_A_I_9:\n\t\tbegin\n\t\t\ta100 <= a1_out;\n\t\t\ta101 <= a2_out;\n\t\t\ta102 <= a3_out;\n\t\t\ta103 <= a4_out;\n\t\t\ta104 <= a5_out;\n\t\t\ta105 <= a6_out;\n\t\t\ta106 <= a7_out;\n\t\t\ta107 <= a8_out;\n\t\tend\n\t\t\n\t\t\n\t\t\n\n\n\n\n\n\n\n\n\n\t\tPRE_CALC_A_I_10:\n\t\tbegin\n\t\t\tm1_in1 <= k;\n\t\t\tm1_in2 <= a108;\n\t\t\ta1_in1 <= a100;\n\t\t\tm2_in1 <= k;\n\t\t\tm2_in2 <= a107;\n\t\t\ta2_in1 <= a101;\n\t\t\tm3_in1 <= k;\n\t\t\tm3_in2 <= a106;\n\t\t\ta3_in1 <= a102;\n\t\t\tm4_in1 <= k;\n\t\t\tm4_in2 <= a105;\n\t\t\ta4_in1 <= a103;\n\t\t\tm5_in1 <= k;\n\t\t\tm5_in2 <= a104;\n\t\t\ta5_in1 <= a104;\n\t\t\tm6_in1 <= k;\n\t\t\tm6_in2 <= a103;\n\t\t\ta6_in1 <= a105;\n\t\t\tm7_in1 <= k;\n\t\t\tm7_in2 <= a102;\n\t\t\ta7_in1 <= a106;\n\t\t\tm8_in1 <= k;\n\t\t\tm8_in2 <= a101;\n\t\t\ta8_in1 <= a107;\n\t\t\tm9_in1 <= k;\n\t\t\tm9_in2 <= a100;\n\t\t\ta9_in1 <= a108;\n\t\tend\n\t\t\n\t\tCALC_A_I_10:\n\t\tbegin\n\t\t\ta1_in2 <= m1_out;\n\t\t\ta2_in2 <= m2_out;\n\t\t\ta3_in2 <= m3_out;\n\t\t\ta4_in2 <= m4_out;\n\t\t\ta5_in2 <= m5_out;\n\t\t\ta6_in2 <= m6_out;\n\t\t\ta7_in2 <= m7_out;\n\t\t\ta8_in2 <= m8_out;\n\t\t\ta9_in2 <= m9_out;\n\t\t\t\n\t\tend\n\t\t\n\t\tFINAL_CALC_A_I_10:\n\t\tbegin\n\t\t\ta111 <= a1_out;\n\t\t\ta112 <= a2_out;\n\t\t\ta113 <= a3_out;\n\t\t\ta114 <= a4_out;\n\t\t\ta115 <= a5_out;\n\t\t\ta116 <= a6_out;\n\t\t\ta117 <= a7_out;\n\t\t\ta118 <= a8_out;\n\t\t\ta119 <= a9_out;\n\t\tend\n\t\t\n\t\t\n\t\tPRE_CALC_E:\n\t\tbegin\n\t\t\tm1_in1 <= k;\n\t\t\tm1_in2 <= k;\n\t\t\n\t\tend\n\n\t\tCALC1_E:\n\t\tbegin\n\t\t\ta1_in1 <= NUMBER_ONE;\n\t\t\ta1_in2 <= {(m1_out[N-1] == 0)?1'b1:1'b0,m1_out[N-2:0]};\n\t\t\t\n\t\t\t\t\t\t\n\t\tend\n\n\t\tCALC2_E:\n\t\tbegin\n\t\t\tm1_in1 <= e;\n\t\t\tm1_in2 <= a1_out;\n\t\tend\n\n\t\tSET_E:\n\t\tbegin\n\t\t\te <= m1_out;\n\t\tend\n\n\t\tINCR_I:\n\t\tbegin\n\t\t\ti <= i + 7'd1;\n\t\tend\n\t\t\n\t\tINIT_FOR_LPC:\n\t\tbegin\n\t\t\tj <= 4'd0;\n\t\tend\n\t\t\n\t\tCHECK_J:\n\t\tbegin\n\t\t\t\n\t\tend\n\t\t\n\t\tSET_ADDR_LPC:\n\t\tbegin\n\t\t\taddr_ld <= j;\n\t\tend\n\t\t\n\t\tSET_DELAY1:\n\t\tbegin\n\t\t\n\t\tend\n\t\t\n\t\tSET_DELAY2:\n\t\tbegin\n\t\t\n\t\tend\n\t\t\n\t\tSET_LPC:\n\t\tbegin\n\t\t\tcase (j)\n\t\t\t\t4'd0 : in_lpc <= NUMBER_ONE;\n\t\t\t\t4'd1 : in_lpc <= a111;\n\t\t\t\t4'd2 : in_lpc <= a112;\n\t\t\t\t4'd3 : in_lpc <= a113;\n\t\t\t\t4'd4 : in_lpc <= a114;\n\t\t\t\t4'd5 : in_lpc <= a115;\n\t\t\t\t4'd6 : in_lpc <= a116;\n\t\t\t\t4'd7 : in_lpc <= a117;\n\t\t\t\t4'd8 : in_lpc <= a118;\n\t\t\t\t4'd9 : in_lpc <= a119;\n\t\t\t\t4'd10: in_lpc <= a120;\n\t\t\tendcase\n\t\t\n\t\tend\n\t\t\n\t\tINCR_J:\n\t\tbegin\n\t\t\tj <= j + 4'd1;\n\t\tend\n\t\t\t\t\n\t\t\n\t\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\t\n\t\t\n\n\t\tDONE:\n\t\tbegin\n\t\t\tdoneld <= 1'd1;\n\t\tend\n\n\t\tendcase\n\tend\n\nend\n\n\n\n\nendmodule```"
        },
        {
            "role": "user",
            "content": "Based on the provided original Verilog code, its comments and above answers, generate a detailed specification for the module. Include the following information in a single, concise paragraph:\n1. The name of the module.\n2. A simple explanation of the module's functionality.\n3. The input and output ports, along with a brief explanation of each.\n4. The internal signals used within the module, with a brief explanation of their purpose.\n5. An overview of the different blocks or sections in the code and their functions.\nEnsure that the specification is clear and accurately reflects the details from the code and comments.\nYour answer should be structured and well-organized, providing a comprehensive and detailed overview of the module's design and operation.\nPlease provide your answer in the following format:\nModule name: [module name]. Module specification: [module specification]."
        },
        {
            "role": "assistant",
            "content": "Module name: levinson_durbin_modified. Module specification: The levinson_durbin_modified module implements the Levinson-Durbin algorithm for linear predictive coding (LPC) analysis, calculating LPC coefficients from autocorrelation values. It uses input ports startld (initiates algorithm), clk (clock), and rst (reset), and output ports check_k and check_e (verification outputs) and doneld (completion indicator). The module employs a state machine to control the algorithm's execution, utilizing internal signals such as STATE, NEXT_STATE, R0-R10 (autocorrelation values), a0-a120 (LPC coefficients), i, j1, k (reflection coefficient), e (prediction error), and various multiplication and addition inputs (m1_in1 to m9_in2, a1_in1 to a9_in2). The module is"
        }
    ],
    "claude-message": [
        {
            "role": "user",
            "content": [
                {
                    "type": "text",
                    "text": "You are an expert in hardware design with a deep understanding of Verilog RTL codes. Now I want to train a large language model for code comment generation tasks specifically focused on Verilog RTL codes. And I want you to help me process the raw data, transforming it into suitable formats that can serve as inputs and outputs for the model."
                },
                {
                    "type": "text",
                    "text": "Name of the module and its functionality is as follows: \nModule name: levinson_durbin_modified\n\nExplanation: This module implements the Levinson-Durbin algorithm, which is used for linear predictive coding (LPC) analysis. It calculates LPC coefficients from autocorrelation values. The module uses a state machine to control the algorithm's steps, including initialization, coefficient calculation, error estimation, and final LPC coefficient computation. It processes input autocorrelation values (R0-R10) and outputs the resulting LPC coefficients. The module also includes logic for fixed-point arithmetic operations and uses multiple multiplication and addition units to perform the necessary calculations efficiently."
                },
                {
                    "type": "text",
                    "text": "Input and output ports and their explanation is as follows: \nBased on the given Verilog code, here are the input and output ports of the levinson_durbin_modified module:\n\nInput ports: startld, clk, rst. \nExplanation: \n- startld: Initiates the Levinson-Durbin algorithm\n- clk: Clock input for synchronous operations\n- rst: Reset signal to initialize the module\n\nOutput ports: check_k, check_e, doneld. \nExplanation:\n- check_k: Outputs the calculated reflection coefficient for verification\n- check_e: Outputs the calculated prediction error for verification\n- doneld: Indicates completion of the Levinson-Durbin algorithm\n\nThe module uses these ports to control the algorithm's execution, provide timing and reset functionality, and output key results for verification purposes."
                },
                {
                    "type": "text",
                    "text": "Internal signals and their explanation is as follows: \nInternal signals:\nSTATE, NEXT_STATE, R0-R10, a0-a120, i, j1, k, e, sum, m1_in1, m1_in2, m2_in1, m2_in2, m3_in1, m3_in2, m4_in1, m4_in2, m5_in1, m5_in2, m6_in1, m6_in2, m7_in1, m7_in2, m8_in1, m8_in2, m9_in1, m9_in2, a1_in1, a1_in2, a2_in1, a2_in2, a3_in1, a3_in2, a4_in1, a4_in2, a5_in1, a5_in2, a6_in1, a6_in2, a7_in1, a7_in2, a8_in1, a8_in2, a9_in1, a9_in2, gt1_in1, gt1_in2, j, startdiv, div_in, addr_ld, in_lpc, re_ld, we_ld.\n\nExplanation:\n- STATE, NEXT_STATE: Control the state machine for algorithm execution\n- R0-R10: Store input autocorrelation values\n- a0-a120: Store intermediate and final LPC coefficients\n- i, j1, j: Loop counters for various algorithm stages\n- k: Reflection coefficient\n- e: Prediction error\n- sum: Accumulator for intermediate calculations\n- m1_in1 to m9_in2: Inputs for multiple multiplication units\n- a1_in1 to a9_in2: Inputs for multiple addition units\n- gt1_in1, gt1_in2: Inputs for comparison operations\n- startdiv, div_in: Control signals for division operations\n- addr_ld, in_lpc, re_ld, we_ld: Signals for LPC coefficient memory operations\n\nThese internal signals are used for storing intermediate results, controlling algorithm flow, performing arithmetic operations, and managing memory accesses throughout the Levinson-Durbin algorithm implementation."
                },
                {
                    "type": "text",
                    "text": "Original Verilog code is as follows: \n<code>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmodule levinson_durbin_modified (startld,clk,rst,\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tcheck_k,check_e,\n\t\t\t\t\t\t\t\tdoneld);\n\n\n\n\n\n\n\tparameter N = 32;\n\tparameter Q = 16;\n\t\n\tparameter N1 = 80;\n    parameter Q1 = 16;\n\t\n\tparameter N2 = 48;\n    parameter Q2 = 16;\n\n\tinput clk,rst,startld;\n\treg [N-1:0] R0,R1,R2,R3,R4,R5,\n\t\t\t\t\t\t\t\tR6,R7,R8,R9,R10;\n\toutput reg [N-1:0]  check_k,check_e;\n\toutput reg doneld;\n\t\n\t\n\t\n\t\n\n\t\n\n\n\n\n\nparameter START \t\t\t\t\t\t\t= 8'd0,\n          INIT \t\t\t\t\t\t\t= 8'd1,\n          INIT_LOOP \t\t\t\t\t\t= 8'd2,\n          CHECK_I \t\t\t\t\t\t= 8'd3,\n          START_J1 \t\t\t\t\t\t= 8'd4,\n          CHECK_J1 \t\t\t\t\t\t= 8'd5,\n          SET_A_R \t\t\t\t\t\t= 8'd6,\n          CALC_SUM \t\t\t\t\t\t= 8'd8,\n          INCR_J1 \t\t\t\t\t\t= 8'd9,\n          PRE_CALC_K \t\t\t\t\t= 8'd10,\n          CALC_K \t\t\t\t\t\t\t= 8'd11,\n          SET_K \t\t\t\t\t\t\t= 8'd12,\n          PRE_CALC_E \t\t\t\t\t= 8'd13,\n          CALC1_E \t\t\t\t\t\t= 8'd14,\n          CALC2_E \t\t\t\t\t\t= 8'd15,\n          SET_E \t\t\t\t\t\t\t= 8'd16,\n          INCR_I \t\t\t\t\t\t\t= 8'd17,\n\t\t\t CHECK_GT \t\t\t\t\t\t= 8'd18,\n\t\t\t CHECK_K \t\t\t\t\t\t= 8'd19,\n\t\t\t SET_A \t\t\t\t\t\t\t= 8'd20,\n\t\t\t\n\t\t\t CALC1_A \t\t\t\t\t\t= 8'd22,\n\t\t\t CALC2_A \t\t\t\t\t\t= 8'd23,\n\t\t\t FINAL_CALC_A \t\t\t\t\t= 8'd24,\n\t\t\t INCR_J2 \t\t\t\t\t\t= 8'd25,\n\t\t\t SET_SUM \t\t\t\t\t\t= 8'd26,\n          DONE \t\t\t\t\t\t\t= 8'd27,\n\t\t\t START_DIV \t\t\t\t\t\t= 8'd28,\n\t\t\t CALC_LPC \t\t\t\t\t\t= 8'd29,\n\t\t\t PRE_CALC_A_I_2 \t\t\t\t= 8'd30,\n\t\t\t CALC_A_I_2 \t\t\t\t\t= 8'd31,\n\t\t\t FINAL_CALC_A_I_2 \t\t\t= 8'd32,\n\t\t\t PRE_CALC_A_I_3 \t\t\t\t= 8'd33,\n\t\t\t CALC_A_I_3 \t\t\t\t\t= 8'd34,\n\t\t\t FINAL_CALC_A_I_3 \t\t\t= 8'd35,\n\t\t\t PRE_CALC_A_I_4 \t\t\t\t= 8'd36,\n\t\t\t CALC_A_I_4 \t\t\t\t\t= 8'd37,\n\t\t\t FINAL_CALC_A_I_4 \t\t\t= 8'd38,\n\t\t\t PRE_CALC_A_I_5 \t\t\t\t= 8'd39,\n\t\t\t CALC_A_I_5 \t\t\t\t\t= 8'd40,\n\t\t\t FINAL_CALC_A_I_5 \t\t\t= 8'd41,\n\t\t\t PRE_CALC_A_I_6 \t\t\t\t= 8'd42,\n\t\t\t CALC_A_I_6 \t\t\t\t\t= 8'd43,\n\t\t\t FINAL_CALC_A_I_6 \t\t\t= 8'd44,\n\t\t\t PRE_CALC_A_I_7 \t\t\t\t= 8'd45,\n\t\t\t CALC_A_I_7\t\t\t\t\t\t= 8'd46,\n\t\t\t FINAL_CALC_A_I_7 \t\t\t= 8'd47,\n\t\t\t PRE_CALC_A_I_8 \t\t\t\t= 8'd48,\n\t\t\t CALC_A_I_8 \t\t\t\t\t= 8'd49,\n\t\t\t FINAL_CALC_A_I_8 \t\t\t= 8'd50,\n\t\t\t PRE_CALC_A_I_9 \t\t\t\t= 8'd51,\n\t\t\t CALC_A_I_9 \t\t\t\t\t= 8'd52,\n\t\t\t FINAL_CALC_A_I_9 \t\t\t= 8'd53,\n\t\t\t PRE_CALC_A_I_10 \t\t\t\t= 8'd54,\n\t\t\t CALC_A_I_10 \t\t\t\t\t= 8'd55,\n\t\t\t FINAL_CALC_A_I_10 \t\t\t= 8'd7,\n\t\t\t CHECK_WHICH_I_FOR_A\t\t\t= 8'd56,\n\t\t\t INIT_FOR_LPC \t\t\t\t\t= 8'd57,\n\t\t\t CHECK_J \t\t\t\t\t\t= 8'd58,\n\t\t\t SET_ADDR_LPC \t\t\t\t\t= 8'd59,\n\t\t\t SET_LPC \t\t\t\t\t\t= 8'd60,\n\t\t\t INCR_J\t\t\t\t\t\t\t= 8'd61,\n\t\t\t SET_DELAY1 = 8'd62,\n\t\t\t SET_DELAY2 = 8'd63;\n\t\t\t \n\t\t\t \n\t\t\t \n\nreg [7:0] STATE, NEXT_STATE;\n\n\n\n\n\n\nparameter [N-1:0] NUMBER_ONE = 32'b0_000000000000001_0000000000000000;\n\nparameter [6:0]\tORDER = 7'd10;\n\nreg [N-1:0] \ta0 = 32'b0,\n\t\t\t\t\ta1 = 32'b0,\n\t\t\t\t\ta2 = 32'b0,\n\t\t\t\t\ta3 = 32'b0,\n\t\t\t\t\ta4 = 32'b0,\n\t\t\t\t\ta5 = 32'b0,\n\t\t\t\t\ta6 = 32'b0,\n\t\t\t\t\ta7 = 32'b0,\n\t\t\t\t\ta8 = 32'b0,\n\t\t\t\t\ta9 = 32'b0,\n\t\t\t\t\ta10 = 32'b0,\n\t\t\t\t\ta11 = 32'b0,\n\t\t\t\t\ta12 = 32'b0,\n\t\t\t\t\ta13 = 32'b0,\n\t\t\t\t\ta14 = 32'b0,\n\t\t\t\t\ta15 = 32'b0,\n\t\t\t\t\ta16 = 32'b0,\n\t\t\t\t\ta17 = 32'b0,\n\t\t\t\t\ta18 = 32'b0,\n\t\t\t\t\ta19 = 32'b0,\n\t\t\t\t\ta20 = 32'b0,\n\t\t\t\t\ta21 = 32'b0,\n\t\t\t\t\ta22 = 32'b0,\n\t\t\t\t\ta23 = 32'b0,\n\t\t\t\t\ta24 = 32'b0,\n\t\t\t\t\ta25 = 32'b0,\n\t\t\t\t\ta26 = 32'b0,\n\t\t\t\t\ta27 = 32'b0,\n\t\t\t\t\ta28 = 32'b0,\n\t\t\t\t\ta29 = 32'b0,\n\t\t\t\t\ta30 = 32'b0,\n\t\t\t\t\ta31 = 32'b0,\n\t\t\t\t\ta32 = 32'b0,\n\t\t\t\t\ta33 = 32'b0,\n\t\t\t\t\ta34 = 32'b0,\n\t\t\t\t\ta35 = 32'b0,\n\t\t\t\t\ta36 = 32'b0,\n\t\t\t\t\ta37 = 32'b0,\n\t\t\t\t\ta38 = 32'b0,\n\t\t\t\t\ta39 = 32'b0,\n\t\t\t\t\ta40 = 32'b0,\n\t\t\t\t\ta41 = 32'b0,\n\t\t\t\t\ta42 = 32'b0,\n\t\t\t\t\ta43 = 32'b0,\n\t\t\t\t\ta44 = 32'b0,\n\t\t\t\t\ta45 = 32'b0,\n\t\t\t\t\ta46 = 32'b0,\n\t\t\t\t\ta47 = 32'b0,\n\t\t\t\t\ta48 = 32'b0,\n\t\t\t\t\ta49 = 32'b0,\n\t\t\t\t\ta50 = 32'b0,\n\t\t\t\t\ta51 = 32'b0,\n\t\t\t\t\ta52 = 32'b0,\n\t\t\t\t\ta53 = 32'b0,\n\t\t\t\t\ta54 = 32'b0,\n\t\t\t\t\ta55 = 32'b0,\n\t\t\t\t\ta56 = 32'b0,\n\t\t\t\t\ta57 = 32'b0,\n\t\t\t\t\ta58 = 32'b0,\n\t\t\t\t\ta59 = 32'b0,\n\t\t\t\t\ta60 = 32'b0,\n\t\t\t\t\ta61 = 32'b0,\n\t\t\t\t\ta62 = 32'b0,\n\t\t\t\t\ta63 = 32'b0,\n\t\t\t\t\ta64 = 32'b0,\n\t\t\t\t\ta65 = 32'b0,\n\t\t\t\t\ta66 = 32'b0,\n\t\t\t\t\ta67 = 32'b0,\n\t\t\t\t\ta68 = 32'b0,\n\t\t\t\t\ta69 = 32'b0,\n\t\t\t\t\ta70 = 32'b0,\n\t\t\t\t\ta71 = 32'b0,\n\t\t\t\t\ta72 = 32'b0,\n\t\t\t\t\ta73 = 32'b0,\n\t\t\t\t\ta74 = 32'b0,\n\t\t\t\t\ta75 = 32'b0,\n\t\t\t\t\ta76 = 32'b0,\n\t\t\t\t\ta77 = 32'b0,\n\t\t\t\t\ta78 = 32'b0,\n\t\t\t\t\ta79 = 32'b0,\n\t\t\t\t\ta80 = 32'b0,\n\t\t\t\t\ta81 = 32'b0,\n\t\t\t\t\ta82 = 32'b0,\n\t\t\t\t\ta83 = 32'b0,\n\t\t\t\t\ta84 = 32'b0,\n\t\t\t\t\ta85 = 32'b0,\n\t\t\t\t\ta86 = 32'b0,\n\t\t\t\t\ta87 = 32'b0,\n\t\t\t\t\ta88 = 32'b0,\n\t\t\t\t\ta89 = 32'b0,\n\t\t\t\t\ta90 = 32'b0,\n\t\t\t\t\ta91 = 32'b0,\n\t\t\t\t\ta92 = 32'b0,\n\t\t\t\t\ta93 = 32'b0,\n\t\t\t\t\ta94 = 32'b0,\n\t\t\t\t\ta95 = 32'b0,\n\t\t\t\t\ta96 = 32'b0,\n\t\t\t\t\ta97 = 32'b0,\n\t\t\t\t\ta98 = 32'b0,\n\t\t\t\t\ta99 = 32'b0,\n\t\t\t\t\ta100 = 32'b0,\n\t\t\t\t\ta101 = 32'b0,\n\t\t\t\t\ta102 = 32'b0,\n\t\t\t\t\ta103 = 32'b0,\n\t\t\t\t\ta104 = 32'b0,\n\t\t\t\t\ta105 = 32'b0,\n\t\t\t\t\ta106 = 32'b0,\n\t\t\t\t\ta107 = 32'b0,\n\t\t\t\t\ta108 = 32'b0,\n\t\t\t\t\ta109 = 32'b0,\n\t\t\t\t\ta110 = 32'b0,\n\t\t\t\t\ta111 = 32'b0,\n\t\t\t\t\ta112 = 32'b0,\n\t\t\t\t\ta113 = 32'b0,\n\t\t\t\t\ta114 = 32'b0,\n\t\t\t\t\ta115 = 32'b0,\n\t\t\t\t\ta116 = 32'b0,\n\t\t\t\t\ta117 = 32'b0,\n\t\t\t\t\ta118 = 32'b0,\n\t\t\t\t\ta119 = 32'b0,\n\t\t\t\t\ta120 = 32'b0;\n\t\t\t\t\t\t\t\t\t\n\nreg [6:0] \t\t\ti;\nreg [6:0]   \t\tj1;\nreg [N-1:0] \t\tk,e;\nreg [N-1:0]\t\t\tsum;\nreg [N-1:0] \t\tm1_in1, m1_in2,\n\t\t\t\t\t\tm2_in1, m2_in2,\n\t\t\t\t\t\tm3_in1, m3_in2,\n\t\t\t\t\t\tm4_in1, m4_in2,\n\t\t\t\t\t\tm5_in1, m5_in2,\n\t\t\t\t\t\tm6_in1, m6_in2,\n\t\t\t\t\t\tm7_in1, m7_in2,\n\t\t\t\t\t\tm8_in1, m8_in2,\n\t\t\t\t\t\tm9_in1, m9_in2,\n\t\t\t\t\t\t\n\t\t\t\t\t\ta1_in1, a1_in2,\n\t\t\t\t\t\ta2_in1, a2_in2,\n\t\t\t\t\t\ta3_in1, a3_in2,\n\t\t\t\t\t\ta4_in1, a4_in2,\n\t\t\t\t\t\ta5_in1, a5_in2,\n\t\t\t\t\t\ta6_in1, a6_in2,\n\t\t\t\t\t\ta7_in1, a7_in2,\n\t\t\t\t\t\ta8_in1, a8_in2,\n\t\t\t\t\t\ta9_in1, a9_in2,\n\t\t\t\t\t\t\n\t\t\t\t\t\tgt1_in1, gt1_in2;\n\t\t\t\t\t\t\nwire [N-1:0]\t\tm1_out, a1_out, \n\t\t\t\t\t\tm2_out, a2_out, \n\t\t\t\t\t\tm3_out, a3_out, \n\t\t\t\t\t\tm4_out, a4_out, \n\t\t\t\t\t\tm5_out, a5_out, \n\t\t\t\t\t\tm6_out, a6_out, \n\t\t\t\t\t\tm7_out, a7_out, \n\t\t\t\t\t\tm8_out, a8_out, \n\t\t\t\t\t\tm9_out, a9_out, \n\t\t\t\t\t\tdiv_ans;\n\t\t\t\t\t\t\nwire \t\t\t\t\tgt1;\n\nwire donediv;\nreg [3:0] j;\nreg startdiv;\nreg [N-1:0] div_in;\n\n\n\n\n\nqmult\t\t\t \t #(Q,N) \t\t\t    qmult1\t   (m1_in1,m1_in2,m1_out);\nqmult\t\t\t \t #(Q,N) \t\t\t    qmult2\t   (m2_in1,m2_in2,m2_out);\nqmult\t\t\t \t #(Q,N) \t\t\t    qmult3\t   (m3_in1,m3_in2,m3_out);\nqmult\t\t\t \t #(Q,N) \t\t\t    qmult4\t   (m4_in1,m4_in2,m4_out);\nqmult\t\t\t \t #(Q,N) \t\t\t    qmult5\t   (m5_in1,m5_in2,m5_out);\nqmult\t\t\t \t #(Q,N) \t\t\t    qmult6\t   (m6_in1,m6_in2,m6_out);\nqmult\t\t\t \t #(Q,N) \t\t\t    qmult7\t   (m7_in1,m7_in2,m7_out);\nqmult\t\t\t \t #(Q,N) \t\t\t    qmult8\t   (m8_in1,m8_in2,m8_out);\nqmult\t\t\t \t #(Q,N) \t\t\t    qmult9\t   (m9_in1,m9_in2,m9_out);\n\nqadd  \t\t\t #(Q,N)\t\t\t\t adder1    \t(a1_in1,a1_in2,a1_out);\nqadd  \t\t\t #(Q,N)\t\t\t\t adder2    \t(a2_in1,a2_in2,a2_out);\nqadd  \t\t\t #(Q,N)\t\t\t\t adder3    \t(a3_in1,a3_in2,a3_out);\nqadd  \t\t\t #(Q,N)\t\t\t\t adder4    \t(a4_in1,a4_in2,a4_out);\nqadd  \t\t\t #(Q,N)\t\t\t\t adder5    \t(a5_in1,a5_in2,a5_out);\nqadd  \t\t\t #(Q,N)\t\t\t\t adder6    \t(a6_in1,a6_in2,a6_out);\nqadd  \t\t\t #(Q,N)\t\t\t\t adder7    \t(a7_in1,a7_in2,a7_out);\nqadd  \t\t\t #(Q,N)\t\t\t\t adder8    \t(a8_in1,a8_in2,a8_out);\nqadd  \t\t\t #(Q,N)\t\t\t\t adder9    \t(a9_in1,a9_in2,a9_out);\n\nfpgreaterthan\t #(Q,N)    \t\t\t fpgt1      (gt1_in1,gt1_in2,gt1);\nfpdiv_clk  divider1   (startdiv,clk,rst,div_in,div_ans,donediv);\n\nreg [3:0] addr_ld;\nreg [N-1:0] in_lpc;\nreg re_ld,we_ld;\nwire [N-1:0] out_lpc;\n\nRAM_ld_lpcs RAM_ld (addr_ld,clk,in_lpc,re_ld,we_ld,out_lpc);\n \n\n\n\n\nalways@(posedge clk or negedge rst)     \nbegin\n\n\tif (rst == 1'b0)\n\t\tSTATE <= START;\n\telse\n\t\tSTATE <= NEXT_STATE;\n\nend\n\n\nalways@(*)                              \nbegin\n\tcase(STATE)\n\n\tSTART:\n\tbegin\n\t\tif(startld == 1'b1)\n\t\tbegin\n\t\t\tNEXT_STATE = INIT;\n\t\tend\n\t\telse\n\t\tbegin\n\t\t\tNEXT_STATE = START;\n\t\tend\n\tend\n\n\tINIT:\n\tbegin\n\t\tNEXT_STATE = INIT_LOOP;\n\tend\n\n\tINIT_LOOP:\n\tbegin\n\t\tNEXT_STATE = CHECK_I;\n\tend\n\n\tCHECK_I:\n\tbegin\n\t\tif(i <= ORDER)\n\t\tbegin\n\t\t\tNEXT_STATE = START_J1;\n\t\tend\n\t\telse\n\t\tbegin\n\t\t\tNEXT_STATE = INIT_FOR_LPC;\n\t\tend\n\tend\n\n\tSTART_J1:\n\tbegin\n\t\tNEXT_STATE = CHECK_J1;\n\tend\n\n\tCHECK_J1:\n\tbegin\n\t\tif(j1 <= (i-1))\n\t\tbegin\n\t\t\tNEXT_STATE = SET_A_R;\n\t\tend\n\t\telse\n\t\tbegin\n\t\t\tNEXT_STATE = START_DIV;\n\t\tend\n\tend\n\n\tSET_A_R:\n\tbegin\n\t\tNEXT_STATE = CALC_SUM;\n\tend\n\n\n\n\n\n\n\tCALC_SUM:\n\tbegin\n\t\tNEXT_STATE = SET_SUM;\n\tend\n\t\n\tSET_SUM:\n\tbegin\n\t\tNEXT_STATE = INCR_J1;\n\tend\n\n\tINCR_J1:\n\tbegin\n\t\tNEXT_STATE = CHECK_J1;\n\tend\n\t\n\n\n\n\n\n\tSTART_DIV:\n\tbegin\n\t\tNEXT_STATE = PRE_CALC_K;\n\tend\n\t\n\tPRE_CALC_K:\n\tbegin\n\t\tif(donediv)\n\t\tbegin\n\t\t\tNEXT_STATE = CALC_K;\n\t\tend\n\t\telse\n\t\tbegin\n\t\t\tNEXT_STATE = PRE_CALC_K;\n\t\tend\n\t\t\n\tend\n\n\tCALC_K:\n\tbegin\n\t\tNEXT_STATE = SET_K;\n\tend\n\n\tSET_K:\n\tbegin\n\t\tNEXT_STATE = CHECK_GT;\n\tend\n\t\n\tCHECK_GT:\n\tbegin\n\t\tNEXT_STATE = CHECK_K;\n\tend\n\t\n\tCHECK_K:\n\tbegin\n\t\tNEXT_STATE = SET_A;\n\tend\n\t\n\tSET_A:\n\tbegin\n\t\tNEXT_STATE = CHECK_WHICH_I_FOR_A;\n\tend\n\t\n\t\n\n\n\n\n\n\n\n\n\n\n\t\n\tCHECK_WHICH_I_FOR_A:\n\tbegin\n\t\tif(i == 7'd1)\n\t\tbegin\n\t\t\tNEXT_STATE = PRE_CALC_E;\n\t\tend\n\t\telse if (i == 7'd2)\n\t\tbegin\n\t\t\tNEXT_STATE = PRE_CALC_A_I_2;\n\t\tend\n\t\telse if (i == 7'd3)\n\t\tbegin\n\t\t\tNEXT_STATE = PRE_CALC_A_I_3;\n\t\tend\n\t\telse if (i == 7'd4)\n\t\tbegin\n\t\t\tNEXT_STATE = PRE_CALC_A_I_4;\n\t\tend\n\t\telse if (i == 7'd5)\n\t\tbegin\n\t\t\tNEXT_STATE = PRE_CALC_A_I_5;\n\t\tend\n\t\telse if (i == 7'd6)\n\t\tbegin\n\t\t\tNEXT_STATE = PRE_CALC_A_I_6;\n\t\tend\n\t\telse if (i == 7'd7)\n\t\tbegin\n\t\t\tNEXT_STATE = PRE_CALC_A_I_7;\n\t\tend\n\t\telse if (i == 7'd8)\n\t\tbegin\n\t\t\tNEXT_STATE = PRE_CALC_A_I_8;\n\t\tend\n\t\telse if (i == 7'd9)\n\t\tbegin\n\t\t\tNEXT_STATE = PRE_CALC_A_I_9;\n\t\tend\n\t\telse if (i == 7'd10)\n\t\tbegin\n\t\t\tNEXT_STATE = PRE_CALC_A_I_10;\n\t\tend\n\t\t\n\tend\n\t\n\tPRE_CALC_A_I_2:\n\tbegin\n\t\tNEXT_STATE = CALC_A_I_2;\n\tend\n\t\n\tCALC_A_I_2:\n\tbegin\n\t\tNEXT_STATE = FINAL_CALC_A_I_2;\n\tend\n\t\n\tFINAL_CALC_A_I_2:\n\tbegin\n\t\tNEXT_STATE = PRE_CALC_E;\n\tend\n\t\n\tPRE_CALC_A_I_3:\n\tbegin\n\t\tNEXT_STATE = CALC_A_I_3;\n\tend\n\t\n\tCALC_A_I_3:\n\tbegin\n\t\tNEXT_STATE = FINAL_CALC_A_I_3;\n\tend\n\t\n\tFINAL_CALC_A_I_3:\n\tbegin\n\t\tNEXT_STATE = PRE_CALC_E;\n\tend\n\n\tPRE_CALC_A_I_4:\n\tbegin\n\t\tNEXT_STATE = CALC_A_I_4;\n\tend\n\t\n\tCALC_A_I_4:\n\tbegin\n\t\tNEXT_STATE = FINAL_CALC_A_I_4;\n\tend\n\t\n\tFINAL_CALC_A_I_4:\n\tbegin\n\t\tNEXT_STATE = PRE_CALC_E;\n\tend\n\t\n\tPRE_CALC_A_I_5:\n\tbegin\n\t\tNEXT_STATE = CALC_A_I_5;\n\tend\n\t\n\tCALC_A_I_5:\n\tbegin\n\t\tNEXT_STATE = FINAL_CALC_A_I_5;\n\tend\n\t\n\tFINAL_CALC_A_I_5:\n\tbegin\n\t\tNEXT_STATE = PRE_CALC_E;\n\tend\n\t\n\tPRE_CALC_A_I_6:\n\tbegin\n\t\tNEXT_STATE = CALC_A_I_6;\n\tend\n\t\n\tCALC_A_I_6:\n\tbegin\n\t\tNEXT_STATE = FINAL_CALC_A_I_6;\n\tend\n\t\n\tFINAL_CALC_A_I_6:\n\tbegin\n\t\tNEXT_STATE = PRE_CALC_E;\n\tend\n\t\n\tPRE_CALC_A_I_7:\n\tbegin\n\t\tNEXT_STATE = CALC_A_I_7;\n\tend\n\t\n\tCALC_A_I_7:\n\tbegin\n\t\tNEXT_STATE = FINAL_CALC_A_I_7;\n\tend\n\t\n\tFINAL_CALC_A_I_7:\n\tbegin\n\t\tNEXT_STATE = PRE_CALC_E;\n\tend\n\t\n\tPRE_CALC_A_I_8:\n\tbegin\n\t\tNEXT_STATE = CALC_A_I_8;\n\tend\n\t\n\tCALC_A_I_8:\n\tbegin\n\t\tNEXT_STATE = FINAL_CALC_A_I_8;\n\tend\n\t\n\tFINAL_CALC_A_I_8:\n\tbegin\n\t\tNEXT_STATE = PRE_CALC_E;\n\tend\n\t\n\tPRE_CALC_A_I_9:\n\tbegin\n\t\tNEXT_STATE = CALC_A_I_9;\n\tend\n\t\n\tCALC_A_I_9:\n\tbegin\n\t\tNEXT_STATE = FINAL_CALC_A_I_9;\n\tend\n\t\n\tFINAL_CALC_A_I_9:\n\tbegin\n\t\tNEXT_STATE = PRE_CALC_E;\n\tend\n\t\n\tPRE_CALC_A_I_10:\n\tbegin\n\t\tNEXT_STATE = CALC_A_I_10;\n\tend\n\t\n\tCALC_A_I_10:\n\tbegin\n\t\tNEXT_STATE = FINAL_CALC_A_I_10;\n\tend\n\t\n\tFINAL_CALC_A_I_10:\n\tbegin\n\t\tNEXT_STATE = PRE_CALC_E;\n\tend\n\t\n\tPRE_CALC_E:\n\tbegin\n\t\tNEXT_STATE = CALC1_E;\n\tend\n\n\tCALC1_E:\n\tbegin\n\t\tNEXT_STATE = CALC2_E;\n\tend\n\n\tCALC2_E:\n\tbegin\n\t\tNEXT_STATE = SET_E;\n\tend\n\n\tSET_E:\n\tbegin\n\t\tNEXT_STATE = INCR_I;\n\tend\n\n\tINCR_I:\n\tbegin\n\t\tNEXT_STATE = CHECK_I;\n\tend\n\t\n\tINIT_FOR_LPC:\n\tbegin\n\t\tNEXT_STATE = CHECK_J;\n\tend\n\t\n\tCHECK_J:\n\tbegin\n\t\tif(j <= 10'd10)\n\t\tbegin\n\t\t\tNEXT_STATE = SET_ADDR_LPC;\n\t\tend\n\t\telse\n\t\tbegin\n\t\t\tNEXT_STATE = DONE;\n\t\tend\n\tend\n\t\n\tSET_ADDR_LPC:\n\tbegin\n\t\tNEXT_STATE = SET_DELAY1;\n\tend\n\t\n\tSET_DELAY1:\n\tbegin\n\t\tNEXT_STATE = SET_DELAY2;\n\tend\n\t\n\tSET_DELAY2:\n\tbegin\n\t\tNEXT_STATE = SET_LPC;\n\tend\n\t\n\tSET_LPC:\n\tbegin\n\t\tNEXT_STATE = INCR_J;\n\tend\n\t\t\t\t\n\tINCR_J:\n\tbegin\n\t\tNEXT_STATE = CHECK_J;\n\tend \n\t\n\t\n\n\n\n\n\tDONE:\n\tbegin\n\t\tNEXT_STATE = DONE;\n\tend\n\n\tdefault:\n\tbegin\n\t\tNEXT_STATE = DONE;\n\tend\n\n\tendcase\nend\n\n\nalways@(posedge clk or negedge rst)     \nbegin\n\n\tif (rst == 1'b0)\n\tbegin\n\n\t\tdoneld <= 1'b0;\n\n\tend\n\n\telse\n\tbegin\n\t\tcase(STATE)\n\n\t\tSTART:\n\t\tbegin\n\t\t\tdoneld <= 1'b0;\n\t\t\tstartdiv <= 1'b0;\n\t\t\tsum <= 32'b0;\n\t\t\t\n\t\t\t R0  <= {16'h5666,16'hE9FF};\n\t\t\t\tR1  <= {16'h3DE8,16'h8F00};\n\t\t\t\tR2  <= {16'h1706,16'h20C0};\n\t\t\t\tR3  <= {1'b1,15'h11BC,16'h8E5F};\n\t\t\t\tR4  <= {1'b1,15'h2A1C,16'hDB80};\n\t\t\t\tR5  <= {1'b1,15'h2317,16'hE6BF};\n\t\t\t\tR6  <= {1'b1,15'h1A93,16'h24};\n\t\t\t\tR7  <= {1'b1,15'hC4F,16'h138F};\n\t\t\t\tR8  <= {1'b1,15'hC0C,16'hEFAF};\n\t\t\t\tR9  <= {1'b1,15'h141B,16'hADDF};\n\t\t\t\tR10 <= {1'b1,15'h11F4,16'h6D5F};   \n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\n\n\n\n\n\n\n\n\n\n\t\tend\n\n\t\tINIT:\n\t\tbegin\n\t\t\t\n\t\tend\n\n\t\tINIT_LOOP:\n\t\tbegin\n\t\t\te <= R0;\n\t\t\ti <= 7'b1;\n\t\t\t\n\t\tend\n\n\t\tCHECK_I:\n\t\tbegin\n\t\t\t\n\t\tend\n\n\t\tSTART_J1:\n\t\tbegin\n\t\t\tsum <= 32'b0;\n\t\t\tj1 <= 7'b1;\n\t\tend\n\n\t\tCHECK_J1:\n\t\tbegin\n\t\t\n\t\tend\n\n\t\tSET_A_R:\n\t\tbegin\n\t\t\tcase ((7'd11*(i-7'd1)) + j1)\n\t\t\t\t7'd0 : m1_in1 <= a0;\n\t\t\t\t7'd1 : m1_in1 <= a1;\n\t\t\t\t7'd2 : m1_in1 <= a2;\n\t\t\t\t7'd3 : m1_in1 <= a3;\n\t\t\t\t7'd4 : m1_in1 <= a4;\n\t\t\t\t7'd5 : m1_in1 <= a5;\n\t\t\t\t7'd6 : m1_in1 <= a6;\n\t\t\t\t7'd7 : m1_in1 <= a7;\n\t\t\t\t7'd8 : m1_in1 <= a8;\n\t\t\t\t7'd9 : m1_in1 <= a9;\n\t\t\t\t7'd10 : m1_in1 <= a10;\n\t\t\t\t7'd11 : m1_in1 <= a11;\n\t\t\t\t7'd12 : m1_in1 <= a12;\n\t\t\t\t7'd13 : m1_in1 <= a13;\n\t\t\t\t7'd14 : m1_in1 <= a14;\n\t\t\t\t7'd15 : m1_in1 <= a15;\n\t\t\t\t7'd16 : m1_in1 <= a16;\n\t\t\t\t7'd17 : m1_in1 <= a17;\n\t\t\t\t7'd18 : m1_in1 <= a18;\n\t\t\t\t7'd19 : m1_in1 <= a19;\n\t\t\t\t7'd20 : m1_in1 <= a20;\n\t\t\t\t7'd21 : m1_in1 <= a21;\n\t\t\t\t7'd22 : m1_in1 <= a22;\n\t\t\t\t7'd23 : m1_in1 <= a23;\n\t\t\t\t7'd24 : m1_in1 <= a24;\n\t\t\t\t7'd25 : m1_in1 <= a25;\n\t\t\t\t7'd26 : m1_in1 <= a26;\n\t\t\t\t7'd27 : m1_in1 <= a27;\n\t\t\t\t7'd28 : m1_in1 <= a28;\n\t\t\t\t7'd29 : m1_in1 <= a29;\n\t\t\t\t7'd30 : m1_in1 <= a30;\n\t\t\t\t7'd31 : m1_in1 <= a31;\n\t\t\t\t7'd32 : m1_in1 <= a32;\n\t\t\t\t7'd33 : m1_in1 <= a33;\n\t\t\t\t7'd34 : m1_in1 <= a34;\n\t\t\t\t7'd35 : m1_in1 <= a35;\n\t\t\t\t7'd36 : m1_in1 <= a36;\n\t\t\t\t7'd37 : m1_in1 <= a37;\n\t\t\t\t7'd38 : m1_in1 <= a38;\n\t\t\t\t7'd39 : m1_in1 <= a39;\n\t\t\t\t7'd40 : m1_in1 <= a40;\n\t\t\t\t7'd41 : m1_in1 <= a41;\n\t\t\t\t7'd42 : m1_in1 <= a42;\n\t\t\t\t7'd43 : m1_in1 <= a43;\n\t\t\t\t7'd44 : m1_in1 <= a44;\n\t\t\t\t7'd45 : m1_in1 <= a45;\n\t\t\t\t7'd46 : m1_in1 <= a46;\n\t\t\t\t7'd47 : m1_in1 <= a47;\n\t\t\t\t7'd48 : m1_in1 <= a48;\n\t\t\t\t7'd49 : m1_in1 <= a49;\n\t\t\t\t7'd50 : m1_in1 <= a50;\n\t\t\t\t7'd51 : m1_in1 <= a51;\n\t\t\t\t7'd52 : m1_in1 <= a52;\n\t\t\t\t7'd53 : m1_in1 <= a53;\n\t\t\t\t7'd54 : m1_in1 <= a54;\n\t\t\t\t7'd55 : m1_in1 <= a55;\n\t\t\t\t7'd56 : m1_in1 <= a56;\n\t\t\t\t7'd57 : m1_in1 <= a57;\n\t\t\t\t7'd58 : m1_in1 <= a58;\n\t\t\t\t7'd59 : m1_in1 <= a59;\n\t\t\t\t7'd60 : m1_in1 <= a60;\n\t\t\t\t7'd61 : m1_in1 <= a61;\n\t\t\t\t7'd62 : m1_in1 <= a62;\n\t\t\t\t7'd63 : m1_in1 <= a63;\n\t\t\t\t7'd64 : m1_in1 <= a64;\n\t\t\t\t7'd65 : m1_in1 <= a65;\n\t\t\t\t7'd66 : m1_in1 <= a66;\n\t\t\t\t7'd67 : m1_in1 <= a67;\n\t\t\t\t7'd68 : m1_in1 <= a68;\n\t\t\t\t7'd69 : m1_in1 <= a69;\n\t\t\t\t7'd70 : m1_in1 <= a70;\n\t\t\t\t7'd71 : m1_in1 <= a71;\n\t\t\t\t7'd72 : m1_in1 <= a72;\n\t\t\t\t7'd73 : m1_in1 <= a73;\n\t\t\t\t7'd74 : m1_in1 <= a74;\n\t\t\t\t7'd75 : m1_in1 <= a75;\n\t\t\t\t7'd76 : m1_in1 <= a76;\n\t\t\t\t7'd77 : m1_in1 <= a77;\n\t\t\t\t7'd78 : m1_in1 <= a78;\n\t\t\t\t7'd79 : m1_in1 <= a79;\n\t\t\t\t7'd80 : m1_in1 <= a80;\n\t\t\t\t7'd81 : m1_in1 <= a81;\n\t\t\t\t7'd82 : m1_in1 <= a82;\n\t\t\t\t7'd83 : m1_in1 <= a83;\n\t\t\t\t7'd84 : m1_in1 <= a84;\n\t\t\t\t7'd85 : m1_in1 <= a85;\n\t\t\t\t7'd86 : m1_in1 <= a86;\n\t\t\t\t7'd87 : m1_in1 <= a87;\n\t\t\t\t7'd88 : m1_in1 <= a88;\n\t\t\t\t7'd89 : m1_in1 <= a89;\n\t\t\t\t7'd90 : m1_in1 <= a90;\n\t\t\t\t7'd91 : m1_in1 <= a91;\n\t\t\t\t7'd92 : m1_in1 <= a92;\n\t\t\t\t7'd93 : m1_in1 <= a93;\n\t\t\t\t7'd94 : m1_in1 <= a94;\n\t\t\t\t7'd95 : m1_in1 <= a95;\n\t\t\t\t7'd96 : m1_in1 <= a96;\n\t\t\t\t7'd97 : m1_in1 <= a97;\n\t\t\t\t7'd98 : m1_in1 <= a98;\n\t\t\t\t7'd99 : m1_in1 <= a99;\n\t\t\t\t7'd100 : m1_in1 <= a100;\n\t\t\t\t7'd101 : m1_in1 <= a101;\n\t\t\t\t7'd102 : m1_in1 <= a102;\n\t\t\t\t7'd103 : m1_in1 <= a103;\n\t\t\t\t7'd104 : m1_in1 <= a104;\n\t\t\t\t7'd105 : m1_in1 <= a105;\n\t\t\t\t7'd106 : m1_in1 <= a106;\n\t\t\t\t7'd107 : m1_in1 <= a107;\n\t\t\t\t7'd108 : m1_in1 <= a108;\n\t\t\t\t7'd109 : m1_in1 <= a109;\n\t\t\t\t7'd110 : m1_in1 <= a110;\n\t\t\t\t7'd111 : m1_in1 <= a111;\n\t\t\t\t7'd112 : m1_in1 <= a112;\n\t\t\t\t7'd113 : m1_in1 <= a113;\n\t\t\t\t7'd114 : m1_in1 <= a114;\n\t\t\t\t7'd115 : m1_in1 <= a115;\n\t\t\t\t7'd116 : m1_in1 <= a116;\n\t\t\t\t7'd117 : m1_in1 <= a117;\n\t\t\t\t7'd118 : m1_in1 <= a118;\n\t\t\t\t7'd119 : m1_in1 <= a119;\n\t\t\t\t7'd120 : m1_in1 <= a120;\n\t\t\tendcase\n\t\t\tcase (i-j1)\n\t\t\t\t4'd0 : m1_in2 <= R0;\n\t\t\t\t4'd1 : m1_in2 <= R1;\n\t\t\t\t4'd2 : m1_in2 <= R2;\n\t\t\t\t4'd3 : m1_in2 <= R3;\n\t\t\t\t4'd4 : m1_in2 <= R4;\n\t\t\t\t4'd5 : m1_in2 <= R5;\n\t\t\t\t4'd6 : m1_in2 <= R6;\n\t\t\t\t4'd7 : m1_in2 <= R7;\n\t\t\t\t4'd8 : m1_in2 <= R8;\n\t\t\t\t4'd9 : m1_in2 <= R9;\n\t\t\t\t4'd10: m1_in2 <= R10;\n\t\t\tendcase\n\t\t\t\n\t\t\t\n\t\t\t\n\t\tend\n\n\n\n\n\n\n\t\tCALC_SUM:\n\t\tbegin\n\n\t\t\ta1_in1 <= sum;\n\t\t\ta1_in2 <= m1_out;\n\t\t\t\n\t\t\t\n\t\tend\n\t\t\n\t\tSET_SUM:\n\t\tbegin\n\t\t\tsum <= a1_out;\n\t\t\t\n\t\tend\n\n\t\tINCR_J1:\n\t\tbegin\n\t\t\tj1 <= j1 + 7'd1;\n\t\t\t\n\t\tend\n\t\t\n\n\n\n\n\n\t\tSTART_DIV:\n\t\tbegin\n\t\t\tstartdiv <= 1'b1;\n\t\tend\n\n\t\tPRE_CALC_K:\n\t\tbegin\n\t\t\tcase (i)\n\t\t\t\t4'd0 : a1_in1 <= R0;\n\t\t\t\t4'd1 : a1_in1 <= R1;\n\t\t\t\t4'd2 : a1_in1 <= R2;\n\t\t\t\t4'd3 : a1_in1 <= R3;\n\t\t\t\t4'd4 : a1_in1 <= R4;\n\t\t\t\t4'd5 : a1_in1 <= R5;\n\t\t\t\t4'd6 : a1_in1 <= R6;\n\t\t\t\t4'd7 : a1_in1 <= R7;\n\t\t\t\t4'd8 : a1_in1 <= R8;\n\t\t\t\t4'd9 : a1_in1 <= R9;\n\t\t\t\t4'd10: a1_in1 <= R10;\n\t\t\tendcase\n\t\t\ta1_in2 <= sum;\t\n\t\t\t\n\t\t\t div_in <= e;\n\t\t\t startdiv <= 1'b0;\n\t\t\t\n\t\tend\n\n\t\tCALC_K:\n\t\tbegin\n\t\t\tm1_in1 <= a1_out;\n\t\t\tm1_in2 <= div_ans;\n\t\t\tif(i == 1'b1)\n\t\t\tbegin\n\t\t\t\tcheck_k <= div_ans;\n\t\t\t\tcheck_e <= e;\n\t\t\tend\n\t\t\t\n\t\tend\n\n\t\tSET_K:\n\t\tbegin\n\t\t  \n\t\t\n\t\t\tk <= {(m1_out[N-1] == 0)?1'b1:1'b0,m1_out[N-2:0]};\n\t\t\t\n\t\tend\n\t\t\n\t\tCHECK_GT:\n\t\tbegin\n\t\t\tgt1_in1 <= {(k[N-1] == 1)?1'b0:1'b0,k[N-2:0]};\n\t\t\tgt1_in2 <= NUMBER_ONE;\n\t\t\t\n\t\t\t\n\t\t\t\n\t\tend\n\t\t\n\t\tCHECK_K:\n\t\tbegin\n\t\t\tif(gt1)\n\t\t\tbegin\n\t\t\t\tk <= 32'b0;\n\t\t\tend\n\t\t\telse\n\t\t\tbegin\n\t\t\t\tk <= k;\n\t\t\tend\n\t\tend\n\t\t\n\t\tSET_A:\n\t\tbegin\n\t\t\tcase (i)\n\t\t\t7'd1  : a12  <= k;\n\t\t\t7'd2  : a24  <= k;\n\t\t\t7'd3  : a36  <= k;\n\t\t\t7'd4  : a48  <= k;\n\t\t\t7'd5  : a60  <= k;\n\t\t\t7'd6  : a72  <= k;\n\t\t\t7'd7  : a84  <= k;\n\t\t\t7'd8  : a96  <= k;\n\t\t\t7'd9  : a108 <= k;\n\t\t\t7'd10 : a120 <= k;\n\t\t\t\n\t\t\tendcase\n\t\tend\n\t\t\n\t\tCHECK_WHICH_I_FOR_A:\n\t\tbegin\n\t\t\t\n\t\tend\n\t\t\n\t\t\n\t\t\n\t\tPRE_CALC_A_I_2:\n\t\tbegin\n\t\t\tm1_in1 <= k;\n\t\t\tm1_in2 <= a12;\n\t\t\ta1_in1 <= a12;\n\t\tend\n\t\t\n\t\tCALC_A_I_2:\n\t\tbegin\n\t\t\ta1_in2 <= m1_out;\n\t\tend\n\t\t\n\t\tFINAL_CALC_A_I_2:\n\t\tbegin\n\t\t\ta23 <= a1_out;\n\t\tend\n\n\t\t\n\n\n\t\tPRE_CALC_A_I_3:\n\t\tbegin\n\t\t\tm1_in1 <= k;\n\t\t\tm1_in2 <= a24;\n\t\t\tm2_in1 <= k;\n\t\t\tm2_in2  <= a23;\n\t\t\ta1_in1 <= a23;\n\t\t\ta2_in1 <= a24;\n\t\tend\n\t\t\n\t\tCALC_A_I_3:\n\t\tbegin\n\t\t\ta1_in2 <= m1_out;\n\t\t\ta2_in2 <= m2_out;\n\t\tend\n\t\t\n\t\tFINAL_CALC_A_I_3:\n\t\tbegin\n\t\t\ta34 <= a1_out;\n\t\t\ta35 <= a2_out;\n\t\tend\n\n\t\t\n\n\n\n\t\tPRE_CALC_A_I_4:\n\t\tbegin\n\t\t\tm1_in1 <= k;\n\t\t\tm1_in2 <= a36;\n\t\t\tm2_in1 <= k;\n\t\t\tm2_in2 <= a35;\n\t\t\tm3_in1 <= k;\n\t\t\tm3_in2 <= a34;\n\t\t\ta1_in1 <= a34;\n\t\t\ta2_in1 <= a35;\n\t\t\ta3_in1 <= a36;\n\t\tend\n\t\t\n\t\tCALC_A_I_4:\n\t\tbegin\n\t\t\ta1_in2 <= m1_out;\n\t\t\ta2_in2 <= m2_out;\n\t\t\ta3_in2 <= m3_out;\n\t\t\t\n\t\tend\n\t\t\n\t\tFINAL_CALC_A_I_4:\n\t\tbegin\n\t\t\ta45 <= a1_out;\n\t\t\ta46 <= a2_out;\n\t\t\ta47 <= a3_out;\n\t\tend\n\t\t\n\t\t\n\n\n\n\n\t\tPRE_CALC_A_I_5:\n\t\tbegin\n\t\t\tm1_in1 <= k;\n\t\t\tm1_in2 <= a48;\n\t\t\ta1_in1 <= a45;\n\t\t\tm2_in1 <= k;\n\t\t\tm2_in2 <= a47;\n\t\t\ta2_in1 <= a46;\n\t\t\tm3_in1 <= k;\n\t\t\tm3_in2 <= a46;\n\t\t\ta3_in1 <= a47;\n\t\t\tm4_in1 <= k;\n\t\t\tm4_in2 <= a45;\n\t\t\ta4_in1 <= a48;\n\t\tend\n\t\t\n\t\tCALC_A_I_5:\n\t\tbegin\n\t\t\ta1_in2 <= m1_out;\n\t\t\ta2_in2 <= m2_out;\n\t\t\ta3_in2 <= m3_out;\n\t\t\ta4_in2 <= m4_out;\n\t\t\t\n\t\tend\n\t\t\n\t\tFINAL_CALC_A_I_5:\n\t\tbegin\n\t\t\ta56 <= a1_out;\n\t\t\ta57 <= a2_out;\n\t\t\ta58 <= a3_out;\n\t\t\ta59 <= a4_out;\n\t\tend\n\t\t\n\t\t\n\t\t\n\n\n\n\n\n\t\tPRE_CALC_A_I_6:\n\t\tbegin\n\t\t\tm1_in1 <= k;\n\t\t\tm1_in2 <= a60;\n\t\t\ta1_in1 <= a56;\n\t\t\tm2_in1 <= k;\n\t\t\tm2_in2 <= a59;\n\t\t\ta2_in1 <= a57;\n\t\t\tm3_in1 <= k;\n\t\t\tm3_in2 <= a58;\n\t\t\ta3_in1 <= a58;\n\t\t\tm4_in1 <= k;\n\t\t\tm4_in2 <= a57;\n\t\t\ta4_in1 <= a59;\n\t\t\tm5_in1 <= k;\n\t\t\tm5_in2 <= a56;\n\t\t\ta5_in1 <= a60;\n\t\tend\n\t\t\n\t\tCALC_A_I_6:\n\t\tbegin\n\t\t\ta1_in2 <= m1_out;\n\t\t\ta2_in2 <= m2_out;\n\t\t\ta3_in2 <= m3_out;\n\t\t\ta4_in2 <= m4_out;\n\t\t\ta5_in2 <= m5_out;\n\t\t\t\n\t\tend\n\t\t\n\t\tFINAL_CALC_A_I_6:\n\t\tbegin\n\t\t\ta67 <= a1_out;\n\t\t\ta68 <= a2_out;\n\t\t\ta69 <= a3_out;\n\t\t\ta70 <= a4_out;\n\t\t\ta71 <= a5_out;\n\t\tend\n\t\t\n\t\t\n\n\n\n\n\n\n\t\tPRE_CALC_A_I_7:\n\t\tbegin\n\t\t\tm1_in1 <= k;\n\t\t\tm1_in2 <= a72;\n\t\t\ta1_in1 <= a67;\n\t\t\tm2_in1 <= k;\n\t\t\tm2_in2 <= a71;\n\t\t\ta2_in1 <= a68;\n\t\t\tm3_in1 <= k;\n\t\t\tm3_in2 <= a70;\n\t\t\ta3_in1 <= a69;\n\t\t\tm4_in1 <= k;\n\t\t\tm4_in2 <= a69;\n\t\t\ta4_in1 <= a70;\n\t\t\tm5_in1 <= k;\n\t\t\tm5_in2 <= a68;\n\t\t\ta5_in1 <= a71;\n\t\t\tm6_in1 <= k;\n\t\t\tm6_in2 <= a67;\n\t\t\ta6_in1 <= a72;\n\t\tend\n\t\t\n\t\tCALC_A_I_7:\n\t\tbegin\n\t\t\ta1_in2 <= m1_out;\n\t\t\ta2_in2 <= m2_out;\n\t\t\ta3_in2 <= m3_out;\n\t\t\ta4_in2 <= m4_out;\n\t\t\ta5_in2 <= m5_out;\n\t\t\ta6_in2 <= m6_out;\n\t\t\t\n\t\tend\n\t\t\n\t\tFINAL_CALC_A_I_7:\n\t\tbegin\n\t\t\ta78 <= a1_out;\n\t\t\ta79 <= a2_out;\n\t\t\ta80 <= a3_out;\n\t\t\ta81 <= a4_out;\n\t\t\ta82 <= a5_out;\n\t\t\ta83 <= a6_out;\n\t\tend\n\t\t\n\t\t\n\n\n\n\n\n\n\n\t\tPRE_CALC_A_I_8:\n\t\tbegin\n\t\t\tm1_in1 <= k;\n\t\t\tm1_in2 <= a84;\n\t\t\ta1_in1 <= a78;\n\t\t\tm2_in1 <= k;\n\t\t\tm2_in2 <= a83;\n\t\t\ta2_in1 <= a79;\n\t\t\tm3_in1 <= k;\n\t\t\tm3_in2 <= a82;\n\t\t\ta3_in1 <= a80;\n\t\t\tm4_in1 <= k;\n\t\t\tm4_in2 <= a81;\n\t\t\ta4_in1 <= a81;\n\t\t\tm5_in1 <= k;\n\t\t\tm5_in2 <= a80;\n\t\t\ta5_in1 <= a82;\n\t\t\tm6_in1 <= k;\n\t\t\tm6_in2 <= a79;\n\t\t\ta6_in1 <= a83;\n\t\t\tm7_in1 <= k;\n\t\t\tm7_in2 <= a78;\n\t\t\ta7_in1 <= a84;\n\t\tend\n\t\t\n\t\tCALC_A_I_8:\n\t\tbegin\n\t\t\ta1_in2 <= m1_out;\n\t\t\ta2_in2 <= m2_out;\n\t\t\ta3_in2 <= m3_out;\n\t\t\ta4_in2 <= m4_out;\n\t\t\ta5_in2 <= m5_out;\n\t\t\ta6_in2 <= m6_out;\n\t\t\ta7_in2 <= m7_out;\n\t\t\t\n\t\tend\n\t\t\n\t\tFINAL_CALC_A_I_8:\n\t\tbegin\n\t\t\ta89 <= a1_out;\n\t\t\ta90 <= a2_out;\n\t\t\ta91 <= a3_out;\n\t\t\ta92 <= a4_out;\n\t\t\ta93 <= a5_out;\n\t\t\ta94 <= a6_out;\n\t\t\ta95 <= a7_out;\n\t\tend\n\t\t\n\t\t\n\t\t\n\n\n\n\n\n\n\n\n\t\tPRE_CALC_A_I_9:\n\t\tbegin\n\t\t\tm1_in1 <= k;\n\t\t\tm1_in2 <= a96;\n\t\t\ta1_in1 <= a89;\n\t\t\tm2_in1 <= k;\n\t\t\tm2_in2 <= a95;\n\t\t\ta2_in1 <= a90;\n\t\t\tm3_in1 <= k;\n\t\t\tm3_in2 <= a94;\n\t\t\ta3_in1 <= a91;\n\t\t\tm4_in1 <= k;\n\t\t\tm4_in2 <= a93;\n\t\t\ta4_in1 <= a92;\n\t\t\tm5_in1 <= k;\n\t\t\tm5_in2 <= a92;\n\t\t\ta5_in1 <= a93;\n\t\t\tm6_in1 <= k;\n\t\t\tm6_in2 <= a91;\n\t\t\ta6_in1 <= a94;\n\t\t\tm7_in1 <= k;\n\t\t\tm7_in2 <= a90;\n\t\t\ta7_in1 <= a95;\n\t\t\tm8_in1 <= k;\n\t\t\tm8_in2 <= a89;\n\t\t\ta8_in1 <= a96;\n\t\tend\n\t\t\n\t\tCALC_A_I_9:\n\t\tbegin\n\t\t\ta1_in2 <= m1_out;\n\t\t\ta2_in2 <= m2_out;\n\t\t\ta3_in2 <= m3_out;\n\t\t\ta4_in2 <= m4_out;\n\t\t\ta5_in2 <= m5_out;\n\t\t\ta6_in2 <= m6_out;\n\t\t\ta7_in2 <= m7_out;\n\t\t\ta8_in2 <= m8_out;\n\t\t\t\n\t\tend\n\t\t\n\t\tFINAL_CALC_A_I_9:\n\t\tbegin\n\t\t\ta100 <= a1_out;\n\t\t\ta101 <= a2_out;\n\t\t\ta102 <= a3_out;\n\t\t\ta103 <= a4_out;\n\t\t\ta104 <= a5_out;\n\t\t\ta105 <= a6_out;\n\t\t\ta106 <= a7_out;\n\t\t\ta107 <= a8_out;\n\t\tend\n\t\t\n\t\t\n\t\t\n\n\n\n\n\n\n\n\n\n\t\tPRE_CALC_A_I_10:\n\t\tbegin\n\t\t\tm1_in1 <= k;\n\t\t\tm1_in2 <= a108;\n\t\t\ta1_in1 <= a100;\n\t\t\tm2_in1 <= k;\n\t\t\tm2_in2 <= a107;\n\t\t\ta2_in1 <= a101;\n\t\t\tm3_in1 <= k;\n\t\t\tm3_in2 <= a106;\n\t\t\ta3_in1 <= a102;\n\t\t\tm4_in1 <= k;\n\t\t\tm4_in2 <= a105;\n\t\t\ta4_in1 <= a103;\n\t\t\tm5_in1 <= k;\n\t\t\tm5_in2 <= a104;\n\t\t\ta5_in1 <= a104;\n\t\t\tm6_in1 <= k;\n\t\t\tm6_in2 <= a103;\n\t\t\ta6_in1 <= a105;\n\t\t\tm7_in1 <= k;\n\t\t\tm7_in2 <= a102;\n\t\t\ta7_in1 <= a106;\n\t\t\tm8_in1 <= k;\n\t\t\tm8_in2 <= a101;\n\t\t\ta8_in1 <= a107;\n\t\t\tm9_in1 <= k;\n\t\t\tm9_in2 <= a100;\n\t\t\ta9_in1 <= a108;\n\t\tend\n\t\t\n\t\tCALC_A_I_10:\n\t\tbegin\n\t\t\ta1_in2 <= m1_out;\n\t\t\ta2_in2 <= m2_out;\n\t\t\ta3_in2 <= m3_out;\n\t\t\ta4_in2 <= m4_out;\n\t\t\ta5_in2 <= m5_out;\n\t\t\ta6_in2 <= m6_out;\n\t\t\ta7_in2 <= m7_out;\n\t\t\ta8_in2 <= m8_out;\n\t\t\ta9_in2 <= m9_out;\n\t\t\t\n\t\tend\n\t\t\n\t\tFINAL_CALC_A_I_10:\n\t\tbegin\n\t\t\ta111 <= a1_out;\n\t\t\ta112 <= a2_out;\n\t\t\ta113 <= a3_out;\n\t\t\ta114 <= a4_out;\n\t\t\ta115 <= a5_out;\n\t\t\ta116 <= a6_out;\n\t\t\ta117 <= a7_out;\n\t\t\ta118 <= a8_out;\n\t\t\ta119 <= a9_out;\n\t\tend\n\t\t\n\t\t\n\t\tPRE_CALC_E:\n\t\tbegin\n\t\t\tm1_in1 <= k;\n\t\t\tm1_in2 <= k;\n\t\t\n\t\tend\n\n\t\tCALC1_E:\n\t\tbegin\n\t\t\ta1_in1 <= NUMBER_ONE;\n\t\t\ta1_in2 <= {(m1_out[N-1] == 0)?1'b1:1'b0,m1_out[N-2:0]};\n\t\t\t\n\t\t\t\t\t\t\n\t\tend\n\n\t\tCALC2_E:\n\t\tbegin\n\t\t\tm1_in1 <= e;\n\t\t\tm1_in2 <= a1_out;\n\t\tend\n\n\t\tSET_E:\n\t\tbegin\n\t\t\te <= m1_out;\n\t\tend\n\n\t\tINCR_I:\n\t\tbegin\n\t\t\ti <= i + 7'd1;\n\t\tend\n\t\t\n\t\tINIT_FOR_LPC:\n\t\tbegin\n\t\t\tj <= 4'd0;\n\t\tend\n\t\t\n\t\tCHECK_J:\n\t\tbegin\n\t\t\t\n\t\tend\n\t\t\n\t\tSET_ADDR_LPC:\n\t\tbegin\n\t\t\taddr_ld <= j;\n\t\tend\n\t\t\n\t\tSET_DELAY1:\n\t\tbegin\n\t\t\n\t\tend\n\t\t\n\t\tSET_DELAY2:\n\t\tbegin\n\t\t\n\t\tend\n\t\t\n\t\tSET_LPC:\n\t\tbegin\n\t\t\tcase (j)\n\t\t\t\t4'd0 : in_lpc <= NUMBER_ONE;\n\t\t\t\t4'd1 : in_lpc <= a111;\n\t\t\t\t4'd2 : in_lpc <= a112;\n\t\t\t\t4'd3 : in_lpc <= a113;\n\t\t\t\t4'd4 : in_lpc <= a114;\n\t\t\t\t4'd5 : in_lpc <= a115;\n\t\t\t\t4'd6 : in_lpc <= a116;\n\t\t\t\t4'd7 : in_lpc <= a117;\n\t\t\t\t4'd8 : in_lpc <= a118;\n\t\t\t\t4'd9 : in_lpc <= a119;\n\t\t\t\t4'd10: in_lpc <= a120;\n\t\t\tendcase\n\t\t\n\t\tend\n\t\t\n\t\tINCR_J:\n\t\tbegin\n\t\t\tj <= j + 4'd1;\n\t\tend\n\t\t\t\t\n\t\t\n\t\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\t\n\t\t\n\n\t\tDONE:\n\t\tbegin\n\t\t\tdoneld <= 1'd1;\n\t\tend\n\n\t\tendcase\n\tend\n\nend\n\n\n\n\nendmodule</code>"
                },
                {
                    "type": "text",
                    "text": "Based on the provided original Verilog code, its comments and above answers, generate a detailed specification for the module. Include the following information in a single, concise paragraph:\n1. The name of the module.\n2. A simple explanation of the module's functionality.\n3. The input and output ports, along with a brief explanation of each.\n4. The internal signals used within the module, with a brief explanation of their purpose.\n5. An overview of the different blocks or sections in the code and their functions.\nEnsure that the specification is clear and accurately reflects the details from the code and comments.\nYour answer should be structured and well-organized, providing a comprehensive and detailed overview of the module's design and operation.\nPlease provide your answer in the following format:\nModule name: [module name]. Module specification: [module specification]."
                },
                {
                    "type": "text",
                    "text": "Module name: levinson_durbin_modified. Module specification: The levinson_durbin_modified module implements the Levinson-Durbin algorithm for linear predictive coding (LPC) analysis, calculating LPC coefficients from autocorrelation values. It uses input ports startld (initiates algorithm), clk (clock), and rst (reset), and output ports check_k and check_e (verification outputs) and doneld (completion indicator). The module employs a state machine to control the algorithm's execution, utilizing internal signals such as STATE, NEXT_STATE, R0-R10 (autocorrelation values), a0-a120 (LPC coefficients), i, j1, k (reflection coefficient), e (prediction error), and various multiplication and addition inputs (m1_in1 to m9_in2, a1_in1 to a9_in2). The module is"
                }
            ]
        }
    ]
}