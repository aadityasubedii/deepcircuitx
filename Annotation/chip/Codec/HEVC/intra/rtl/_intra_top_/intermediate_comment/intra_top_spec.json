{
    "spec": "Module name: intra_top. Module specification: The intra_top module is the top-level module for intra prediction in a video codec, likely for HEVC/H.265. It integrates various sub-modules to perform intra prediction, including reference sample generation, prediction mode selection, sample reconstruction, and memory management. The module handles different prediction modes, block sizes, and chroma/luma processing through multiple pipeline stages. Key input ports include clk, rst_n, mode, pic dimensions, CTU coordinates, and various prediction parameters. Output ports provide reconstructed samples and ready signals for different processing stages. Internal signals manage pipeline stages, coordinate data flow, and store intermediate results. The module is structured into several main blocks: input transformation, FSM control, reference sample generation, prediction calculation, reconstruction, and memory interface. It implements a complex pipeline with multiple stages (lz_, l0_, l_, l1_, l2_, l",
    "gpt-message": [
        {
            "role": "system",
            "content": "You are an expert in hardware design with a deep understanding of Verilog RTL codes. Now I want to train a large language model for code comment generation tasks specifically focused on Verilog RTL codes. And I want you to help me process the raw data, transforming it into suitable formats that can serve as inputs and outputs for the model."
        },
        {
            "role": "user",
            "content": "Name of the module and its functionality is as follows: \nModule name: intra_top\n\nExplanation: This module appears to be the top-level module for intra prediction in a video codec, likely for HEVC/H.265. It integrates various sub-modules for intra prediction, including reference sample generation, prediction mode selection, sample reconstruction, and memory management. The module handles different prediction modes, block sizes, and chroma/luma processing. It coordinates the intra prediction process through multiple pipeline stages, managing data flow between different functional units and memory interfaces. The module also includes logic for handling special cases like border conditions and different color components (luma/chroma)."
        },
        {
            "role": "user",
            "content": "Input and output ports and their explanation is as follows: \nInput ports:\n[clk, arst_n, rst_n, mode, pic_width_in_luma_samples, pic_height_in_luma_samples, first_ctu_in_slice_x, first_ctu_in_slice_y, first_ctu_in_tile_x, first_ctu_in_tile_y, last_ctu_in_tile_x, last_ctu_in_tile_y, xCtb, yCtb, xTb_rela, yTb_rela, residuals, predSamples_inter, tuSizeLog2, nMaxCUlog2, intra_cuPredMode, isPcm, resi_val, cabad_intra_val, inter_pred_val, gp_bitDepth]\n\nExplanation:\n- clk, arst_n, rst_n: Clock and reset signals for synchronous logic.\n- mode: Intra prediction mode.\n- pic_width/height_in_luma_samples: Picture dimensions.\n- first/last_ctu_in_slice/tile_x/y: CTU boundaries for slices and tiles.\n- xCtb, yCtb: Current CTB coordinates.\n- xTb_rela, yTb_rela: Relative transform block coordinates within CTB.\n- residuals: Residual data for reconstruction.\n- predSamples_inter: Inter prediction samples.\n- tuSizeLog2, nMaxCUlog2: Transform unit and max CU size parameters.\n- intra_cuPredMode: Intra prediction mode for current CU.\n- isPcm: PCM mode flag.\n- resi_val, cabad_intra_val, inter_pred_val: Valid signals for residual, CABAC, and inter prediction data.\n- gp_bitDepth: Bit depth parameter.\n\nOutput ports:\n[resi_rdy, r_reconSamples, cabad_intra_rdy, inter_pred_rdy]\n\nExplanation:\n- resi_rdy: Ready signal for residual data processing.\n- r_reconSamples: Reconstructed samples output.\n- cabad_intra_rdy: Ready signal for CABAC intra data.\n- inter_pred_rdy: Ready signal for inter prediction data."
        },
        {
            "role": "user",
            "content": "Internal signals and their explanation is as follows: \nInternal signals:\n[xCtb_, yCtb_, xTb_rela_, yTb_rela_, mode_, tuSizeLog2_, isInter, X, Y, preStage, pseuAdr, isLastCycInTb, order, cIdx, tuSize, lz_X, lz_Y, lz_mode, lz_tuSize, lz_xTb, lz_yTb, lz_preStage, lz_isLastCycInTb, lz_order, lz_pseuAdr, lz_cIdx, lz_isInter, horFlag, verFlag, verLevel, horLevel, l0_X, l0_Y, l0_mode, l0_tuSize, l0_xTb, l0_yTb, l0_preStage, l0_isLastCycInTb, l0_partIdx, l0_verLevel, l0_horLevel, l0_horFlag, l0_verFlag, l0_isFirstCycInTb, l0_order, l0_isLtBorder, l0_BtBorderInfo, l0_RtBorderInfo, l0_cIdx, l0_isInter, r_data, top_left_pixel, ref_pos, ref_TLADflag, bp_pos_1, bp_pos_2, bp_pos_3, substi_Opt, sub_top_left_pixel, sub_data, l_X, l_Y, l_mode, l_tuSize, l_xTb, l_yTb, l_preStage, l_isLastCycInTb, l_pseuAdr, l_partIdx, l_verLevel, l_horLevel, l_horFlag, l_verFlag, l_isFirstCycInTb, l_order, l_isLtBorder, l_BtBorderInfo, l_RtBorderInfo, l_cIdx, l_isInter, l_modeHor, move, weight, l1_mode, l1_tuSize, l1_X, l1_Y, l1_xTb, l1_yTb, l1_preStage, l1_isLastCycInTb, l1_partIdx, l1_horFlag, l1_verFlag, l1_isFirstCycInTb, l1_order, l1_ram_idx, l1_isLtBorder, l1_BtBorderInfo, l1_RtBorderInfo, l1_cIdx, l1_isInter, l1_modeHor, l1_mainRefReg, l1_unFilDC, l1_top_right_pixel, l1_bottom_left_pixel, l1_sub_top_left_pixel_P, l1_opt_recon, l1_unFil_opt, angle, ang, l2_X, l2_Y, l2_xTb, l2_yTb, l2_mode, l2_preStage, l2_isLastCycInTb, l2_tuSize, l2_partIdx, l2_horFlag, l2_verFlag, l2_isFirstCycInTb, l2_order, l2_isLtBorder, l2_BtBorderInfo, l2_RtBorderInfo, l2_cIdx, l2_isInter, l2_modeHor, l2_move, l2_weight, l2_mainRefReg, l2_unFilDC, l2_top_right_pixel, l2_bottom_left_pixel, l2_sub_top_left_pixel_P, l2_opt_recon, l2_unFil_opt, l2_DC_xxxx_data, predSamples, reconSamples]\n\nExplanation:\n- xCtb_, yCtb_, xTb_rela_, yTb_rela_: Registered versions of input CTB and TB coordinates.\n- mode_, tuSizeLog2_, isInter: Registered versions of input mode, transform unit size, and inter prediction flag.\n- X, Y: Current pixel coordinates within the transform block.\n- preStage: Pipeline stage indicator.\n- pseuAdr: Pseudo address for memory access.\n- isLastCycInTb, order: Flags for last cycle in transform block and processing order.\n- cIdx: Color component index (0: Luma, 1: Cb, 2: Cr).\n- tuSize: Transform unit size.\n- lz_, l0_, l_, l1_, l2_ prefixed signals: Pipeline stage specific versions of various control and data signals.\n- horFlag, verFlag, verLevel, horLevel: Flags and levels for horizontal and vertical prediction directions.\n- r_data, top_left_pixel: Read data from memory and top-left pixel value.\n- ref_pos, ref_TLADflag: Reference sample positions and flags.\n- bp_pos_1, bp_pos_2, bp_pos_3, substi_Opt: Bypass and substitution related signals.\n- sub_top_left_pixel, sub_data: Substituted top-left pixel and data.\n- modeHor: Flag for horizontal prediction mode.\n- move, weight: Prediction weight and movement parameters.\n- angle, ang: Angle-related parameters for angular prediction modes.\n- mainRefReg, unFilDC, top_right_pixel, bottom_left_pixel, sub_top_left_pixel_P: Reference samples and DC value.\n- opt_recon, unFil_opt, DC_xxxx_data: Options for reconstruction and DC prediction.\n- predSamples, reconSamples: Predicted and reconstructed samples.\n\nThese internal signals are used to control the flow of data through the intra prediction pipeline, store intermediate results, and manage the various prediction modes and special cases in the intra prediction process."
        },
        {
            "role": "user",
            "content": "Original Verilog code is as follows: \n```verilog\n`timescale 1ns/1ps\n\n\nmodule intra_top(\n\t  clk,\n\t  arst_n,\n\t  rst_n,\n\t  mode,\n\t  pic_width_in_luma_samples,\n\t  pic_height_in_luma_samples,\n\t  first_ctu_in_slice_x,\n\t  first_ctu_in_slice_y,\n\t  first_ctu_in_tile_x,\n\t  first_ctu_in_tile_y,\n\t  last_ctu_in_tile_x,\n\t  last_ctu_in_tile_y,\n\t  xCtb,\t\t\t\t\t\n\t  yCtb,\n\t  xTb_rela,\t\t\t\t\n\t  yTb_rela,\n\tresiduals     \n\t,predSamples_inter\n\t,r_reconSamples    \n\t,tuSizeLog2\n\t,nMaxCUlog2\n\t,intra_cuPredMode\n\t,isPcm\n\t,resi_val\n\t,resi_rdy\n\t,cabad_intra_val\t\t\t\n\t,cabad_intra_rdy\t\t\t\n\t,inter_pred_rdy\n\t,inter_pred_val\n\t,gp_bitDepth\n);\n\n\tparameter isChroma = 0;\n\tparameter bitDepthY = 4'd10;\n\tparameter bitDepthYplus1 = bitDepthY+1;\n\tparameter nSRAMs \t\t=8;\n\tparameter MAINREF_DW = bitDepthY*8;   \n\tparameter AW = 3;\n\tparameter realAW_Y = 8;\n\tparameter realAW_TL_Y = 11;\n\tparameter ANG_BDEPTH = bitDepthY+5;\n\tparameter PLA_2_BDEPTH = bitDepthY+3;\n\n\tparameter SRAMDW = bitDepthY*4;\n\n\t\n\t\n\t\n\tinput \t[8:0]\t\t\t\t\txCtb,yCtb;  \n\tinput \t[3:0]\t\t\t\t\txTb_rela,yTb_rela;\n\tinput \t\t\t\t\t\t\tclk,rst_n,arst_n; \n\tinput\t[13:0]\t\t\t\t\tpic_width_in_luma_samples;\n\tinput\t[12:0]\t\t\t\t\tpic_height_in_luma_samples;\n\tinput   [8:0]           \t\tfirst_ctu_in_slice_x;\n\tinput   [8:0]           \t\tfirst_ctu_in_slice_y;\n\tinput   [8:0]          \t\t\tfirst_ctu_in_tile_x;\n\tinput   [8:0]           \t\tfirst_ctu_in_tile_y;\n\tinput   [8:0]           \t\tlast_ctu_in_tile_x;\n\tinput   [8:0]           \t\tlast_ctu_in_tile_y;\n\t\n\tinput \t[2:0] \t\t\t\t\tnMaxCUlog2;\n\tinput \t[5:0]\t\t\t\t\tmode;\n\tinput \t[2:0] \t\t\t\t\ttuSizeLog2;\n\tinput \t[(bitDepthY+1)*16-1:0] \tresiduals;\n\tinput\t\t\t\t\t\t\tcabad_intra_val;\n\tinput\t\t\t\t\t\t\tisPcm;\n\tinput\t[1:0]\t\t\t\t\tintra_cuPredMode;\n\tinput\t\t\t\t\t\t \tresi_val;\n\tinput \t[bitDepthY*16-1:0]\t\tpredSamples_inter;\n\tinput\t\t\t\t\t\t\tinter_pred_val;\n\t\n\tinput\t[3:0]\t\t\t\t\tgp_bitDepth;\n\t\n\toutput reg\t\t\t\t\t\tresi_rdy; \n\toutput reg [bitDepthY*16-1:0] \tr_reconSamples;\t\n\toutput \t\t\t\t\t\t\tcabad_intra_rdy;\n\toutput \t\t\t\t\t\t\tinter_pred_rdy;\n\t\n\treg \t[8:0]\t\t\t\t\txCtb_,yCtb_;  \n\treg  \t[3:0]\t\t\t\t\txTb_rela_,yTb_rela_;\n\treg \t[5:0]\t\t\t\t\tmode_;\n\treg \t[2:0] \t\t\t\t\ttuSizeLog2_;\n\treg\t\t\t\t\t\t\t\tisInter;\n\t\n\twire\t[2:0]\t\t\t\t\tnMaxCblog2;\n\twire \t[12:0] \t\t\t\t\tyTb;\t\t\n\twire \t[12:0] \t\t\t\t\txTb;\t\t\n\twire \t[2:0] \t\t\t\t\tX,Y;\n\twire \t[3:0] \t\t\t\t\tpreStage;\n\twire \t[AW*8-1:0] \t\t\t\tpseuAdr;\n\n\twire\t\t\t\t\t\t\tisLastCycInTb;\n\twire\t[2:0]\t\t\t\t\torder;\n\t\n\twire\t[1:0]\t\t\t\t\tcIdx;\n\twire \t[2:0] \t\t\t\t\ttuSize;\n\t\n\t\n\t\n\t\n\treg \t[2:0] \t\t\t\t\tlz_X,lz_Y;\n\treg \t[5:0]\t\t\t\t\tlz_mode;\n\treg \t[2:0] \t\t\t\t\tlz_tuSize;\n\treg \t[12:0] \t\t\t\t\tlz_xTb;\t\t\n\treg \t[12:0] \t\t\t\t\tlz_yTb;\t\t\n\treg \t[3:0] \t\t\t\t\tlz_preStage;\n\treg\t\t\t\t\t\t\t\tlz_isLastCycInTb;\n\t\n\treg\t\t[2:0]\t\t\t\t\tlz_order;\n\treg     [AW*8-1:0] \t\t\t\tlz_pseuAdr;\n\t\n\treg\t\t[1:0]\t\t\t\t\tlz_cIdx;\n\treg\t\t\t\t\t\t\t\tlz_isInter;\n\t\n\twire\t[15:0]\t\t\t\t\thorFlag,verFlag;\n\twire \t[63:0] \t\t\t\t\tverLevel;\n\twire \t[63:0] \t\t\t\t\thorLevel;\n\twire\t[5:0]\t\t\t\t\tlz_RtBorderInfo;\n\twire\t[5:0]\t\t\t\t\tlz_BtBorderInfo;\n\twire\t\t\t\t\t\t\tlz_isLtBorder;\n\twire\t\t\t\t\t\t\tlz_isAbove,lz_isLeft,lz_isTopLeft;\n\twire\t\t\t\t\t\t\tlz_isFirstCycInTb;\n\twire\t\t[1:0]\t\t\t\tlz_partIdx;\n\twire \t[realAW_TL_Y-1:0]   \tr_addr_TL_;\n\twire \t[realAW_Y*8-1:0]\t   \tr_addr_;\n\twire \t[8:0]  \t\t\t\t\trE_n_;\n\treg \t[8:0]  \t\t\t\t\trE_n_tmp;\n\t\n\t\n\t\n\t\n\twire \t[AW*8-1:0] \t\t\t\tl0_pseuAdr;\n\twire    [nSRAMs*5-1:0]\t\t\tl0_modiPosIn4;\n\twire \t[nSRAMs*3-1:0]\t\t\tl0_ram_idx;\n\t\n\treg \t[2:0] \t\t\t\t\tl0_X,l0_Y;\n\treg\t\t\t\t\t\t\t\tl0_isAbove,l0_isLeft,l0_isTopLeft;\n\treg \t[5:0]\t\t\t\t\tl0_mode;\n\treg \t[2:0] \t\t\t\t\tl0_tuSize;\n\treg \t[12:0] \t\t\t\t\tl0_xTb;\t\t\n\treg \t[12:0] \t\t\t\t\tl0_yTb;\t\t\n\treg \t[3:0] \t\t\t\t\tl0_preStage;\n\treg\t\t\t\t\t\t\t\tl0_isLastCycInTb;\n\treg\t\t[1:0]\t\t\t\t\tl0_partIdx;\n\treg \t[63:0] \t\t\t\t\tl0_verLevel;\n\treg \t[63:0] \t\t\t\t\tl0_horLevel;\n\treg\t\t[15:0]\t\t\t\t\tl0_horFlag,l0_verFlag;\n\treg\t\t\t\t\t\t\t\tl0_isFirstCycInTb;\n\treg\t\t[2:0]\t\t\t\t\tl0_order;\n\treg\t\t\t\t\t\t \t\tl0_isLtBorder;\n\treg\t\t[5:0]\t\t\t\t\tl0_BtBorderInfo;\n\treg\t\t[5:0]\t\t\t\t\tl0_RtBorderInfo;\t\n\t\n\treg \t[realAW_TL_Y-1:0]   \tr_addr_TL;\n\treg \t[realAW_Y*8-1:0]\t   \tr_addr;\n\treg \t[8:0]  \t\t\t\t\trE_n;\t\n\treg\t\t[1:0]\t\t\t\t\tl0_cIdx;\n\treg\t\t\t\t\t\t\t\tl0_isInter;\n\t\n\t\n\t\n\t\n\t\n\twire \t[SRAMDW*8-1:0] \t\t\tr_data;\n\twire\t[bitDepthY-1:0]\t\t\ttop_left_pixel;\n\twire \t[47:0] \t\t\t\t\tref_pos;\n\twire \t[15:0] \t\t\t\t\tref_TLADflag;\n\twire \t[5:0]\t\t\t\t\tbp_pos_1,bp_pos_2,bp_pos_3;\n\twire\t[3*nSRAMs+1:0]\t\t\tsubsti_Opt;\n\twire \t[bitDepthY-1:0] \t\tsub_top_left_pixel;\n\twire\t[SRAMDW*8-1:0]\t\t\tsub_data;\n\t\n\twire [6:0]      \t\t\t\tl_xTbInCU ,l_yTbInCU;\n\treg \t[nSRAMs*3-1:0]\t\t\tl_ram_idx;\n\twire\t[2:0]\t\t\t\t\tl_awkCnt;\n\t\t\n\treg     [nSRAMs*5-1:0]\t\t\tl_modiPosIn4;\t\n\treg \t[2:0] \t\t\t\t\tl_X,l_Y;\n\treg\t\t\t\t\t\t\t\tl_isAbove,l_isLeft,l_isTopLeft;\n\treg \t[5:0]\t\t\t\t\tl_mode;\n\treg \t[2:0] \t\t\t\t\tl_tuSize;\n\treg \t[12:0] \t\t\t\t\tl_xTb;\t\t\n\treg \t[12:0] \t\t\t\t\tl_yTb;\t\t\n\treg \t[3:0] \t\t\t\t\tl_preStage;\n\treg\t\t\t\t\t\t\t\tl_isLastCycInTb;\n\treg \t[AW*8-1:0] \t\t\t\tl_pseuAdr;\n\treg\t\t[1:0]\t\t\t\t\tl_partIdx;\n\treg \t[63:0] \t\t\t\t\tl_verLevel;\n\treg \t[63:0] \t\t\t\t\tl_horLevel;\n\treg\t\t[15:0]\t\t\t\t\tl_horFlag,l_verFlag;\n\treg\t\t\t\t\t\t\t\tl_isFirstCycInTb;\n\treg\t\t[2:0]\t\t\t\t\tl_order;\n\treg\t\t\t\t\t\t \t\tl_isLtBorder;\n\treg\t\t[5:0]\t\t\t\t\tl_BtBorderInfo;\n\treg\t\t[5:0]\t\t\t\t\tl_RtBorderInfo;\n\treg\t\t[1:0]\t\t\t\t\tl_cIdx;\n\treg\t\t\t\t\t\t\t\tl_isInter;\n\twire \t\t\t\t\t\t\tl_modeHor;\n\twire\t[2:0] \t\t\t\t\tl_X_tr,l_Y_tr;\t\t\t\n\n\twire \t[11:0] \t\t\t\t\tmove;\n\twire\t[19:0] \t\t\t\t\tweight;\n\t\n\t\n\t\n\t\n\treg \t\t\t\t\t\t\tl1_modeHor;\n\treg \t[5:0]\t\t\t\t\tl1_mode;\t\t\n\treg \t[2:0] \t\t\t\t\tl1_X,l1_Y;\n\treg \t[12:0] \t\t\t\t\tl1_xTb;\t\n\treg \t[12:0] \t\t\t\t\tl1_yTb;\t\t\n\treg \t[47:0] \t\t\t\t\tl1_ref_pos;\n\treg \t[15:0] \t\t\t\t\tl1_ref_TLADflag;\n\treg \t[3:0] \t\t\t\t\tl1_preStage;\t \n\treg\t\t\t\t\t\t\t\tl1_isLastCycInTb;\n\treg\t\t[2:0]\t\t\t\t\tl1_tuSize;\n\treg\t\t[1:0]\t\t\t\t\tl1_partIdx;\n\treg\t\t[15:0]\t\t\t\t\tl1_horFlag;\n\treg\t\t[15:0]\t\t\t\t\tl1_verFlag;\n\treg\t\t\t\t\t\t\t\tl1_isFirstCycInTb;\n\treg\t\t[2:0]\t\t\t\t\tl1_order;\n\treg \t[nSRAMs*3-1:0]\t\t\tl1_ram_idx;\n\treg\t\t\t\t\t\t \t\tl1_isLtBorder;\n\treg\t\t[5:0]\t\t\t\t\tl1_BtBorderInfo;\n\treg\t\t[5:0]\t\t\t\t\tl1_RtBorderInfo; \n\treg\t\t[1:0]\t\t\t\t\tl1_cIdx;\n\treg\t\t[12:0]\t\t\t\t\tl1_xTb_cr;\t\n\treg  \t[2:0]\t\t\t\t\tl1_tuSize_cr;\n\treg\t\t\t\t\t\t\t\tl1_isInter;\t \n\n\twire\t[3*24-1:0]\t\t\t\tidx_mapped_;\n\twire\t[53:0]\t\t\t\t\tl1_options;\n\twire \t[MAINREF_DW-1:0]\t\tl1_mainRefReg;\n\twire\t[bitDepthY-1:0] \t\tl1_unFilDC;\n\twire \t[bitDepthY-1:0] \t\tl1_top_right_pixel,l1_bottom_left_pixel;\n\twire \t[bitDepthY-1:0] \t\tl1_sub_top_left_pixel_P;\n\twire\t\t[2:0]\t\t\t\tl1_opt_recon;\n\treg\t\t[2:0] \t\t\t\t\tl1_X_tr,l1_Y_tr;\t\t\t\n\twire\t[1:0]\t\t\t\t\tl1_unFil_opt;\n\t\n\t\n\t\n\t\n\n\n\twire \tsigned [6:0] \t\t\tangle;\n\twire \t[4:0] \t\t\t\t\tang;     \n \n\treg \t\t\t\t\t\t\tl2_modeHor;\n\twire \t[bitDepthY*4-1:0] \t\tbyPa_P_DR_1;\n\twire \t[bitDepthY*4-1:0] \t\tbyPa_P_DR_1_cr;\n\twire \t[bitDepthY*16-1:0] \t\tbyPa_P_A_2;\n\twire \t[bitDepthY*11-1:0]\t\tbyPa_P_A_2_cr;\n\twire \t[bitDepthY*6-1:0] \t\tbyPa_DW_A_3;\n\twire   [bitDepthY*2-1:0] \t\tbtRtSamples;\n\n\treg \t[19:0] \t\t\t\t\tl2_weight;\n\n\twire \t\t\t\t\t\t\tl2_isPredFilter;\n\twire \t[bitDepthY*16-1:0] \t\tpredSamples;\t\t\n\treg\t[2:0] \t\t\t\t\t\tl2_X_tr,l2_Y_tr;\t\t\t\n\twire \t[SRAMDW*8-1:0] \t\t\tsub_data_P;\n\n\twire \t[bitDepthY*4-1:0] \t\tby4_1_forStop;\n\twire \t[bitDepthY*4-1:0] \t\tby4_1_forStop_cr;\n\twire\t[4:0]\t\t\t\t\tby4_1_forStop_pos;\n\t \n\twire \t[realAW_TL_Y-1:0]   \tw_addr_TL_;\n\twire \t[realAW_Y*8-1:0]\t   \tw_addr_;\n\twire \t[bitDepthY-1:0]    \t\tw_data_TL_;\n\twire \t[SRAMDW*8-1:0] \t\t\tw_data_;\n\twire \t[8:0]  \t\t\t\t\twE_n_;\n\twire    [bitDepthY*16-1:0] \t\treconSamples;\t\n\twire    \t\t\t\t\t\tbDelayWrite;\n\t \n\t \t \n\treg \t[2:0] \t\t\t\t\tl2_X,l2_Y;\n\treg \t[12:0] \t\t\t\t\tl2_xTb;\t\n\treg \t[12:0] \t\t\t\t\tl2_yTb;\t\t\n\treg \t[5:0] \t\t\t\t\tl2_mode; \n\treg \t[3:0] \t\t\t\t\tl2_preStage;\t \n\treg\t\t\t\t\t\t\t\tl2_isLastCycInTb;\n\treg\t\t[2:0]\t\t\t\t\tl2_tuSize;\n\treg\t\t[1:0]\t\t\t\t\tl2_partIdx;\n\treg\t\t[15:0]\t\t\t\t\tl2_horFlag;\n\treg\t\t[15:0]\t\t\t\t\tl2_verFlag;\n\treg\t\t\t\t\t\t\t\tl2_isFirstCycInTb;\n\treg\t\t[2:0]\t\t\t\t\tl2_order;\n\treg\t\t\t\t\t\t \t\tl2_isLtBorder;\n\treg\t\t[5:0]\t\t\t\t\tl2_BtBorderInfo;\n\treg\t\t[5:0]\t\t\t\t\tl2_RtBorderInfo; \n\treg\t\t[1:0]\t\t\t\t\tl2_cIdx;\n\treg\t\t\t\t\t\t\t\tl2_isInter;\t \n\t \n\treg \t[11:0] \t\t\t\t\tl2_move;\n\treg\t\t[2:0]\t\t\t\t\tl2_opt_recon;\n\t\n\treg \t[MAINREF_DW-1:0]\t\tl2_mainRefReg;\n\treg\t\t[bitDepthY-1:0] \t\tl2_unFilDC;\n\treg \t[bitDepthY-1:0] \t\tl2_top_right_pixel,l2_bottom_left_pixel;\n\treg \t[bitDepthY-1:0] \t\tl2_sub_top_left_pixel_P;\n\treg\t    [1:0]\t\t\t\t\tl2_unFil_opt;\n\treg \t[(bitDepthY+3)*2-1:0] \tl2_DC_xxxx_data;\n\t\n\twire [(bitDepthY+1)*16-1:0]\t\tr_r0,r_r1;\t\n\n\twire [(bitDepthY+4)*16-1:0]\t\tr_plan_0;\t\n\twire [(bitDepthY+4)*16-1:0]\t\tr_plan_1;\t\n\twire [(PLA_2_BDEPTH)*16-1:0]\tr_plan_2;\t\n\twire [(PLA_2_BDEPTH)*16-1:0]\tr_plan_3;\t\n\twire [(bitDepthY+3)*2-1:0] \t\tl1_DC_xxxx_data;\n\t\n\t\t\n\twire [3*8-1:0]\t\t\t\t\topt_w;\n\twire [2:0]\t\t\t\t\t\topt_w_tl;\t\n\twire [4:0]\t\t\t\t\t\tw_TL_rela_;\n\t\n\t\n\t\n\t\n\treg \t[realAW_TL_Y-1:0]   \tw_addr_TL;\n\treg \t[realAW_Y*8-1:0]\t   \tw_addr;\n\treg \t[bitDepthY-1:0]    \t\tw_data_TL;\n\treg \t[SRAMDW*8-1:0] \t\t\tw_data;\n\treg \t[8:0]  \t\t\t\t\twE_n;\n\treg\t\t[2:0]\t\t\t\t\tl3_tuSize;\n\treg\t\t[1:0]\t\t\t\t\tl3_cIdx;\n\t\n\t\n\t\t\n\tassign      nMaxCblog2 = !isChroma? nMaxCUlog2:(nMaxCUlog2-1);\n\tassign      l_xTbInCU = l_xTb%(1<<nMaxCblog2);\n\tassign \t\tl_yTbInCU = l_yTb%(1<<nMaxCblog2);\n\t\n\tassign \t\tl2_isPredFilter =    (l2_tuSize >3'd4 || isChroma) ? 1'b0 : 1'b1;\n\t\t\n\tassign      lz_isFirstCycInTb  = (lz_order == 0);\n\t   \n\tassign \t\tl_modeHor = l_mode < 18 && l_mode>1 ;\n\t\n\tassign \t\tisLastCycInTb = (tuSize==2 && preStage<2)?1:((order==7)?1:0);\n\t\n\n\twire      \tbStop_z,bStop_0,bStop_1,bStop_1_1,bStop_2,bStop_3;\t\n\twire      \tbStopz,bStop0,bStop1,bStop1_1,bStop2,bStop3;\n\twire      \tbStop;\n\n\talways @(posedge clk or negedge arst_n) begin\n\t\tif(!arst_n)\n\t\t\t{resi_rdy} <= 0 ;\n\t\telse if(!rst_n)\n\t\t\t{resi_rdy} <= 0 ;\n\t\telse \tbegin\n\t\t\tif(!bStop_2)\n\t\t\t\tresi_rdy <= !bStop1_1 && l1_preStage[3] ;\n\t\tend\n\t\t\n\tend\n\t\n\tassign      inter_pred_rdy = l2_isInter && resi_rdy && !bStop2;\n\t\n\treg\t\t[2:0]\t\t\t\t\tcnt;\n\treg\t\t\t\t\t\t\t\tflag;\n\t\n\twire\t\tisLast32In64_inter = (cnt==3 || flag);\n\twire \t\tflag_1 = (isLastCycInTb && cIdx[0]==0 && !flag && cnt!=3);\n\twire \t[2:0]\t\t\t\t\tcnt_ = cnt+1;\t\t\t\t\n\twire \t[2:0]     \t\t\t\tp_tuSize ;\n\twire\t[12:0] \t\t\t\t\tp_xTb ;\n\t\n\n\tassign\tp_tuSize\t= {l1_cIdx,l_cIdx}=={4'b0110}? l1_tuSize_cr: l1_tuSize; \n\tassign\tp_xTb\t\t=   {l1_cIdx,l_cIdx}=={4'b0110}? l1_xTb_cr : l1_xTb ;\n\t\n\t\n\talways @(posedge clk or negedge arst_n)  begin\n\t  if(!arst_n) begin\n\t\t{isInter,xCtb_,yCtb_,tuSizeLog2_,xTb_rela_,yTb_rela_,mode_} <= 0;\n\t\tcnt <= 0;\n\t\tflag <= 1;\n\t\tend\n\t  else if(!rst_n)\tbegin\n\t\t{isInter,xCtb_,yCtb_,tuSizeLog2_,xTb_rela_,yTb_rela_,mode_} <= 0;\n\t\tcnt <= 0;\n\t\tflag <= 1; \n\t\tend\n\t  else begin\n\t\t\t\n\t\t\tif(tuSizeLog2!=6 && !flag_1 && (cabad_intra_rdy && cabad_intra_val)) begin\n\t\t\t\tisInter      <= ~intra_cuPredMode[0];\n\t\t\t\txCtb_        <= xCtb;\n\t\t\t\tyCtb_        <= yCtb;\n\t\t\t\ttuSizeLog2_  <= tuSizeLog2;\n\t\t\t\tmode_        <= mode;\n\t\t\tend \n\t\t\telse if((cabad_intra_rdy && cabad_intra_val && tuSizeLog2==6) && !flag_1) begin\n\t\t\t\tisInter      <= ~intra_cuPredMode[0];\n\t\t\t\ttuSizeLog2_  <= 5;\n\t\t\t\txCtb_        <= xCtb;\n\t\t\t\tyCtb_        <= yCtb;\n\t\t\tend\n\t\t\t\n\t\t\tif(!flag_1 && (cabad_intra_rdy && cabad_intra_val)) begin\n\t\t\t\txTb_rela_    <= xTb_rela;\n\t\t\t\tyTb_rela_    <= yTb_rela;\n\t\t\tend\n\t\t\telse if(flag_1 && !bStop)\tbegin\n\t\t\t\txTb_rela_    <= ((cnt_[0])<<3);\n\t\t\t\tyTb_rela_    <= ((cnt_[1])<<3);\n\t\t\tend\n\t\t\t\n\t\t\tif(cabad_intra_rdy && cabad_intra_val) begin\n\t\t\t\tflag \t\t\t<= (tuSizeLog2!=6 )? 1: 0;\n\t\t\t\tend\n\t\t\tif(!bStop) begin\n\t\t\t\tif(flag_1)\n\t\t\t\t\tcnt\t\t\t<= (cnt +1);\n\t\t\t\telse if(isLastCycInTb && cIdx[0]==0)\n\t\t\t\t\tcnt\t\t\t<= 0;\n\t\t\tend\n\t\t\t\n\t    end\n\tend\n\t\n\n\t\nintra_stopCtrl cStopCtrl(\n\t\t.clk(clk)\n\t\t,.rst_n(rst_n)\n\t\t,.arst_n(arst_n)\n\t\t\n\t\t,.l_awkCnt(l_awkCnt)\n\t\t,.resi_val(resi_val)\n\t\t,.cabad_intra_val(cabad_intra_val)\n\t\t,.isLastCycInTb(isLastCycInTb)\n\t\t,.cIdx(cIdx[0])\n\t\t,.isLast32In64_inter(isLast32In64_inter)\n\t\t\n\t\t,.bStop(bStop)\n\t\t,.bStop_z(bStop_z)\n\t\t,.bStop_0(bStop_0)\n\t\t,.bStop_1(bStop_1)\n\t\t,.bStop_1_1(bStop_1_1)\n\t\t,.bStop_2(bStop_2)\n\t\t,.bStop_3(bStop_3)\n\t\t,.bStopz(bStopz)\n\t\t,.bStop0(bStop0)\n\t\t,.bStop1(bStop1)\n\t\t,.bStop1_1(bStop1_1)\n\t\t,.bStop2(bStop2)\n\t\t,.bStop3(bStop3)\n\t\t,.cabad_intra_rdy(cabad_intra_rdy)\n\t);\n\t\n \t\t always @(posedge clk or negedge arst_n) begin\n\t\t\t if(~arst_n)\tbegin\n\t\t\t\t {lz_tuSize,lz_mode,lz_X,lz_Y,lz_xTb,lz_yTb, \n\t\t\t\t lz_isLastCycInTb,lz_order,lz_preStage,lz_pseuAdr} <= 0;\t\n\t\t\t\t lz_cIdx <= 3;\n\t\t\t \n\t\t\t\t {l0_tuSize,l0_mode,l0_isAbove,l0_isLeft,l0_isTopLeft, l0_X,l0_Y,l0_xTb,l0_yTb, \n\t\t\t\t l0_partIdx,l0_verLevel,l0_horLevel,l0_horFlag,l0_verFlag,l0_isLastCycInTb,l0_isFirstCycInTb,\n\t\t\t\t l0_order,l0_isLtBorder,l0_BtBorderInfo,l0_RtBorderInfo,l0_preStage} <= 0;\t\n\t\t\t\t l0_cIdx <= 3;\n\t\t\t\t\t\t \n\t\t\t\t l_tuSize <= 0;\n\t\t\t\t l_mode <=  0;\n\t\t\t\t l2_mode <=  0;\n\t\t\t\t l_X <=  0;\n\t\t\t\t l_Y <=  0;\n\t\t\t\t l_xTb <= 0;\n\t\t\t\t l_yTb <= 0;\t\n\t\t\t\t l_partIdx <= 0;\n\t\t\t\t l_verLevel <= 0;\n\t\t\t\t l_horLevel <= 0;\n\t\t\t\t l_horFlag <= 0;\n\t\t\t\t l_verFlag <= 0;\n\t\t\t\t l_isLastCycInTb <= 0;\n\t\t\t\t l_isFirstCycInTb <= 0;\n\t\t\t\t l_order \t<= 0;\n\t\t\t\t l2_order\t<= 0;\n\t\t\t\t r_reconSamples<=0;\n\t\t\t\t l_isLtBorder <= 0;\n\t\t\t\t l_isAbove <=0;\n\t\t\t\t l_isLeft <= 0;\n\t\t\t\t l_isTopLeft <=0;\n\t\t\t\t l_BtBorderInfo <=0;\n\t\t\t\t l2_BtBorderInfo <=0;\n\t\t\t\t l_RtBorderInfo <=0;\n\t\t\t\t l2_RtBorderInfo <=0;\n\t\t\t\t l_pseuAdr  <= 0;\n\t\t\t\t l_modiPosIn4 <=0;\n\t\t\t\t l_ram_idx <=0;\n\t\t\t\t  \n\t\t\t\t r_addr_TL <= 0;\n\t\t\t\t r_addr <= 0;\n\t\t\t\t\n\t\t\t\t l_cIdx <= 3;\n\t\t\t\t \n\t\t\t\t \n\t\t\t\t {l1_mode,l1_tuSize,l1_ref_pos,l1_ref_TLADflag,l1_X,l1_Y,l1_xTb,l1_yTb,l1_partIdx,l1_isLastCycInTb,\n\t\t\t\tl1_preStage,l1_horFlag,l1_verFlag,l1_isFirstCycInTb,l1_order,l1_ram_idx,l1_isLtBorder,l1_BtBorderInfo,\n\t\t\t\tl1_RtBorderInfo,l1_modeHor,l1_isInter}<= 0; \n\t\t\t\t l1_cIdx <= 3;\n\t\t\t\t  {l1_X_tr,l1_Y_tr} <= 0;\n\t\t\t\t  \n\t\t\t\t  \n\t\t\t\t l2_tuSize <= 0;\n\t\t\t\t l2_X <=  0;\n\t\t\t\t l2_Y <=  0; \n\t\t\t\t l2_xTb <= 0;\n\t\t\t\t l2_yTb <= 0;\t\n\t\t\t\t l2_partIdx <= 0;\n\t\t\t\t l2_isLastCycInTb <= 0;\n\t\t\t\t \n\n\t\t\t\t l_preStage <= 0;\n\t\t\t\t l2_preStage <=0;\n\t\t\t\t l2_horFlag <= 0;\n\t\t\t\t l2_verFlag <= 0;\n\t\t\t\t l2_isFirstCycInTb <= 0;\n\t\t\t\t l2_isLtBorder <= 0;\n\t\t\t\t l2_cIdx <= 3;\t\t\t\t \n\t\t\t\t l1_xTb_cr <= 0;\n\t\t\t\t l1_tuSize_cr <=0; \n\t\t\t\t l2_modeHor <= 0;\n\t\t\t\t {l2_move,l2_weight} <=0;\n\t\t\t\t {l2_X_tr,l2_Y_tr} <= 0;\n\t\t\t\t l2_unFil_opt\t<=\t0;\n\t\t\t\t l2_DC_xxxx_data <=\t0;\n\t\t\t\t \n\t\t\t\t l3_tuSize <= 0;\n\t\t\t\t l3_cIdx <= 3;\n\t\t\t\t \n\t\t\t\t w_addr_TL <= 0;\n\t\t\t\t w_addr <= 0;\n\t\t\t\t w_data_TL <= 0;\n\t\t\t\t w_data <= 0;\n\t\t\t\t wE_n <= {9'b111111111};\n\t\t\t\t \n\t\t\t\t {l0_isInter,l_isInter,l2_isInter} <= 0;\n\t\t\t end \n\t\t\t else if(~rst_n)\tbegin\n\t\t\t\t {lz_tuSize,lz_mode,lz_X,lz_Y,lz_xTb,lz_yTb, \n\t\t\t\t lz_isLastCycInTb,lz_order,lz_preStage,lz_pseuAdr} <= 0;\t\n\t\t\t\t lz_cIdx <= 3;\n\t\t\t\t \n\t\t\t\t {l0_tuSize,l0_mode,l0_isAbove,l0_isLeft,l0_isTopLeft, l0_X,l0_Y,l0_xTb,l0_yTb, \n\t\t\t\t l0_partIdx,l0_verLevel,l0_horLevel,l0_horFlag,l0_verFlag,l0_isLastCycInTb,l0_isFirstCycInTb,\n\t\t\t\t l0_order,l0_isLtBorder,l0_BtBorderInfo,l0_RtBorderInfo,l0_preStage} <= 0;\t\n\t\t\t\t l0_cIdx <= 3;\n\t\t\t\t\n\t\t\t\t l_tuSize <= 0;\n\t\t\t\t l_mode <=  0;\n\t\t\t\t \n\t\t\t\t l_X <=  0;\n\t\t\t\t l_Y <=  0;\n\t\t\t\t l_xTb <= 0;\n\t\t\t\t l_yTb <= 0;\t\n\t\t\t\t l_partIdx <= 0;\n\t\t\t\t l_verLevel <= 0;\n\t\t\t\t l_horLevel <= 0;\n\t\t\t\t l_horFlag <= 0;\n\t\t\t\t l_verFlag <= 0;\n\t\t\t\t l_isLastCycInTb <= 0;\n\t\t\t\t l_isFirstCycInTb <= 0;\n\t\t\t\t l_isAbove <=0;\n\t\t\t\t l_isLeft <= 0;\n\t\t\t\t l_isTopLeft <=0;\n\t\t\t\t l_order \t<= 0;\n\t\t\t\t l_isLtBorder <= 0;\n\t\t\t\t \n\t\t\t\t l_BtBorderInfo <=0;\n\t\t\t\t l_RtBorderInfo <=0;\n\n\t\t\t\t l_pseuAdr  <= 0;\n\t\t\t\t l_modiPosIn4 <=0;\n\t\t\t\t l_preStage <= 0;\n\t\t\t\t l_ram_idx <=0;\n\t\t\t\t \n\t\t\t\t r_addr_TL <= 0;\n\t\t\t\t r_addr <= 0;\n\t\t\t\t l_cIdx <= 3;\n\t\t\t\t \n\t\t\t\t \n\t\t\t\t \n\t\t\t\t{l1_mode,l1_tuSize,l1_ref_pos,l1_ref_TLADflag,l1_X,l1_Y,l1_xTb,l1_yTb,l1_partIdx,l1_isLastCycInTb,\n\t\t\t\tl1_preStage,l1_horFlag,l1_verFlag,l1_isFirstCycInTb,l1_order,l1_ram_idx,l1_isLtBorder,l1_BtBorderInfo,\n\t\t\t\tl1_RtBorderInfo,l1_modeHor,l1_isInter}<= 0; \n\t\t\t\t l1_cIdx <= 3;\n\t\t\t\t {l1_X_tr,l1_Y_tr} <= 0;\n\t\t\t\t \n\t\t\t\t \n\n\t\t\t\t l2_tuSize <= 0;\n\t\t\t\t l2_mode <=  0;\n\t\t\t\t l2_order\t<= 0;\n\t\t\t\t l2_X <=  0;\n\t\t\t\t l2_Y <=  0; \n\t\t\t\t l2_xTb <= 0;\n\t\t\t\t l2_yTb <= 0;\t\n\t\t\t\t l2_partIdx <= 0;\n\t\t\t\t l2_isLastCycInTb <= 0;\n\t\t\t\t {l2_X_tr,l2_Y_tr} <= 0;\n\n\t\t\t\t l2_BtBorderInfo <=0;\t\t\n\t\t\t\t l2_RtBorderInfo <=0;\t\n\t\t\t\t l2_preStage <=0;\n\t\t\t\t l2_horFlag <= 0;\n\t\t\t\t l2_verFlag <= 0;\n\t\t\t\t l2_isFirstCycInTb <= 0;\n\t\t\t\t l2_isLtBorder <= 0;\n\t\t\t\t l2_cIdx <= 3;\n\t\t\t\t l1_xTb_cr <= 0;\n\t\t\t\t l1_tuSize_cr <=0; \n\t\t\t\t l2_modeHor <= 0;\n\t\t\t\t {l2_move,l2_weight} <=0;\n\t\t\t\t l2_unFil_opt\t<=\t0;\n\t\t\t\t l2_DC_xxxx_data <=\t0;\n\t\t\t\t \n\t\t\t\t \n\t\t\t\t l3_tuSize <= 0;\n\t\t\t\t l3_cIdx <= 3;\n\t\t\t\t r_reconSamples<=0;\n\t\t\t\t \n\t\t\t\t w_addr_TL <= 0;\n\t\t\t\t w_addr <= 0;\n\t\t\t\t w_data_TL <= 0;\n\t\t\t\t w_data <= 0;\n\t\t\t\t wE_n <= {9'b111111111};\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t{l0_isInter,l_isInter,l2_isInter} <= 0;\n\t\t\t end\n\t\t\t else begin\n\t\t\t\tif(!bStop_z)\tbegin\n\t\t\t\t\t lz_tuSize <= tuSize;\n\t\t\t\t\t lz_mode <=  mode_;\n\t\t\t\t\t lz_X <=  X;\n\t\t\t\t\t lz_Y <=  Y;\n\t\t\t\t\t lz_xTb <= xTb;\n\t\t\t\t\t lz_yTb <= yTb;\t\n\t\t\t\t\t lz_pseuAdr <= pseuAdr;\n\t\t\t\t\t lz_isLastCycInTb <= isLastCycInTb;\n\t\t\t\t\t lz_order \t<= order;\n\t\t\t\t\t lz_preStage <= preStage;\n\t\t\t\t\t lz_cIdx <= cIdx;\n\t\t\t\t\t {lz_isInter} <= {isInter};\n\t\t\t\tend\n\t\t\t\tif(!bStop_0)\tbegin\n\t\t\t\t\t l0_tuSize <= lz_tuSize;\n\t\t\t\t\t l0_mode <=  lz_mode;\n\t\t\t\t\t l0_isAbove <=lz_isAbove;\n\t\t\t\t\t l0_isLeft <= lz_isLeft;\n\t\t\t\t\t l0_isTopLeft <=lz_isTopLeft;\n\t\t\t\t\t l0_X <=  lz_X;\n\t\t\t\t\t l0_Y <=  lz_Y;\n\t\t\t\t\t l0_xTb <= lz_xTb;\n\t\t\t\t\t l0_yTb <= lz_yTb;\t\n\t\t\t\t\t l0_partIdx <= lz_partIdx;\n\t\t\t\t\t l0_verLevel <= verLevel;\n\t\t\t\t\t l0_horLevel <= horLevel;\n\t\t\t\t\t l0_horFlag <= horFlag;\n\t\t\t\t\t l0_verFlag <= verFlag;\n\t\t\t\t\t l0_isLastCycInTb <= lz_isLastCycInTb;\n\t\t\t\t\t l0_isFirstCycInTb <= lz_isFirstCycInTb;\n\t\t\t\t\t l0_order \t<= lz_order;\n\t\t\t\t\t l0_isLtBorder <= lz_isLtBorder;\n\t\t\t\t\t l0_BtBorderInfo <= lz_BtBorderInfo;\n\t\t\t\t\t l0_RtBorderInfo <=lz_RtBorderInfo;\n\t\t\t\t\t l0_preStage <= lz_preStage;\n\t\t\t\t\t r_addr_TL <= r_addr_TL_;\n\t\t\t\t\t r_addr <= r_addr_;\n\t\t\t\t\t l0_cIdx <= lz_cIdx;\n\t\t\t\t\t {l0_isInter} <= {lz_isInter};\n\t\t\t\tend\n\t\t\t\tif(!bStop_1)\tbegin\n\t\t\t\t\t l_tuSize <= l0_tuSize;\n\t\t\t\t\t l_mode <=  l0_mode;\n\t\t\t\t\t l_isAbove <=l0_isAbove;\n\t\t\t\t\t l_isLeft <= l0_isLeft;\n\t\t\t\t\t l_isTopLeft <=l0_isTopLeft;\n\t\t\t\t\t l_X <=  l0_X;\n\t\t\t\t\t l_Y <=  l0_Y;\n\t\t\t\t\t l_xTb <= l0_xTb;\n\t\t\t\t\t l_yTb <= l0_yTb;\t\n\t\t\t\t\t l_partIdx <= l0_partIdx;\n\t\t\t\t\t l_verLevel <= l0_verLevel;\n\t\t\t\t\t l_horLevel <= l0_horLevel;\n\t\t\t\t\t l_horFlag <= l0_horFlag;\n\t\t\t\t\t l_verFlag <= l0_verFlag;\n\t\t\t\t\t l_isLastCycInTb <= l0_isLastCycInTb;\n\t\t\t\t\t l_isFirstCycInTb <= l0_isFirstCycInTb;\n\t\t\t\t\t l_order \t<= l0_order;\n\t\t\t\t\t l_isLtBorder <= l0_isLtBorder;\n\t\t\t\t\t l_BtBorderInfo <= l0_BtBorderInfo;\n\t\t\t\t\t l_RtBorderInfo <=l0_RtBorderInfo;\n\t\t\t\t\t l_preStage <= l0_preStage;\n\t\t\t\t\t l_pseuAdr  <= l0_pseuAdr;\n\t\t\t\t\t l_modiPosIn4 <=l0_modiPosIn4;\n\t\t\t\t\t l_ram_idx <= l0_ram_idx;\n\t\t\t\t\t l_cIdx <= l0_cIdx;\n\t\t\t\t\t {l_isInter} <= {l0_isInter};\n\t\t\t\tend\n\t\t\t\tif(!bStop_1_1)\tbegin\n\t\t\t\t\tl1_mode <=  l_mode;\n\t\t\t\t\tl1_ref_pos <= ref_pos;\n\t\t\t\t\tl1_ref_TLADflag <= ref_TLADflag; \n\t\t\t\t\tl1_tuSize <= l_tuSize;\n\t\t\t\t\tl1_X <=  l_X;\n\t\t\t\t\tl1_Y <=  l_Y; \n\t\t\t\t\tl1_xTb <= l_xTb;\n\t\t\t\t\tl1_yTb <= l_yTb;\t\n\t\t\t\t\tl1_partIdx <= l_partIdx;\n\t\t\t\t\tl1_isLastCycInTb <= l_isLastCycInTb;\n\t\t\t\t\t{l1_X_tr,l1_Y_tr} <=  {l_X_tr,l_Y_tr};\n\n\t\t\t\t\tl1_preStage <=l_preStage;\n\t\t\t\t\tl1_horFlag <= l_horFlag;\n\t\t\t\t\tl1_verFlag <= l_verFlag;\n\t\t\t\t\tl1_isFirstCycInTb <= l_isFirstCycInTb;\n\t\t\t\t\tl1_order\t<= l_order;\n\t\t\t\t\tl1_ram_idx <= l_ram_idx;\n\t\t\t\t\tl1_isLtBorder <= l_isLtBorder;\n\t\t\t\t\tl1_BtBorderInfo <= l_BtBorderInfo;\t\n\n\t\t\t\t\tl1_RtBorderInfo <=l_RtBorderInfo;\n\n\t\t\t\t\tl1_cIdx <= l_cIdx;\n\t\t\t\t\tl1_modeHor <= l_modeHor;\n\t\t\t\t\t{l1_isInter} <= {l_isInter};\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tif(!bStop_2)\tbegin\n\t\t\t\t\t \n\t\t\t\t\t l2_mode <=  l1_mode;\n\t\t\t\t\t l2_tuSize <= l1_tuSize;\n\t\t\t\t\t l2_X <=  l1_X;\n\t\t\t\t\t l2_Y <=  l1_Y; \n\t\t\t\t\t l2_xTb <= l1_xTb;\n\t\t\t\t\t l2_yTb <= l1_yTb;\t\n\t\t\t\t\t l2_partIdx <= l1_partIdx;\n\t\t\t\t\t l2_isLastCycInTb <= l1_isLastCycInTb;\n\t\t\t\t\t {l2_X_tr,l2_Y_tr} <=  {l1_X_tr,l1_Y_tr};\n\n\t\t\t\t\t l2_preStage <= l1_preStage;\n\t\t\t\t\t l2_horFlag <= l1_horFlag;\n\t\t\t\t\t l2_verFlag <= l1_verFlag;\n\t\t\t\t\t l2_isFirstCycInTb <= l1_isFirstCycInTb;\n\t\t\t\t\t l2_order\t<= l1_order;\n\t\t\t\t\t l2_isLtBorder <= l1_isLtBorder;\n\t\t\t\t\t l2_BtBorderInfo <= l1_BtBorderInfo;\t\n\n\t\t\t\t\t l2_RtBorderInfo <=l1_RtBorderInfo;\n\t\t\t\t\t \n\t\t\t\t\t l2_cIdx <= l1_cIdx;\n\t\t\t\t\t l2_modeHor <= l1_modeHor;\n\t\t\t\t\t {l2_isInter} <= {l1_isInter};\n\t\t\t\t\t {l2_move,l2_weight} <={move,weight};\n\t\t\t\t\t \n\t\t\t\t\t l2_mainRefReg <= l1_mainRefReg;\n\t\t\t\t\t l2_sub_top_left_pixel_P <= l1_sub_top_left_pixel_P;\n\t\t\t\t\t l2_top_right_pixel <= l1_top_right_pixel;\n\t\t\t\t\t l2_bottom_left_pixel <= l1_bottom_left_pixel;\n\t\t\t\t\t l2_unFilDC <= l1_unFilDC;\n\t\t\t\t\t l2_opt_recon <= l1_opt_recon;\n\t\t\t\t\t l2_unFil_opt\t<=\tl1_unFil_opt;\n\t\t\t\t\t l2_DC_xxxx_data <=\t l1_DC_xxxx_data;\n\t\t\t\t\tend\n\t\t\t\tif(!bStop_3)\tbegin\n\t\t\t\t\t \n\t\t\t\t\t l3_tuSize <= l2_tuSize;\n\t\t\t\t\t l3_cIdx  <= l2_cIdx;\t\t\t\t \n\t\t\t   end\n\t\t\t \n\t\t\t\tif(resi_rdy && resi_val)\n\t\t\t\t\t r_reconSamples<=reconSamples;\n\t\t\t\t\t \n\t\t\t    if(!bDelayWrite)\tbegin\n\t\t\t\t\tif(!bStop_3)\tbegin\n\t\t\t\t\t w_addr_TL <= w_addr_TL_;\n\t\t\t\t\t w_addr <= w_addr_;\n\t\t\t\t\t w_data_TL <= w_data_TL_;\n\t\t\t\t\t w_data <= w_data_;\n\t\t\t\t\t wE_n <= wE_n_;\t\t\n\t\t\t\t   end\n\t\t\t   end\n\t\t\t\telse\tbegin\n\t\t\t\t\tif(!bStop_2)\tbegin\n\t\t\t\t\t w_addr_TL <= w_addr_TL_;\n\t\t\t\t\t w_addr <= w_addr_;\n\t\t\t\t\t w_data_TL <= w_data_TL_;\n\t\t\t\t\t w_data <= w_data_;\n\t\t\t\t\t wE_n <= wE_n_;\t\t\n\t\t\t\t\t end\n\t\t\t\tend\n\t\t\t\n\t\t\t\n\t\t\t\tif(l_cIdx == 2 && cIdx==1 && !bStop_1_1) \t\t\t\n\t\t\t\t\t{l1_xTb_cr,l1_tuSize_cr}  <= {l_xTb,l_tuSize};\n\t\t end\n\tend\n\n\n\n\n\talways @(*) begin\n\t\tif(w_addr_TL_ == r_addr_TL_ && rE_n_[8]==0 && wE_n_[8]==0)\n\t\t\trE_n_tmp[8] = 1;\n\t\telse\n\t\t\trE_n_tmp[8] = rE_n_[8];\n\tend\n\t\n\tgenerate genvar i;\n\t\t\tfor(i=0;  i<8; i=i+1) begin:xi\n\t\t\t\talways @(*) begin\n\t\t\t\t\tif(w_addr_[(8*realAW_Y-1-realAW_Y*i):(7*realAW_Y-realAW_Y*i)]==r_addr_[(8*realAW_Y-1-realAW_Y*i):(7*realAW_Y-realAW_Y*i)] && wE_n_[i]==0 && rE_n_[i]==0) \n\t\t\t\t\t\trE_n_tmp[i] = 1;\n\t\t\t\t\telse\n\t\t\t\t\t\trE_n_tmp[i] = rE_n_[i];\n\t\t\t\tend\n\t\t\tend\n\t\tendgenerate\n\n\talways @(posedge clk or negedge arst_n) begin\n\t\tif(!arst_n)\n\t\t\trE_n <= {9'b111111111};\n\t\telse if(!rst_n)\n\t\t\trE_n <= {9'b111111111};\n\t\telse if(!bStop_0) \n\t\t\trE_n <= rE_n_tmp;\n\tend\n\t\n\t\n\t\n\t\n\t\n\n\treg [12:0]  \t\t\tl3_xTb;\n\treg [12:0] \t\t\t\tl3_yTb;\n\treg [5:0]\t\t\t\tl3_mode;\n\treg [2:0]\t\t\t\tl3_X,l3_Y;\n\treg\t\t\t\t\t\tl3_isInter;\n\n\talways @(posedge clk or negedge arst_n)\n  if(!arst_n)\n    {l3_X,l3_Y,l3_mode,l3_xTb,l3_yTb,l3_isInter} <= 0;\n  else if(!rst_n)\n    {l3_X,l3_Y,l3_mode,l3_xTb,l3_yTb,l3_isInter} <= 0;\n  else if(!bStop_3)\n    {l3_X,l3_Y,l3_mode,l3_xTb,l3_yTb,l3_isInter} <= \n    {l2_X_tr,l2_Y_tr,l2_mode,l2_xTb,l2_yTb,l2_isInter};\n\t\n\treg  [20:0]  lineNum;\n\talways @(posedge clk or negedge arst_n)  begin\n\t  if(!arst_n)\n\t\tlineNum <= 1;\n\t  else begin\n\t\tif(resi_rdy && resi_val)\n\t\t\tlineNum <= lineNum+1;\n\t    end\n\tend\n\n\t\n\nintra_inputTrafo  #(.isChroma(isChroma)) cInputTrafo(\n\t.xCtb(xCtb_),\n\t.yCtb(yCtb_),\n\t.xTb_rela(xTb_rela_),\n\t.yTb_rela(yTb_rela_),\n\t.i_tuSize(tuSizeLog2_),\n\t.xTb(xTb),\t\t\n\t.yTb(yTb),\t\t\n\t.tuSize(tuSize)\n);\n\t\n\t\nintra_fsm #(.isChroma(isChroma)) cFSM(\n\t  .clk(clk)\n\t  ,.arst_n(arst_n)\n\t  ,.rst_n(rst_n)\n\t  ,.X(X)\n\t  ,.Y(Y)\n\t  ,.mode(mode_)\n\t  ,.tuSize(tuSize)\n\t  ,.preStage(preStage)\n\t  ,.order(order)\n\t  ,.bStop(bStop)\n\t  ,.cIdx(cIdx)\n\t  ,.isInter(isInter)\n);\n\nintra_pIdx #(.isChroma(isChroma)) cPIdx(\n    .xTb(lz_xTb)\n    ,.yTb(lz_yTb)\n    ,.tuSize(lz_tuSize)\n    ,.pIdx(lz_partIdx)\n);\n\n\nintra_read #(.AW(realAW_Y),.AW_TL(realAW_TL_Y),.isChroma(isChroma))cRead(\n\t.clk(clk),\n\t.arst_n(arst_n),\n\t.rst_n(rst_n),\n\t.bStop(bStopz),\n\t.bStop_(bStop_0),\n\t.pseuAdr(lz_pseuAdr),\t\t\n\t.pIdx(lz_partIdx),\n\t.X(lz_X),\n\t.Y(lz_Y),\n\t.xTb(lz_xTb),\n\t.yTb(lz_yTb),\n\t.tuSize(lz_tuSize),\n\t.r_addr(r_addr_),\t\t\n\t.r_addr_TL(r_addr_TL_),\n\t.rE_n(rE_n_),\n\t.horFlag(horFlag),\n\t.verFlag(verFlag),\n\t.verLevel_o(verLevel),\n\t.horLevel_o(horLevel),\n\t.isCalStage(lz_preStage[3]),\n\t.nMaxCUlog2(nMaxCblog2),\n\t.isFirstCycInTb(lz_isFirstCycInTb),\n\t.cIdx(lz_cIdx),\n\t.isRtBorder(lz_RtBorderInfo[5]),\n\t.isBtBorder(lz_BtBorderInfo[5]),\n\t.posRtBorderIn4(lz_RtBorderInfo[4:0]),\n\t.posBtBorderIn4(lz_BtBorderInfo[4:0]),\n\t.o_modiPsAdr(l0_pseuAdr),\n\t.o_modiPosIn4(l0_modiPosIn4),\n\t.o_ram_idx(l0_ram_idx)\n\t);\n\t\nintra_pseudoAddr  cPseudoAddr(\n\t.mode(mode_),\t\t\t\n\t.X(X),\t\t\t\t\n\t.Y(Y),\n\t.preStage(preStage)\n\t,.tuSize(tuSize)\n\t,.pseuAdr(pseuAdr)\n);\t\t\n\n\n\nintra_SRAMCtrl #(.bitDepth(bitDepthY),.AW(realAW_Y),.AW_TL(realAW_TL_Y)) cSRAMCtrl (\n\t .rclk(clk),\n\t .rAdr(r_addr),\n\t .rAdr_TL(r_addr_TL),\n\t .rData(r_data),\n\t .rData_TL(top_left_pixel),\n\t .rE_n(rE_n),\n\t .bStop_r(bStop0),\n\t\n \n\t \t \n\t .wclk(clk),\n\t .wAdr(w_addr),\n\t .wAdr_TL(w_addr_TL),\n\t .wData(w_data),\n\t .wData_TL(w_data_TL),\n\t .wE_n(wE_n)\n\t \n\t\n);\t\n\n\t\n\n\n\t \t \nintra_border cBorder (\n\t.xTb(lz_xTb)\t\t\t\n\t,.yTb(lz_yTb)\n\t,.pic_width_in_samples(pic_width_in_luma_samples>>isChroma)\n\t,.pic_height_in_samples(pic_height_in_luma_samples>>isChroma)\n\t,.first_ctu_in_slice_x(first_ctu_in_slice_x)\n\t,.first_ctu_in_slice_y(first_ctu_in_slice_y)\n\t,.first_ctu_in_tile_x(first_ctu_in_tile_x)\n\t,.first_ctu_in_tile_y(first_ctu_in_tile_y)\n\t,.last_ctu_in_tile_x(last_ctu_in_tile_x)\n\t,.last_ctu_in_tile_y(last_ctu_in_tile_y)\n\t,.nMaxCUlog2(nMaxCblog2)\n\t,.tuSize(lz_tuSize)\n\t\n\t,.isAbove(lz_isAbove)\t\n\t,.isLeft(lz_isLeft)\n\t,.isTopLeft(lz_isTopLeft)\n\t,.isLtBorder(lz_isLtBorder)\n\t,.isRtBorder(lz_RtBorderInfo[5])\n\t,.isBtBorder(lz_BtBorderInfo[5])\n\t,.posRtBorderIn4(lz_RtBorderInfo[4:0])\n\t,.posBtBorderIn4(lz_BtBorderInfo[4:0])\n);\n\n\nintra_refPosGen   cRefPosGen(\n\t.mode(l_mode),\t\t\t\n\t.X(l_X),\t\t\t\t\n\t.Y(l_Y),\n\t.ref_pos(ref_pos),   \n\t.ref_TLADflag(ref_TLADflag)  \n\t,.preStage(l_preStage)\n\t,.tuSize(l_tuSize)\n);\n\nintra_s2RefSubsti #(.bitDepth(bitDepthY), .isChroma(isChroma)) cS2RefSubsti (\n\t.pseuAdr(l_pseuAdr),\n\t.isAbove(l_isAbove),\n\t.isLeft(l_isLeft),\n\t.isTopLeft(l_isTopLeft),\n\t.tuSize(l_tuSize),\n\t.isBtBorder(l_BtBorderInfo[5]),\n\t.isRtBorder(l_RtBorderInfo[5]),\n\t.posBtBorderIn4(l_BtBorderInfo[4:0]),\n\t.posRtBorderIn4(l_RtBorderInfo[4:0]),\n\t.nMaxCUlog2(nMaxCblog2),\n\t.data(r_data),\n\t.data_tl(top_left_pixel),\n\t.horLevel_i(l_horLevel),\n\t.verLevel_i(l_verLevel),\n\t.verFlag(l_verFlag),\n\t.sub_data(sub_data),\n\t.sub_tl(sub_top_left_pixel),\n\t.partIdx(l_partIdx),\n\t.pre_tuSize(p_tuSize),\n\t.pre_xTb(p_xTb),\n\t.pre_modeHor(l2_modeHor),\n\t.xTb(l_xTb),\n\t.xTbInCU(l_xTbInCU),\n\t.yTbInCU(l_yTbInCU),\n\t.byPa_DW_A_3(byPa_DW_A_3[4*bitDepthY-1:0]),\n\t.byPa_P_A_2(byPa_P_A_2),\n\t.byPa_P_A_2_cr(byPa_P_A_2_cr),\n\t.bp_pos_1(bp_pos_1),\n\t.bp_pos_2(bp_pos_2),\n\t.bp_pos_3(bp_pos_3),\n\t.order(l_order),\n\t.clk(clk),\n\t.rst_n(rst_n),\n\t.arst_n(arst_n),\n\t.bStop(bStop_1),\n\t.i_modiPosIn4(l_modiPosIn4),\n\t.awkCnt(l_awkCnt),\n\t.cIdx(l_cIdx),\n\t\n\t.by4_1_forStop(by4_1_forStop),\n\t.by4_1_forStop_cr(by4_1_forStop_cr),\n\t.by4_1_forStop_pos(by4_1_forStop_pos),\n\t\n\t.substi_Opt(substi_Opt),\n\t.gp_bitDepth(gp_bitDepth)\n);\n\n\nintra_util #(.isChroma(isChroma)) intra_util(\n\t.clk(clk)\n\t,.rst_n(rst_n)\n\t,.arst_n(arst_n)\n\t,.bStop(bStop_1)\n\t,.bStop1(bStop1)\n\t,.X(l_X)\n\t,.Y(l_Y)\n\t,.mode(l_mode)\n\t,.tuSize(l_tuSize)\n\t,.preStage(l_preStage)\n\t,.options(l1_options)\n\t,.ref_pos(ref_pos)\n\t,.ref_flag(ref_TLADflag)\n\t,.ramIdxMapping(l_ram_idx)\n\t,.idx_mapped_(idx_mapped_)\n\t,.isInter(l_isInter)\n\t,.modeHor(l_modeHor)\n\t,.opt_recon(l1_opt_recon)\n\t,.unFil_opt_(l1_unFil_opt)\n);\n\t\n\n\n\n\n\n\nintra_l1_stage #(.bitDepthY(bitDepthY), .isChroma(isChroma), .ANG_BDEPTH(ANG_BDEPTH),.PLA_2_BDEPTH(PLA_2_BDEPTH)) intra_l1_stage(\n\t.sub_data(sub_data),\n\t.sub_top_left_pixel(sub_top_left_pixel),\n\t.byPa_P_DR_1(byPa_P_DR_1),\n\t.byPa_P_DR_1_cr(byPa_P_DR_1_cr),\n\t.substi_Opt(substi_Opt),\n\t.btRtSamples(btRtSamples)\n\t,.clk(clk)\n\t,.rst_n(rst_n)\n\t,.arst_n(arst_n)\n\t,.bStop_1_1(bStop_1_1)\n\t,.bStop_2(bStop_2)\n\t,.l1_mainRefReg(l1_mainRefReg)\t\t\n\t,.l1_top_right_pixel(l1_top_right_pixel)\n\t,.l1_bottom_left_pixel(l1_bottom_left_pixel)\n\t,.l1_sub_top_left_pixel_P(l1_sub_top_left_pixel_P)\n\t,.l1_ref_pos(l1_ref_pos)\n\t,.l1_ref_TLADflag(l1_ref_TLADflag)\n\t,.l1_mode(l1_mode)\n\t,.l1_tuSize(l1_tuSize)\n\t,.l1_X(l1_X)\n\t,.l1_Y(l1_Y)\n\t,.l1_preStage(l1_preStage)\n\t,.l1_ram_idx(l1_ram_idx)\n\t,.l1_options(l1_options)\n\t,.idx_mapped_(idx_mapped_)\n\t,.gp_bitDepth(gp_bitDepth)\n\t,.l1_weight(weight)\n\t,.l1_move(move)\n\t,.r_r0(r_r0)\n\t,.r_r1(r_r1)\n\t\n\t\n\n\n\t,.r_plan_0(r_plan_0)\n\t,.r_plan_1(r_plan_1)\n\t,.r_plan_2(r_plan_2)\n\t,.r_plan_3(r_plan_3)\n\t,.DC_xxxx_data(l1_DC_xxxx_data)\n);\n\n intra_util_w intra_util_w(\n\t.clk(clk),\n\t.arst_n(arst_n),\n\t.rst_n(rst_n),\n\t.bStop(bStop_2),\n\t.bStop_1_1(bStop_1_1)\n\t,.xTb(l1_xTb)\n\t,.yTb(l1_yTb)\n\t,.l_xTb(l_xTb)\n\t,.l_yTb(l_yTb)\n\t,.X(l1_X_tr)\n\t,.Y(l1_Y_tr)\n\t,.l_X(l_X_tr)\n\t,.l_Y(l_Y_tr)\n\t,.tuSize(l1_tuSize)\n\t,.partIdx(l1_partIdx)\n\t,.nMaxCUlog2(nMaxCblog2)\n\t,.verFlag(l1_verFlag)\n\t,.horFlag(l1_horFlag)\n\t,.isCalStage(l1_preStage[3])\n\t,.opt_w_tl_(opt_w_tl)\n\t,.opt_w_(opt_w)\n\t,.w_TL_rela_(w_TL_rela_)\n);\n\n  intra_pred_l2 #(.bitDepth(bitDepthY),.ANG_BDEPTH(ANG_BDEPTH),.PLA_2_BDEPTH(PLA_2_BDEPTH))cPred(\n\t.clk(clk),\n\t.arst_n(arst_n),\n\t.rst_n(rst_n),\n\t.bStop(bStop_2),\n\t.weight(l2_weight),              \n\t.mainRefReg(l2_mainRefReg),      \n\t.predSamples(predSamples),    \n\t.mode(l2_mode),\t\t\t\t\n\t.top_left_pixel(l2_sub_top_left_pixel_P),\n\t.X(l2_X[2:0]),\n\t.Y(l2_Y[2:0])\n\t,.isPredFilter(l2_isPredFilter)\n\t,.tuSize(l2_tuSize)\n\t,.gp_bitDepth(gp_bitDepth)\n\t,.r_r0(r_r0)\n\t,.r_r1(r_r1)\n\n\n\t,.r_plan_0(r_plan_0)\n\t,.r_plan_1(r_plan_1)\n\t,.r_plan_2(r_plan_2)\n\t,.r_plan_3(r_plan_3)\n\t,.unFil_opt(l2_unFil_opt)\n\t,.preStage(l2_preStage)\n\t,.DC_xxxx_data(l2_DC_xxxx_data)\n\n\n  );\n  \n    intra_mode2angle cMode2angle(\n\t  .mode(l1_mode),\t\t\n\t  .angle(angle)\t\t\t\n  );\n  \n  intra_angleToang cAngleToang(\n\t   .angle(angle),      \n\t   .ang(ang)       \n  );\n  \n   \t \n  intra_lut1 cLut1(\n\t  .ang(ang),             \n\t  .yPos(l1_Y),            \n\t  .move(move)            \n  );\n  \n  intra_lut2 cLut2(\n    .ang(ang),      \n    .yPos(l1_Y),     \n    .weight(weight)       \n  );\n  \n  intra_recon #(.pixWidth(bitDepthY))cRecon(\n\t  .clk(clk),\n\t  .arst_n(arst_n),\n\t  .rst_n(rst_n),\n\t  .predSamples(predSamples),\n\t  .predSamples_inter(predSamples_inter),\n\t  .residuals(residuals),\n\t  .reconSamples(reconSamples)\n\t  ,.tuSize(l2_tuSize)\n\t  ,.r_reconSamples(r_reconSamples)\n\t  ,.gp_bitDepth(gp_bitDepth)\n\t  ,.opt_recon(l2_opt_recon)\n  );\n  \n \n  intra_exchangeXY  cExchangeXY(\n\t.isInter(l_isInter),\n\t.modeHor(l_modeHor)\n\t,.i_X(l_X)\n\t,.i_Y(l_Y)\n\t,.o_X(l_X_tr)\n\t,.o_Y(l_Y_tr)\n);\n\n\tintra_bypass #(.bitDepth(bitDepthY) ,.isChroma(isChroma)) cByPass(\n\t\t.clk(clk),\n\t\t.arst_n(arst_n),\n\t\t.rst_n(rst_n),\n\t\t.bStop(bStop2),\n\t\t.n_bStop(bStop1_1),\n\t\t.nn_bStop(bStop1),\n\t\t.tuSize(l2_tuSize),\n\t\t.n_tuSize(l1_tuSize),\n\t\t.X(l2_X_tr),\n\t\t.Y(l2_Y_tr),\n\t\t.isLtBorder(l2_isLtBorder),\n\t\t.isBtBorder(l2_BtBorderInfo[5]),\n\t\t.isRtBorder(l2_RtBorderInfo[5]),\n\t\t.posBtBorderIn4(l2_BtBorderInfo[4:0]),\n\t\t.posRtBorderIn4(l2_RtBorderInfo[4:0]),\t\n\t\t.partIdx(l2_partIdx),\n\t\t.n_partIdx(l1_partIdx),\n\t\t.xTb(l2_xTb),\n\t\t.yTb(l2_yTb),\n\t\t.nxtXTb(l1_xTb),\n\t\t.nxtYTb(l1_yTb),\n\t\t.i_recSamples(reconSamples),\n\t\t.l3_i_recSamples(r_reconSamples),\n\t\t.isCalStage(l2_preStage[3]),\t\n\t\t.order(l2_order),\n\t\t.nMaxCUlog2(nMaxCblog2),\n\t\t.cIdx(l2_cIdx),\n\t\t.n_cIdx(l1_cIdx),\n\t\t.nn_cIdx(l_cIdx),\n\t\t.byPa_P_DR_1(byPa_P_DR_1),\n\t\t.byPa_P_DR_1_cr(byPa_P_DR_1_cr),\n\t\t.byPa_P_A_2(byPa_P_A_2),\n\t\t.byPa_P_A_2_cr(byPa_P_A_2_cr),\n\t\t.byPa_DW_A_3(byPa_DW_A_3),\t\n\t\t.bypa_pos_1(bp_pos_1),\n\t\t.bypa_pos_2(bp_pos_2),\n\t\t.bypa_pos_3(bp_pos_3),\t\n\t\t.btRtSamples(btRtSamples),\n\t\t.by4_1_forStop(by4_1_forStop),\n\t\t.by4_1_forStop_cr(by4_1_forStop_cr),\n\t\t.by4_1_forStop_pos(by4_1_forStop_pos),\n\t\t.n_isBtTb4(l1_yTb==((pic_height_in_luma_samples>>isChroma)-4)),\n\t\t.n_isRtTb4(l1_xTb==((pic_width_in_luma_samples>>isChroma)-4)),\n\t\t.n_isBtTb8(l1_yTb==((pic_height_in_luma_samples>>isChroma)-8)),\n\t\t.n_isRtTb8(l1_xTb==((pic_width_in_luma_samples>>isChroma)-8)),\n\t\t.n_modeHor(l1_modeHor),\n\t\t.n_order(l1_order)\n\t);\n\t\n \n\t\n \n  intra_write #(.bitDepth(bitDepthY),.AW(realAW_Y),.AW_TL(realAW_TL_Y),.isChroma(isChroma)) cWrite(\n\t.clk(clk),\n\t.arst_n(arst_n),\n\t.rst_n(rst_n),\n\t.bStop(bStop2),\n\t.bStop_pre(bStop1_1),\n\t.reconSamples(reconSamples)\t\t\t\t\t\n\t,.xTb(l2_xTb)\n\t,.yTb(l2_yTb)\n\t,.X(l2_X_tr)\n\t,.Y(l2_Y_tr)\n\t,.tuSize(l2_tuSize)\n\t,.partIdx(l2_partIdx)\n\t,.nMaxCUlog2(nMaxCblog2)\n\t,.verFlag(l2_verFlag)\n\t,.horFlag(l2_horFlag)\n\t,.isLastCycInTb(l2_isLastCycInTb)\n\t,.r_tl_data(byPa_DW_A_3[6*bitDepthY-1:4*bitDepthY])\n\t,.isCalStage(l2_preStage[3])\n\t,.cIdx(l2_cIdx)\n\t\n\t,.w_data(w_data_)\t\t\t\t\n\t,.w_data_TL(w_data_TL_)\n\t,.w_addr(w_addr_)\n\t,.w_addr_TL(w_addr_TL_)\n\t,.wE_n(wE_n_)\n\t\n\t,.bDelayWrite(bDelayWrite)\n\t,.opt_w_tl(opt_w_tl)\n\t,.opt_w(opt_w)\n\t,.w_TL_rela_(w_TL_rela_)\n\n);\n \n\n\n  \nendmodule\n\n\n```"
        },
        {
            "role": "user",
            "content": "Based on the provided original Verilog code, its comments and above answers, generate a detailed specification for the module. Include the following information in a single, concise paragraph:\n1. The name of the module.\n2. A simple explanation of the module's functionality.\n3. The input and output ports, along with a brief explanation of each.\n4. The internal signals used within the module, with a brief explanation of their purpose.\n5. An overview of the different blocks or sections in the code and their functions.\nEnsure that the specification is clear and accurately reflects the details from the code and comments.\nYour answer should be structured and well-organized, providing a comprehensive and detailed overview of the module's design and operation.\nPlease provide your answer in the following format:\nModule name: [module name]. Module specification: [module specification]."
        },
        {
            "role": "assistant",
            "content": "Module name: intra_top. Module specification: The intra_top module is the top-level module for intra prediction in a video codec, likely for HEVC/H.265. It integrates various sub-modules to perform intra prediction, including reference sample generation, prediction mode selection, sample reconstruction, and memory management. The module handles different prediction modes, block sizes, and chroma/luma processing through multiple pipeline stages. Key input ports include clk, rst_n, mode, pic dimensions, CTU coordinates, and various prediction parameters. Output ports provide reconstructed samples and ready signals for different processing stages. Internal signals manage pipeline stages, coordinate data flow, and store intermediate results. The module is structured into several main blocks: input transformation, FSM control, reference sample generation, prediction calculation, reconstruction, and memory interface. It implements a complex pipeline with multiple stages (lz_, l0_, l_, l1_, l2_, l"
        }
    ],
    "claude-message": [
        {
            "role": "user",
            "content": [
                {
                    "type": "text",
                    "text": "You are an expert in hardware design with a deep understanding of Verilog RTL codes. Now I want to train a large language model for code comment generation tasks specifically focused on Verilog RTL codes. And I want you to help me process the raw data, transforming it into suitable formats that can serve as inputs and outputs for the model."
                },
                {
                    "type": "text",
                    "text": "Name of the module and its functionality is as follows: \nModule name: intra_top\n\nExplanation: This module appears to be the top-level module for intra prediction in a video codec, likely for HEVC/H.265. It integrates various sub-modules for intra prediction, including reference sample generation, prediction mode selection, sample reconstruction, and memory management. The module handles different prediction modes, block sizes, and chroma/luma processing. It coordinates the intra prediction process through multiple pipeline stages, managing data flow between different functional units and memory interfaces. The module also includes logic for handling special cases like border conditions and different color components (luma/chroma)."
                },
                {
                    "type": "text",
                    "text": "Input and output ports and their explanation is as follows: \nInput ports:\n[clk, arst_n, rst_n, mode, pic_width_in_luma_samples, pic_height_in_luma_samples, first_ctu_in_slice_x, first_ctu_in_slice_y, first_ctu_in_tile_x, first_ctu_in_tile_y, last_ctu_in_tile_x, last_ctu_in_tile_y, xCtb, yCtb, xTb_rela, yTb_rela, residuals, predSamples_inter, tuSizeLog2, nMaxCUlog2, intra_cuPredMode, isPcm, resi_val, cabad_intra_val, inter_pred_val, gp_bitDepth]\n\nExplanation:\n- clk, arst_n, rst_n: Clock and reset signals for synchronous logic.\n- mode: Intra prediction mode.\n- pic_width/height_in_luma_samples: Picture dimensions.\n- first/last_ctu_in_slice/tile_x/y: CTU boundaries for slices and tiles.\n- xCtb, yCtb: Current CTB coordinates.\n- xTb_rela, yTb_rela: Relative transform block coordinates within CTB.\n- residuals: Residual data for reconstruction.\n- predSamples_inter: Inter prediction samples.\n- tuSizeLog2, nMaxCUlog2: Transform unit and max CU size parameters.\n- intra_cuPredMode: Intra prediction mode for current CU.\n- isPcm: PCM mode flag.\n- resi_val, cabad_intra_val, inter_pred_val: Valid signals for residual, CABAC, and inter prediction data.\n- gp_bitDepth: Bit depth parameter.\n\nOutput ports:\n[resi_rdy, r_reconSamples, cabad_intra_rdy, inter_pred_rdy]\n\nExplanation:\n- resi_rdy: Ready signal for residual data processing.\n- r_reconSamples: Reconstructed samples output.\n- cabad_intra_rdy: Ready signal for CABAC intra data.\n- inter_pred_rdy: Ready signal for inter prediction data."
                },
                {
                    "type": "text",
                    "text": "Internal signals and their explanation is as follows: \nInternal signals:\n[xCtb_, yCtb_, xTb_rela_, yTb_rela_, mode_, tuSizeLog2_, isInter, X, Y, preStage, pseuAdr, isLastCycInTb, order, cIdx, tuSize, lz_X, lz_Y, lz_mode, lz_tuSize, lz_xTb, lz_yTb, lz_preStage, lz_isLastCycInTb, lz_order, lz_pseuAdr, lz_cIdx, lz_isInter, horFlag, verFlag, verLevel, horLevel, l0_X, l0_Y, l0_mode, l0_tuSize, l0_xTb, l0_yTb, l0_preStage, l0_isLastCycInTb, l0_partIdx, l0_verLevel, l0_horLevel, l0_horFlag, l0_verFlag, l0_isFirstCycInTb, l0_order, l0_isLtBorder, l0_BtBorderInfo, l0_RtBorderInfo, l0_cIdx, l0_isInter, r_data, top_left_pixel, ref_pos, ref_TLADflag, bp_pos_1, bp_pos_2, bp_pos_3, substi_Opt, sub_top_left_pixel, sub_data, l_X, l_Y, l_mode, l_tuSize, l_xTb, l_yTb, l_preStage, l_isLastCycInTb, l_pseuAdr, l_partIdx, l_verLevel, l_horLevel, l_horFlag, l_verFlag, l_isFirstCycInTb, l_order, l_isLtBorder, l_BtBorderInfo, l_RtBorderInfo, l_cIdx, l_isInter, l_modeHor, move, weight, l1_mode, l1_tuSize, l1_X, l1_Y, l1_xTb, l1_yTb, l1_preStage, l1_isLastCycInTb, l1_partIdx, l1_horFlag, l1_verFlag, l1_isFirstCycInTb, l1_order, l1_ram_idx, l1_isLtBorder, l1_BtBorderInfo, l1_RtBorderInfo, l1_cIdx, l1_isInter, l1_modeHor, l1_mainRefReg, l1_unFilDC, l1_top_right_pixel, l1_bottom_left_pixel, l1_sub_top_left_pixel_P, l1_opt_recon, l1_unFil_opt, angle, ang, l2_X, l2_Y, l2_xTb, l2_yTb, l2_mode, l2_preStage, l2_isLastCycInTb, l2_tuSize, l2_partIdx, l2_horFlag, l2_verFlag, l2_isFirstCycInTb, l2_order, l2_isLtBorder, l2_BtBorderInfo, l2_RtBorderInfo, l2_cIdx, l2_isInter, l2_modeHor, l2_move, l2_weight, l2_mainRefReg, l2_unFilDC, l2_top_right_pixel, l2_bottom_left_pixel, l2_sub_top_left_pixel_P, l2_opt_recon, l2_unFil_opt, l2_DC_xxxx_data, predSamples, reconSamples]\n\nExplanation:\n- xCtb_, yCtb_, xTb_rela_, yTb_rela_: Registered versions of input CTB and TB coordinates.\n- mode_, tuSizeLog2_, isInter: Registered versions of input mode, transform unit size, and inter prediction flag.\n- X, Y: Current pixel coordinates within the transform block.\n- preStage: Pipeline stage indicator.\n- pseuAdr: Pseudo address for memory access.\n- isLastCycInTb, order: Flags for last cycle in transform block and processing order.\n- cIdx: Color component index (0: Luma, 1: Cb, 2: Cr).\n- tuSize: Transform unit size.\n- lz_, l0_, l_, l1_, l2_ prefixed signals: Pipeline stage specific versions of various control and data signals.\n- horFlag, verFlag, verLevel, horLevel: Flags and levels for horizontal and vertical prediction directions.\n- r_data, top_left_pixel: Read data from memory and top-left pixel value.\n- ref_pos, ref_TLADflag: Reference sample positions and flags.\n- bp_pos_1, bp_pos_2, bp_pos_3, substi_Opt: Bypass and substitution related signals.\n- sub_top_left_pixel, sub_data: Substituted top-left pixel and data.\n- modeHor: Flag for horizontal prediction mode.\n- move, weight: Prediction weight and movement parameters.\n- angle, ang: Angle-related parameters for angular prediction modes.\n- mainRefReg, unFilDC, top_right_pixel, bottom_left_pixel, sub_top_left_pixel_P: Reference samples and DC value.\n- opt_recon, unFil_opt, DC_xxxx_data: Options for reconstruction and DC prediction.\n- predSamples, reconSamples: Predicted and reconstructed samples.\n\nThese internal signals are used to control the flow of data through the intra prediction pipeline, store intermediate results, and manage the various prediction modes and special cases in the intra prediction process."
                },
                {
                    "type": "text",
                    "text": "Original Verilog code is as follows: \n<code>`timescale 1ns/1ps\n\n\nmodule intra_top(\n\t  clk,\n\t  arst_n,\n\t  rst_n,\n\t  mode,\n\t  pic_width_in_luma_samples,\n\t  pic_height_in_luma_samples,\n\t  first_ctu_in_slice_x,\n\t  first_ctu_in_slice_y,\n\t  first_ctu_in_tile_x,\n\t  first_ctu_in_tile_y,\n\t  last_ctu_in_tile_x,\n\t  last_ctu_in_tile_y,\n\t  xCtb,\t\t\t\t\t\n\t  yCtb,\n\t  xTb_rela,\t\t\t\t\n\t  yTb_rela,\n\tresiduals     \n\t,predSamples_inter\n\t,r_reconSamples    \n\t,tuSizeLog2\n\t,nMaxCUlog2\n\t,intra_cuPredMode\n\t,isPcm\n\t,resi_val\n\t,resi_rdy\n\t,cabad_intra_val\t\t\t\n\t,cabad_intra_rdy\t\t\t\n\t,inter_pred_rdy\n\t,inter_pred_val\n\t,gp_bitDepth\n);\n\n\tparameter isChroma = 0;\n\tparameter bitDepthY = 4'd10;\n\tparameter bitDepthYplus1 = bitDepthY+1;\n\tparameter nSRAMs \t\t=8;\n\tparameter MAINREF_DW = bitDepthY*8;   \n\tparameter AW = 3;\n\tparameter realAW_Y = 8;\n\tparameter realAW_TL_Y = 11;\n\tparameter ANG_BDEPTH = bitDepthY+5;\n\tparameter PLA_2_BDEPTH = bitDepthY+3;\n\n\tparameter SRAMDW = bitDepthY*4;\n\n\t\n\t\n\t\n\tinput \t[8:0]\t\t\t\t\txCtb,yCtb;  \n\tinput \t[3:0]\t\t\t\t\txTb_rela,yTb_rela;\n\tinput \t\t\t\t\t\t\tclk,rst_n,arst_n; \n\tinput\t[13:0]\t\t\t\t\tpic_width_in_luma_samples;\n\tinput\t[12:0]\t\t\t\t\tpic_height_in_luma_samples;\n\tinput   [8:0]           \t\tfirst_ctu_in_slice_x;\n\tinput   [8:0]           \t\tfirst_ctu_in_slice_y;\n\tinput   [8:0]          \t\t\tfirst_ctu_in_tile_x;\n\tinput   [8:0]           \t\tfirst_ctu_in_tile_y;\n\tinput   [8:0]           \t\tlast_ctu_in_tile_x;\n\tinput   [8:0]           \t\tlast_ctu_in_tile_y;\n\t\n\tinput \t[2:0] \t\t\t\t\tnMaxCUlog2;\n\tinput \t[5:0]\t\t\t\t\tmode;\n\tinput \t[2:0] \t\t\t\t\ttuSizeLog2;\n\tinput \t[(bitDepthY+1)*16-1:0] \tresiduals;\n\tinput\t\t\t\t\t\t\tcabad_intra_val;\n\tinput\t\t\t\t\t\t\tisPcm;\n\tinput\t[1:0]\t\t\t\t\tintra_cuPredMode;\n\tinput\t\t\t\t\t\t \tresi_val;\n\tinput \t[bitDepthY*16-1:0]\t\tpredSamples_inter;\n\tinput\t\t\t\t\t\t\tinter_pred_val;\n\t\n\tinput\t[3:0]\t\t\t\t\tgp_bitDepth;\n\t\n\toutput reg\t\t\t\t\t\tresi_rdy; \n\toutput reg [bitDepthY*16-1:0] \tr_reconSamples;\t\n\toutput \t\t\t\t\t\t\tcabad_intra_rdy;\n\toutput \t\t\t\t\t\t\tinter_pred_rdy;\n\t\n\treg \t[8:0]\t\t\t\t\txCtb_,yCtb_;  \n\treg  \t[3:0]\t\t\t\t\txTb_rela_,yTb_rela_;\n\treg \t[5:0]\t\t\t\t\tmode_;\n\treg \t[2:0] \t\t\t\t\ttuSizeLog2_;\n\treg\t\t\t\t\t\t\t\tisInter;\n\t\n\twire\t[2:0]\t\t\t\t\tnMaxCblog2;\n\twire \t[12:0] \t\t\t\t\tyTb;\t\t\n\twire \t[12:0] \t\t\t\t\txTb;\t\t\n\twire \t[2:0] \t\t\t\t\tX,Y;\n\twire \t[3:0] \t\t\t\t\tpreStage;\n\twire \t[AW*8-1:0] \t\t\t\tpseuAdr;\n\n\twire\t\t\t\t\t\t\tisLastCycInTb;\n\twire\t[2:0]\t\t\t\t\torder;\n\t\n\twire\t[1:0]\t\t\t\t\tcIdx;\n\twire \t[2:0] \t\t\t\t\ttuSize;\n\t\n\t\n\t\n\t\n\treg \t[2:0] \t\t\t\t\tlz_X,lz_Y;\n\treg \t[5:0]\t\t\t\t\tlz_mode;\n\treg \t[2:0] \t\t\t\t\tlz_tuSize;\n\treg \t[12:0] \t\t\t\t\tlz_xTb;\t\t\n\treg \t[12:0] \t\t\t\t\tlz_yTb;\t\t\n\treg \t[3:0] \t\t\t\t\tlz_preStage;\n\treg\t\t\t\t\t\t\t\tlz_isLastCycInTb;\n\t\n\treg\t\t[2:0]\t\t\t\t\tlz_order;\n\treg     [AW*8-1:0] \t\t\t\tlz_pseuAdr;\n\t\n\treg\t\t[1:0]\t\t\t\t\tlz_cIdx;\n\treg\t\t\t\t\t\t\t\tlz_isInter;\n\t\n\twire\t[15:0]\t\t\t\t\thorFlag,verFlag;\n\twire \t[63:0] \t\t\t\t\tverLevel;\n\twire \t[63:0] \t\t\t\t\thorLevel;\n\twire\t[5:0]\t\t\t\t\tlz_RtBorderInfo;\n\twire\t[5:0]\t\t\t\t\tlz_BtBorderInfo;\n\twire\t\t\t\t\t\t\tlz_isLtBorder;\n\twire\t\t\t\t\t\t\tlz_isAbove,lz_isLeft,lz_isTopLeft;\n\twire\t\t\t\t\t\t\tlz_isFirstCycInTb;\n\twire\t\t[1:0]\t\t\t\tlz_partIdx;\n\twire \t[realAW_TL_Y-1:0]   \tr_addr_TL_;\n\twire \t[realAW_Y*8-1:0]\t   \tr_addr_;\n\twire \t[8:0]  \t\t\t\t\trE_n_;\n\treg \t[8:0]  \t\t\t\t\trE_n_tmp;\n\t\n\t\n\t\n\t\n\twire \t[AW*8-1:0] \t\t\t\tl0_pseuAdr;\n\twire    [nSRAMs*5-1:0]\t\t\tl0_modiPosIn4;\n\twire \t[nSRAMs*3-1:0]\t\t\tl0_ram_idx;\n\t\n\treg \t[2:0] \t\t\t\t\tl0_X,l0_Y;\n\treg\t\t\t\t\t\t\t\tl0_isAbove,l0_isLeft,l0_isTopLeft;\n\treg \t[5:0]\t\t\t\t\tl0_mode;\n\treg \t[2:0] \t\t\t\t\tl0_tuSize;\n\treg \t[12:0] \t\t\t\t\tl0_xTb;\t\t\n\treg \t[12:0] \t\t\t\t\tl0_yTb;\t\t\n\treg \t[3:0] \t\t\t\t\tl0_preStage;\n\treg\t\t\t\t\t\t\t\tl0_isLastCycInTb;\n\treg\t\t[1:0]\t\t\t\t\tl0_partIdx;\n\treg \t[63:0] \t\t\t\t\tl0_verLevel;\n\treg \t[63:0] \t\t\t\t\tl0_horLevel;\n\treg\t\t[15:0]\t\t\t\t\tl0_horFlag,l0_verFlag;\n\treg\t\t\t\t\t\t\t\tl0_isFirstCycInTb;\n\treg\t\t[2:0]\t\t\t\t\tl0_order;\n\treg\t\t\t\t\t\t \t\tl0_isLtBorder;\n\treg\t\t[5:0]\t\t\t\t\tl0_BtBorderInfo;\n\treg\t\t[5:0]\t\t\t\t\tl0_RtBorderInfo;\t\n\t\n\treg \t[realAW_TL_Y-1:0]   \tr_addr_TL;\n\treg \t[realAW_Y*8-1:0]\t   \tr_addr;\n\treg \t[8:0]  \t\t\t\t\trE_n;\t\n\treg\t\t[1:0]\t\t\t\t\tl0_cIdx;\n\treg\t\t\t\t\t\t\t\tl0_isInter;\n\t\n\t\n\t\n\t\n\t\n\twire \t[SRAMDW*8-1:0] \t\t\tr_data;\n\twire\t[bitDepthY-1:0]\t\t\ttop_left_pixel;\n\twire \t[47:0] \t\t\t\t\tref_pos;\n\twire \t[15:0] \t\t\t\t\tref_TLADflag;\n\twire \t[5:0]\t\t\t\t\tbp_pos_1,bp_pos_2,bp_pos_3;\n\twire\t[3*nSRAMs+1:0]\t\t\tsubsti_Opt;\n\twire \t[bitDepthY-1:0] \t\tsub_top_left_pixel;\n\twire\t[SRAMDW*8-1:0]\t\t\tsub_data;\n\t\n\twire [6:0]      \t\t\t\tl_xTbInCU ,l_yTbInCU;\n\treg \t[nSRAMs*3-1:0]\t\t\tl_ram_idx;\n\twire\t[2:0]\t\t\t\t\tl_awkCnt;\n\t\t\n\treg     [nSRAMs*5-1:0]\t\t\tl_modiPosIn4;\t\n\treg \t[2:0] \t\t\t\t\tl_X,l_Y;\n\treg\t\t\t\t\t\t\t\tl_isAbove,l_isLeft,l_isTopLeft;\n\treg \t[5:0]\t\t\t\t\tl_mode;\n\treg \t[2:0] \t\t\t\t\tl_tuSize;\n\treg \t[12:0] \t\t\t\t\tl_xTb;\t\t\n\treg \t[12:0] \t\t\t\t\tl_yTb;\t\t\n\treg \t[3:0] \t\t\t\t\tl_preStage;\n\treg\t\t\t\t\t\t\t\tl_isLastCycInTb;\n\treg \t[AW*8-1:0] \t\t\t\tl_pseuAdr;\n\treg\t\t[1:0]\t\t\t\t\tl_partIdx;\n\treg \t[63:0] \t\t\t\t\tl_verLevel;\n\treg \t[63:0] \t\t\t\t\tl_horLevel;\n\treg\t\t[15:0]\t\t\t\t\tl_horFlag,l_verFlag;\n\treg\t\t\t\t\t\t\t\tl_isFirstCycInTb;\n\treg\t\t[2:0]\t\t\t\t\tl_order;\n\treg\t\t\t\t\t\t \t\tl_isLtBorder;\n\treg\t\t[5:0]\t\t\t\t\tl_BtBorderInfo;\n\treg\t\t[5:0]\t\t\t\t\tl_RtBorderInfo;\n\treg\t\t[1:0]\t\t\t\t\tl_cIdx;\n\treg\t\t\t\t\t\t\t\tl_isInter;\n\twire \t\t\t\t\t\t\tl_modeHor;\n\twire\t[2:0] \t\t\t\t\tl_X_tr,l_Y_tr;\t\t\t\n\n\twire \t[11:0] \t\t\t\t\tmove;\n\twire\t[19:0] \t\t\t\t\tweight;\n\t\n\t\n\t\n\t\n\treg \t\t\t\t\t\t\tl1_modeHor;\n\treg \t[5:0]\t\t\t\t\tl1_mode;\t\t\n\treg \t[2:0] \t\t\t\t\tl1_X,l1_Y;\n\treg \t[12:0] \t\t\t\t\tl1_xTb;\t\n\treg \t[12:0] \t\t\t\t\tl1_yTb;\t\t\n\treg \t[47:0] \t\t\t\t\tl1_ref_pos;\n\treg \t[15:0] \t\t\t\t\tl1_ref_TLADflag;\n\treg \t[3:0] \t\t\t\t\tl1_preStage;\t \n\treg\t\t\t\t\t\t\t\tl1_isLastCycInTb;\n\treg\t\t[2:0]\t\t\t\t\tl1_tuSize;\n\treg\t\t[1:0]\t\t\t\t\tl1_partIdx;\n\treg\t\t[15:0]\t\t\t\t\tl1_horFlag;\n\treg\t\t[15:0]\t\t\t\t\tl1_verFlag;\n\treg\t\t\t\t\t\t\t\tl1_isFirstCycInTb;\n\treg\t\t[2:0]\t\t\t\t\tl1_order;\n\treg \t[nSRAMs*3-1:0]\t\t\tl1_ram_idx;\n\treg\t\t\t\t\t\t \t\tl1_isLtBorder;\n\treg\t\t[5:0]\t\t\t\t\tl1_BtBorderInfo;\n\treg\t\t[5:0]\t\t\t\t\tl1_RtBorderInfo; \n\treg\t\t[1:0]\t\t\t\t\tl1_cIdx;\n\treg\t\t[12:0]\t\t\t\t\tl1_xTb_cr;\t\n\treg  \t[2:0]\t\t\t\t\tl1_tuSize_cr;\n\treg\t\t\t\t\t\t\t\tl1_isInter;\t \n\n\twire\t[3*24-1:0]\t\t\t\tidx_mapped_;\n\twire\t[53:0]\t\t\t\t\tl1_options;\n\twire \t[MAINREF_DW-1:0]\t\tl1_mainRefReg;\n\twire\t[bitDepthY-1:0] \t\tl1_unFilDC;\n\twire \t[bitDepthY-1:0] \t\tl1_top_right_pixel,l1_bottom_left_pixel;\n\twire \t[bitDepthY-1:0] \t\tl1_sub_top_left_pixel_P;\n\twire\t\t[2:0]\t\t\t\tl1_opt_recon;\n\treg\t\t[2:0] \t\t\t\t\tl1_X_tr,l1_Y_tr;\t\t\t\n\twire\t[1:0]\t\t\t\t\tl1_unFil_opt;\n\t\n\t\n\t\n\t\n\n\n\twire \tsigned [6:0] \t\t\tangle;\n\twire \t[4:0] \t\t\t\t\tang;     \n \n\treg \t\t\t\t\t\t\tl2_modeHor;\n\twire \t[bitDepthY*4-1:0] \t\tbyPa_P_DR_1;\n\twire \t[bitDepthY*4-1:0] \t\tbyPa_P_DR_1_cr;\n\twire \t[bitDepthY*16-1:0] \t\tbyPa_P_A_2;\n\twire \t[bitDepthY*11-1:0]\t\tbyPa_P_A_2_cr;\n\twire \t[bitDepthY*6-1:0] \t\tbyPa_DW_A_3;\n\twire   [bitDepthY*2-1:0] \t\tbtRtSamples;\n\n\treg \t[19:0] \t\t\t\t\tl2_weight;\n\n\twire \t\t\t\t\t\t\tl2_isPredFilter;\n\twire \t[bitDepthY*16-1:0] \t\tpredSamples;\t\t\n\treg\t[2:0] \t\t\t\t\t\tl2_X_tr,l2_Y_tr;\t\t\t\n\twire \t[SRAMDW*8-1:0] \t\t\tsub_data_P;\n\n\twire \t[bitDepthY*4-1:0] \t\tby4_1_forStop;\n\twire \t[bitDepthY*4-1:0] \t\tby4_1_forStop_cr;\n\twire\t[4:0]\t\t\t\t\tby4_1_forStop_pos;\n\t \n\twire \t[realAW_TL_Y-1:0]   \tw_addr_TL_;\n\twire \t[realAW_Y*8-1:0]\t   \tw_addr_;\n\twire \t[bitDepthY-1:0]    \t\tw_data_TL_;\n\twire \t[SRAMDW*8-1:0] \t\t\tw_data_;\n\twire \t[8:0]  \t\t\t\t\twE_n_;\n\twire    [bitDepthY*16-1:0] \t\treconSamples;\t\n\twire    \t\t\t\t\t\tbDelayWrite;\n\t \n\t \t \n\treg \t[2:0] \t\t\t\t\tl2_X,l2_Y;\n\treg \t[12:0] \t\t\t\t\tl2_xTb;\t\n\treg \t[12:0] \t\t\t\t\tl2_yTb;\t\t\n\treg \t[5:0] \t\t\t\t\tl2_mode; \n\treg \t[3:0] \t\t\t\t\tl2_preStage;\t \n\treg\t\t\t\t\t\t\t\tl2_isLastCycInTb;\n\treg\t\t[2:0]\t\t\t\t\tl2_tuSize;\n\treg\t\t[1:0]\t\t\t\t\tl2_partIdx;\n\treg\t\t[15:0]\t\t\t\t\tl2_horFlag;\n\treg\t\t[15:0]\t\t\t\t\tl2_verFlag;\n\treg\t\t\t\t\t\t\t\tl2_isFirstCycInTb;\n\treg\t\t[2:0]\t\t\t\t\tl2_order;\n\treg\t\t\t\t\t\t \t\tl2_isLtBorder;\n\treg\t\t[5:0]\t\t\t\t\tl2_BtBorderInfo;\n\treg\t\t[5:0]\t\t\t\t\tl2_RtBorderInfo; \n\treg\t\t[1:0]\t\t\t\t\tl2_cIdx;\n\treg\t\t\t\t\t\t\t\tl2_isInter;\t \n\t \n\treg \t[11:0] \t\t\t\t\tl2_move;\n\treg\t\t[2:0]\t\t\t\t\tl2_opt_recon;\n\t\n\treg \t[MAINREF_DW-1:0]\t\tl2_mainRefReg;\n\treg\t\t[bitDepthY-1:0] \t\tl2_unFilDC;\n\treg \t[bitDepthY-1:0] \t\tl2_top_right_pixel,l2_bottom_left_pixel;\n\treg \t[bitDepthY-1:0] \t\tl2_sub_top_left_pixel_P;\n\treg\t    [1:0]\t\t\t\t\tl2_unFil_opt;\n\treg \t[(bitDepthY+3)*2-1:0] \tl2_DC_xxxx_data;\n\t\n\twire [(bitDepthY+1)*16-1:0]\t\tr_r0,r_r1;\t\n\n\twire [(bitDepthY+4)*16-1:0]\t\tr_plan_0;\t\n\twire [(bitDepthY+4)*16-1:0]\t\tr_plan_1;\t\n\twire [(PLA_2_BDEPTH)*16-1:0]\tr_plan_2;\t\n\twire [(PLA_2_BDEPTH)*16-1:0]\tr_plan_3;\t\n\twire [(bitDepthY+3)*2-1:0] \t\tl1_DC_xxxx_data;\n\t\n\t\t\n\twire [3*8-1:0]\t\t\t\t\topt_w;\n\twire [2:0]\t\t\t\t\t\topt_w_tl;\t\n\twire [4:0]\t\t\t\t\t\tw_TL_rela_;\n\t\n\t\n\t\n\t\n\treg \t[realAW_TL_Y-1:0]   \tw_addr_TL;\n\treg \t[realAW_Y*8-1:0]\t   \tw_addr;\n\treg \t[bitDepthY-1:0]    \t\tw_data_TL;\n\treg \t[SRAMDW*8-1:0] \t\t\tw_data;\n\treg \t[8:0]  \t\t\t\t\twE_n;\n\treg\t\t[2:0]\t\t\t\t\tl3_tuSize;\n\treg\t\t[1:0]\t\t\t\t\tl3_cIdx;\n\t\n\t\n\t\t\n\tassign      nMaxCblog2 = !isChroma? nMaxCUlog2:(nMaxCUlog2-1);\n\tassign      l_xTbInCU = l_xTb%(1<<nMaxCblog2);\n\tassign \t\tl_yTbInCU = l_yTb%(1<<nMaxCblog2);\n\t\n\tassign \t\tl2_isPredFilter =    (l2_tuSize >3'd4 || isChroma) ? 1'b0 : 1'b1;\n\t\t\n\tassign      lz_isFirstCycInTb  = (lz_order == 0);\n\t   \n\tassign \t\tl_modeHor = l_mode < 18 && l_mode>1 ;\n\t\n\tassign \t\tisLastCycInTb = (tuSize==2 && preStage<2)?1:((order==7)?1:0);\n\t\n\n\twire      \tbStop_z,bStop_0,bStop_1,bStop_1_1,bStop_2,bStop_3;\t\n\twire      \tbStopz,bStop0,bStop1,bStop1_1,bStop2,bStop3;\n\twire      \tbStop;\n\n\talways @(posedge clk or negedge arst_n) begin\n\t\tif(!arst_n)\n\t\t\t{resi_rdy} <= 0 ;\n\t\telse if(!rst_n)\n\t\t\t{resi_rdy} <= 0 ;\n\t\telse \tbegin\n\t\t\tif(!bStop_2)\n\t\t\t\tresi_rdy <= !bStop1_1 && l1_preStage[3] ;\n\t\tend\n\t\t\n\tend\n\t\n\tassign      inter_pred_rdy = l2_isInter && resi_rdy && !bStop2;\n\t\n\treg\t\t[2:0]\t\t\t\t\tcnt;\n\treg\t\t\t\t\t\t\t\tflag;\n\t\n\twire\t\tisLast32In64_inter = (cnt==3 || flag);\n\twire \t\tflag_1 = (isLastCycInTb && cIdx[0]==0 && !flag && cnt!=3);\n\twire \t[2:0]\t\t\t\t\tcnt_ = cnt+1;\t\t\t\t\n\twire \t[2:0]     \t\t\t\tp_tuSize ;\n\twire\t[12:0] \t\t\t\t\tp_xTb ;\n\t\n\n\tassign\tp_tuSize\t= {l1_cIdx,l_cIdx}=={4'b0110}? l1_tuSize_cr: l1_tuSize; \n\tassign\tp_xTb\t\t=   {l1_cIdx,l_cIdx}=={4'b0110}? l1_xTb_cr : l1_xTb ;\n\t\n\t\n\talways @(posedge clk or negedge arst_n)  begin\n\t  if(!arst_n) begin\n\t\t{isInter,xCtb_,yCtb_,tuSizeLog2_,xTb_rela_,yTb_rela_,mode_} <= 0;\n\t\tcnt <= 0;\n\t\tflag <= 1;\n\t\tend\n\t  else if(!rst_n)\tbegin\n\t\t{isInter,xCtb_,yCtb_,tuSizeLog2_,xTb_rela_,yTb_rela_,mode_} <= 0;\n\t\tcnt <= 0;\n\t\tflag <= 1; \n\t\tend\n\t  else begin\n\t\t\t\n\t\t\tif(tuSizeLog2!=6 && !flag_1 && (cabad_intra_rdy && cabad_intra_val)) begin\n\t\t\t\tisInter      <= ~intra_cuPredMode[0];\n\t\t\t\txCtb_        <= xCtb;\n\t\t\t\tyCtb_        <= yCtb;\n\t\t\t\ttuSizeLog2_  <= tuSizeLog2;\n\t\t\t\tmode_        <= mode;\n\t\t\tend \n\t\t\telse if((cabad_intra_rdy && cabad_intra_val && tuSizeLog2==6) && !flag_1) begin\n\t\t\t\tisInter      <= ~intra_cuPredMode[0];\n\t\t\t\ttuSizeLog2_  <= 5;\n\t\t\t\txCtb_        <= xCtb;\n\t\t\t\tyCtb_        <= yCtb;\n\t\t\tend\n\t\t\t\n\t\t\tif(!flag_1 && (cabad_intra_rdy && cabad_intra_val)) begin\n\t\t\t\txTb_rela_    <= xTb_rela;\n\t\t\t\tyTb_rela_    <= yTb_rela;\n\t\t\tend\n\t\t\telse if(flag_1 && !bStop)\tbegin\n\t\t\t\txTb_rela_    <= ((cnt_[0])<<3);\n\t\t\t\tyTb_rela_    <= ((cnt_[1])<<3);\n\t\t\tend\n\t\t\t\n\t\t\tif(cabad_intra_rdy && cabad_intra_val) begin\n\t\t\t\tflag \t\t\t<= (tuSizeLog2!=6 )? 1: 0;\n\t\t\t\tend\n\t\t\tif(!bStop) begin\n\t\t\t\tif(flag_1)\n\t\t\t\t\tcnt\t\t\t<= (cnt +1);\n\t\t\t\telse if(isLastCycInTb && cIdx[0]==0)\n\t\t\t\t\tcnt\t\t\t<= 0;\n\t\t\tend\n\t\t\t\n\t    end\n\tend\n\t\n\n\t\nintra_stopCtrl cStopCtrl(\n\t\t.clk(clk)\n\t\t,.rst_n(rst_n)\n\t\t,.arst_n(arst_n)\n\t\t\n\t\t,.l_awkCnt(l_awkCnt)\n\t\t,.resi_val(resi_val)\n\t\t,.cabad_intra_val(cabad_intra_val)\n\t\t,.isLastCycInTb(isLastCycInTb)\n\t\t,.cIdx(cIdx[0])\n\t\t,.isLast32In64_inter(isLast32In64_inter)\n\t\t\n\t\t,.bStop(bStop)\n\t\t,.bStop_z(bStop_z)\n\t\t,.bStop_0(bStop_0)\n\t\t,.bStop_1(bStop_1)\n\t\t,.bStop_1_1(bStop_1_1)\n\t\t,.bStop_2(bStop_2)\n\t\t,.bStop_3(bStop_3)\n\t\t,.bStopz(bStopz)\n\t\t,.bStop0(bStop0)\n\t\t,.bStop1(bStop1)\n\t\t,.bStop1_1(bStop1_1)\n\t\t,.bStop2(bStop2)\n\t\t,.bStop3(bStop3)\n\t\t,.cabad_intra_rdy(cabad_intra_rdy)\n\t);\n\t\n \t\t always @(posedge clk or negedge arst_n) begin\n\t\t\t if(~arst_n)\tbegin\n\t\t\t\t {lz_tuSize,lz_mode,lz_X,lz_Y,lz_xTb,lz_yTb, \n\t\t\t\t lz_isLastCycInTb,lz_order,lz_preStage,lz_pseuAdr} <= 0;\t\n\t\t\t\t lz_cIdx <= 3;\n\t\t\t \n\t\t\t\t {l0_tuSize,l0_mode,l0_isAbove,l0_isLeft,l0_isTopLeft, l0_X,l0_Y,l0_xTb,l0_yTb, \n\t\t\t\t l0_partIdx,l0_verLevel,l0_horLevel,l0_horFlag,l0_verFlag,l0_isLastCycInTb,l0_isFirstCycInTb,\n\t\t\t\t l0_order,l0_isLtBorder,l0_BtBorderInfo,l0_RtBorderInfo,l0_preStage} <= 0;\t\n\t\t\t\t l0_cIdx <= 3;\n\t\t\t\t\t\t \n\t\t\t\t l_tuSize <= 0;\n\t\t\t\t l_mode <=  0;\n\t\t\t\t l2_mode <=  0;\n\t\t\t\t l_X <=  0;\n\t\t\t\t l_Y <=  0;\n\t\t\t\t l_xTb <= 0;\n\t\t\t\t l_yTb <= 0;\t\n\t\t\t\t l_partIdx <= 0;\n\t\t\t\t l_verLevel <= 0;\n\t\t\t\t l_horLevel <= 0;\n\t\t\t\t l_horFlag <= 0;\n\t\t\t\t l_verFlag <= 0;\n\t\t\t\t l_isLastCycInTb <= 0;\n\t\t\t\t l_isFirstCycInTb <= 0;\n\t\t\t\t l_order \t<= 0;\n\t\t\t\t l2_order\t<= 0;\n\t\t\t\t r_reconSamples<=0;\n\t\t\t\t l_isLtBorder <= 0;\n\t\t\t\t l_isAbove <=0;\n\t\t\t\t l_isLeft <= 0;\n\t\t\t\t l_isTopLeft <=0;\n\t\t\t\t l_BtBorderInfo <=0;\n\t\t\t\t l2_BtBorderInfo <=0;\n\t\t\t\t l_RtBorderInfo <=0;\n\t\t\t\t l2_RtBorderInfo <=0;\n\t\t\t\t l_pseuAdr  <= 0;\n\t\t\t\t l_modiPosIn4 <=0;\n\t\t\t\t l_ram_idx <=0;\n\t\t\t\t  \n\t\t\t\t r_addr_TL <= 0;\n\t\t\t\t r_addr <= 0;\n\t\t\t\t\n\t\t\t\t l_cIdx <= 3;\n\t\t\t\t \n\t\t\t\t \n\t\t\t\t {l1_mode,l1_tuSize,l1_ref_pos,l1_ref_TLADflag,l1_X,l1_Y,l1_xTb,l1_yTb,l1_partIdx,l1_isLastCycInTb,\n\t\t\t\tl1_preStage,l1_horFlag,l1_verFlag,l1_isFirstCycInTb,l1_order,l1_ram_idx,l1_isLtBorder,l1_BtBorderInfo,\n\t\t\t\tl1_RtBorderInfo,l1_modeHor,l1_isInter}<= 0; \n\t\t\t\t l1_cIdx <= 3;\n\t\t\t\t  {l1_X_tr,l1_Y_tr} <= 0;\n\t\t\t\t  \n\t\t\t\t  \n\t\t\t\t l2_tuSize <= 0;\n\t\t\t\t l2_X <=  0;\n\t\t\t\t l2_Y <=  0; \n\t\t\t\t l2_xTb <= 0;\n\t\t\t\t l2_yTb <= 0;\t\n\t\t\t\t l2_partIdx <= 0;\n\t\t\t\t l2_isLastCycInTb <= 0;\n\t\t\t\t \n\n\t\t\t\t l_preStage <= 0;\n\t\t\t\t l2_preStage <=0;\n\t\t\t\t l2_horFlag <= 0;\n\t\t\t\t l2_verFlag <= 0;\n\t\t\t\t l2_isFirstCycInTb <= 0;\n\t\t\t\t l2_isLtBorder <= 0;\n\t\t\t\t l2_cIdx <= 3;\t\t\t\t \n\t\t\t\t l1_xTb_cr <= 0;\n\t\t\t\t l1_tuSize_cr <=0; \n\t\t\t\t l2_modeHor <= 0;\n\t\t\t\t {l2_move,l2_weight} <=0;\n\t\t\t\t {l2_X_tr,l2_Y_tr} <= 0;\n\t\t\t\t l2_unFil_opt\t<=\t0;\n\t\t\t\t l2_DC_xxxx_data <=\t0;\n\t\t\t\t \n\t\t\t\t l3_tuSize <= 0;\n\t\t\t\t l3_cIdx <= 3;\n\t\t\t\t \n\t\t\t\t w_addr_TL <= 0;\n\t\t\t\t w_addr <= 0;\n\t\t\t\t w_data_TL <= 0;\n\t\t\t\t w_data <= 0;\n\t\t\t\t wE_n <= {9'b111111111};\n\t\t\t\t \n\t\t\t\t {l0_isInter,l_isInter,l2_isInter} <= 0;\n\t\t\t end \n\t\t\t else if(~rst_n)\tbegin\n\t\t\t\t {lz_tuSize,lz_mode,lz_X,lz_Y,lz_xTb,lz_yTb, \n\t\t\t\t lz_isLastCycInTb,lz_order,lz_preStage,lz_pseuAdr} <= 0;\t\n\t\t\t\t lz_cIdx <= 3;\n\t\t\t\t \n\t\t\t\t {l0_tuSize,l0_mode,l0_isAbove,l0_isLeft,l0_isTopLeft, l0_X,l0_Y,l0_xTb,l0_yTb, \n\t\t\t\t l0_partIdx,l0_verLevel,l0_horLevel,l0_horFlag,l0_verFlag,l0_isLastCycInTb,l0_isFirstCycInTb,\n\t\t\t\t l0_order,l0_isLtBorder,l0_BtBorderInfo,l0_RtBorderInfo,l0_preStage} <= 0;\t\n\t\t\t\t l0_cIdx <= 3;\n\t\t\t\t\n\t\t\t\t l_tuSize <= 0;\n\t\t\t\t l_mode <=  0;\n\t\t\t\t \n\t\t\t\t l_X <=  0;\n\t\t\t\t l_Y <=  0;\n\t\t\t\t l_xTb <= 0;\n\t\t\t\t l_yTb <= 0;\t\n\t\t\t\t l_partIdx <= 0;\n\t\t\t\t l_verLevel <= 0;\n\t\t\t\t l_horLevel <= 0;\n\t\t\t\t l_horFlag <= 0;\n\t\t\t\t l_verFlag <= 0;\n\t\t\t\t l_isLastCycInTb <= 0;\n\t\t\t\t l_isFirstCycInTb <= 0;\n\t\t\t\t l_isAbove <=0;\n\t\t\t\t l_isLeft <= 0;\n\t\t\t\t l_isTopLeft <=0;\n\t\t\t\t l_order \t<= 0;\n\t\t\t\t l_isLtBorder <= 0;\n\t\t\t\t \n\t\t\t\t l_BtBorderInfo <=0;\n\t\t\t\t l_RtBorderInfo <=0;\n\n\t\t\t\t l_pseuAdr  <= 0;\n\t\t\t\t l_modiPosIn4 <=0;\n\t\t\t\t l_preStage <= 0;\n\t\t\t\t l_ram_idx <=0;\n\t\t\t\t \n\t\t\t\t r_addr_TL <= 0;\n\t\t\t\t r_addr <= 0;\n\t\t\t\t l_cIdx <= 3;\n\t\t\t\t \n\t\t\t\t \n\t\t\t\t \n\t\t\t\t{l1_mode,l1_tuSize,l1_ref_pos,l1_ref_TLADflag,l1_X,l1_Y,l1_xTb,l1_yTb,l1_partIdx,l1_isLastCycInTb,\n\t\t\t\tl1_preStage,l1_horFlag,l1_verFlag,l1_isFirstCycInTb,l1_order,l1_ram_idx,l1_isLtBorder,l1_BtBorderInfo,\n\t\t\t\tl1_RtBorderInfo,l1_modeHor,l1_isInter}<= 0; \n\t\t\t\t l1_cIdx <= 3;\n\t\t\t\t {l1_X_tr,l1_Y_tr} <= 0;\n\t\t\t\t \n\t\t\t\t \n\n\t\t\t\t l2_tuSize <= 0;\n\t\t\t\t l2_mode <=  0;\n\t\t\t\t l2_order\t<= 0;\n\t\t\t\t l2_X <=  0;\n\t\t\t\t l2_Y <=  0; \n\t\t\t\t l2_xTb <= 0;\n\t\t\t\t l2_yTb <= 0;\t\n\t\t\t\t l2_partIdx <= 0;\n\t\t\t\t l2_isLastCycInTb <= 0;\n\t\t\t\t {l2_X_tr,l2_Y_tr} <= 0;\n\n\t\t\t\t l2_BtBorderInfo <=0;\t\t\n\t\t\t\t l2_RtBorderInfo <=0;\t\n\t\t\t\t l2_preStage <=0;\n\t\t\t\t l2_horFlag <= 0;\n\t\t\t\t l2_verFlag <= 0;\n\t\t\t\t l2_isFirstCycInTb <= 0;\n\t\t\t\t l2_isLtBorder <= 0;\n\t\t\t\t l2_cIdx <= 3;\n\t\t\t\t l1_xTb_cr <= 0;\n\t\t\t\t l1_tuSize_cr <=0; \n\t\t\t\t l2_modeHor <= 0;\n\t\t\t\t {l2_move,l2_weight} <=0;\n\t\t\t\t l2_unFil_opt\t<=\t0;\n\t\t\t\t l2_DC_xxxx_data <=\t0;\n\t\t\t\t \n\t\t\t\t \n\t\t\t\t l3_tuSize <= 0;\n\t\t\t\t l3_cIdx <= 3;\n\t\t\t\t r_reconSamples<=0;\n\t\t\t\t \n\t\t\t\t w_addr_TL <= 0;\n\t\t\t\t w_addr <= 0;\n\t\t\t\t w_data_TL <= 0;\n\t\t\t\t w_data <= 0;\n\t\t\t\t wE_n <= {9'b111111111};\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t{l0_isInter,l_isInter,l2_isInter} <= 0;\n\t\t\t end\n\t\t\t else begin\n\t\t\t\tif(!bStop_z)\tbegin\n\t\t\t\t\t lz_tuSize <= tuSize;\n\t\t\t\t\t lz_mode <=  mode_;\n\t\t\t\t\t lz_X <=  X;\n\t\t\t\t\t lz_Y <=  Y;\n\t\t\t\t\t lz_xTb <= xTb;\n\t\t\t\t\t lz_yTb <= yTb;\t\n\t\t\t\t\t lz_pseuAdr <= pseuAdr;\n\t\t\t\t\t lz_isLastCycInTb <= isLastCycInTb;\n\t\t\t\t\t lz_order \t<= order;\n\t\t\t\t\t lz_preStage <= preStage;\n\t\t\t\t\t lz_cIdx <= cIdx;\n\t\t\t\t\t {lz_isInter} <= {isInter};\n\t\t\t\tend\n\t\t\t\tif(!bStop_0)\tbegin\n\t\t\t\t\t l0_tuSize <= lz_tuSize;\n\t\t\t\t\t l0_mode <=  lz_mode;\n\t\t\t\t\t l0_isAbove <=lz_isAbove;\n\t\t\t\t\t l0_isLeft <= lz_isLeft;\n\t\t\t\t\t l0_isTopLeft <=lz_isTopLeft;\n\t\t\t\t\t l0_X <=  lz_X;\n\t\t\t\t\t l0_Y <=  lz_Y;\n\t\t\t\t\t l0_xTb <= lz_xTb;\n\t\t\t\t\t l0_yTb <= lz_yTb;\t\n\t\t\t\t\t l0_partIdx <= lz_partIdx;\n\t\t\t\t\t l0_verLevel <= verLevel;\n\t\t\t\t\t l0_horLevel <= horLevel;\n\t\t\t\t\t l0_horFlag <= horFlag;\n\t\t\t\t\t l0_verFlag <= verFlag;\n\t\t\t\t\t l0_isLastCycInTb <= lz_isLastCycInTb;\n\t\t\t\t\t l0_isFirstCycInTb <= lz_isFirstCycInTb;\n\t\t\t\t\t l0_order \t<= lz_order;\n\t\t\t\t\t l0_isLtBorder <= lz_isLtBorder;\n\t\t\t\t\t l0_BtBorderInfo <= lz_BtBorderInfo;\n\t\t\t\t\t l0_RtBorderInfo <=lz_RtBorderInfo;\n\t\t\t\t\t l0_preStage <= lz_preStage;\n\t\t\t\t\t r_addr_TL <= r_addr_TL_;\n\t\t\t\t\t r_addr <= r_addr_;\n\t\t\t\t\t l0_cIdx <= lz_cIdx;\n\t\t\t\t\t {l0_isInter} <= {lz_isInter};\n\t\t\t\tend\n\t\t\t\tif(!bStop_1)\tbegin\n\t\t\t\t\t l_tuSize <= l0_tuSize;\n\t\t\t\t\t l_mode <=  l0_mode;\n\t\t\t\t\t l_isAbove <=l0_isAbove;\n\t\t\t\t\t l_isLeft <= l0_isLeft;\n\t\t\t\t\t l_isTopLeft <=l0_isTopLeft;\n\t\t\t\t\t l_X <=  l0_X;\n\t\t\t\t\t l_Y <=  l0_Y;\n\t\t\t\t\t l_xTb <= l0_xTb;\n\t\t\t\t\t l_yTb <= l0_yTb;\t\n\t\t\t\t\t l_partIdx <= l0_partIdx;\n\t\t\t\t\t l_verLevel <= l0_verLevel;\n\t\t\t\t\t l_horLevel <= l0_horLevel;\n\t\t\t\t\t l_horFlag <= l0_horFlag;\n\t\t\t\t\t l_verFlag <= l0_verFlag;\n\t\t\t\t\t l_isLastCycInTb <= l0_isLastCycInTb;\n\t\t\t\t\t l_isFirstCycInTb <= l0_isFirstCycInTb;\n\t\t\t\t\t l_order \t<= l0_order;\n\t\t\t\t\t l_isLtBorder <= l0_isLtBorder;\n\t\t\t\t\t l_BtBorderInfo <= l0_BtBorderInfo;\n\t\t\t\t\t l_RtBorderInfo <=l0_RtBorderInfo;\n\t\t\t\t\t l_preStage <= l0_preStage;\n\t\t\t\t\t l_pseuAdr  <= l0_pseuAdr;\n\t\t\t\t\t l_modiPosIn4 <=l0_modiPosIn4;\n\t\t\t\t\t l_ram_idx <= l0_ram_idx;\n\t\t\t\t\t l_cIdx <= l0_cIdx;\n\t\t\t\t\t {l_isInter} <= {l0_isInter};\n\t\t\t\tend\n\t\t\t\tif(!bStop_1_1)\tbegin\n\t\t\t\t\tl1_mode <=  l_mode;\n\t\t\t\t\tl1_ref_pos <= ref_pos;\n\t\t\t\t\tl1_ref_TLADflag <= ref_TLADflag; \n\t\t\t\t\tl1_tuSize <= l_tuSize;\n\t\t\t\t\tl1_X <=  l_X;\n\t\t\t\t\tl1_Y <=  l_Y; \n\t\t\t\t\tl1_xTb <= l_xTb;\n\t\t\t\t\tl1_yTb <= l_yTb;\t\n\t\t\t\t\tl1_partIdx <= l_partIdx;\n\t\t\t\t\tl1_isLastCycInTb <= l_isLastCycInTb;\n\t\t\t\t\t{l1_X_tr,l1_Y_tr} <=  {l_X_tr,l_Y_tr};\n\n\t\t\t\t\tl1_preStage <=l_preStage;\n\t\t\t\t\tl1_horFlag <= l_horFlag;\n\t\t\t\t\tl1_verFlag <= l_verFlag;\n\t\t\t\t\tl1_isFirstCycInTb <= l_isFirstCycInTb;\n\t\t\t\t\tl1_order\t<= l_order;\n\t\t\t\t\tl1_ram_idx <= l_ram_idx;\n\t\t\t\t\tl1_isLtBorder <= l_isLtBorder;\n\t\t\t\t\tl1_BtBorderInfo <= l_BtBorderInfo;\t\n\n\t\t\t\t\tl1_RtBorderInfo <=l_RtBorderInfo;\n\n\t\t\t\t\tl1_cIdx <= l_cIdx;\n\t\t\t\t\tl1_modeHor <= l_modeHor;\n\t\t\t\t\t{l1_isInter} <= {l_isInter};\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tif(!bStop_2)\tbegin\n\t\t\t\t\t \n\t\t\t\t\t l2_mode <=  l1_mode;\n\t\t\t\t\t l2_tuSize <= l1_tuSize;\n\t\t\t\t\t l2_X <=  l1_X;\n\t\t\t\t\t l2_Y <=  l1_Y; \n\t\t\t\t\t l2_xTb <= l1_xTb;\n\t\t\t\t\t l2_yTb <= l1_yTb;\t\n\t\t\t\t\t l2_partIdx <= l1_partIdx;\n\t\t\t\t\t l2_isLastCycInTb <= l1_isLastCycInTb;\n\t\t\t\t\t {l2_X_tr,l2_Y_tr} <=  {l1_X_tr,l1_Y_tr};\n\n\t\t\t\t\t l2_preStage <= l1_preStage;\n\t\t\t\t\t l2_horFlag <= l1_horFlag;\n\t\t\t\t\t l2_verFlag <= l1_verFlag;\n\t\t\t\t\t l2_isFirstCycInTb <= l1_isFirstCycInTb;\n\t\t\t\t\t l2_order\t<= l1_order;\n\t\t\t\t\t l2_isLtBorder <= l1_isLtBorder;\n\t\t\t\t\t l2_BtBorderInfo <= l1_BtBorderInfo;\t\n\n\t\t\t\t\t l2_RtBorderInfo <=l1_RtBorderInfo;\n\t\t\t\t\t \n\t\t\t\t\t l2_cIdx <= l1_cIdx;\n\t\t\t\t\t l2_modeHor <= l1_modeHor;\n\t\t\t\t\t {l2_isInter} <= {l1_isInter};\n\t\t\t\t\t {l2_move,l2_weight} <={move,weight};\n\t\t\t\t\t \n\t\t\t\t\t l2_mainRefReg <= l1_mainRefReg;\n\t\t\t\t\t l2_sub_top_left_pixel_P <= l1_sub_top_left_pixel_P;\n\t\t\t\t\t l2_top_right_pixel <= l1_top_right_pixel;\n\t\t\t\t\t l2_bottom_left_pixel <= l1_bottom_left_pixel;\n\t\t\t\t\t l2_unFilDC <= l1_unFilDC;\n\t\t\t\t\t l2_opt_recon <= l1_opt_recon;\n\t\t\t\t\t l2_unFil_opt\t<=\tl1_unFil_opt;\n\t\t\t\t\t l2_DC_xxxx_data <=\t l1_DC_xxxx_data;\n\t\t\t\t\tend\n\t\t\t\tif(!bStop_3)\tbegin\n\t\t\t\t\t \n\t\t\t\t\t l3_tuSize <= l2_tuSize;\n\t\t\t\t\t l3_cIdx  <= l2_cIdx;\t\t\t\t \n\t\t\t   end\n\t\t\t \n\t\t\t\tif(resi_rdy && resi_val)\n\t\t\t\t\t r_reconSamples<=reconSamples;\n\t\t\t\t\t \n\t\t\t    if(!bDelayWrite)\tbegin\n\t\t\t\t\tif(!bStop_3)\tbegin\n\t\t\t\t\t w_addr_TL <= w_addr_TL_;\n\t\t\t\t\t w_addr <= w_addr_;\n\t\t\t\t\t w_data_TL <= w_data_TL_;\n\t\t\t\t\t w_data <= w_data_;\n\t\t\t\t\t wE_n <= wE_n_;\t\t\n\t\t\t\t   end\n\t\t\t   end\n\t\t\t\telse\tbegin\n\t\t\t\t\tif(!bStop_2)\tbegin\n\t\t\t\t\t w_addr_TL <= w_addr_TL_;\n\t\t\t\t\t w_addr <= w_addr_;\n\t\t\t\t\t w_data_TL <= w_data_TL_;\n\t\t\t\t\t w_data <= w_data_;\n\t\t\t\t\t wE_n <= wE_n_;\t\t\n\t\t\t\t\t end\n\t\t\t\tend\n\t\t\t\n\t\t\t\n\t\t\t\tif(l_cIdx == 2 && cIdx==1 && !bStop_1_1) \t\t\t\n\t\t\t\t\t{l1_xTb_cr,l1_tuSize_cr}  <= {l_xTb,l_tuSize};\n\t\t end\n\tend\n\n\n\n\n\talways @(*) begin\n\t\tif(w_addr_TL_ == r_addr_TL_ && rE_n_[8]==0 && wE_n_[8]==0)\n\t\t\trE_n_tmp[8] = 1;\n\t\telse\n\t\t\trE_n_tmp[8] = rE_n_[8];\n\tend\n\t\n\tgenerate genvar i;\n\t\t\tfor(i=0;  i<8; i=i+1) begin:xi\n\t\t\t\talways @(*) begin\n\t\t\t\t\tif(w_addr_[(8*realAW_Y-1-realAW_Y*i):(7*realAW_Y-realAW_Y*i)]==r_addr_[(8*realAW_Y-1-realAW_Y*i):(7*realAW_Y-realAW_Y*i)] && wE_n_[i]==0 && rE_n_[i]==0) \n\t\t\t\t\t\trE_n_tmp[i] = 1;\n\t\t\t\t\telse\n\t\t\t\t\t\trE_n_tmp[i] = rE_n_[i];\n\t\t\t\tend\n\t\t\tend\n\t\tendgenerate\n\n\talways @(posedge clk or negedge arst_n) begin\n\t\tif(!arst_n)\n\t\t\trE_n <= {9'b111111111};\n\t\telse if(!rst_n)\n\t\t\trE_n <= {9'b111111111};\n\t\telse if(!bStop_0) \n\t\t\trE_n <= rE_n_tmp;\n\tend\n\t\n\t\n\t\n\t\n\t\n\n\treg [12:0]  \t\t\tl3_xTb;\n\treg [12:0] \t\t\t\tl3_yTb;\n\treg [5:0]\t\t\t\tl3_mode;\n\treg [2:0]\t\t\t\tl3_X,l3_Y;\n\treg\t\t\t\t\t\tl3_isInter;\n\n\talways @(posedge clk or negedge arst_n)\n  if(!arst_n)\n    {l3_X,l3_Y,l3_mode,l3_xTb,l3_yTb,l3_isInter} <= 0;\n  else if(!rst_n)\n    {l3_X,l3_Y,l3_mode,l3_xTb,l3_yTb,l3_isInter} <= 0;\n  else if(!bStop_3)\n    {l3_X,l3_Y,l3_mode,l3_xTb,l3_yTb,l3_isInter} <= \n    {l2_X_tr,l2_Y_tr,l2_mode,l2_xTb,l2_yTb,l2_isInter};\n\t\n\treg  [20:0]  lineNum;\n\talways @(posedge clk or negedge arst_n)  begin\n\t  if(!arst_n)\n\t\tlineNum <= 1;\n\t  else begin\n\t\tif(resi_rdy && resi_val)\n\t\t\tlineNum <= lineNum+1;\n\t    end\n\tend\n\n\t\n\nintra_inputTrafo  #(.isChroma(isChroma)) cInputTrafo(\n\t.xCtb(xCtb_),\n\t.yCtb(yCtb_),\n\t.xTb_rela(xTb_rela_),\n\t.yTb_rela(yTb_rela_),\n\t.i_tuSize(tuSizeLog2_),\n\t.xTb(xTb),\t\t\n\t.yTb(yTb),\t\t\n\t.tuSize(tuSize)\n);\n\t\n\t\nintra_fsm #(.isChroma(isChroma)) cFSM(\n\t  .clk(clk)\n\t  ,.arst_n(arst_n)\n\t  ,.rst_n(rst_n)\n\t  ,.X(X)\n\t  ,.Y(Y)\n\t  ,.mode(mode_)\n\t  ,.tuSize(tuSize)\n\t  ,.preStage(preStage)\n\t  ,.order(order)\n\t  ,.bStop(bStop)\n\t  ,.cIdx(cIdx)\n\t  ,.isInter(isInter)\n);\n\nintra_pIdx #(.isChroma(isChroma)) cPIdx(\n    .xTb(lz_xTb)\n    ,.yTb(lz_yTb)\n    ,.tuSize(lz_tuSize)\n    ,.pIdx(lz_partIdx)\n);\n\n\nintra_read #(.AW(realAW_Y),.AW_TL(realAW_TL_Y),.isChroma(isChroma))cRead(\n\t.clk(clk),\n\t.arst_n(arst_n),\n\t.rst_n(rst_n),\n\t.bStop(bStopz),\n\t.bStop_(bStop_0),\n\t.pseuAdr(lz_pseuAdr),\t\t\n\t.pIdx(lz_partIdx),\n\t.X(lz_X),\n\t.Y(lz_Y),\n\t.xTb(lz_xTb),\n\t.yTb(lz_yTb),\n\t.tuSize(lz_tuSize),\n\t.r_addr(r_addr_),\t\t\n\t.r_addr_TL(r_addr_TL_),\n\t.rE_n(rE_n_),\n\t.horFlag(horFlag),\n\t.verFlag(verFlag),\n\t.verLevel_o(verLevel),\n\t.horLevel_o(horLevel),\n\t.isCalStage(lz_preStage[3]),\n\t.nMaxCUlog2(nMaxCblog2),\n\t.isFirstCycInTb(lz_isFirstCycInTb),\n\t.cIdx(lz_cIdx),\n\t.isRtBorder(lz_RtBorderInfo[5]),\n\t.isBtBorder(lz_BtBorderInfo[5]),\n\t.posRtBorderIn4(lz_RtBorderInfo[4:0]),\n\t.posBtBorderIn4(lz_BtBorderInfo[4:0]),\n\t.o_modiPsAdr(l0_pseuAdr),\n\t.o_modiPosIn4(l0_modiPosIn4),\n\t.o_ram_idx(l0_ram_idx)\n\t);\n\t\nintra_pseudoAddr  cPseudoAddr(\n\t.mode(mode_),\t\t\t\n\t.X(X),\t\t\t\t\n\t.Y(Y),\n\t.preStage(preStage)\n\t,.tuSize(tuSize)\n\t,.pseuAdr(pseuAdr)\n);\t\t\n\n\n\nintra_SRAMCtrl #(.bitDepth(bitDepthY),.AW(realAW_Y),.AW_TL(realAW_TL_Y)) cSRAMCtrl (\n\t .rclk(clk),\n\t .rAdr(r_addr),\n\t .rAdr_TL(r_addr_TL),\n\t .rData(r_data),\n\t .rData_TL(top_left_pixel),\n\t .rE_n(rE_n),\n\t .bStop_r(bStop0),\n\t\n \n\t \t \n\t .wclk(clk),\n\t .wAdr(w_addr),\n\t .wAdr_TL(w_addr_TL),\n\t .wData(w_data),\n\t .wData_TL(w_data_TL),\n\t .wE_n(wE_n)\n\t \n\t\n);\t\n\n\t\n\n\n\t \t \nintra_border cBorder (\n\t.xTb(lz_xTb)\t\t\t\n\t,.yTb(lz_yTb)\n\t,.pic_width_in_samples(pic_width_in_luma_samples>>isChroma)\n\t,.pic_height_in_samples(pic_height_in_luma_samples>>isChroma)\n\t,.first_ctu_in_slice_x(first_ctu_in_slice_x)\n\t,.first_ctu_in_slice_y(first_ctu_in_slice_y)\n\t,.first_ctu_in_tile_x(first_ctu_in_tile_x)\n\t,.first_ctu_in_tile_y(first_ctu_in_tile_y)\n\t,.last_ctu_in_tile_x(last_ctu_in_tile_x)\n\t,.last_ctu_in_tile_y(last_ctu_in_tile_y)\n\t,.nMaxCUlog2(nMaxCblog2)\n\t,.tuSize(lz_tuSize)\n\t\n\t,.isAbove(lz_isAbove)\t\n\t,.isLeft(lz_isLeft)\n\t,.isTopLeft(lz_isTopLeft)\n\t,.isLtBorder(lz_isLtBorder)\n\t,.isRtBorder(lz_RtBorderInfo[5])\n\t,.isBtBorder(lz_BtBorderInfo[5])\n\t,.posRtBorderIn4(lz_RtBorderInfo[4:0])\n\t,.posBtBorderIn4(lz_BtBorderInfo[4:0])\n);\n\n\nintra_refPosGen   cRefPosGen(\n\t.mode(l_mode),\t\t\t\n\t.X(l_X),\t\t\t\t\n\t.Y(l_Y),\n\t.ref_pos(ref_pos),   \n\t.ref_TLADflag(ref_TLADflag)  \n\t,.preStage(l_preStage)\n\t,.tuSize(l_tuSize)\n);\n\nintra_s2RefSubsti #(.bitDepth(bitDepthY), .isChroma(isChroma)) cS2RefSubsti (\n\t.pseuAdr(l_pseuAdr),\n\t.isAbove(l_isAbove),\n\t.isLeft(l_isLeft),\n\t.isTopLeft(l_isTopLeft),\n\t.tuSize(l_tuSize),\n\t.isBtBorder(l_BtBorderInfo[5]),\n\t.isRtBorder(l_RtBorderInfo[5]),\n\t.posBtBorderIn4(l_BtBorderInfo[4:0]),\n\t.posRtBorderIn4(l_RtBorderInfo[4:0]),\n\t.nMaxCUlog2(nMaxCblog2),\n\t.data(r_data),\n\t.data_tl(top_left_pixel),\n\t.horLevel_i(l_horLevel),\n\t.verLevel_i(l_verLevel),\n\t.verFlag(l_verFlag),\n\t.sub_data(sub_data),\n\t.sub_tl(sub_top_left_pixel),\n\t.partIdx(l_partIdx),\n\t.pre_tuSize(p_tuSize),\n\t.pre_xTb(p_xTb),\n\t.pre_modeHor(l2_modeHor),\n\t.xTb(l_xTb),\n\t.xTbInCU(l_xTbInCU),\n\t.yTbInCU(l_yTbInCU),\n\t.byPa_DW_A_3(byPa_DW_A_3[4*bitDepthY-1:0]),\n\t.byPa_P_A_2(byPa_P_A_2),\n\t.byPa_P_A_2_cr(byPa_P_A_2_cr),\n\t.bp_pos_1(bp_pos_1),\n\t.bp_pos_2(bp_pos_2),\n\t.bp_pos_3(bp_pos_3),\n\t.order(l_order),\n\t.clk(clk),\n\t.rst_n(rst_n),\n\t.arst_n(arst_n),\n\t.bStop(bStop_1),\n\t.i_modiPosIn4(l_modiPosIn4),\n\t.awkCnt(l_awkCnt),\n\t.cIdx(l_cIdx),\n\t\n\t.by4_1_forStop(by4_1_forStop),\n\t.by4_1_forStop_cr(by4_1_forStop_cr),\n\t.by4_1_forStop_pos(by4_1_forStop_pos),\n\t\n\t.substi_Opt(substi_Opt),\n\t.gp_bitDepth(gp_bitDepth)\n);\n\n\nintra_util #(.isChroma(isChroma)) intra_util(\n\t.clk(clk)\n\t,.rst_n(rst_n)\n\t,.arst_n(arst_n)\n\t,.bStop(bStop_1)\n\t,.bStop1(bStop1)\n\t,.X(l_X)\n\t,.Y(l_Y)\n\t,.mode(l_mode)\n\t,.tuSize(l_tuSize)\n\t,.preStage(l_preStage)\n\t,.options(l1_options)\n\t,.ref_pos(ref_pos)\n\t,.ref_flag(ref_TLADflag)\n\t,.ramIdxMapping(l_ram_idx)\n\t,.idx_mapped_(idx_mapped_)\n\t,.isInter(l_isInter)\n\t,.modeHor(l_modeHor)\n\t,.opt_recon(l1_opt_recon)\n\t,.unFil_opt_(l1_unFil_opt)\n);\n\t\n\n\n\n\n\n\nintra_l1_stage #(.bitDepthY(bitDepthY), .isChroma(isChroma), .ANG_BDEPTH(ANG_BDEPTH),.PLA_2_BDEPTH(PLA_2_BDEPTH)) intra_l1_stage(\n\t.sub_data(sub_data),\n\t.sub_top_left_pixel(sub_top_left_pixel),\n\t.byPa_P_DR_1(byPa_P_DR_1),\n\t.byPa_P_DR_1_cr(byPa_P_DR_1_cr),\n\t.substi_Opt(substi_Opt),\n\t.btRtSamples(btRtSamples)\n\t,.clk(clk)\n\t,.rst_n(rst_n)\n\t,.arst_n(arst_n)\n\t,.bStop_1_1(bStop_1_1)\n\t,.bStop_2(bStop_2)\n\t,.l1_mainRefReg(l1_mainRefReg)\t\t\n\t,.l1_top_right_pixel(l1_top_right_pixel)\n\t,.l1_bottom_left_pixel(l1_bottom_left_pixel)\n\t,.l1_sub_top_left_pixel_P(l1_sub_top_left_pixel_P)\n\t,.l1_ref_pos(l1_ref_pos)\n\t,.l1_ref_TLADflag(l1_ref_TLADflag)\n\t,.l1_mode(l1_mode)\n\t,.l1_tuSize(l1_tuSize)\n\t,.l1_X(l1_X)\n\t,.l1_Y(l1_Y)\n\t,.l1_preStage(l1_preStage)\n\t,.l1_ram_idx(l1_ram_idx)\n\t,.l1_options(l1_options)\n\t,.idx_mapped_(idx_mapped_)\n\t,.gp_bitDepth(gp_bitDepth)\n\t,.l1_weight(weight)\n\t,.l1_move(move)\n\t,.r_r0(r_r0)\n\t,.r_r1(r_r1)\n\t\n\t\n\n\n\t,.r_plan_0(r_plan_0)\n\t,.r_plan_1(r_plan_1)\n\t,.r_plan_2(r_plan_2)\n\t,.r_plan_3(r_plan_3)\n\t,.DC_xxxx_data(l1_DC_xxxx_data)\n);\n\n intra_util_w intra_util_w(\n\t.clk(clk),\n\t.arst_n(arst_n),\n\t.rst_n(rst_n),\n\t.bStop(bStop_2),\n\t.bStop_1_1(bStop_1_1)\n\t,.xTb(l1_xTb)\n\t,.yTb(l1_yTb)\n\t,.l_xTb(l_xTb)\n\t,.l_yTb(l_yTb)\n\t,.X(l1_X_tr)\n\t,.Y(l1_Y_tr)\n\t,.l_X(l_X_tr)\n\t,.l_Y(l_Y_tr)\n\t,.tuSize(l1_tuSize)\n\t,.partIdx(l1_partIdx)\n\t,.nMaxCUlog2(nMaxCblog2)\n\t,.verFlag(l1_verFlag)\n\t,.horFlag(l1_horFlag)\n\t,.isCalStage(l1_preStage[3])\n\t,.opt_w_tl_(opt_w_tl)\n\t,.opt_w_(opt_w)\n\t,.w_TL_rela_(w_TL_rela_)\n);\n\n  intra_pred_l2 #(.bitDepth(bitDepthY),.ANG_BDEPTH(ANG_BDEPTH),.PLA_2_BDEPTH(PLA_2_BDEPTH))cPred(\n\t.clk(clk),\n\t.arst_n(arst_n),\n\t.rst_n(rst_n),\n\t.bStop(bStop_2),\n\t.weight(l2_weight),              \n\t.mainRefReg(l2_mainRefReg),      \n\t.predSamples(predSamples),    \n\t.mode(l2_mode),\t\t\t\t\n\t.top_left_pixel(l2_sub_top_left_pixel_P),\n\t.X(l2_X[2:0]),\n\t.Y(l2_Y[2:0])\n\t,.isPredFilter(l2_isPredFilter)\n\t,.tuSize(l2_tuSize)\n\t,.gp_bitDepth(gp_bitDepth)\n\t,.r_r0(r_r0)\n\t,.r_r1(r_r1)\n\n\n\t,.r_plan_0(r_plan_0)\n\t,.r_plan_1(r_plan_1)\n\t,.r_plan_2(r_plan_2)\n\t,.r_plan_3(r_plan_3)\n\t,.unFil_opt(l2_unFil_opt)\n\t,.preStage(l2_preStage)\n\t,.DC_xxxx_data(l2_DC_xxxx_data)\n\n\n  );\n  \n    intra_mode2angle cMode2angle(\n\t  .mode(l1_mode),\t\t\n\t  .angle(angle)\t\t\t\n  );\n  \n  intra_angleToang cAngleToang(\n\t   .angle(angle),      \n\t   .ang(ang)       \n  );\n  \n   \t \n  intra_lut1 cLut1(\n\t  .ang(ang),             \n\t  .yPos(l1_Y),            \n\t  .move(move)            \n  );\n  \n  intra_lut2 cLut2(\n    .ang(ang),      \n    .yPos(l1_Y),     \n    .weight(weight)       \n  );\n  \n  intra_recon #(.pixWidth(bitDepthY))cRecon(\n\t  .clk(clk),\n\t  .arst_n(arst_n),\n\t  .rst_n(rst_n),\n\t  .predSamples(predSamples),\n\t  .predSamples_inter(predSamples_inter),\n\t  .residuals(residuals),\n\t  .reconSamples(reconSamples)\n\t  ,.tuSize(l2_tuSize)\n\t  ,.r_reconSamples(r_reconSamples)\n\t  ,.gp_bitDepth(gp_bitDepth)\n\t  ,.opt_recon(l2_opt_recon)\n  );\n  \n \n  intra_exchangeXY  cExchangeXY(\n\t.isInter(l_isInter),\n\t.modeHor(l_modeHor)\n\t,.i_X(l_X)\n\t,.i_Y(l_Y)\n\t,.o_X(l_X_tr)\n\t,.o_Y(l_Y_tr)\n);\n\n\tintra_bypass #(.bitDepth(bitDepthY) ,.isChroma(isChroma)) cByPass(\n\t\t.clk(clk),\n\t\t.arst_n(arst_n),\n\t\t.rst_n(rst_n),\n\t\t.bStop(bStop2),\n\t\t.n_bStop(bStop1_1),\n\t\t.nn_bStop(bStop1),\n\t\t.tuSize(l2_tuSize),\n\t\t.n_tuSize(l1_tuSize),\n\t\t.X(l2_X_tr),\n\t\t.Y(l2_Y_tr),\n\t\t.isLtBorder(l2_isLtBorder),\n\t\t.isBtBorder(l2_BtBorderInfo[5]),\n\t\t.isRtBorder(l2_RtBorderInfo[5]),\n\t\t.posBtBorderIn4(l2_BtBorderInfo[4:0]),\n\t\t.posRtBorderIn4(l2_RtBorderInfo[4:0]),\t\n\t\t.partIdx(l2_partIdx),\n\t\t.n_partIdx(l1_partIdx),\n\t\t.xTb(l2_xTb),\n\t\t.yTb(l2_yTb),\n\t\t.nxtXTb(l1_xTb),\n\t\t.nxtYTb(l1_yTb),\n\t\t.i_recSamples(reconSamples),\n\t\t.l3_i_recSamples(r_reconSamples),\n\t\t.isCalStage(l2_preStage[3]),\t\n\t\t.order(l2_order),\n\t\t.nMaxCUlog2(nMaxCblog2),\n\t\t.cIdx(l2_cIdx),\n\t\t.n_cIdx(l1_cIdx),\n\t\t.nn_cIdx(l_cIdx),\n\t\t.byPa_P_DR_1(byPa_P_DR_1),\n\t\t.byPa_P_DR_1_cr(byPa_P_DR_1_cr),\n\t\t.byPa_P_A_2(byPa_P_A_2),\n\t\t.byPa_P_A_2_cr(byPa_P_A_2_cr),\n\t\t.byPa_DW_A_3(byPa_DW_A_3),\t\n\t\t.bypa_pos_1(bp_pos_1),\n\t\t.bypa_pos_2(bp_pos_2),\n\t\t.bypa_pos_3(bp_pos_3),\t\n\t\t.btRtSamples(btRtSamples),\n\t\t.by4_1_forStop(by4_1_forStop),\n\t\t.by4_1_forStop_cr(by4_1_forStop_cr),\n\t\t.by4_1_forStop_pos(by4_1_forStop_pos),\n\t\t.n_isBtTb4(l1_yTb==((pic_height_in_luma_samples>>isChroma)-4)),\n\t\t.n_isRtTb4(l1_xTb==((pic_width_in_luma_samples>>isChroma)-4)),\n\t\t.n_isBtTb8(l1_yTb==((pic_height_in_luma_samples>>isChroma)-8)),\n\t\t.n_isRtTb8(l1_xTb==((pic_width_in_luma_samples>>isChroma)-8)),\n\t\t.n_modeHor(l1_modeHor),\n\t\t.n_order(l1_order)\n\t);\n\t\n \n\t\n \n  intra_write #(.bitDepth(bitDepthY),.AW(realAW_Y),.AW_TL(realAW_TL_Y),.isChroma(isChroma)) cWrite(\n\t.clk(clk),\n\t.arst_n(arst_n),\n\t.rst_n(rst_n),\n\t.bStop(bStop2),\n\t.bStop_pre(bStop1_1),\n\t.reconSamples(reconSamples)\t\t\t\t\t\n\t,.xTb(l2_xTb)\n\t,.yTb(l2_yTb)\n\t,.X(l2_X_tr)\n\t,.Y(l2_Y_tr)\n\t,.tuSize(l2_tuSize)\n\t,.partIdx(l2_partIdx)\n\t,.nMaxCUlog2(nMaxCblog2)\n\t,.verFlag(l2_verFlag)\n\t,.horFlag(l2_horFlag)\n\t,.isLastCycInTb(l2_isLastCycInTb)\n\t,.r_tl_data(byPa_DW_A_3[6*bitDepthY-1:4*bitDepthY])\n\t,.isCalStage(l2_preStage[3])\n\t,.cIdx(l2_cIdx)\n\t\n\t,.w_data(w_data_)\t\t\t\t\n\t,.w_data_TL(w_data_TL_)\n\t,.w_addr(w_addr_)\n\t,.w_addr_TL(w_addr_TL_)\n\t,.wE_n(wE_n_)\n\t\n\t,.bDelayWrite(bDelayWrite)\n\t,.opt_w_tl(opt_w_tl)\n\t,.opt_w(opt_w)\n\t,.w_TL_rela_(w_TL_rela_)\n\n);\n \n\n\n  \nendmodule\n\n\n</code>"
                },
                {
                    "type": "text",
                    "text": "Based on the provided original Verilog code, its comments and above answers, generate a detailed specification for the module. Include the following information in a single, concise paragraph:\n1. The name of the module.\n2. A simple explanation of the module's functionality.\n3. The input and output ports, along with a brief explanation of each.\n4. The internal signals used within the module, with a brief explanation of their purpose.\n5. An overview of the different blocks or sections in the code and their functions.\nEnsure that the specification is clear and accurately reflects the details from the code and comments.\nYour answer should be structured and well-organized, providing a comprehensive and detailed overview of the module's design and operation.\nPlease provide your answer in the following format:\nModule name: [module name]. Module specification: [module specification]."
                },
                {
                    "type": "text",
                    "text": "Module name: intra_top. Module specification: The intra_top module is the top-level module for intra prediction in a video codec, likely for HEVC/H.265. It integrates various sub-modules to perform intra prediction, including reference sample generation, prediction mode selection, sample reconstruction, and memory management. The module handles different prediction modes, block sizes, and chroma/luma processing through multiple pipeline stages. Key input ports include clk, rst_n, mode, pic dimensions, CTU coordinates, and various prediction parameters. Output ports provide reconstructed samples and ready signals for different processing stages. Internal signals manage pipeline stages, coordinate data flow, and store intermediate results. The module is structured into several main blocks: input transformation, FSM control, reference sample generation, prediction calculation, reconstruction, and memory interface. It implements a complex pipeline with multiple stages (lz_, l0_, l_, l1_, l2_, l"
                }
            ]
        }
    ]
}