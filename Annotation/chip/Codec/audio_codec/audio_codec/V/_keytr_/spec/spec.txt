Module name: keytr. Module specification: The `keytr` module is designed to create a debounced output from a noisy mechanical key input signal, leveraging a synchronous approach with the clock signal. It utilizes a clock input (`clock`) for synchronizing all operations, including the shift registers and the counter. The `key` input captures the raw signal from the mechanical key, which may contain noise due to bouncing. The output, `KEYON`, provides a negated signal of `q3`, representing the debounced key press state, indicating when the key is pressed (high) or not (low). Internally, the module uses three registers (`q1`, `q2`, `q3`) to store the key signal history over consecutive clock cycles, aiding in noise filtration and debounce logic. The `counter` is a 5-bit register that counts clock cycles, helping delay updates to `q3` until the key signal has stabilized. The `counter_carry` signal detects when the counter reaches its maximum set value (31), triggering necessary updates based on the debounce logic. A `clear` signal, derived from the XOR of `q1` and `q2`, resets the counter when the key's state changes. The Verilog code is segmented into initialization, counter handling, and updating of the shift registers and the debounced output, ensuring efficient and correct debounce operation. This comprehensive design prioritizes noise resilience and stable output for used-critical applications.