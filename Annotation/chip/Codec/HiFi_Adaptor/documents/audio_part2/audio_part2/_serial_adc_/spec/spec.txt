Module name: serial_adc. Module specification: The 'serial_adc' module is tasked with converting serial ADC input data into 33-bit parallel outputs for two channels: left and right, designated as SADCL and SADCR respectively. The module uses two input ports which directly influence operation: 'clk' (clock signal) for timing data capture and shifting operations, 'enable' for controlling the activation of data captureâ€”if low, it resets outputs and counters. It also utilizes 'serial_adc' as the serial data input and 'adc_lr' to determine the targeted data channel (left if high, right if low). The output ports, 'SADCL' and 'SADCR', provide the parallel outputs for the left and right channels. Internally, the design utilizes two 8-bit counters, 'SADCL_counter' and 'SADCR_counter', to track the positioning of serial data bits into the respective 33-bit registers. The module segregates functionalities into multiple blocks, where reset conditions and channel selection/resets are handled in toggle-based always blocks on the clock or enable signal. Additionally, the serial into parallel conversion including bit positioning based on the counter values is done in separate always blocks, examining either negative clock or enable edges synchronized with counter-specific switch cases to allocate the incoming data bit into the correct bit location in the 33-bit output registers. The meticulous alignment of edge-triggered events ensures serialized data acquisition is timely and accurately mapped against digital clock cycles, crucial for maintaining system integrity in tasks that require precise digital representations of analog signals such as in audio processing systems.