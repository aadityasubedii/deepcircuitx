{
    "spec": "Module name: DE1_SoC_QSYS. Module specification: This module is a top-level system integration module for a DE1-SoC FPGA board, implementing a complex system-on-chip design. It interconnects various hardware components and IP cores, including an ARM processor (HPS), memory interfaces (SDRAM, on-chip memory), peripherals (UART, SPI, I2C, GPIO), video processing components (VIP modules for scaling, mixing, etc.), audio interfaces, and clock management (PLLs). The module has numerous input and output ports for interfacing with external components, including clocks, resets, video signals, memory interfaces, and various peripheral I/O. Internal signals facilitate communication between different components, handling data transfer, control, and synchronization. The code is organized into sections for instantiating individual components (e.g., CPU, memory, peripherals, video processing",
    "gpt-message": [
        {
            "role": "system",
            "content": "You are an expert in hardware design with a deep understanding of Verilog RTL codes. Now I want to train a large language model for code comment generation tasks specifically focused on Verilog RTL codes. And I want you to help me process the raw data, transforming it into suitable formats that can serve as inputs and outputs for the model."
        },
        {
            "role": "user",
            "content": "Name of the module and its functionality is as follows: \nModule name: DE1_SoC_QSYS\n\nExplanation: This module appears to be a top-level system integration module for a DE1-SoC FPGA board. It interconnects various hardware components and IP cores, including a processor (likely an ARM core in the HPS), memory interfaces (SDRAM, on-chip memory), peripherals (UART, SPI, I2C, GPIO), video processing components (VIP modules for scaling, mixing, etc.), audio interfaces, and clock management (PLLs). The module handles signal routing, clock domains, and reset logic for the entire system, creating a complete system-on-chip design for the DE1-SoC platform."
        },
        {
            "role": "user",
            "content": "Input and output ports and their explanation is as follows: \nInput ports:\n[clk_50, in_port_to_the_td_status, reset_n, vid_clk_to_the_alt_vip_cti_0, vid_data_to_the_alt_vip_cti_0, vid_datavalid_to_the_alt_vip_cti_0, vid_locked_to_the_alt_vip_cti_0, key_external_connection_export, sw_external_connection_export, spi_0_external_MISO, audio_conduit_end_ADCDAT, audio_conduit_end_ADCLRC, audio_conduit_end_BCLK, uart_external_connection_rxd, hps_io_hps_io_emac1_inst_RXD0, hps_io_hps_io_emac1_inst_RX_CTL, hps_io_hps_io_emac1_inst_RX_CLK, hps_io_hps_io_emac1_inst_RXD1, hps_io_hps_io_emac1_inst_RXD2, hps_io_hps_io_emac1_inst_RXD3, hps_io_hps_io_usb1_inst_CLK, hps_io_hps_io_usb1_inst_DIR, hps_io_hps_io_usb1_inst_NXT, hps_io_hps_io_spim1_inst_MISO, hps_io_hps_io_uart0_inst_RX, memory_oct_rzqin, alt_vip_itc_0_clocked_video_vid_clk, ir_rx_conduit_end_export]\n\nExplanation: These ports include clock inputs, reset signals, video input signals, various peripheral inputs (keys, switches, SPI, audio, UART), and HPS-related inputs for Ethernet, USB, and other interfaces.\n\nOutput ports:\n[out_port_from_the_i2c_scl, out_port_from_the_td_reset_n, overflow_from_the_alt_vip_cti_0, zs_addr_from_the_sdram, zs_ba_from_the_sdram, zs_cas_n_from_the_sdram, zs_cke_from_the_sdram, zs_cs_n_from_the_sdram, zs_dqm_from_the_sdram, zs_ras_n_from_the_sdram, zs_we_n_from_the_sdram, pll_0_locked_export, clk_sdram_clk, clk_vga_clk, seg7_conduit_end_export, ledr_external_connection_export, spi_0_external_MOSI, spi_0_external_SCLK, spi_0_external_SS_n, audio_conduit_end_XCK, audio_conduit_end_DACDAT, uart_external_connection_txd, pll_audio_locked_export, memory_mem_a, memory_mem_ba, memory_mem_ck, memory_mem_ck_n, memory_mem_cke, memory_mem_cs_n, memory_mem_ras_n, memory_mem_cas_n, memory_mem_we_n, memory_mem_reset_n, memory_mem_odt, memory_mem_dm, hps_io_hps_io_emac1_inst_TX_CLK, hps_io_hps_io_emac1_inst_TXD0, hps_io_hps_io_emac1_inst_TXD1, hps_io_hps_io_emac1_inst_TXD2, hps_io_hps_io_emac1_inst_TXD3, hps_io_hps_io_emac1_inst_MDC, hps_io_hps_io_emac1_inst_TX_CTL, hps_io_hps_io_qspi_inst_SS0, hps_io_hps_io_qspi_inst_CLK, hps_io_hps_io_sdio_inst_CLK, hps_io_hps_io_usb1_inst_STP, hps_io_hps_io_spim1_inst_CLK, hps_io_hps_io_spim1_inst_MOSI, hps_io_hps_io_spim1_inst_SS0, hps_io_hps_io_uart0_inst_TX, hps_0_h2f_reset_reset_n, alt_vip_itc_0_clocked_video_vid_data, alt_vip_itc_0_clocked_video_underflow, alt_vip_itc_0_clocked_video_vid_datavalid, alt_vip_itc_0_clocked_video_vid_v_sync, alt_vip_itc_0_clocked_video_vid_h_sync, alt_vip_itc_0_clocked_video_vid_f, alt_vip_itc_0_clocked_video_vid_h, alt_vip_itc_0_clocked_video_vid_v]\n\nExplanation: These ports include various control and data outputs for SDRAM, PLL status, clocks, 7-segment display, LEDs, SPI, audio, UART, memory interfaces, and HPS-related outputs for Ethernet, USB, QSPI, SDIO, and video signals."
        },
        {
            "role": "user",
            "content": "Internal signals and their explanation is as follows: \nInternal signals:\n[alt_vip_cti_0_dout_endofpacket, alt_vip_cti_0_dout_valid, alt_vip_cti_0_dout_startofpacket, alt_vip_cti_0_dout_data, alt_vip_cti_0_dout_ready, alt_vip_cpr_0_dout0_endofpacket, alt_vip_cpr_0_dout0_valid, alt_vip_cpr_0_dout0_startofpacket, alt_vip_cpr_0_dout0_data, alt_vip_cpr_0_dout0_ready, alt_vip_clip_0_dout_endofpacket, alt_vip_clip_0_dout_valid, alt_vip_clip_0_dout_startofpacket, alt_vip_clip_0_dout_data, alt_vip_clip_0_dout_ready, alt_vip_crs_0_dout_endofpacket, alt_vip_crs_0_dout_valid, alt_vip_crs_0_dout_startofpacket, alt_vip_crs_0_dout_data, alt_vip_crs_0_dout_ready, alt_vip_csc_0_dout_endofpacket, alt_vip_csc_0_dout_valid, alt_vip_csc_0_dout_startofpacket, alt_vip_csc_0_dout_data, alt_vip_csc_0_dout_ready, pll_sys_outclk2_clk, pll_sys_outclk0_clk, pll_audio_outclk0_clk, pll_sys_outclk4_clk, alt_vip_dil_0_dout_endofpacket, alt_vip_dil_0_dout_valid, alt_vip_dil_0_dout_startofpacket, alt_vip_dil_0_dout_data, alt_vip_dil_0_dout_ready, alt_vip_cl_scl_0_dout_endofpacket, alt_vip_cl_scl_0_dout_valid, alt_vip_cl_scl_0_dout_startofpacket, alt_vip_cl_scl_0_dout_data, alt_vip_cl_scl_0_dout_ready, alt_vip_vfr_0_avalon_streaming_source_endofpacket, alt_vip_vfr_0_avalon_streaming_source_valid, alt_vip_vfr_0_avalon_streaming_source_startofpacket, alt_vip_vfr_0_avalon_streaming_source_data, alt_vip_vfr_0_avalon_streaming_source_ready, alt_vip_mix_0_dout_endofpacket, alt_vip_mix_0_dout_valid, alt_vip_mix_0_dout_startofpacket, alt_vip_mix_0_dout_data, alt_vip_mix_0_dout_ready, alt_vip_vfb_0_dout_endofpacket, alt_vip_vfb_0_dout_valid, alt_vip_vfb_0_dout_startofpacket, alt_vip_vfb_0_dout_data, alt_vip_vfb_0_dout_ready, alt_vip_cpr_1_dout0_endofpacket, alt_vip_cpr_1_dout0_valid, alt_vip_cpr_1_dout0_startofpacket, alt_vip_cpr_1_dout0_data, alt_vip_cpr_1_dout0_ready, alt_vip_cpr_2_dout0_endofpacket, alt_vip_cpr_2_dout0_valid, alt_vip_cpr_2_dout0_startofpacket, alt_vip_cpr_2_dout0_data, alt_vip_cpr_2_dout0_ready, cpu_data_master_waitrequest, cpu_data_master_writedata, cpu_data_master_address, cpu_data_master_write, cpu_data_master_read, cpu_data_master_readdata, cpu_data_master_debugaccess, cpu_data_master_readdatavalid, cpu_data_master_byteenable, cpu_instruction_master_waitrequest, cpu_instruction_master_address, cpu_instruction_master_read, cpu_instruction_master_readdata, cpu_instruction_master_readdatavalid, hps_0_h2f_lw_axi_master_awid, hps_0_h2f_lw_axi_master_awaddr, hps_0_h2f_lw_axi_master_awlen, hps_0_h2f_lw_axi_master_awsize, hps_0_h2f_lw_axi_master_awburst, hps_0_h2f_lw_axi_master_awlock, hps_0_h2f_lw_axi_master_awcache, hps_0_h2f_lw_axi_master_awprot, hps_0_h2f_lw_axi_master_awvalid, hps_0_h2f_lw_axi_master_awready, hps_0_h2f_lw_axi_master_wid, hps_0_h2f_lw_axi_master_wdata, hps_0_h2f_lw_axi_master_wstrb, hps_0_h2f_lw_axi_master_wlast, hps_0_h2f_lw_axi_master_wvalid, hps_0_h2f_lw_axi_master_wready, hps_0_h2f_lw_axi_master_bid, hps_0_h2f_lw_axi_master_bresp, hps_0_h2f_lw_axi_master_bvalid, hps_0_h2f_lw_axi_master_bready, hps_0_h2f_lw_axi_master_arid, hps_0_h2f_lw_axi_master_araddr, hps_0_h2f_lw_axi_master_arlen, hps_0_h2f_lw_axi_master_arsize, hps_0_h2f_lw_axi_master_arburst, hps_0_h2f_lw_axi_master_arlock, hps_0_h2f_lw_axi_master_arcache, hps_0_h2f_lw_axi_master_arprot, hps_0_h2f_lw_axi_master_arvalid, hps_0_h2f_lw_axi_master_arready, hps_0_h2f_lw_axi_master_rid, hps_0_h2f_lw_axi_master_rdata, hps_0_h2f_lw_axi_master_rresp, hps_0_h2f_lw_axi_master_rlast, hps_0_h2f_lw_axi_master_rvalid, hps_0_h2f_lw_axi_master_rready, alt_vip_vfb_0_read_master_burstcount, alt_vip_vfb_0_read_master_waitrequest, alt_vip_vfb_0_read_master_address, alt_vip_vfb_0_read_master_read, alt_vip_vfb_0_read_master_readdata, alt_vip_vfb_0_read_master_readdatavalid, alt_vip_vfb_0_write_master_burstcount, alt_vip_vfb_0_write_master_waitrequest, alt_vip_vfb_0_write_master_writedata, alt_vip_vfb_0_write_master_address, alt_vip_vfb_0_write_master_write, clock_crossing_io_slow_m0_burstcount, clock_crossing_io_slow_m0_waitrequest, clock_crossing_io_slow_m0_address, clock_crossing_io_slow_m0_writedata, clock_crossing_io_slow_m0_write, clock_crossing_io_slow_m0_read, clock_crossing_io_slow_m0_readdata, clock_crossing_io_slow_m0_debugaccess, clock_crossing_io_slow_m0_byteenable, clock_crossing_io_slow_m0_readdatavalid, mm_clock_crossing_bridge_1_m0_burstcount, mm_clock_crossing_bridge_1_m0_waitrequest, mm_clock_crossing_bridge_1_m0_address, mm_clock_crossing_bridge_1_m0_writedata, mm_clock_crossing_bridge_1_m0_write, mm_clock_crossing_bridge_1_m0_read, mm_clock_crossing_bridge_1_m0_readdata, mm_clock_crossing_bridge_1_m0_debugaccess, mm_clock_crossing_bridge_1_m0_byteenable, mm_clock_crossing_bridge_1_m0_readdatavalid, alt_vip_vfr_0_avalon_master_waitrequest, alt_vip_vfr_0_avalon_master_burstcount, alt_vip_vfr_0_avalon_master_address, alt_vip_vfr_0_avalon_master_read, alt_vip_vfr_0_avalon_master_readdata, alt_vip_vfr_0_avalon_master_readdatavalid, irq_mapper_receiver1_irq, irq_mapper_receiver2_irq, irq_mapper_receiver4_irq, cpu_d_irq_irq, hps_0_f2h_irq0_irq, hps_0_f2h_irq1_irq, irq_mapper_receiver0_irq, irq_synchronizer_receiver_irq, irq_mapper_receiver3_irq, irq_synchronizer_001_receiver_irq, rst_controller_reset_out_reset, rst_controller_001_reset_out_reset, rst_controller_001_reset_out_reset_req, cpu_jtag_debug_module_reset_reset, rst_controller_002_reset_out_reset, rst_controller_002_reset_out_reset_req, rst_controller_003_reset_out_reset, rst_controller_004_reset_out_reset, rst_controller_005_reset_out_reset, rst_controller_006_reset_out_reset]\n\nExplanation:\nThese internal signals represent interconnections between various components and modules within the system. They include:\n\n1. Video processing signals (alt_vip_*): These handle video data flow between different video processing blocks.\n2. PLL output clocks: Generated clock signals for different parts of the system.\n3. CPU signals: Data and instruction interfaces for the CPU.\n4. HPS AXI signals: AXI bus signals for communication with the Hard Processor System.\n5. Memory interface signals: For reading and writing to various memory components.\n6. Clock crossing and bridge signals: For managing data transfer between different clock domains.\n7. Interrupt signals: For handling system interrupts.\n8. Reset signals: For managing resets in different parts of the system.\n\nThese signals facilitate data transfer, control, and synchronization between various components of the complex system-on-chip design."
        },
        {
            "role": "user",
            "content": "Original Verilog code is as follows: \n```verilog\n\n\n\n\n`timescale 1 ps / 1 ps\nmodule DE1_SoC_QSYS (\n\t\toutput wire        out_port_from_the_i2c_scl,                 \n\t\tinout  wire        bidir_port_to_and_from_the_i2c_sda,        \n\t\toutput wire        out_port_from_the_td_reset_n,              \n\t\tinput  wire        clk_50,                                    \n\t\tinput  wire [1:0]  in_port_to_the_td_status,                  \n\t\tinput  wire        reset_n,                                   \n\t\tinput  wire        vid_clk_to_the_alt_vip_cti_0,              \n\t\tinput  wire [7:0]  vid_data_to_the_alt_vip_cti_0,             \n\t\toutput wire        overflow_from_the_alt_vip_cti_0,           \n\t\tinput  wire        vid_datavalid_to_the_alt_vip_cti_0,        \n\t\tinput  wire        vid_locked_to_the_alt_vip_cti_0,           \n\t\toutput wire [12:0] zs_addr_from_the_sdram,                    \n\t\toutput wire [1:0]  zs_ba_from_the_sdram,                      \n\t\toutput wire        zs_cas_n_from_the_sdram,                   \n\t\toutput wire        zs_cke_from_the_sdram,                     \n\t\toutput wire        zs_cs_n_from_the_sdram,                    \n\t\tinout  wire [15:0] zs_dq_to_and_from_the_sdram,               \n\t\toutput wire [1:0]  zs_dqm_from_the_sdram,                     \n\t\toutput wire        zs_ras_n_from_the_sdram,                   \n\t\toutput wire        zs_we_n_from_the_sdram,                    \n\t\toutput wire        pll_0_locked_export,                       \n\t\toutput wire        clk_sdram_clk,                             \n\t\toutput wire        clk_vga_clk,                               \n\t\toutput wire [47:0] seg7_conduit_end_export,                   \n\t\toutput wire [9:0]  ledr_external_connection_export,           \n\t\tinput  wire [3:0]  key_external_connection_export,            \n\t\tinput  wire [9:0]  sw_external_connection_export,             \n\t\tinput  wire        spi_0_external_MISO,                       \n\t\toutput wire        spi_0_external_MOSI,                       \n\t\toutput wire        spi_0_external_SCLK,                       \n\t\toutput wire        spi_0_external_SS_n,                       \n\t\toutput wire        audio_conduit_end_XCK,                     \n\t\tinput  wire        audio_conduit_end_ADCDAT,                  \n\t\tinput  wire        audio_conduit_end_ADCLRC,                  \n\t\toutput wire        audio_conduit_end_DACDAT,                  \n\t\tinput  wire        audio_conduit_end_DACLRC,                  \n\t\tinput  wire        audio_conduit_end_BCLK,                    \n\t\tinput  wire        uart_external_connection_rxd,              \n\t\toutput wire        uart_external_connection_txd,              \n\t\toutput wire        pll_audio_locked_export,                   \n\t\toutput wire [14:0] memory_mem_a,                              \n\t\toutput wire [2:0]  memory_mem_ba,                             \n\t\toutput wire        memory_mem_ck,                             \n\t\toutput wire        memory_mem_ck_n,                           \n\t\toutput wire        memory_mem_cke,                            \n\t\toutput wire        memory_mem_cs_n,                           \n\t\toutput wire        memory_mem_ras_n,                          \n\t\toutput wire        memory_mem_cas_n,                          \n\t\toutput wire        memory_mem_we_n,                           \n\t\toutput wire        memory_mem_reset_n,                        \n\t\tinout  wire [31:0] memory_mem_dq,                             \n\t\tinout  wire [3:0]  memory_mem_dqs,                            \n\t\tinout  wire [3:0]  memory_mem_dqs_n,                          \n\t\toutput wire        memory_mem_odt,                            \n\t\toutput wire [3:0]  memory_mem_dm,                             \n\t\tinput  wire        memory_oct_rzqin,                          \n\t\toutput wire        hps_io_hps_io_emac1_inst_TX_CLK,           \n\t\toutput wire        hps_io_hps_io_emac1_inst_TXD0,             \n\t\toutput wire        hps_io_hps_io_emac1_inst_TXD1,             \n\t\toutput wire        hps_io_hps_io_emac1_inst_TXD2,             \n\t\toutput wire        hps_io_hps_io_emac1_inst_TXD3,             \n\t\tinput  wire        hps_io_hps_io_emac1_inst_RXD0,             \n\t\tinout  wire        hps_io_hps_io_emac1_inst_MDIO,             \n\t\toutput wire        hps_io_hps_io_emac1_inst_MDC,              \n\t\tinput  wire        hps_io_hps_io_emac1_inst_RX_CTL,           \n\t\toutput wire        hps_io_hps_io_emac1_inst_TX_CTL,           \n\t\tinput  wire        hps_io_hps_io_emac1_inst_RX_CLK,           \n\t\tinput  wire        hps_io_hps_io_emac1_inst_RXD1,             \n\t\tinput  wire        hps_io_hps_io_emac1_inst_RXD2,             \n\t\tinput  wire        hps_io_hps_io_emac1_inst_RXD3,             \n\t\tinout  wire        hps_io_hps_io_qspi_inst_IO0,               \n\t\tinout  wire        hps_io_hps_io_qspi_inst_IO1,               \n\t\tinout  wire        hps_io_hps_io_qspi_inst_IO2,               \n\t\tinout  wire        hps_io_hps_io_qspi_inst_IO3,               \n\t\toutput wire        hps_io_hps_io_qspi_inst_SS0,               \n\t\toutput wire        hps_io_hps_io_qspi_inst_CLK,               \n\t\tinout  wire        hps_io_hps_io_sdio_inst_CMD,               \n\t\tinout  wire        hps_io_hps_io_sdio_inst_D0,                \n\t\tinout  wire        hps_io_hps_io_sdio_inst_D1,                \n\t\toutput wire        hps_io_hps_io_sdio_inst_CLK,               \n\t\tinout  wire        hps_io_hps_io_sdio_inst_D2,                \n\t\tinout  wire        hps_io_hps_io_sdio_inst_D3,                \n\t\tinout  wire        hps_io_hps_io_usb1_inst_D0,                \n\t\tinout  wire        hps_io_hps_io_usb1_inst_D1,                \n\t\tinout  wire        hps_io_hps_io_usb1_inst_D2,                \n\t\tinout  wire        hps_io_hps_io_usb1_inst_D3,                \n\t\tinout  wire        hps_io_hps_io_usb1_inst_D4,                \n\t\tinout  wire        hps_io_hps_io_usb1_inst_D5,                \n\t\tinout  wire        hps_io_hps_io_usb1_inst_D6,                \n\t\tinout  wire        hps_io_hps_io_usb1_inst_D7,                \n\t\tinput  wire        hps_io_hps_io_usb1_inst_CLK,               \n\t\toutput wire        hps_io_hps_io_usb1_inst_STP,               \n\t\tinput  wire        hps_io_hps_io_usb1_inst_DIR,               \n\t\tinput  wire        hps_io_hps_io_usb1_inst_NXT,               \n\t\toutput wire        hps_io_hps_io_spim1_inst_CLK,              \n\t\toutput wire        hps_io_hps_io_spim1_inst_MOSI,             \n\t\tinput  wire        hps_io_hps_io_spim1_inst_MISO,             \n\t\toutput wire        hps_io_hps_io_spim1_inst_SS0,              \n\t\tinput  wire        hps_io_hps_io_uart0_inst_RX,               \n\t\toutput wire        hps_io_hps_io_uart0_inst_TX,               \n\t\tinout  wire        hps_io_hps_io_i2c0_inst_SDA,               \n\t\tinout  wire        hps_io_hps_io_i2c0_inst_SCL,               \n\t\tinout  wire        hps_io_hps_io_i2c1_inst_SDA,               \n\t\tinout  wire        hps_io_hps_io_i2c1_inst_SCL,               \n\t\tinout  wire        hps_io_hps_io_gpio_inst_GPIO09,            \n\t\tinout  wire        hps_io_hps_io_gpio_inst_GPIO35,            \n\t\tinout  wire        hps_io_hps_io_gpio_inst_GPIO40,            \n\t\tinout  wire        hps_io_hps_io_gpio_inst_GPIO41,            \n\t\tinout  wire        hps_io_hps_io_gpio_inst_GPIO48,            \n\t\tinout  wire        hps_io_hps_io_gpio_inst_GPIO53,            \n\t\tinout  wire        hps_io_hps_io_gpio_inst_GPIO54,            \n\t\tinout  wire        hps_io_hps_io_gpio_inst_GPIO61,            \n\t\toutput wire        hps_0_h2f_reset_reset_n,                   \n\t\tinput  wire        alt_vip_itc_0_clocked_video_vid_clk,       \n\t\toutput wire [23:0] alt_vip_itc_0_clocked_video_vid_data,      \n\t\toutput wire        alt_vip_itc_0_clocked_video_underflow,     \n\t\toutput wire        alt_vip_itc_0_clocked_video_vid_datavalid, \n\t\toutput wire        alt_vip_itc_0_clocked_video_vid_v_sync,    \n\t\toutput wire        alt_vip_itc_0_clocked_video_vid_h_sync,    \n\t\toutput wire        alt_vip_itc_0_clocked_video_vid_f,         \n\t\toutput wire        alt_vip_itc_0_clocked_video_vid_h,         \n\t\toutput wire        alt_vip_itc_0_clocked_video_vid_v,         \n\t\tinput  wire        ir_rx_conduit_end_export                   \n\t);\n\n\twire          alt_vip_cti_0_dout_endofpacket;                                \n\twire          alt_vip_cti_0_dout_valid;                                      \n\twire          alt_vip_cti_0_dout_startofpacket;                              \n\twire    [7:0] alt_vip_cti_0_dout_data;                                       \n\twire          alt_vip_cti_0_dout_ready;                                      \n\twire          alt_vip_cpr_0_dout0_endofpacket;                               \n\twire          alt_vip_cpr_0_dout0_valid;                                     \n\twire          alt_vip_cpr_0_dout0_startofpacket;                             \n\twire   [15:0] alt_vip_cpr_0_dout0_data;                                      \n\twire          alt_vip_cpr_0_dout0_ready;                                     \n\twire          alt_vip_clip_0_dout_endofpacket;                               \n\twire          alt_vip_clip_0_dout_valid;                                     \n\twire          alt_vip_clip_0_dout_startofpacket;                             \n\twire   [23:0] alt_vip_clip_0_dout_data;                                      \n\twire          alt_vip_clip_0_dout_ready;                                     \n\twire          alt_vip_crs_0_dout_endofpacket;                                \n\twire          alt_vip_crs_0_dout_valid;                                      \n\twire          alt_vip_crs_0_dout_startofpacket;                              \n\twire   [23:0] alt_vip_crs_0_dout_data;                                       \n\twire          alt_vip_crs_0_dout_ready;                                      \n\twire          alt_vip_csc_0_dout_endofpacket;                                \n\twire          alt_vip_csc_0_dout_valid;                                      \n\twire          alt_vip_csc_0_dout_startofpacket;                              \n\twire   [23:0] alt_vip_csc_0_dout_data;                                       \n\twire          alt_vip_csc_0_dout_ready;                                      \n\twire          pll_sys_outclk2_clk;                                           \n\twire          pll_sys_outclk0_clk;                                           \n\twire          pll_audio_outclk0_clk;                                         \n\twire          pll_sys_outclk4_clk;                                           \n\twire          alt_vip_dil_0_dout_endofpacket;                                \n\twire          alt_vip_dil_0_dout_valid;                                      \n\twire          alt_vip_dil_0_dout_startofpacket;                              \n\twire   [15:0] alt_vip_dil_0_dout_data;                                       \n\twire          alt_vip_dil_0_dout_ready;                                      \n\twire          alt_vip_cl_scl_0_dout_endofpacket;                             \n\twire          alt_vip_cl_scl_0_dout_valid;                                   \n\twire          alt_vip_cl_scl_0_dout_startofpacket;                           \n\twire   [23:0] alt_vip_cl_scl_0_dout_data;                                    \n\twire          alt_vip_cl_scl_0_dout_ready;                                   \n\twire          alt_vip_vfr_0_avalon_streaming_source_endofpacket;             \n\twire          alt_vip_vfr_0_avalon_streaming_source_valid;                   \n\twire          alt_vip_vfr_0_avalon_streaming_source_startofpacket;           \n\twire   [31:0] alt_vip_vfr_0_avalon_streaming_source_data;                    \n\twire          alt_vip_vfr_0_avalon_streaming_source_ready;                   \n\twire          alt_vip_mix_0_dout_endofpacket;                                \n\twire          alt_vip_mix_0_dout_valid;                                      \n\twire          alt_vip_mix_0_dout_startofpacket;                              \n\twire   [23:0] alt_vip_mix_0_dout_data;                                       \n\twire          alt_vip_mix_0_dout_ready;                                      \n\twire          alt_vip_vfb_0_dout_endofpacket;                                \n\twire          alt_vip_vfb_0_dout_valid;                                      \n\twire          alt_vip_vfb_0_dout_startofpacket;                              \n\twire   [23:0] alt_vip_vfb_0_dout_data;                                       \n\twire          alt_vip_vfb_0_dout_ready;                                      \n\twire          alt_vip_cpr_1_dout0_endofpacket;                               \n\twire          alt_vip_cpr_1_dout0_valid;                                     \n\twire          alt_vip_cpr_1_dout0_startofpacket;                             \n\twire   [23:0] alt_vip_cpr_1_dout0_data;                                      \n\twire          alt_vip_cpr_1_dout0_ready;                                     \n\twire          alt_vip_cpr_2_dout0_endofpacket;                               \n\twire          alt_vip_cpr_2_dout0_valid;                                     \n\twire          alt_vip_cpr_2_dout0_startofpacket;                             \n\twire   [23:0] alt_vip_cpr_2_dout0_data;                                      \n\twire          alt_vip_cpr_2_dout0_ready;                                     \n\twire          mm_interconnect_0_cpu_jtag_debug_module_waitrequest;           \n\twire   [31:0] mm_interconnect_0_cpu_jtag_debug_module_writedata;             \n\twire    [8:0] mm_interconnect_0_cpu_jtag_debug_module_address;               \n\twire          mm_interconnect_0_cpu_jtag_debug_module_write;                 \n\twire          mm_interconnect_0_cpu_jtag_debug_module_read;                  \n\twire   [31:0] mm_interconnect_0_cpu_jtag_debug_module_readdata;              \n\twire          mm_interconnect_0_cpu_jtag_debug_module_debugaccess;           \n\twire    [3:0] mm_interconnect_0_cpu_jtag_debug_module_byteenable;            \n\twire   [31:0] mm_interconnect_0_ledr_s1_writedata;                           \n\twire    [1:0] mm_interconnect_0_ledr_s1_address;                             \n\twire          mm_interconnect_0_ledr_s1_chipselect;                          \n\twire          mm_interconnect_0_ledr_s1_write;                               \n\twire   [31:0] mm_interconnect_0_ledr_s1_readdata;                            \n\twire   [31:0] mm_interconnect_0_sw_s1_writedata;                             \n\twire    [1:0] mm_interconnect_0_sw_s1_address;                               \n\twire          mm_interconnect_0_sw_s1_chipselect;                            \n\twire          mm_interconnect_0_sw_s1_write;                                 \n\twire   [31:0] mm_interconnect_0_sw_s1_readdata;                              \n\twire          mm_interconnect_0_jtag_uart_avalon_jtag_slave_waitrequest;     \n\twire   [31:0] mm_interconnect_0_jtag_uart_avalon_jtag_slave_writedata;       \n\twire    [0:0] mm_interconnect_0_jtag_uart_avalon_jtag_slave_address;         \n\twire          mm_interconnect_0_jtag_uart_avalon_jtag_slave_chipselect;      \n\twire          mm_interconnect_0_jtag_uart_avalon_jtag_slave_write;           \n\twire          mm_interconnect_0_jtag_uart_avalon_jtag_slave_read;            \n\twire   [31:0] mm_interconnect_0_jtag_uart_avalon_jtag_slave_readdata;        \n\twire   [31:0] mm_interconnect_0_onchip_memory2_s1_writedata;                 \n\twire   [15:0] mm_interconnect_0_onchip_memory2_s1_address;                   \n\twire          mm_interconnect_0_onchip_memory2_s1_chipselect;                \n\twire          mm_interconnect_0_onchip_memory2_s1_clken;                     \n\twire          mm_interconnect_0_onchip_memory2_s1_write;                     \n\twire   [31:0] mm_interconnect_0_onchip_memory2_s1_readdata;                  \n\twire    [3:0] mm_interconnect_0_onchip_memory2_s1_byteenable;                \n\twire          cpu_data_master_waitrequest;                                   \n\twire   [31:0] cpu_data_master_writedata;                                     \n\twire   [25:0] cpu_data_master_address;                                       \n\twire          cpu_data_master_write;                                         \n\twire          cpu_data_master_read;                                          \n\twire   [31:0] cpu_data_master_readdata;                                      \n\twire          cpu_data_master_debugaccess;                                   \n\twire          cpu_data_master_readdatavalid;                                 \n\twire    [3:0] cpu_data_master_byteenable;                                    \n\twire          mm_interconnect_0_mm_clock_crossing_bridge_1_s0_waitrequest;   \n\twire    [0:0] mm_interconnect_0_mm_clock_crossing_bridge_1_s0_burstcount;    \n\twire   [31:0] mm_interconnect_0_mm_clock_crossing_bridge_1_s0_writedata;     \n\twire    [8:0] mm_interconnect_0_mm_clock_crossing_bridge_1_s0_address;       \n\twire          mm_interconnect_0_mm_clock_crossing_bridge_1_s0_write;         \n\twire          mm_interconnect_0_mm_clock_crossing_bridge_1_s0_read;          \n\twire   [31:0] mm_interconnect_0_mm_clock_crossing_bridge_1_s0_readdata;      \n\twire          mm_interconnect_0_mm_clock_crossing_bridge_1_s0_debugaccess;   \n\twire          mm_interconnect_0_mm_clock_crossing_bridge_1_s0_readdatavalid; \n\twire    [3:0] mm_interconnect_0_mm_clock_crossing_bridge_1_s0_byteenable;    \n\twire   [15:0] mm_interconnect_0_alt_vip_mix_0_control_writedata;             \n\twire    [5:0] mm_interconnect_0_alt_vip_mix_0_control_address;               \n\twire          mm_interconnect_0_alt_vip_mix_0_control_chipselect;            \n\twire          mm_interconnect_0_alt_vip_mix_0_control_write;                 \n\twire   [15:0] mm_interconnect_0_alt_vip_mix_0_control_readdata;              \n\twire   [15:0] mm_interconnect_0_audio_avalon_slave_writedata;                \n\twire    [2:0] mm_interconnect_0_audio_avalon_slave_address;                  \n\twire          mm_interconnect_0_audio_avalon_slave_write;                    \n\twire          mm_interconnect_0_audio_avalon_slave_read;                     \n\twire   [15:0] mm_interconnect_0_audio_avalon_slave_readdata;                 \n\twire          mm_interconnect_0_clock_crossing_io_slow_s0_waitrequest;       \n\twire    [0:0] mm_interconnect_0_clock_crossing_io_slow_s0_burstcount;        \n\twire   [31:0] mm_interconnect_0_clock_crossing_io_slow_s0_writedata;         \n\twire    [8:0] mm_interconnect_0_clock_crossing_io_slow_s0_address;           \n\twire          mm_interconnect_0_clock_crossing_io_slow_s0_write;             \n\twire          mm_interconnect_0_clock_crossing_io_slow_s0_read;              \n\twire   [31:0] mm_interconnect_0_clock_crossing_io_slow_s0_readdata;          \n\twire          mm_interconnect_0_clock_crossing_io_slow_s0_debugaccess;       \n\twire          mm_interconnect_0_clock_crossing_io_slow_s0_readdatavalid;     \n\twire    [3:0] mm_interconnect_0_clock_crossing_io_slow_s0_byteenable;        \n\twire    [7:0] mm_interconnect_0_seg7_avalon_slave_writedata;                 \n\twire    [2:0] mm_interconnect_0_seg7_avalon_slave_address;                   \n\twire          mm_interconnect_0_seg7_avalon_slave_write;                     \n\twire          mm_interconnect_0_seg7_avalon_slave_read;                      \n\twire    [7:0] mm_interconnect_0_seg7_avalon_slave_readdata;                  \n\twire   [15:0] mm_interconnect_0_uart_s1_writedata;                           \n\twire    [2:0] mm_interconnect_0_uart_s1_address;                             \n\twire          mm_interconnect_0_uart_s1_chipselect;                          \n\twire          mm_interconnect_0_uart_s1_write;                               \n\twire          mm_interconnect_0_uart_s1_read;                                \n\twire   [15:0] mm_interconnect_0_uart_s1_readdata;                            \n\twire          mm_interconnect_0_uart_s1_begintransfer;                       \n\twire          hps_0_h2f_lw_axi_master_awvalid;                               \n\twire    [2:0] hps_0_h2f_lw_axi_master_arsize;                                \n\twire    [1:0] hps_0_h2f_lw_axi_master_arlock;                                \n\twire    [3:0] hps_0_h2f_lw_axi_master_awcache;                               \n\twire          hps_0_h2f_lw_axi_master_arready;                               \n\twire   [11:0] hps_0_h2f_lw_axi_master_arid;                                  \n\twire          hps_0_h2f_lw_axi_master_rready;                                \n\twire          hps_0_h2f_lw_axi_master_bready;                                \n\twire    [2:0] hps_0_h2f_lw_axi_master_awsize;                                \n\twire    [2:0] hps_0_h2f_lw_axi_master_awprot;                                \n\twire          hps_0_h2f_lw_axi_master_arvalid;                               \n\twire    [2:0] hps_0_h2f_lw_axi_master_arprot;                                \n\twire   [11:0] hps_0_h2f_lw_axi_master_bid;                                   \n\twire    [3:0] hps_0_h2f_lw_axi_master_arlen;                                 \n\twire          hps_0_h2f_lw_axi_master_awready;                               \n\twire   [11:0] hps_0_h2f_lw_axi_master_awid;                                  \n\twire          hps_0_h2f_lw_axi_master_bvalid;                                \n\twire   [11:0] hps_0_h2f_lw_axi_master_wid;                                   \n\twire    [1:0] hps_0_h2f_lw_axi_master_awlock;                                \n\twire    [1:0] hps_0_h2f_lw_axi_master_awburst;                               \n\twire    [1:0] hps_0_h2f_lw_axi_master_bresp;                                 \n\twire    [3:0] hps_0_h2f_lw_axi_master_wstrb;                                 \n\twire          hps_0_h2f_lw_axi_master_rvalid;                                \n\twire   [31:0] hps_0_h2f_lw_axi_master_wdata;                                 \n\twire          hps_0_h2f_lw_axi_master_wready;                                \n\twire    [1:0] hps_0_h2f_lw_axi_master_arburst;                               \n\twire   [31:0] hps_0_h2f_lw_axi_master_rdata;                                 \n\twire   [20:0] hps_0_h2f_lw_axi_master_araddr;                                \n\twire    [3:0] hps_0_h2f_lw_axi_master_arcache;                               \n\twire    [3:0] hps_0_h2f_lw_axi_master_awlen;                                 \n\twire   [20:0] hps_0_h2f_lw_axi_master_awaddr;                                \n\twire   [11:0] hps_0_h2f_lw_axi_master_rid;                                   \n\twire          hps_0_h2f_lw_axi_master_wvalid;                                \n\twire    [1:0] hps_0_h2f_lw_axi_master_rresp;                                 \n\twire          hps_0_h2f_lw_axi_master_wlast;                                 \n\twire          hps_0_h2f_lw_axi_master_rlast;                                 \n\twire          cpu_instruction_master_waitrequest;                            \n\twire   [19:0] cpu_instruction_master_address;                                \n\twire          cpu_instruction_master_read;                                   \n\twire   [31:0] cpu_instruction_master_readdata;                               \n\twire          cpu_instruction_master_readdatavalid;                          \n\twire   [31:0] mm_interconnect_0_key_s1_writedata;                            \n\twire    [1:0] mm_interconnect_0_key_s1_address;                              \n\twire          mm_interconnect_0_key_s1_chipselect;                           \n\twire          mm_interconnect_0_key_s1_write;                                \n\twire   [31:0] mm_interconnect_0_key_s1_readdata;                             \n\twire   [31:0] mm_interconnect_0_alt_vip_vfr_0_avalon_slave_writedata;        \n\twire    [4:0] mm_interconnect_0_alt_vip_vfr_0_avalon_slave_address;          \n\twire          mm_interconnect_0_alt_vip_vfr_0_avalon_slave_write;            \n\twire          mm_interconnect_0_alt_vip_vfr_0_avalon_slave_read;             \n\twire   [31:0] mm_interconnect_0_alt_vip_vfr_0_avalon_slave_readdata;         \n\twire   [31:0] mm_interconnect_0_ir_rx_avalon_slave_writedata;                \n\twire    [0:0] mm_interconnect_0_ir_rx_avalon_slave_address;                  \n\twire          mm_interconnect_0_ir_rx_avalon_slave_chipselect;               \n\twire          mm_interconnect_0_ir_rx_avalon_slave_write;                    \n\twire          mm_interconnect_0_ir_rx_avalon_slave_read;                     \n\twire   [31:0] mm_interconnect_0_ir_rx_avalon_slave_readdata;                 \n\twire   [15:0] mm_interconnect_0_alt_vip_cti_0_control_writedata;             \n\twire    [3:0] mm_interconnect_0_alt_vip_cti_0_control_address;               \n\twire          mm_interconnect_0_alt_vip_cti_0_control_write;                 \n\twire          mm_interconnect_0_alt_vip_cti_0_control_read;                  \n\twire   [15:0] mm_interconnect_0_alt_vip_cti_0_control_readdata;              \n\twire   [15:0] mm_interconnect_0_timer_stamp_s1_writedata;                    \n\twire    [2:0] mm_interconnect_0_timer_stamp_s1_address;                      \n\twire          mm_interconnect_0_timer_stamp_s1_chipselect;                   \n\twire          mm_interconnect_0_timer_stamp_s1_write;                        \n\twire   [15:0] mm_interconnect_0_timer_stamp_s1_readdata;                     \n\twire          mm_interconnect_1_sdram_s1_waitrequest;                        \n\twire   [15:0] mm_interconnect_1_sdram_s1_writedata;                          \n\twire   [24:0] mm_interconnect_1_sdram_s1_address;                            \n\twire          mm_interconnect_1_sdram_s1_chipselect;                         \n\twire          mm_interconnect_1_sdram_s1_write;                              \n\twire          mm_interconnect_1_sdram_s1_read;                               \n\twire   [15:0] mm_interconnect_1_sdram_s1_readdata;                           \n\twire          mm_interconnect_1_sdram_s1_readdatavalid;                      \n\twire    [1:0] mm_interconnect_1_sdram_s1_byteenable;                         \n\twire    [2:0] alt_vip_vfb_0_read_master_burstcount;                          \n\twire          alt_vip_vfb_0_read_master_waitrequest;                         \n\twire   [31:0] alt_vip_vfb_0_read_master_address;                             \n\twire          alt_vip_vfb_0_read_master_read;                                \n\twire   [31:0] alt_vip_vfb_0_read_master_readdata;                            \n\twire          alt_vip_vfb_0_read_master_readdatavalid;                       \n\twire    [2:0] alt_vip_vfb_0_write_master_burstcount;                         \n\twire          alt_vip_vfb_0_write_master_waitrequest;                        \n\twire   [31:0] alt_vip_vfb_0_write_master_writedata;                          \n\twire   [31:0] alt_vip_vfb_0_write_master_address;                            \n\twire          alt_vip_vfb_0_write_master_write;                              \n\twire    [0:0] clock_crossing_io_slow_m0_burstcount;                          \n\twire          clock_crossing_io_slow_m0_waitrequest;                         \n\twire    [8:0] clock_crossing_io_slow_m0_address;                             \n\twire   [31:0] clock_crossing_io_slow_m0_writedata;                           \n\twire          clock_crossing_io_slow_m0_write;                               \n\twire          clock_crossing_io_slow_m0_read;                                \n\twire   [31:0] clock_crossing_io_slow_m0_readdata;                            \n\twire          clock_crossing_io_slow_m0_debugaccess;                         \n\twire    [3:0] clock_crossing_io_slow_m0_byteenable;                          \n\twire          clock_crossing_io_slow_m0_readdatavalid;                       \n\twire   [31:0] mm_interconnect_2_i2c_scl_s1_writedata;                        \n\twire    [1:0] mm_interconnect_2_i2c_scl_s1_address;                          \n\twire          mm_interconnect_2_i2c_scl_s1_chipselect;                       \n\twire          mm_interconnect_2_i2c_scl_s1_write;                            \n\twire   [31:0] mm_interconnect_2_i2c_scl_s1_readdata;                         \n\twire    [0:0] mm_interconnect_2_sysid_control_slave_address;                 \n\twire   [31:0] mm_interconnect_2_sysid_control_slave_readdata;                \n\twire   [31:0] mm_interconnect_2_td_reset_n_s1_writedata;                     \n\twire    [1:0] mm_interconnect_2_td_reset_n_s1_address;                       \n\twire          mm_interconnect_2_td_reset_n_s1_chipselect;                    \n\twire          mm_interconnect_2_td_reset_n_s1_write;                         \n\twire   [31:0] mm_interconnect_2_td_reset_n_s1_readdata;                      \n\twire    [1:0] mm_interconnect_2_td_status_s1_address;                        \n\twire   [31:0] mm_interconnect_2_td_status_s1_readdata;                       \n\twire   [15:0] mm_interconnect_2_timer_s1_writedata;                          \n\twire    [2:0] mm_interconnect_2_timer_s1_address;                            \n\twire          mm_interconnect_2_timer_s1_chipselect;                         \n\twire          mm_interconnect_2_timer_s1_write;                              \n\twire   [15:0] mm_interconnect_2_timer_s1_readdata;                           \n\twire   [31:0] mm_interconnect_2_i2c_sda_s1_writedata;                        \n\twire    [1:0] mm_interconnect_2_i2c_sda_s1_address;                          \n\twire          mm_interconnect_2_i2c_sda_s1_chipselect;                       \n\twire          mm_interconnect_2_i2c_sda_s1_write;                            \n\twire   [31:0] mm_interconnect_2_i2c_sda_s1_readdata;                         \n\twire    [0:0] mm_clock_crossing_bridge_1_m0_burstcount;                      \n\twire          mm_clock_crossing_bridge_1_m0_waitrequest;                     \n\twire    [8:0] mm_clock_crossing_bridge_1_m0_address;                         \n\twire   [31:0] mm_clock_crossing_bridge_1_m0_writedata;                       \n\twire          mm_clock_crossing_bridge_1_m0_write;                           \n\twire          mm_clock_crossing_bridge_1_m0_read;                            \n\twire   [31:0] mm_clock_crossing_bridge_1_m0_readdata;                        \n\twire          mm_clock_crossing_bridge_1_m0_debugaccess;                     \n\twire    [3:0] mm_clock_crossing_bridge_1_m0_byteenable;                      \n\twire          mm_clock_crossing_bridge_1_m0_readdatavalid;                   \n\twire   [15:0] mm_interconnect_3_spi_0_spi_control_port_writedata;            \n\twire    [2:0] mm_interconnect_3_spi_0_spi_control_port_address;              \n\twire          mm_interconnect_3_spi_0_spi_control_port_chipselect;           \n\twire          mm_interconnect_3_spi_0_spi_control_port_write;                \n\twire          mm_interconnect_3_spi_0_spi_control_port_read;                 \n\twire   [15:0] mm_interconnect_3_spi_0_spi_control_port_readdata;             \n\twire          mm_interconnect_4_hps_0_f2h_axi_slave_awvalid;                 \n\twire    [2:0] mm_interconnect_4_hps_0_f2h_axi_slave_arsize;                  \n\twire    [1:0] mm_interconnect_4_hps_0_f2h_axi_slave_arlock;                  \n\twire    [3:0] mm_interconnect_4_hps_0_f2h_axi_slave_awcache;                 \n\twire          mm_interconnect_4_hps_0_f2h_axi_slave_arready;                 \n\twire    [7:0] mm_interconnect_4_hps_0_f2h_axi_slave_arid;                    \n\twire          mm_interconnect_4_hps_0_f2h_axi_slave_rready;                  \n\twire          mm_interconnect_4_hps_0_f2h_axi_slave_bready;                  \n\twire    [2:0] mm_interconnect_4_hps_0_f2h_axi_slave_awsize;                  \n\twire    [2:0] mm_interconnect_4_hps_0_f2h_axi_slave_awprot;                  \n\twire          mm_interconnect_4_hps_0_f2h_axi_slave_arvalid;                 \n\twire    [2:0] mm_interconnect_4_hps_0_f2h_axi_slave_arprot;                  \n\twire    [7:0] mm_interconnect_4_hps_0_f2h_axi_slave_bid;                     \n\twire    [3:0] mm_interconnect_4_hps_0_f2h_axi_slave_arlen;                   \n\twire          mm_interconnect_4_hps_0_f2h_axi_slave_awready;                 \n\twire    [7:0] mm_interconnect_4_hps_0_f2h_axi_slave_awid;                    \n\twire          mm_interconnect_4_hps_0_f2h_axi_slave_bvalid;                  \n\twire    [7:0] mm_interconnect_4_hps_0_f2h_axi_slave_wid;                     \n\twire    [1:0] mm_interconnect_4_hps_0_f2h_axi_slave_awlock;                  \n\twire    [1:0] mm_interconnect_4_hps_0_f2h_axi_slave_awburst;                 \n\twire    [1:0] mm_interconnect_4_hps_0_f2h_axi_slave_bresp;                   \n\twire    [4:0] mm_interconnect_4_hps_0_f2h_axi_slave_aruser;                  \n\twire    [4:0] mm_interconnect_4_hps_0_f2h_axi_slave_awuser;                  \n\twire   [15:0] mm_interconnect_4_hps_0_f2h_axi_slave_wstrb;                   \n\twire          mm_interconnect_4_hps_0_f2h_axi_slave_rvalid;                  \n\twire    [1:0] mm_interconnect_4_hps_0_f2h_axi_slave_arburst;                 \n\twire  [127:0] mm_interconnect_4_hps_0_f2h_axi_slave_wdata;                   \n\twire          mm_interconnect_4_hps_0_f2h_axi_slave_wready;                  \n\twire  [127:0] mm_interconnect_4_hps_0_f2h_axi_slave_rdata;                   \n\twire   [31:0] mm_interconnect_4_hps_0_f2h_axi_slave_araddr;                  \n\twire    [3:0] mm_interconnect_4_hps_0_f2h_axi_slave_arcache;                 \n\twire    [3:0] mm_interconnect_4_hps_0_f2h_axi_slave_awlen;                   \n\twire   [31:0] mm_interconnect_4_hps_0_f2h_axi_slave_awaddr;                  \n\twire    [7:0] mm_interconnect_4_hps_0_f2h_axi_slave_rid;                     \n\twire          mm_interconnect_4_hps_0_f2h_axi_slave_wvalid;                  \n\twire    [1:0] mm_interconnect_4_hps_0_f2h_axi_slave_rresp;                   \n\twire          mm_interconnect_4_hps_0_f2h_axi_slave_wlast;                   \n\twire          mm_interconnect_4_hps_0_f2h_axi_slave_rlast;                   \n\twire          alt_vip_vfr_0_avalon_master_waitrequest;                       \n\twire    [5:0] alt_vip_vfr_0_avalon_master_burstcount;                        \n\twire   [31:0] alt_vip_vfr_0_avalon_master_address;                           \n\twire          alt_vip_vfr_0_avalon_master_read;                              \n\twire  [127:0] alt_vip_vfr_0_avalon_master_readdata;                          \n\twire          alt_vip_vfr_0_avalon_master_readdatavalid;                     \n\twire          irq_mapper_receiver1_irq;                                      \n\twire          irq_mapper_receiver2_irq;                                      \n\twire          irq_mapper_receiver4_irq;                                      \n\twire   [31:0] cpu_d_irq_irq;                                                 \n\twire   [31:0] hps_0_f2h_irq0_irq;                                            \n\twire   [31:0] hps_0_f2h_irq1_irq;                                            \n\twire          irq_mapper_receiver0_irq;                                      \n\twire    [0:0] irq_synchronizer_receiver_irq;                                 \n\twire          irq_mapper_receiver3_irq;                                      \n\twire    [0:0] irq_synchronizer_001_receiver_irq;                             \n\twire          rst_controller_reset_out_reset;                                \n\twire          rst_controller_001_reset_out_reset;                            \n\twire          rst_controller_001_reset_out_reset_req;                        \n\twire          cpu_jtag_debug_module_reset_reset;                             \n\twire          rst_controller_002_reset_out_reset;                            \n\twire          rst_controller_002_reset_out_reset_req;                        \n\twire          rst_controller_003_reset_out_reset;                            \n\twire          rst_controller_004_reset_out_reset;                            \n\twire          rst_controller_005_reset_out_reset;                            \n\twire          rst_controller_006_reset_out_reset;                            \n\n\tDE1_SoC_QSYS_timer timer (\n\t\t.clk        (pll_sys_outclk2_clk),                   \n\t\t.reset_n    (~rst_controller_reset_out_reset),       \n\t\t.address    (mm_interconnect_2_timer_s1_address),    \n\t\t.writedata  (mm_interconnect_2_timer_s1_writedata),  \n\t\t.readdata   (mm_interconnect_2_timer_s1_readdata),   \n\t\t.chipselect (mm_interconnect_2_timer_s1_chipselect), \n\t\t.write_n    (~mm_interconnect_2_timer_s1_write),     \n\t\t.irq        (irq_synchronizer_receiver_irq)          \n\t);\n\n\tDE1_SoC_QSYS_onchip_memory2 onchip_memory2 (\n\t\t.clk        (pll_sys_outclk0_clk),                            \n\t\t.address    (mm_interconnect_0_onchip_memory2_s1_address),    \n\t\t.clken      (mm_interconnect_0_onchip_memory2_s1_clken),      \n\t\t.chipselect (mm_interconnect_0_onchip_memory2_s1_chipselect), \n\t\t.write      (mm_interconnect_0_onchip_memory2_s1_write),      \n\t\t.readdata   (mm_interconnect_0_onchip_memory2_s1_readdata),   \n\t\t.writedata  (mm_interconnect_0_onchip_memory2_s1_writedata),  \n\t\t.byteenable (mm_interconnect_0_onchip_memory2_s1_byteenable), \n\t\t.reset      (rst_controller_001_reset_out_reset),             \n\t\t.reset_req  (rst_controller_001_reset_out_reset_req)          \n\t);\n\n\tDE1_SoC_QSYS_sdram sdram (\n\t\t.clk            (pll_sys_outclk0_clk),                      \n\t\t.reset_n        (~rst_controller_002_reset_out_reset),      \n\t\t.az_addr        (mm_interconnect_1_sdram_s1_address),       \n\t\t.az_be_n        (~mm_interconnect_1_sdram_s1_byteenable),   \n\t\t.az_cs          (mm_interconnect_1_sdram_s1_chipselect),    \n\t\t.az_data        (mm_interconnect_1_sdram_s1_writedata),     \n\t\t.az_rd_n        (~mm_interconnect_1_sdram_s1_read),         \n\t\t.az_wr_n        (~mm_interconnect_1_sdram_s1_write),        \n\t\t.za_data        (mm_interconnect_1_sdram_s1_readdata),      \n\t\t.za_valid       (mm_interconnect_1_sdram_s1_readdatavalid), \n\t\t.za_waitrequest (mm_interconnect_1_sdram_s1_waitrequest),   \n\t\t.zs_addr        (zs_addr_from_the_sdram),                   \n\t\t.zs_ba          (zs_ba_from_the_sdram),                     \n\t\t.zs_cas_n       (zs_cas_n_from_the_sdram),                  \n\t\t.zs_cke         (zs_cke_from_the_sdram),                    \n\t\t.zs_cs_n        (zs_cs_n_from_the_sdram),                   \n\t\t.zs_dq          (zs_dq_to_and_from_the_sdram),              \n\t\t.zs_dqm         (zs_dqm_from_the_sdram),                    \n\t\t.zs_ras_n       (zs_ras_n_from_the_sdram),                  \n\t\t.zs_we_n        (zs_we_n_from_the_sdram)                    \n\t);\n\n\tDE1_SoC_QSYS_i2c_scl i2c_scl (\n\t\t.clk        (pll_sys_outclk2_clk),                     \n\t\t.reset_n    (~rst_controller_reset_out_reset),         \n\t\t.address    (mm_interconnect_2_i2c_scl_s1_address),    \n\t\t.write_n    (~mm_interconnect_2_i2c_scl_s1_write),     \n\t\t.writedata  (mm_interconnect_2_i2c_scl_s1_writedata),  \n\t\t.chipselect (mm_interconnect_2_i2c_scl_s1_chipselect), \n\t\t.readdata   (mm_interconnect_2_i2c_scl_s1_readdata),   \n\t\t.out_port   (out_port_from_the_i2c_scl)                \n\t);\n\n\tDE1_SoC_QSYS_i2c_sda i2c_sda (\n\t\t.clk        (pll_sys_outclk2_clk),                     \n\t\t.reset_n    (~rst_controller_reset_out_reset),         \n\t\t.address    (mm_interconnect_2_i2c_sda_s1_address),    \n\t\t.write_n    (~mm_interconnect_2_i2c_sda_s1_write),     \n\t\t.writedata  (mm_interconnect_2_i2c_sda_s1_writedata),  \n\t\t.chipselect (mm_interconnect_2_i2c_sda_s1_chipselect), \n\t\t.readdata   (mm_interconnect_2_i2c_sda_s1_readdata),   \n\t\t.bidir_port (bidir_port_to_and_from_the_i2c_sda)       \n\t);\n\n\tDE1_SoC_QSYS_jtag_uart jtag_uart (\n\t\t.clk            (pll_sys_outclk0_clk),                                       \n\t\t.rst_n          (~rst_controller_001_reset_out_reset),                       \n\t\t.av_chipselect  (mm_interconnect_0_jtag_uart_avalon_jtag_slave_chipselect),  \n\t\t.av_address     (mm_interconnect_0_jtag_uart_avalon_jtag_slave_address),     \n\t\t.av_read_n      (~mm_interconnect_0_jtag_uart_avalon_jtag_slave_read),       \n\t\t.av_readdata    (mm_interconnect_0_jtag_uart_avalon_jtag_slave_readdata),    \n\t\t.av_write_n     (~mm_interconnect_0_jtag_uart_avalon_jtag_slave_write),      \n\t\t.av_writedata   (mm_interconnect_0_jtag_uart_avalon_jtag_slave_writedata),   \n\t\t.av_waitrequest (mm_interconnect_0_jtag_uart_avalon_jtag_slave_waitrequest), \n\t\t.av_irq         (irq_mapper_receiver1_irq)                                   \n\t);\n\n\talt_vipcti131_Vid2IS #(\n\t\t.BPS                           (8),\n\t\t.NUMBER_OF_COLOUR_PLANES       (2),\n\t\t.COLOUR_PLANES_ARE_IN_PARALLEL (0),\n\t\t.SYNC_TO                       (0),\n\t\t.USE_EMBEDDED_SYNCS            (1),\n\t\t.ADD_DATA_ENABLE_SIGNAL        (0),\n\t\t.ACCEPT_COLOURS_IN_SEQ         (0),\n\t\t.USE_STD                       (0),\n\t\t.STD_WIDTH                     (1),\n\t\t.GENERATE_ANC                  (0),\n\t\t.INTERLACED                    (1),\n\t\t.H_ACTIVE_PIXELS_F0            (720),\n\t\t.V_ACTIVE_LINES_F0             (288),\n\t\t.V_ACTIVE_LINES_F1             (288),\n\t\t.FIFO_DEPTH                    (1440),\n\t\t.CLOCKS_ARE_SAME               (0),\n\t\t.USE_CONTROL                   (1),\n\t\t.GENERATE_SYNC                 (0)\n\t) alt_vip_cti_0 (\n\t\t.is_clk            (pll_sys_outclk0_clk),                               \n\t\t.rst               (rst_controller_002_reset_out_reset),                \n\t\t.av_address        (mm_interconnect_0_alt_vip_cti_0_control_address),   \n\t\t.av_read           (mm_interconnect_0_alt_vip_cti_0_control_read),      \n\t\t.av_readdata       (mm_interconnect_0_alt_vip_cti_0_control_readdata),  \n\t\t.av_write          (mm_interconnect_0_alt_vip_cti_0_control_write),     \n\t\t.av_writedata      (mm_interconnect_0_alt_vip_cti_0_control_writedata), \n\t\t.status_update_int (),                                                  \n\t\t.is_data           (alt_vip_cti_0_dout_data),                           \n\t\t.is_valid          (alt_vip_cti_0_dout_valid),                          \n\t\t.is_ready          (alt_vip_cti_0_dout_ready),                          \n\t\t.is_sop            (alt_vip_cti_0_dout_startofpacket),                  \n\t\t.is_eop            (alt_vip_cti_0_dout_endofpacket),                    \n\t\t.vid_clk           (vid_clk_to_the_alt_vip_cti_0),                      \n\t\t.vid_data          (vid_data_to_the_alt_vip_cti_0),                     \n\t\t.overflow          (overflow_from_the_alt_vip_cti_0),                   \n\t\t.vid_datavalid     (vid_datavalid_to_the_alt_vip_cti_0),                \n\t\t.vid_locked        (vid_locked_to_the_alt_vip_cti_0)                    \n\t);\n\n\tDE1_SoC_QSYS_alt_vip_cpr_0 alt_vip_cpr_0 (\n\t\t.clock               (pll_sys_outclk0_clk),                \n\t\t.reset               (rst_controller_002_reset_out_reset), \n\t\t.din0_ready          (alt_vip_cti_0_dout_ready),           \n\t\t.din0_valid          (alt_vip_cti_0_dout_valid),           \n\t\t.din0_data           (alt_vip_cti_0_dout_data),            \n\t\t.din0_startofpacket  (alt_vip_cti_0_dout_startofpacket),   \n\t\t.din0_endofpacket    (alt_vip_cti_0_dout_endofpacket),     \n\t\t.dout0_ready         (alt_vip_cpr_0_dout0_ready),          \n\t\t.dout0_valid         (alt_vip_cpr_0_dout0_valid),          \n\t\t.dout0_data          (alt_vip_cpr_0_dout0_data),           \n\t\t.dout0_startofpacket (alt_vip_cpr_0_dout0_startofpacket),  \n\t\t.dout0_endofpacket   (alt_vip_cpr_0_dout0_endofpacket)     \n\t);\n\n\tDE1_SoC_QSYS_alt_vip_dil_0 alt_vip_dil_0 (\n\t\t.clock              (pll_sys_outclk0_clk),                \n\t\t.reset              (rst_controller_002_reset_out_reset), \n\t\t.din_ready          (alt_vip_cpr_0_dout0_ready),          \n\t\t.din_valid          (alt_vip_cpr_0_dout0_valid),          \n\t\t.din_data           (alt_vip_cpr_0_dout0_data),           \n\t\t.din_startofpacket  (alt_vip_cpr_0_dout0_startofpacket),  \n\t\t.din_endofpacket    (alt_vip_cpr_0_dout0_endofpacket),    \n\t\t.dout_ready         (alt_vip_dil_0_dout_ready),           \n\t\t.dout_valid         (alt_vip_dil_0_dout_valid),           \n\t\t.dout_data          (alt_vip_dil_0_dout_data),            \n\t\t.dout_startofpacket (alt_vip_dil_0_dout_startofpacket),   \n\t\t.dout_endofpacket   (alt_vip_dil_0_dout_endofpacket)      \n\t);\n\n\tDE1_SoC_QSYS_alt_vip_crs_0 alt_vip_crs_0 (\n\t\t.clock              (pll_sys_outclk0_clk),                \n\t\t.reset              (rst_controller_002_reset_out_reset), \n\t\t.din_ready          (alt_vip_dil_0_dout_ready),           \n\t\t.din_valid          (alt_vip_dil_0_dout_valid),           \n\t\t.din_data           (alt_vip_dil_0_dout_data),            \n\t\t.din_startofpacket  (alt_vip_dil_0_dout_startofpacket),   \n\t\t.din_endofpacket    (alt_vip_dil_0_dout_endofpacket),     \n\t\t.dout_ready         (alt_vip_crs_0_dout_ready),           \n\t\t.dout_valid         (alt_vip_crs_0_dout_valid),           \n\t\t.dout_data          (alt_vip_crs_0_dout_data),            \n\t\t.dout_startofpacket (alt_vip_crs_0_dout_startofpacket),   \n\t\t.dout_endofpacket   (alt_vip_crs_0_dout_endofpacket)      \n\t);\n\n\tDE1_SoC_QSYS_alt_vip_csc_0 alt_vip_csc_0 (\n\t\t.clock              (pll_sys_outclk0_clk),                \n\t\t.reset              (rst_controller_002_reset_out_reset), \n\t\t.din_ready          (alt_vip_crs_0_dout_ready),           \n\t\t.din_valid          (alt_vip_crs_0_dout_valid),           \n\t\t.din_data           (alt_vip_crs_0_dout_data),            \n\t\t.din_startofpacket  (alt_vip_crs_0_dout_startofpacket),   \n\t\t.din_endofpacket    (alt_vip_crs_0_dout_endofpacket),     \n\t\t.dout_ready         (alt_vip_csc_0_dout_ready),           \n\t\t.dout_valid         (alt_vip_csc_0_dout_valid),           \n\t\t.dout_data          (alt_vip_csc_0_dout_data),            \n\t\t.dout_startofpacket (alt_vip_csc_0_dout_startofpacket),   \n\t\t.dout_endofpacket   (alt_vip_csc_0_dout_endofpacket)      \n\t);\n\n\tDE1_SoC_QSYS_alt_vip_clip_0 alt_vip_clip_0 (\n\t\t.clock              (pll_sys_outclk0_clk),                \n\t\t.reset              (rst_controller_002_reset_out_reset), \n\t\t.din_ready          (alt_vip_csc_0_dout_ready),           \n\t\t.din_valid          (alt_vip_csc_0_dout_valid),           \n\t\t.din_data           (alt_vip_csc_0_dout_data),            \n\t\t.din_startofpacket  (alt_vip_csc_0_dout_startofpacket),   \n\t\t.din_endofpacket    (alt_vip_csc_0_dout_endofpacket),     \n\t\t.dout_ready         (alt_vip_clip_0_dout_ready),          \n\t\t.dout_valid         (alt_vip_clip_0_dout_valid),          \n\t\t.dout_data          (alt_vip_clip_0_dout_data),           \n\t\t.dout_startofpacket (alt_vip_clip_0_dout_startofpacket),  \n\t\t.dout_endofpacket   (alt_vip_clip_0_dout_endofpacket)     \n\t);\n\n\tDE1_SoC_QSYS_alt_vip_vfb_0 alt_vip_vfb_0 (\n\t\t.clock                        (pll_sys_outclk0_clk),                     \n\t\t.reset                        (rst_controller_002_reset_out_reset),      \n\t\t.din_ready                    (alt_vip_cl_scl_0_dout_ready),             \n\t\t.din_valid                    (alt_vip_cl_scl_0_dout_valid),             \n\t\t.din_data                     (alt_vip_cl_scl_0_dout_data),              \n\t\t.din_startofpacket            (alt_vip_cl_scl_0_dout_startofpacket),     \n\t\t.din_endofpacket              (alt_vip_cl_scl_0_dout_endofpacket),       \n\t\t.dout_ready                   (alt_vip_vfb_0_dout_ready),                \n\t\t.dout_valid                   (alt_vip_vfb_0_dout_valid),                \n\t\t.dout_data                    (alt_vip_vfb_0_dout_data),                 \n\t\t.dout_startofpacket           (alt_vip_vfb_0_dout_startofpacket),        \n\t\t.dout_endofpacket             (alt_vip_vfb_0_dout_endofpacket),          \n\t\t.read_master_av_address       (alt_vip_vfb_0_read_master_address),       \n\t\t.read_master_av_read          (alt_vip_vfb_0_read_master_read),          \n\t\t.read_master_av_waitrequest   (alt_vip_vfb_0_read_master_waitrequest),   \n\t\t.read_master_av_readdatavalid (alt_vip_vfb_0_read_master_readdatavalid), \n\t\t.read_master_av_readdata      (alt_vip_vfb_0_read_master_readdata),      \n\t\t.read_master_av_burstcount    (alt_vip_vfb_0_read_master_burstcount),    \n\t\t.write_master_av_address      (alt_vip_vfb_0_write_master_address),      \n\t\t.write_master_av_write        (alt_vip_vfb_0_write_master_write),        \n\t\t.write_master_av_writedata    (alt_vip_vfb_0_write_master_writedata),    \n\t\t.write_master_av_waitrequest  (alt_vip_vfb_0_write_master_waitrequest),  \n\t\t.write_master_av_burstcount   (alt_vip_vfb_0_write_master_burstcount)    \n\t);\n\n\tDE1_SoC_QSYS_td_status td_status (\n\t\t.clk      (pll_sys_outclk2_clk),                     \n\t\t.reset_n  (~rst_controller_reset_out_reset),         \n\t\t.address  (mm_interconnect_2_td_status_s1_address),  \n\t\t.readdata (mm_interconnect_2_td_status_s1_readdata), \n\t\t.in_port  (in_port_to_the_td_status)                 \n\t);\n\n\tDE1_SoC_QSYS_i2c_scl td_reset_n (\n\t\t.clk        (pll_sys_outclk2_clk),                        \n\t\t.reset_n    (~rst_controller_reset_out_reset),            \n\t\t.address    (mm_interconnect_2_td_reset_n_s1_address),    \n\t\t.write_n    (~mm_interconnect_2_td_reset_n_s1_write),     \n\t\t.writedata  (mm_interconnect_2_td_reset_n_s1_writedata),  \n\t\t.chipselect (mm_interconnect_2_td_reset_n_s1_chipselect), \n\t\t.readdata   (mm_interconnect_2_td_reset_n_s1_readdata),   \n\t\t.out_port   (out_port_from_the_td_reset_n)                \n\t);\n\n\taltera_avalon_mm_clock_crossing_bridge #(\n\t\t.DATA_WIDTH          (32),\n\t\t.SYMBOL_WIDTH        (8),\n\t\t.ADDRESS_WIDTH       (9),\n\t\t.BURSTCOUNT_WIDTH    (1),\n\t\t.COMMAND_FIFO_DEPTH  (32),\n\t\t.RESPONSE_FIFO_DEPTH (256),\n\t\t.MASTER_SYNC_DEPTH   (3),\n\t\t.SLAVE_SYNC_DEPTH    (3)\n\t) clock_crossing_io_slow (\n\t\t.m0_clk           (pll_sys_outclk2_clk),                                       \n\t\t.m0_reset         (rst_controller_reset_out_reset),                            \n\t\t.s0_clk           (pll_sys_outclk0_clk),                                       \n\t\t.s0_reset         (rst_controller_002_reset_out_reset),                        \n\t\t.s0_waitrequest   (mm_interconnect_0_clock_crossing_io_slow_s0_waitrequest),   \n\t\t.s0_readdata      (mm_interconnect_0_clock_crossing_io_slow_s0_readdata),      \n\t\t.s0_readdatavalid (mm_interconnect_0_clock_crossing_io_slow_s0_readdatavalid), \n\t\t.s0_burstcount    (mm_interconnect_0_clock_crossing_io_slow_s0_burstcount),    \n\t\t.s0_writedata     (mm_interconnect_0_clock_crossing_io_slow_s0_writedata),     \n\t\t.s0_address       (mm_interconnect_0_clock_crossing_io_slow_s0_address),       \n\t\t.s0_write         (mm_interconnect_0_clock_crossing_io_slow_s0_write),         \n\t\t.s0_read          (mm_interconnect_0_clock_crossing_io_slow_s0_read),          \n\t\t.s0_byteenable    (mm_interconnect_0_clock_crossing_io_slow_s0_byteenable),    \n\t\t.s0_debugaccess   (mm_interconnect_0_clock_crossing_io_slow_s0_debugaccess),   \n\t\t.m0_waitrequest   (clock_crossing_io_slow_m0_waitrequest),                     \n\t\t.m0_readdata      (clock_crossing_io_slow_m0_readdata),                        \n\t\t.m0_readdatavalid (clock_crossing_io_slow_m0_readdatavalid),                   \n\t\t.m0_burstcount    (clock_crossing_io_slow_m0_burstcount),                      \n\t\t.m0_writedata     (clock_crossing_io_slow_m0_writedata),                       \n\t\t.m0_address       (clock_crossing_io_slow_m0_address),                         \n\t\t.m0_write         (clock_crossing_io_slow_m0_write),                           \n\t\t.m0_read          (clock_crossing_io_slow_m0_read),                            \n\t\t.m0_byteenable    (clock_crossing_io_slow_m0_byteenable),                      \n\t\t.m0_debugaccess   (clock_crossing_io_slow_m0_debugaccess)                      \n\t);\n\n\tDE1_SoC_QSYS_cpu cpu (\n\t\t.clk                                   (pll_sys_outclk0_clk),                                 \n\t\t.reset_n                               (~rst_controller_002_reset_out_reset),                 \n\t\t.reset_req                             (rst_controller_002_reset_out_reset_req),              \n\t\t.d_address                             (cpu_data_master_address),                             \n\t\t.d_byteenable                          (cpu_data_master_byteenable),                          \n\t\t.d_read                                (cpu_data_master_read),                                \n\t\t.d_readdata                            (cpu_data_master_readdata),                            \n\t\t.d_waitrequest                         (cpu_data_master_waitrequest),                         \n\t\t.d_write                               (cpu_data_master_write),                               \n\t\t.d_writedata                           (cpu_data_master_writedata),                           \n\t\t.d_readdatavalid                       (cpu_data_master_readdatavalid),                       \n\t\t.jtag_debug_module_debugaccess_to_roms (cpu_data_master_debugaccess),                         \n\t\t.i_address                             (cpu_instruction_master_address),                      \n\t\t.i_read                                (cpu_instruction_master_read),                         \n\t\t.i_readdata                            (cpu_instruction_master_readdata),                     \n\t\t.i_waitrequest                         (cpu_instruction_master_waitrequest),                  \n\t\t.i_readdatavalid                       (cpu_instruction_master_readdatavalid),                \n\t\t.d_irq                                 (cpu_d_irq_irq),                                       \n\t\t.jtag_debug_module_resetrequest        (cpu_jtag_debug_module_reset_reset),                   \n\t\t.jtag_debug_module_address             (mm_interconnect_0_cpu_jtag_debug_module_address),     \n\t\t.jtag_debug_module_byteenable          (mm_interconnect_0_cpu_jtag_debug_module_byteenable),  \n\t\t.jtag_debug_module_debugaccess         (mm_interconnect_0_cpu_jtag_debug_module_debugaccess), \n\t\t.jtag_debug_module_read                (mm_interconnect_0_cpu_jtag_debug_module_read),        \n\t\t.jtag_debug_module_readdata            (mm_interconnect_0_cpu_jtag_debug_module_readdata),    \n\t\t.jtag_debug_module_waitrequest         (mm_interconnect_0_cpu_jtag_debug_module_waitrequest), \n\t\t.jtag_debug_module_write               (mm_interconnect_0_cpu_jtag_debug_module_write),       \n\t\t.jtag_debug_module_writedata           (mm_interconnect_0_cpu_jtag_debug_module_writedata),   \n\t\t.no_ci_readra                          ()                                                     \n\t);\n\n\tDE1_SoC_QSYS_sysid sysid (\n\t\t.clock    (pll_sys_outclk2_clk),                            \n\t\t.reset_n  (~rst_controller_reset_out_reset),                \n\t\t.readdata (mm_interconnect_2_sysid_control_slave_readdata), \n\t\t.address  (mm_interconnect_2_sysid_control_slave_address)   \n\t);\n\n\tDE1_SoC_QSYS_alt_vip_cl_scl_0 #(\n\t\t.SYMBOLS_IN_SEQ      (1),\n\t\t.SYMBOLS_IN_PAR      (3),\n\t\t.BITS_PER_SYMBOL     (8),\n\t\t.EXTRA_PIPELINING    (0),\n\t\t.IS_422              (0),\n\t\t.NO_BLANKING         (1),\n\t\t.MAX_IN_WIDTH        (640),\n\t\t.MAX_IN_HEIGHT       (480),\n\t\t.MAX_OUT_WIDTH       (270),\n\t\t.MAX_OUT_HEIGHT      (200),\n\t\t.RUNTIME_CONTROL     (0),\n\t\t.ALWAYS_DOWNSCALE    (1),\n\t\t.ALGORITHM_NAME      (\"POLYPHASE\"),\n\t\t.DEFAULT_EDGE_THRESH (7),\n\t\t.DEFAULT_UPPER_BLUR  (15),\n\t\t.DEFAULT_LOWER_BLUR  (0),\n\t\t.ENABLE_FIR          (0),\n\t\t.ARE_IDENTICAL       (1),\n\t\t.V_TAPS              (8),\n\t\t.V_PHASES            (16),\n\t\t.H_TAPS              (8),\n\t\t.H_PHASES            (16),\n\t\t.V_SIGNED            (1),\n\t\t.V_INTEGER_BITS      (1),\n\t\t.V_FRACTION_BITS     (7),\n\t\t.H_SIGNED            (1),\n\t\t.H_INTEGER_BITS      (1),\n\t\t.H_FRACTION_BITS     (7),\n\t\t.PRESERVE_BITS       (0),\n\t\t.LOAD_AT_RUNTIME     (0),\n\t\t.V_BANKS             (1),\n\t\t.V_SYMMETRIC         (0),\n\t\t.V_FUNCTION          (\"LANCZOS_2\"),\n\t\t.V_COEFF_FILE        (\"<enter file name (including full path)>\"),\n\t\t.H_BANKS             (1),\n\t\t.H_SYMMETRIC         (0),\n\t\t.H_FUNCTION          (\"LANCZOS_2\"),\n\t\t.H_COEFF_FILE        (\"<enter file name (including full path)>\"),\n\t\t.IS_420              (0)\n\t) alt_vip_cl_scl_0 (\n\t\t.main_clock         (pll_sys_outclk0_clk),                 \n\t\t.main_reset         (rst_controller_002_reset_out_reset),  \n\t\t.din_data           (alt_vip_clip_0_dout_data),            \n\t\t.din_valid          (alt_vip_clip_0_dout_valid),           \n\t\t.din_startofpacket  (alt_vip_clip_0_dout_startofpacket),   \n\t\t.din_endofpacket    (alt_vip_clip_0_dout_endofpacket),     \n\t\t.din_ready          (alt_vip_clip_0_dout_ready),           \n\t\t.dout_data          (alt_vip_cl_scl_0_dout_data),          \n\t\t.dout_valid         (alt_vip_cl_scl_0_dout_valid),         \n\t\t.dout_startofpacket (alt_vip_cl_scl_0_dout_startofpacket), \n\t\t.dout_endofpacket   (alt_vip_cl_scl_0_dout_endofpacket),   \n\t\t.dout_ready         (alt_vip_cl_scl_0_dout_ready)          \n\t);\n\n\tDE1_SoC_QSYS_pll_sys pll_sys (\n\t\t.refclk   (clk_50),                             \n\t\t.rst      (rst_controller_003_reset_out_reset), \n\t\t.outclk_0 (pll_sys_outclk0_clk),                \n\t\t.outclk_1 (clk_sdram_clk),                      \n\t\t.outclk_2 (pll_sys_outclk2_clk),                \n\t\t.outclk_3 (clk_vga_clk),                        \n\t\t.outclk_4 (pll_sys_outclk4_clk),                \n\t\t.locked   (pll_0_locked_export)                 \n\t);\n\n\tSEG7_IF #(\n\t\t.SEG7_NUM       (6),\n\t\t.ADDR_WIDTH     (3),\n\t\t.DEFAULT_ACTIVE (1),\n\t\t.LOW_ACTIVE     (1)\n\t) seg7 (\n\t\t.s_address   (mm_interconnect_0_seg7_avalon_slave_address),   \n\t\t.s_read      (mm_interconnect_0_seg7_avalon_slave_read),      \n\t\t.s_readdata  (mm_interconnect_0_seg7_avalon_slave_readdata),  \n\t\t.s_write     (mm_interconnect_0_seg7_avalon_slave_write),     \n\t\t.s_writedata (mm_interconnect_0_seg7_avalon_slave_writedata), \n\t\t.SEG7        (seg7_conduit_end_export),                       \n\t\t.s_clk       (pll_sys_outclk2_clk),                           \n\t\t.s_reset     (rst_controller_reset_out_reset)                 \n\t);\n\n\tDE1_SoC_QSYS_sw sw (\n\t\t.clk        (pll_sys_outclk2_clk),                \n\t\t.reset_n    (~rst_controller_reset_out_reset),    \n\t\t.address    (mm_interconnect_0_sw_s1_address),    \n\t\t.write_n    (~mm_interconnect_0_sw_s1_write),     \n\t\t.writedata  (mm_interconnect_0_sw_s1_writedata),  \n\t\t.chipselect (mm_interconnect_0_sw_s1_chipselect), \n\t\t.readdata   (mm_interconnect_0_sw_s1_readdata),   \n\t\t.in_port    (sw_external_connection_export),      \n\t\t.irq        ()                                    \n\t);\n\n\tDE1_SoC_QSYS_key key (\n\t\t.clk        (pll_sys_outclk2_clk),                 \n\t\t.reset_n    (~rst_controller_reset_out_reset),     \n\t\t.address    (mm_interconnect_0_key_s1_address),    \n\t\t.write_n    (~mm_interconnect_0_key_s1_write),     \n\t\t.writedata  (mm_interconnect_0_key_s1_writedata),  \n\t\t.chipselect (mm_interconnect_0_key_s1_chipselect), \n\t\t.readdata   (mm_interconnect_0_key_s1_readdata),   \n\t\t.in_port    (key_external_connection_export),      \n\t\t.irq        ()                                     \n\t);\n\n\tDE1_SoC_QSYS_ledr ledr (\n\t\t.clk        (pll_sys_outclk2_clk),                  \n\t\t.reset_n    (~rst_controller_reset_out_reset),      \n\t\t.address    (mm_interconnect_0_ledr_s1_address),    \n\t\t.write_n    (~mm_interconnect_0_ledr_s1_write),     \n\t\t.writedata  (mm_interconnect_0_ledr_s1_writedata),  \n\t\t.chipselect (mm_interconnect_0_ledr_s1_chipselect), \n\t\t.readdata   (mm_interconnect_0_ledr_s1_readdata),   \n\t\t.out_port   (ledr_external_connection_export)       \n\t);\n\n\tDE1_SoC_QSYS_spi_0 spi_0 (\n\t\t.clk           (pll_sys_outclk4_clk),                                 \n\t\t.reset_n       (~rst_controller_004_reset_out_reset),                 \n\t\t.data_from_cpu (mm_interconnect_3_spi_0_spi_control_port_writedata),  \n\t\t.data_to_cpu   (mm_interconnect_3_spi_0_spi_control_port_readdata),   \n\t\t.mem_addr      (mm_interconnect_3_spi_0_spi_control_port_address),    \n\t\t.read_n        (~mm_interconnect_3_spi_0_spi_control_port_read),      \n\t\t.spi_select    (mm_interconnect_3_spi_0_spi_control_port_chipselect), \n\t\t.write_n       (~mm_interconnect_3_spi_0_spi_control_port_write),     \n\t\t.irq           (irq_synchronizer_001_receiver_irq),                   \n\t\t.MISO          (spi_0_external_MISO),                                 \n\t\t.MOSI          (spi_0_external_MOSI),                                 \n\t\t.SCLK          (spi_0_external_SCLK),                                 \n\t\t.SS_n          (spi_0_external_SS_n)                                  \n\t);\n\n\tAUDIO_IF audio (\n\t\t.avs_s1_address       (mm_interconnect_0_audio_avalon_slave_address),   \n\t\t.avs_s1_read          (mm_interconnect_0_audio_avalon_slave_read),      \n\t\t.avs_s1_readdata      (mm_interconnect_0_audio_avalon_slave_readdata),  \n\t\t.avs_s1_write         (mm_interconnect_0_audio_avalon_slave_write),     \n\t\t.avs_s1_writedata     (mm_interconnect_0_audio_avalon_slave_writedata), \n\t\t.avs_s1_clk           (pll_audio_outclk0_clk),                          \n\t\t.avs_s1_reset         (rst_controller_005_reset_out_reset),             \n\t\t.avs_s1_export_XCK    (audio_conduit_end_XCK),                          \n\t\t.avs_s1_export_ADCDAT (audio_conduit_end_ADCDAT),                       \n\t\t.avs_s1_export_ADCLRC (audio_conduit_end_ADCLRC),                       \n\t\t.avs_s1_export_DACDAT (audio_conduit_end_DACDAT),                       \n\t\t.avs_s1_export_DACLRC (audio_conduit_end_DACLRC),                       \n\t\t.avs_s1_export_BCLK   (audio_conduit_end_BCLK)                          \n\t);\n\n\tDE1_SoC_QSYS_pll_audio pll_audio (\n\t\t.refclk   (clk_50),                             \n\t\t.rst      (rst_controller_003_reset_out_reset), \n\t\t.outclk_0 (pll_audio_outclk0_clk),              \n\t\t.locked   (pll_audio_locked_export)             \n\t);\n\n\tDE1_SoC_QSYS_uart uart (\n\t\t.clk           (pll_sys_outclk0_clk),                     \n\t\t.reset_n       (~rst_controller_002_reset_out_reset),     \n\t\t.address       (mm_interconnect_0_uart_s1_address),       \n\t\t.begintransfer (mm_interconnect_0_uart_s1_begintransfer), \n\t\t.chipselect    (mm_interconnect_0_uart_s1_chipselect),    \n\t\t.read_n        (~mm_interconnect_0_uart_s1_read),         \n\t\t.write_n       (~mm_interconnect_0_uart_s1_write),        \n\t\t.writedata     (mm_interconnect_0_uart_s1_writedata),     \n\t\t.readdata      (mm_interconnect_0_uart_s1_readdata),      \n\t\t.dataavailable (),                                        \n\t\t.readyfordata  (),                                        \n\t\t.rxd           (uart_external_connection_rxd),            \n\t\t.txd           (uart_external_connection_txd),            \n\t\t.irq           (irq_mapper_receiver2_irq)                 \n\t);\n\n\tDE1_SoC_QSYS_timer_stamp timer_stamp (\n\t\t.clk        (pll_sys_outclk0_clk),                         \n\t\t.reset_n    (~rst_controller_002_reset_out_reset),         \n\t\t.address    (mm_interconnect_0_timer_stamp_s1_address),    \n\t\t.writedata  (mm_interconnect_0_timer_stamp_s1_writedata),  \n\t\t.readdata   (mm_interconnect_0_timer_stamp_s1_readdata),   \n\t\t.chipselect (mm_interconnect_0_timer_stamp_s1_chipselect), \n\t\t.write_n    (~mm_interconnect_0_timer_stamp_s1_write),     \n\t\t.irq        (irq_mapper_receiver4_irq)                     \n\t);\n\n\taltera_avalon_mm_clock_crossing_bridge #(\n\t\t.DATA_WIDTH          (32),\n\t\t.SYMBOL_WIDTH        (8),\n\t\t.ADDRESS_WIDTH       (9),\n\t\t.BURSTCOUNT_WIDTH    (1),\n\t\t.COMMAND_FIFO_DEPTH  (32),\n\t\t.RESPONSE_FIFO_DEPTH (64),\n\t\t.MASTER_SYNC_DEPTH   (3),\n\t\t.SLAVE_SYNC_DEPTH    (3)\n\t) mm_clock_crossing_bridge_1 (\n\t\t.m0_clk           (pll_sys_outclk4_clk),                                           \n\t\t.m0_reset         (rst_controller_004_reset_out_reset),                            \n\t\t.s0_clk           (pll_sys_outclk0_clk),                                           \n\t\t.s0_reset         (rst_controller_002_reset_out_reset),                            \n\t\t.s0_waitrequest   (mm_interconnect_0_mm_clock_crossing_bridge_1_s0_waitrequest),   \n\t\t.s0_readdata      (mm_interconnect_0_mm_clock_crossing_bridge_1_s0_readdata),      \n\t\t.s0_readdatavalid (mm_interconnect_0_mm_clock_crossing_bridge_1_s0_readdatavalid), \n\t\t.s0_burstcount    (mm_interconnect_0_mm_clock_crossing_bridge_1_s0_burstcount),    \n\t\t.s0_writedata     (mm_interconnect_0_mm_clock_crossing_bridge_1_s0_writedata),     \n\t\t.s0_address       (mm_interconnect_0_mm_clock_crossing_bridge_1_s0_address),       \n\t\t.s0_write         (mm_interconnect_0_mm_clock_crossing_bridge_1_s0_write),         \n\t\t.s0_read          (mm_interconnect_0_mm_clock_crossing_bridge_1_s0_read),          \n\t\t.s0_byteenable    (mm_interconnect_0_mm_clock_crossing_bridge_1_s0_byteenable),    \n\t\t.s0_debugaccess   (mm_interconnect_0_mm_clock_crossing_bridge_1_s0_debugaccess),   \n\t\t.m0_waitrequest   (mm_clock_crossing_bridge_1_m0_waitrequest),                     \n\t\t.m0_readdata      (mm_clock_crossing_bridge_1_m0_readdata),                        \n\t\t.m0_readdatavalid (mm_clock_crossing_bridge_1_m0_readdatavalid),                   \n\t\t.m0_burstcount    (mm_clock_crossing_bridge_1_m0_burstcount),                      \n\t\t.m0_writedata     (mm_clock_crossing_bridge_1_m0_writedata),                       \n\t\t.m0_address       (mm_clock_crossing_bridge_1_m0_address),                         \n\t\t.m0_write         (mm_clock_crossing_bridge_1_m0_write),                           \n\t\t.m0_read          (mm_clock_crossing_bridge_1_m0_read),                            \n\t\t.m0_byteenable    (mm_clock_crossing_bridge_1_m0_byteenable),                      \n\t\t.m0_debugaccess   (mm_clock_crossing_bridge_1_m0_debugaccess)                      \n\t);\n\n\tDE1_SoC_QSYS_hps_0 #(\n\t\t.F2S_Width (3),\n\t\t.S2F_Width (2)\n\t) hps_0 (\n\t\t.mem_a                    (memory_mem_a),                                  \n\t\t.mem_ba                   (memory_mem_ba),                                 \n\t\t.mem_ck                   (memory_mem_ck),                                 \n\t\t.mem_ck_n                 (memory_mem_ck_n),                               \n\t\t.mem_cke                  (memory_mem_cke),                                \n\t\t.mem_cs_n                 (memory_mem_cs_n),                               \n\t\t.mem_ras_n                (memory_mem_ras_n),                              \n\t\t.mem_cas_n                (memory_mem_cas_n),                              \n\t\t.mem_we_n                 (memory_mem_we_n),                               \n\t\t.mem_reset_n              (memory_mem_reset_n),                            \n\t\t.mem_dq                   (memory_mem_dq),                                 \n\t\t.mem_dqs                  (memory_mem_dqs),                                \n\t\t.mem_dqs_n                (memory_mem_dqs_n),                              \n\t\t.mem_odt                  (memory_mem_odt),                                \n\t\t.mem_dm                   (memory_mem_dm),                                 \n\t\t.oct_rzqin                (memory_oct_rzqin),                              \n\t\t.hps_io_emac1_inst_TX_CLK (hps_io_hps_io_emac1_inst_TX_CLK),               \n\t\t.hps_io_emac1_inst_TXD0   (hps_io_hps_io_emac1_inst_TXD0),                 \n\t\t.hps_io_emac1_inst_TXD1   (hps_io_hps_io_emac1_inst_TXD1),                 \n\t\t.hps_io_emac1_inst_TXD2   (hps_io_hps_io_emac1_inst_TXD2),                 \n\t\t.hps_io_emac1_inst_TXD3   (hps_io_hps_io_emac1_inst_TXD3),                 \n\t\t.hps_io_emac1_inst_RXD0   (hps_io_hps_io_emac1_inst_RXD0),                 \n\t\t.hps_io_emac1_inst_MDIO   (hps_io_hps_io_emac1_inst_MDIO),                 \n\t\t.hps_io_emac1_inst_MDC    (hps_io_hps_io_emac1_inst_MDC),                  \n\t\t.hps_io_emac1_inst_RX_CTL (hps_io_hps_io_emac1_inst_RX_CTL),               \n\t\t.hps_io_emac1_inst_TX_CTL (hps_io_hps_io_emac1_inst_TX_CTL),               \n\t\t.hps_io_emac1_inst_RX_CLK (hps_io_hps_io_emac1_inst_RX_CLK),               \n\t\t.hps_io_emac1_inst_RXD1   (hps_io_hps_io_emac1_inst_RXD1),                 \n\t\t.hps_io_emac1_inst_RXD2   (hps_io_hps_io_emac1_inst_RXD2),                 \n\t\t.hps_io_emac1_inst_RXD3   (hps_io_hps_io_emac1_inst_RXD3),                 \n\t\t.hps_io_qspi_inst_IO0     (hps_io_hps_io_qspi_inst_IO0),                   \n\t\t.hps_io_qspi_inst_IO1     (hps_io_hps_io_qspi_inst_IO1),                   \n\t\t.hps_io_qspi_inst_IO2     (hps_io_hps_io_qspi_inst_IO2),                   \n\t\t.hps_io_qspi_inst_IO3     (hps_io_hps_io_qspi_inst_IO3),                   \n\t\t.hps_io_qspi_inst_SS0     (hps_io_hps_io_qspi_inst_SS0),                   \n\t\t.hps_io_qspi_inst_CLK     (hps_io_hps_io_qspi_inst_CLK),                   \n\t\t.hps_io_sdio_inst_CMD     (hps_io_hps_io_sdio_inst_CMD),                   \n\t\t.hps_io_sdio_inst_D0      (hps_io_hps_io_sdio_inst_D0),                    \n\t\t.hps_io_sdio_inst_D1      (hps_io_hps_io_sdio_inst_D1),                    \n\t\t.hps_io_sdio_inst_CLK     (hps_io_hps_io_sdio_inst_CLK),                   \n\t\t.hps_io_sdio_inst_D2      (hps_io_hps_io_sdio_inst_D2),                    \n\t\t.hps_io_sdio_inst_D3      (hps_io_hps_io_sdio_inst_D3),                    \n\t\t.hps_io_usb1_inst_D0      (hps_io_hps_io_usb1_inst_D0),                    \n\t\t.hps_io_usb1_inst_D1      (hps_io_hps_io_usb1_inst_D1),                    \n\t\t.hps_io_usb1_inst_D2      (hps_io_hps_io_usb1_inst_D2),                    \n\t\t.hps_io_usb1_inst_D3      (hps_io_hps_io_usb1_inst_D3),                    \n\t\t.hps_io_usb1_inst_D4      (hps_io_hps_io_usb1_inst_D4),                    \n\t\t.hps_io_usb1_inst_D5      (hps_io_hps_io_usb1_inst_D5),                    \n\t\t.hps_io_usb1_inst_D6      (hps_io_hps_io_usb1_inst_D6),                    \n\t\t.hps_io_usb1_inst_D7      (hps_io_hps_io_usb1_inst_D7),                    \n\t\t.hps_io_usb1_inst_CLK     (hps_io_hps_io_usb1_inst_CLK),                   \n\t\t.hps_io_usb1_inst_STP     (hps_io_hps_io_usb1_inst_STP),                   \n\t\t.hps_io_usb1_inst_DIR     (hps_io_hps_io_usb1_inst_DIR),                   \n\t\t.hps_io_usb1_inst_NXT     (hps_io_hps_io_usb1_inst_NXT),                   \n\t\t.hps_io_spim1_inst_CLK    (hps_io_hps_io_spim1_inst_CLK),                  \n\t\t.hps_io_spim1_inst_MOSI   (hps_io_hps_io_spim1_inst_MOSI),                 \n\t\t.hps_io_spim1_inst_MISO   (hps_io_hps_io_spim1_inst_MISO),                 \n\t\t.hps_io_spim1_inst_SS0    (hps_io_hps_io_spim1_inst_SS0),                  \n\t\t.hps_io_uart0_inst_RX     (hps_io_hps_io_uart0_inst_RX),                   \n\t\t.hps_io_uart0_inst_TX     (hps_io_hps_io_uart0_inst_TX),                   \n\t\t.hps_io_i2c0_inst_SDA     (hps_io_hps_io_i2c0_inst_SDA),                   \n\t\t.hps_io_i2c0_inst_SCL     (hps_io_hps_io_i2c0_inst_SCL),                   \n\t\t.hps_io_i2c1_inst_SDA     (hps_io_hps_io_i2c1_inst_SDA),                   \n\t\t.hps_io_i2c1_inst_SCL     (hps_io_hps_io_i2c1_inst_SCL),                   \n\t\t.hps_io_gpio_inst_GPIO09  (hps_io_hps_io_gpio_inst_GPIO09),                \n\t\t.hps_io_gpio_inst_GPIO35  (hps_io_hps_io_gpio_inst_GPIO35),                \n\t\t.hps_io_gpio_inst_GPIO40  (hps_io_hps_io_gpio_inst_GPIO40),                \n\t\t.hps_io_gpio_inst_GPIO41  (hps_io_hps_io_gpio_inst_GPIO41),                \n\t\t.hps_io_gpio_inst_GPIO48  (hps_io_hps_io_gpio_inst_GPIO48),                \n\t\t.hps_io_gpio_inst_GPIO53  (hps_io_hps_io_gpio_inst_GPIO53),                \n\t\t.hps_io_gpio_inst_GPIO54  (hps_io_hps_io_gpio_inst_GPIO54),                \n\t\t.hps_io_gpio_inst_GPIO61  (hps_io_hps_io_gpio_inst_GPIO61),                \n\t\t.h2f_rst_n                (hps_0_h2f_reset_reset_n),                       \n\t\t.h2f_axi_clk              (clk_50),                                        \n\t\t.h2f_AWID                 (),                                              \n\t\t.h2f_AWADDR               (),                                              \n\t\t.h2f_AWLEN                (),                                              \n\t\t.h2f_AWSIZE               (),                                              \n\t\t.h2f_AWBURST              (),                                              \n\t\t.h2f_AWLOCK               (),                                              \n\t\t.h2f_AWCACHE              (),                                              \n\t\t.h2f_AWPROT               (),                                              \n\t\t.h2f_AWVALID              (),                                              \n\t\t.h2f_AWREADY              (),                                              \n\t\t.h2f_WID                  (),                                              \n\t\t.h2f_WDATA                (),                                              \n\t\t.h2f_WSTRB                (),                                              \n\t\t.h2f_WLAST                (),                                              \n\t\t.h2f_WVALID               (),                                              \n\t\t.h2f_WREADY               (),                                              \n\t\t.h2f_BID                  (),                                              \n\t\t.h2f_BRESP                (),                                              \n\t\t.h2f_BVALID               (),                                              \n\t\t.h2f_BREADY               (),                                              \n\t\t.h2f_ARID                 (),                                              \n\t\t.h2f_ARADDR               (),                                              \n\t\t.h2f_ARLEN                (),                                              \n\t\t.h2f_ARSIZE               (),                                              \n\t\t.h2f_ARBURST              (),                                              \n\t\t.h2f_ARLOCK               (),                                              \n\t\t.h2f_ARCACHE              (),                                              \n\t\t.h2f_ARPROT               (),                                              \n\t\t.h2f_ARVALID              (),                                              \n\t\t.h2f_ARREADY              (),                                              \n\t\t.h2f_RID                  (),                                              \n\t\t.h2f_RDATA                (),                                              \n\t\t.h2f_RRESP                (),                                              \n\t\t.h2f_RLAST                (),                                              \n\t\t.h2f_RVALID               (),                                              \n\t\t.h2f_RREADY               (),                                              \n\t\t.f2h_axi_clk              (clk_50),                                        \n\t\t.f2h_AWID                 (mm_interconnect_4_hps_0_f2h_axi_slave_awid),    \n\t\t.f2h_AWADDR               (mm_interconnect_4_hps_0_f2h_axi_slave_awaddr),  \n\t\t.f2h_AWLEN                (mm_interconnect_4_hps_0_f2h_axi_slave_awlen),   \n\t\t.f2h_AWSIZE               (mm_interconnect_4_hps_0_f2h_axi_slave_awsize),  \n\t\t.f2h_AWBURST              (mm_interconnect_4_hps_0_f2h_axi_slave_awburst), \n\t\t.f2h_AWLOCK               (mm_interconnect_4_hps_0_f2h_axi_slave_awlock),  \n\t\t.f2h_AWCACHE              (mm_interconnect_4_hps_0_f2h_axi_slave_awcache), \n\t\t.f2h_AWPROT               (mm_interconnect_4_hps_0_f2h_axi_slave_awprot),  \n\t\t.f2h_AWVALID              (mm_interconnect_4_hps_0_f2h_axi_slave_awvalid), \n\t\t.f2h_AWREADY              (mm_interconnect_4_hps_0_f2h_axi_slave_awready), \n\t\t.f2h_AWUSER               (mm_interconnect_4_hps_0_f2h_axi_slave_awuser),  \n\t\t.f2h_WID                  (mm_interconnect_4_hps_0_f2h_axi_slave_wid),     \n\t\t.f2h_WDATA                (mm_interconnect_4_hps_0_f2h_axi_slave_wdata),   \n\t\t.f2h_WSTRB                (mm_interconnect_4_hps_0_f2h_axi_slave_wstrb),   \n\t\t.f2h_WLAST                (mm_interconnect_4_hps_0_f2h_axi_slave_wlast),   \n\t\t.f2h_WVALID               (mm_interconnect_4_hps_0_f2h_axi_slave_wvalid),  \n\t\t.f2h_WREADY               (mm_interconnect_4_hps_0_f2h_axi_slave_wready),  \n\t\t.f2h_BID                  (mm_interconnect_4_hps_0_f2h_axi_slave_bid),     \n\t\t.f2h_BRESP                (mm_interconnect_4_hps_0_f2h_axi_slave_bresp),   \n\t\t.f2h_BVALID               (mm_interconnect_4_hps_0_f2h_axi_slave_bvalid),  \n\t\t.f2h_BREADY               (mm_interconnect_4_hps_0_f2h_axi_slave_bready),  \n\t\t.f2h_ARID                 (mm_interconnect_4_hps_0_f2h_axi_slave_arid),    \n\t\t.f2h_ARADDR               (mm_interconnect_4_hps_0_f2h_axi_slave_araddr),  \n\t\t.f2h_ARLEN                (mm_interconnect_4_hps_0_f2h_axi_slave_arlen),   \n\t\t.f2h_ARSIZE               (mm_interconnect_4_hps_0_f2h_axi_slave_arsize),  \n\t\t.f2h_ARBURST              (mm_interconnect_4_hps_0_f2h_axi_slave_arburst), \n\t\t.f2h_ARLOCK               (mm_interconnect_4_hps_0_f2h_axi_slave_arlock),  \n\t\t.f2h_ARCACHE              (mm_interconnect_4_hps_0_f2h_axi_slave_arcache), \n\t\t.f2h_ARPROT               (mm_interconnect_4_hps_0_f2h_axi_slave_arprot),  \n\t\t.f2h_ARVALID              (mm_interconnect_4_hps_0_f2h_axi_slave_arvalid), \n\t\t.f2h_ARREADY              (mm_interconnect_4_hps_0_f2h_axi_slave_arready), \n\t\t.f2h_ARUSER               (mm_interconnect_4_hps_0_f2h_axi_slave_aruser),  \n\t\t.f2h_RID                  (mm_interconnect_4_hps_0_f2h_axi_slave_rid),     \n\t\t.f2h_RDATA                (mm_interconnect_4_hps_0_f2h_axi_slave_rdata),   \n\t\t.f2h_RRESP                (mm_interconnect_4_hps_0_f2h_axi_slave_rresp),   \n\t\t.f2h_RLAST                (mm_interconnect_4_hps_0_f2h_axi_slave_rlast),   \n\t\t.f2h_RVALID               (mm_interconnect_4_hps_0_f2h_axi_slave_rvalid),  \n\t\t.f2h_RREADY               (mm_interconnect_4_hps_0_f2h_axi_slave_rready),  \n\t\t.h2f_lw_axi_clk           (clk_50),                                        \n\t\t.h2f_lw_AWID              (hps_0_h2f_lw_axi_master_awid),                  \n\t\t.h2f_lw_AWADDR            (hps_0_h2f_lw_axi_master_awaddr),                \n\t\t.h2f_lw_AWLEN             (hps_0_h2f_lw_axi_master_awlen),                 \n\t\t.h2f_lw_AWSIZE            (hps_0_h2f_lw_axi_master_awsize),                \n\t\t.h2f_lw_AWBURST           (hps_0_h2f_lw_axi_master_awburst),               \n\t\t.h2f_lw_AWLOCK            (hps_0_h2f_lw_axi_master_awlock),                \n\t\t.h2f_lw_AWCACHE           (hps_0_h2f_lw_axi_master_awcache),               \n\t\t.h2f_lw_AWPROT            (hps_0_h2f_lw_axi_master_awprot),                \n\t\t.h2f_lw_AWVALID           (hps_0_h2f_lw_axi_master_awvalid),               \n\t\t.h2f_lw_AWREADY           (hps_0_h2f_lw_axi_master_awready),               \n\t\t.h2f_lw_WID               (hps_0_h2f_lw_axi_master_wid),                   \n\t\t.h2f_lw_WDATA             (hps_0_h2f_lw_axi_master_wdata),                 \n\t\t.h2f_lw_WSTRB             (hps_0_h2f_lw_axi_master_wstrb),                 \n\t\t.h2f_lw_WLAST             (hps_0_h2f_lw_axi_master_wlast),                 \n\t\t.h2f_lw_WVALID            (hps_0_h2f_lw_axi_master_wvalid),                \n\t\t.h2f_lw_WREADY            (hps_0_h2f_lw_axi_master_wready),                \n\t\t.h2f_lw_BID               (hps_0_h2f_lw_axi_master_bid),                   \n\t\t.h2f_lw_BRESP             (hps_0_h2f_lw_axi_master_bresp),                 \n\t\t.h2f_lw_BVALID            (hps_0_h2f_lw_axi_master_bvalid),                \n\t\t.h2f_lw_BREADY            (hps_0_h2f_lw_axi_master_bready),                \n\t\t.h2f_lw_ARID              (hps_0_h2f_lw_axi_master_arid),                  \n\t\t.h2f_lw_ARADDR            (hps_0_h2f_lw_axi_master_araddr),                \n\t\t.h2f_lw_ARLEN             (hps_0_h2f_lw_axi_master_arlen),                 \n\t\t.h2f_lw_ARSIZE            (hps_0_h2f_lw_axi_master_arsize),                \n\t\t.h2f_lw_ARBURST           (hps_0_h2f_lw_axi_master_arburst),               \n\t\t.h2f_lw_ARLOCK            (hps_0_h2f_lw_axi_master_arlock),                \n\t\t.h2f_lw_ARCACHE           (hps_0_h2f_lw_axi_master_arcache),               \n\t\t.h2f_lw_ARPROT            (hps_0_h2f_lw_axi_master_arprot),                \n\t\t.h2f_lw_ARVALID           (hps_0_h2f_lw_axi_master_arvalid),               \n\t\t.h2f_lw_ARREADY           (hps_0_h2f_lw_axi_master_arready),               \n\t\t.h2f_lw_RID               (hps_0_h2f_lw_axi_master_rid),                   \n\t\t.h2f_lw_RDATA             (hps_0_h2f_lw_axi_master_rdata),                 \n\t\t.h2f_lw_RRESP             (hps_0_h2f_lw_axi_master_rresp),                 \n\t\t.h2f_lw_RLAST             (hps_0_h2f_lw_axi_master_rlast),                 \n\t\t.h2f_lw_RVALID            (hps_0_h2f_lw_axi_master_rvalid),                \n\t\t.h2f_lw_RREADY            (hps_0_h2f_lw_axi_master_rready),                \n\t\t.f2h_irq_p0               (hps_0_f2h_irq0_irq),                            \n\t\t.f2h_irq_p1               (hps_0_f2h_irq1_irq)                             \n\t);\n\n\talt_vipvfr131_vfr #(\n\t\t.BITS_PER_PIXEL_PER_COLOR_PLANE (8),\n\t\t.NUMBER_OF_CHANNELS_IN_PARALLEL (4),\n\t\t.NUMBER_OF_CHANNELS_IN_SEQUENCE (1),\n\t\t.MAX_IMAGE_WIDTH                (1024),\n\t\t.MAX_IMAGE_HEIGHT               (768),\n\t\t.MEM_PORT_WIDTH                 (128),\n\t\t.RMASTER_FIFO_DEPTH             (64),\n\t\t.RMASTER_BURST_TARGET           (32),\n\t\t.CLOCKS_ARE_SEPARATE            (1)\n\t) alt_vip_vfr_0 (\n\t\t.clock                (pll_sys_outclk0_clk),                                    \n\t\t.reset                (rst_controller_002_reset_out_reset),                     \n\t\t.master_clock         (pll_sys_outclk0_clk),                                    \n\t\t.master_reset         (rst_controller_002_reset_out_reset),                     \n\t\t.slave_address        (mm_interconnect_0_alt_vip_vfr_0_avalon_slave_address),   \n\t\t.slave_write          (mm_interconnect_0_alt_vip_vfr_0_avalon_slave_write),     \n\t\t.slave_writedata      (mm_interconnect_0_alt_vip_vfr_0_avalon_slave_writedata), \n\t\t.slave_read           (mm_interconnect_0_alt_vip_vfr_0_avalon_slave_read),      \n\t\t.slave_readdata       (mm_interconnect_0_alt_vip_vfr_0_avalon_slave_readdata),  \n\t\t.slave_irq            (),                                                       \n\t\t.dout_data            (alt_vip_vfr_0_avalon_streaming_source_data),             \n\t\t.dout_valid           (alt_vip_vfr_0_avalon_streaming_source_valid),            \n\t\t.dout_ready           (alt_vip_vfr_0_avalon_streaming_source_ready),            \n\t\t.dout_startofpacket   (alt_vip_vfr_0_avalon_streaming_source_startofpacket),    \n\t\t.dout_endofpacket     (alt_vip_vfr_0_avalon_streaming_source_endofpacket),      \n\t\t.master_address       (alt_vip_vfr_0_avalon_master_address),                    \n\t\t.master_burstcount    (alt_vip_vfr_0_avalon_master_burstcount),                 \n\t\t.master_readdata      (alt_vip_vfr_0_avalon_master_readdata),                   \n\t\t.master_read          (alt_vip_vfr_0_avalon_master_read),                       \n\t\t.master_readdatavalid (alt_vip_vfr_0_avalon_master_readdatavalid),              \n\t\t.master_waitrequest   (alt_vip_vfr_0_avalon_master_waitrequest)                 \n\t);\n\n\talt_vipitc131_IS2Vid #(\n\t\t.NUMBER_OF_COLOUR_PLANES       (3),\n\t\t.COLOUR_PLANES_ARE_IN_PARALLEL (1),\n\t\t.BPS                           (8),\n\t\t.INTERLACED                    (0),\n\t\t.H_ACTIVE_PIXELS               (1024),\n\t\t.V_ACTIVE_LINES                (768),\n\t\t.ACCEPT_COLOURS_IN_SEQ         (0),\n\t\t.FIFO_DEPTH                    (10240),\n\t\t.CLOCKS_ARE_SAME               (0),\n\t\t.USE_CONTROL                   (0),\n\t\t.NO_OF_MODES                   (1),\n\t\t.THRESHOLD                     (10239),\n\t\t.STD_WIDTH                     (1),\n\t\t.GENERATE_SYNC                 (0),\n\t\t.USE_EMBEDDED_SYNCS            (0),\n\t\t.AP_LINE                       (0),\n\t\t.V_BLANK                       (0),\n\t\t.H_BLANK                       (0),\n\t\t.H_SYNC_LENGTH                 (136),\n\t\t.H_FRONT_PORCH                 (24),\n\t\t.H_BACK_PORCH                  (160),\n\t\t.V_SYNC_LENGTH                 (6),\n\t\t.V_FRONT_PORCH                 (3),\n\t\t.V_BACK_PORCH                  (29),\n\t\t.F_RISING_EDGE                 (0),\n\t\t.F_FALLING_EDGE                (0),\n\t\t.FIELD0_V_RISING_EDGE          (0),\n\t\t.FIELD0_V_BLANK                (0),\n\t\t.FIELD0_V_SYNC_LENGTH          (0),\n\t\t.FIELD0_V_FRONT_PORCH          (0),\n\t\t.FIELD0_V_BACK_PORCH           (0),\n\t\t.ANC_LINE                      (0),\n\t\t.FIELD0_ANC_LINE               (0)\n\t) alt_vip_itc_0 (\n\t\t.is_clk        (pll_sys_outclk0_clk),                       \n\t\t.rst           (rst_controller_002_reset_out_reset),        \n\t\t.is_data       (alt_vip_mix_0_dout_data),                   \n\t\t.is_valid      (alt_vip_mix_0_dout_valid),                  \n\t\t.is_ready      (alt_vip_mix_0_dout_ready),                  \n\t\t.is_sop        (alt_vip_mix_0_dout_startofpacket),          \n\t\t.is_eop        (alt_vip_mix_0_dout_endofpacket),            \n\t\t.vid_clk       (alt_vip_itc_0_clocked_video_vid_clk),       \n\t\t.vid_data      (alt_vip_itc_0_clocked_video_vid_data),      \n\t\t.underflow     (alt_vip_itc_0_clocked_video_underflow),     \n\t\t.vid_datavalid (alt_vip_itc_0_clocked_video_vid_datavalid), \n\t\t.vid_v_sync    (alt_vip_itc_0_clocked_video_vid_v_sync),    \n\t\t.vid_h_sync    (alt_vip_itc_0_clocked_video_vid_h_sync),    \n\t\t.vid_f         (alt_vip_itc_0_clocked_video_vid_f),         \n\t\t.vid_h         (alt_vip_itc_0_clocked_video_vid_h),         \n\t\t.vid_v         (alt_vip_itc_0_clocked_video_vid_v)          \n\t);\n\n\tDE1_SoC_QSYS_alt_vip_cpr_1 alt_vip_cpr_1 (\n\t\t.clock               (pll_sys_outclk0_clk),                                 \n\t\t.reset               (rst_controller_002_reset_out_reset),                  \n\t\t.din0_ready          (alt_vip_vfr_0_avalon_streaming_source_ready),         \n\t\t.din0_valid          (alt_vip_vfr_0_avalon_streaming_source_valid),         \n\t\t.din0_data           (alt_vip_vfr_0_avalon_streaming_source_data),          \n\t\t.din0_startofpacket  (alt_vip_vfr_0_avalon_streaming_source_startofpacket), \n\t\t.din0_endofpacket    (alt_vip_vfr_0_avalon_streaming_source_endofpacket),   \n\t\t.dout0_ready         (alt_vip_cpr_1_dout0_ready),                           \n\t\t.dout0_valid         (alt_vip_cpr_1_dout0_valid),                           \n\t\t.dout0_data          (alt_vip_cpr_1_dout0_data),                            \n\t\t.dout0_startofpacket (alt_vip_cpr_1_dout0_startofpacket),                   \n\t\t.dout0_endofpacket   (alt_vip_cpr_1_dout0_endofpacket)                      \n\t);\n\n\tDE1_SoC_QSYS_alt_vip_mix_0 alt_vip_mix_0 (\n\t\t.clock                 (pll_sys_outclk0_clk),                                \n\t\t.reset                 (rst_controller_002_reset_out_reset),                 \n\t\t.din_0_ready           (alt_vip_cpr_1_dout0_ready),                          \n\t\t.din_0_valid           (alt_vip_cpr_1_dout0_valid),                          \n\t\t.din_0_data            (alt_vip_cpr_1_dout0_data),                           \n\t\t.din_0_startofpacket   (alt_vip_cpr_1_dout0_startofpacket),                  \n\t\t.din_0_endofpacket     (alt_vip_cpr_1_dout0_endofpacket),                    \n\t\t.din_1_ready           (alt_vip_cpr_2_dout0_ready),                          \n\t\t.din_1_valid           (alt_vip_cpr_2_dout0_valid),                          \n\t\t.din_1_data            (alt_vip_cpr_2_dout0_data),                           \n\t\t.din_1_startofpacket   (alt_vip_cpr_2_dout0_startofpacket),                  \n\t\t.din_1_endofpacket     (alt_vip_cpr_2_dout0_endofpacket),                    \n\t\t.dout_ready            (alt_vip_mix_0_dout_ready),                           \n\t\t.dout_valid            (alt_vip_mix_0_dout_valid),                           \n\t\t.dout_data             (alt_vip_mix_0_dout_data),                            \n\t\t.dout_startofpacket    (alt_vip_mix_0_dout_startofpacket),                   \n\t\t.dout_endofpacket      (alt_vip_mix_0_dout_endofpacket),                     \n\t\t.control_av_chipselect (mm_interconnect_0_alt_vip_mix_0_control_chipselect), \n\t\t.control_av_write      (mm_interconnect_0_alt_vip_mix_0_control_write),      \n\t\t.control_av_address    (mm_interconnect_0_alt_vip_mix_0_control_address),    \n\t\t.control_av_writedata  (mm_interconnect_0_alt_vip_mix_0_control_writedata),  \n\t\t.control_av_readdata   (mm_interconnect_0_alt_vip_mix_0_control_readdata)    \n\t);\n\n\tDE1_SoC_QSYS_alt_vip_cpr_2 alt_vip_cpr_2 (\n\t\t.clock               (pll_sys_outclk0_clk),                \n\t\t.reset               (rst_controller_002_reset_out_reset), \n\t\t.din0_ready          (alt_vip_vfb_0_dout_ready),           \n\t\t.din0_valid          (alt_vip_vfb_0_dout_valid),           \n\t\t.din0_data           (alt_vip_vfb_0_dout_data),            \n\t\t.din0_startofpacket  (alt_vip_vfb_0_dout_startofpacket),   \n\t\t.din0_endofpacket    (alt_vip_vfb_0_dout_endofpacket),     \n\t\t.dout0_ready         (alt_vip_cpr_2_dout0_ready),          \n\t\t.dout0_valid         (alt_vip_cpr_2_dout0_valid),          \n\t\t.dout0_data          (alt_vip_cpr_2_dout0_data),           \n\t\t.dout0_startofpacket (alt_vip_cpr_2_dout0_startofpacket),  \n\t\t.dout0_endofpacket   (alt_vip_cpr_2_dout0_endofpacket)     \n\t);\n\n\tTERASIC_IR_RX_FIFO ir_rx (\n\t\t.s_read      (mm_interconnect_0_ir_rx_avalon_slave_read),        \n\t\t.s_cs_n      (~mm_interconnect_0_ir_rx_avalon_slave_chipselect), \n\t\t.s_readdata  (mm_interconnect_0_ir_rx_avalon_slave_readdata),    \n\t\t.s_write     (mm_interconnect_0_ir_rx_avalon_slave_write),       \n\t\t.s_writedata (mm_interconnect_0_ir_rx_avalon_slave_writedata),   \n\t\t.s_address   (mm_interconnect_0_ir_rx_avalon_slave_address),     \n\t\t.clk         (clk_50),                                           \n\t\t.reset_n     (~rst_controller_003_reset_out_reset),              \n\t\t.ir          (ir_rx_conduit_end_export),                         \n\t\t.irq         ()                                                  \n\t);\n\n\tDE1_SoC_QSYS_mm_interconnect_0 mm_interconnect_0 (\n\t\t.hps_0_h2f_lw_axi_master_awid                                        (hps_0_h2f_lw_axi_master_awid),                                  \n\t\t.hps_0_h2f_lw_axi_master_awaddr                                      (hps_0_h2f_lw_axi_master_awaddr),                                \n\t\t.hps_0_h2f_lw_axi_master_awlen                                       (hps_0_h2f_lw_axi_master_awlen),                                 \n\t\t.hps_0_h2f_lw_axi_master_awsize                                      (hps_0_h2f_lw_axi_master_awsize),                                \n\t\t.hps_0_h2f_lw_axi_master_awburst                                     (hps_0_h2f_lw_axi_master_awburst),                               \n\t\t.hps_0_h2f_lw_axi_master_awlock                                      (hps_0_h2f_lw_axi_master_awlock),                                \n\t\t.hps_0_h2f_lw_axi_master_awcache                                     (hps_0_h2f_lw_axi_master_awcache),                               \n\t\t.hps_0_h2f_lw_axi_master_awprot                                      (hps_0_h2f_lw_axi_master_awprot),                                \n\t\t.hps_0_h2f_lw_axi_master_awvalid                                     (hps_0_h2f_lw_axi_master_awvalid),                               \n\t\t.hps_0_h2f_lw_axi_master_awready                                     (hps_0_h2f_lw_axi_master_awready),                               \n\t\t.hps_0_h2f_lw_axi_master_wid                                         (hps_0_h2f_lw_axi_master_wid),                                   \n\t\t.hps_0_h2f_lw_axi_master_wdata                                       (hps_0_h2f_lw_axi_master_wdata),                                 \n\t\t.hps_0_h2f_lw_axi_master_wstrb                                       (hps_0_h2f_lw_axi_master_wstrb),                                 \n\t\t.hps_0_h2f_lw_axi_master_wlast                                       (hps_0_h2f_lw_axi_master_wlast),                                 \n\t\t.hps_0_h2f_lw_axi_master_wvalid                                      (hps_0_h2f_lw_axi_master_wvalid),                                \n\t\t.hps_0_h2f_lw_axi_master_wready                                      (hps_0_h2f_lw_axi_master_wready),                                \n\t\t.hps_0_h2f_lw_axi_master_bid                                         (hps_0_h2f_lw_axi_master_bid),                                   \n\t\t.hps_0_h2f_lw_axi_master_bresp                                       (hps_0_h2f_lw_axi_master_bresp),                                 \n\t\t.hps_0_h2f_lw_axi_master_bvalid                                      (hps_0_h2f_lw_axi_master_bvalid),                                \n\t\t.hps_0_h2f_lw_axi_master_bready                                      (hps_0_h2f_lw_axi_master_bready),                                \n\t\t.hps_0_h2f_lw_axi_master_arid                                        (hps_0_h2f_lw_axi_master_arid),                                  \n\t\t.hps_0_h2f_lw_axi_master_araddr                                      (hps_0_h2f_lw_axi_master_araddr),                                \n\t\t.hps_0_h2f_lw_axi_master_arlen                                       (hps_0_h2f_lw_axi_master_arlen),                                 \n\t\t.hps_0_h2f_lw_axi_master_arsize                                      (hps_0_h2f_lw_axi_master_arsize),                                \n\t\t.hps_0_h2f_lw_axi_master_arburst                                     (hps_0_h2f_lw_axi_master_arburst),                               \n\t\t.hps_0_h2f_lw_axi_master_arlock                                      (hps_0_h2f_lw_axi_master_arlock),                                \n\t\t.hps_0_h2f_lw_axi_master_arcache                                     (hps_0_h2f_lw_axi_master_arcache),                               \n\t\t.hps_0_h2f_lw_axi_master_arprot                                      (hps_0_h2f_lw_axi_master_arprot),                                \n\t\t.hps_0_h2f_lw_axi_master_arvalid                                     (hps_0_h2f_lw_axi_master_arvalid),                               \n\t\t.hps_0_h2f_lw_axi_master_arready                                     (hps_0_h2f_lw_axi_master_arready),                               \n\t\t.hps_0_h2f_lw_axi_master_rid                                         (hps_0_h2f_lw_axi_master_rid),                                   \n\t\t.hps_0_h2f_lw_axi_master_rdata                                       (hps_0_h2f_lw_axi_master_rdata),                                 \n\t\t.hps_0_h2f_lw_axi_master_rresp                                       (hps_0_h2f_lw_axi_master_rresp),                                 \n\t\t.hps_0_h2f_lw_axi_master_rlast                                       (hps_0_h2f_lw_axi_master_rlast),                                 \n\t\t.hps_0_h2f_lw_axi_master_rvalid                                      (hps_0_h2f_lw_axi_master_rvalid),                                \n\t\t.hps_0_h2f_lw_axi_master_rready                                      (hps_0_h2f_lw_axi_master_rready),                                \n\t\t.clk_50_clk_clk                                                      (clk_50),                                                        \n\t\t.pll_audio_outclk0_clk                                               (pll_audio_outclk0_clk),                                         \n\t\t.pll_sys_outclk0_clk                                                 (pll_sys_outclk0_clk),                                           \n\t\t.pll_sys_outclk2_clk                                                 (pll_sys_outclk2_clk),                                           \n\t\t.audio_clock_sink_reset_reset_bridge_in_reset_reset                  (rst_controller_005_reset_out_reset),                            \n\t\t.cpu_reset_n_reset_bridge_in_reset_reset                             (rst_controller_002_reset_out_reset),                            \n\t\t.hps_0_h2f_lw_axi_master_agent_clk_reset_reset_bridge_in_reset_reset (rst_controller_006_reset_out_reset),                            \n\t\t.ir_rx_clock_sink_reset_reset_bridge_in_reset_reset                  (rst_controller_003_reset_out_reset),                            \n\t\t.ledr_reset_reset_bridge_in_reset_reset                              (rst_controller_reset_out_reset),                                \n\t\t.onchip_memory2_reset1_reset_bridge_in_reset_reset                   (rst_controller_001_reset_out_reset),                            \n\t\t.cpu_data_master_address                                             (cpu_data_master_address),                                       \n\t\t.cpu_data_master_waitrequest                                         (cpu_data_master_waitrequest),                                   \n\t\t.cpu_data_master_byteenable                                          (cpu_data_master_byteenable),                                    \n\t\t.cpu_data_master_read                                                (cpu_data_master_read),                                          \n\t\t.cpu_data_master_readdata                                            (cpu_data_master_readdata),                                      \n\t\t.cpu_data_master_readdatavalid                                       (cpu_data_master_readdatavalid),                                 \n\t\t.cpu_data_master_write                                               (cpu_data_master_write),                                         \n\t\t.cpu_data_master_writedata                                           (cpu_data_master_writedata),                                     \n\t\t.cpu_data_master_debugaccess                                         (cpu_data_master_debugaccess),                                   \n\t\t.cpu_instruction_master_address                                      (cpu_instruction_master_address),                                \n\t\t.cpu_instruction_master_waitrequest                                  (cpu_instruction_master_waitrequest),                            \n\t\t.cpu_instruction_master_read                                         (cpu_instruction_master_read),                                   \n\t\t.cpu_instruction_master_readdata                                     (cpu_instruction_master_readdata),                               \n\t\t.cpu_instruction_master_readdatavalid                                (cpu_instruction_master_readdatavalid),                          \n\t\t.alt_vip_cti_0_control_address                                       (mm_interconnect_0_alt_vip_cti_0_control_address),               \n\t\t.alt_vip_cti_0_control_write                                         (mm_interconnect_0_alt_vip_cti_0_control_write),                 \n\t\t.alt_vip_cti_0_control_read                                          (mm_interconnect_0_alt_vip_cti_0_control_read),                  \n\t\t.alt_vip_cti_0_control_readdata                                      (mm_interconnect_0_alt_vip_cti_0_control_readdata),              \n\t\t.alt_vip_cti_0_control_writedata                                     (mm_interconnect_0_alt_vip_cti_0_control_writedata),             \n\t\t.alt_vip_mix_0_control_address                                       (mm_interconnect_0_alt_vip_mix_0_control_address),               \n\t\t.alt_vip_mix_0_control_write                                         (mm_interconnect_0_alt_vip_mix_0_control_write),                 \n\t\t.alt_vip_mix_0_control_readdata                                      (mm_interconnect_0_alt_vip_mix_0_control_readdata),              \n\t\t.alt_vip_mix_0_control_writedata                                     (mm_interconnect_0_alt_vip_mix_0_control_writedata),             \n\t\t.alt_vip_mix_0_control_chipselect                                    (mm_interconnect_0_alt_vip_mix_0_control_chipselect),            \n\t\t.alt_vip_vfr_0_avalon_slave_address                                  (mm_interconnect_0_alt_vip_vfr_0_avalon_slave_address),          \n\t\t.alt_vip_vfr_0_avalon_slave_write                                    (mm_interconnect_0_alt_vip_vfr_0_avalon_slave_write),            \n\t\t.alt_vip_vfr_0_avalon_slave_read                                     (mm_interconnect_0_alt_vip_vfr_0_avalon_slave_read),             \n\t\t.alt_vip_vfr_0_avalon_slave_readdata                                 (mm_interconnect_0_alt_vip_vfr_0_avalon_slave_readdata),         \n\t\t.alt_vip_vfr_0_avalon_slave_writedata                                (mm_interconnect_0_alt_vip_vfr_0_avalon_slave_writedata),        \n\t\t.audio_avalon_slave_address                                          (mm_interconnect_0_audio_avalon_slave_address),                  \n\t\t.audio_avalon_slave_write                                            (mm_interconnect_0_audio_avalon_slave_write),                    \n\t\t.audio_avalon_slave_read                                             (mm_interconnect_0_audio_avalon_slave_read),                     \n\t\t.audio_avalon_slave_readdata                                         (mm_interconnect_0_audio_avalon_slave_readdata),                 \n\t\t.audio_avalon_slave_writedata                                        (mm_interconnect_0_audio_avalon_slave_writedata),                \n\t\t.clock_crossing_io_slow_s0_address                                   (mm_interconnect_0_clock_crossing_io_slow_s0_address),           \n\t\t.clock_crossing_io_slow_s0_write                                     (mm_interconnect_0_clock_crossing_io_slow_s0_write),             \n\t\t.clock_crossing_io_slow_s0_read                                      (mm_interconnect_0_clock_crossing_io_slow_s0_read),              \n\t\t.clock_crossing_io_slow_s0_readdata                                  (mm_interconnect_0_clock_crossing_io_slow_s0_readdata),          \n\t\t.clock_crossing_io_slow_s0_writedata                                 (mm_interconnect_0_clock_crossing_io_slow_s0_writedata),         \n\t\t.clock_crossing_io_slow_s0_burstcount                                (mm_interconnect_0_clock_crossing_io_slow_s0_burstcount),        \n\t\t.clock_crossing_io_slow_s0_byteenable                                (mm_interconnect_0_clock_crossing_io_slow_s0_byteenable),        \n\t\t.clock_crossing_io_slow_s0_readdatavalid                             (mm_interconnect_0_clock_crossing_io_slow_s0_readdatavalid),     \n\t\t.clock_crossing_io_slow_s0_waitrequest                               (mm_interconnect_0_clock_crossing_io_slow_s0_waitrequest),       \n\t\t.clock_crossing_io_slow_s0_debugaccess                               (mm_interconnect_0_clock_crossing_io_slow_s0_debugaccess),       \n\t\t.cpu_jtag_debug_module_address                                       (mm_interconnect_0_cpu_jtag_debug_module_address),               \n\t\t.cpu_jtag_debug_module_write                                         (mm_interconnect_0_cpu_jtag_debug_module_write),                 \n\t\t.cpu_jtag_debug_module_read                                          (mm_interconnect_0_cpu_jtag_debug_module_read),                  \n\t\t.cpu_jtag_debug_module_readdata                                      (mm_interconnect_0_cpu_jtag_debug_module_readdata),              \n\t\t.cpu_jtag_debug_module_writedata                                     (mm_interconnect_0_cpu_jtag_debug_module_writedata),             \n\t\t.cpu_jtag_debug_module_byteenable                                    (mm_interconnect_0_cpu_jtag_debug_module_byteenable),            \n\t\t.cpu_jtag_debug_module_waitrequest                                   (mm_interconnect_0_cpu_jtag_debug_module_waitrequest),           \n\t\t.cpu_jtag_debug_module_debugaccess                                   (mm_interconnect_0_cpu_jtag_debug_module_debugaccess),           \n\t\t.ir_rx_avalon_slave_address                                          (mm_interconnect_0_ir_rx_avalon_slave_address),                  \n\t\t.ir_rx_avalon_slave_write                                            (mm_interconnect_0_ir_rx_avalon_slave_write),                    \n\t\t.ir_rx_avalon_slave_read                                             (mm_interconnect_0_ir_rx_avalon_slave_read),                     \n\t\t.ir_rx_avalon_slave_readdata                                         (mm_interconnect_0_ir_rx_avalon_slave_readdata),                 \n\t\t.ir_rx_avalon_slave_writedata                                        (mm_interconnect_0_ir_rx_avalon_slave_writedata),                \n\t\t.ir_rx_avalon_slave_chipselect                                       (mm_interconnect_0_ir_rx_avalon_slave_chipselect),               \n\t\t.jtag_uart_avalon_jtag_slave_address                                 (mm_interconnect_0_jtag_uart_avalon_jtag_slave_address),         \n\t\t.jtag_uart_avalon_jtag_slave_write                                   (mm_interconnect_0_jtag_uart_avalon_jtag_slave_write),           \n\t\t.jtag_uart_avalon_jtag_slave_read                                    (mm_interconnect_0_jtag_uart_avalon_jtag_slave_read),            \n\t\t.jtag_uart_avalon_jtag_slave_readdata                                (mm_interconnect_0_jtag_uart_avalon_jtag_slave_readdata),        \n\t\t.jtag_uart_avalon_jtag_slave_writedata                               (mm_interconnect_0_jtag_uart_avalon_jtag_slave_writedata),       \n\t\t.jtag_uart_avalon_jtag_slave_waitrequest                             (mm_interconnect_0_jtag_uart_avalon_jtag_slave_waitrequest),     \n\t\t.jtag_uart_avalon_jtag_slave_chipselect                              (mm_interconnect_0_jtag_uart_avalon_jtag_slave_chipselect),      \n\t\t.key_s1_address                                                      (mm_interconnect_0_key_s1_address),                              \n\t\t.key_s1_write                                                        (mm_interconnect_0_key_s1_write),                                \n\t\t.key_s1_readdata                                                     (mm_interconnect_0_key_s1_readdata),                             \n\t\t.key_s1_writedata                                                    (mm_interconnect_0_key_s1_writedata),                            \n\t\t.key_s1_chipselect                                                   (mm_interconnect_0_key_s1_chipselect),                           \n\t\t.ledr_s1_address                                                     (mm_interconnect_0_ledr_s1_address),                             \n\t\t.ledr_s1_write                                                       (mm_interconnect_0_ledr_s1_write),                               \n\t\t.ledr_s1_readdata                                                    (mm_interconnect_0_ledr_s1_readdata),                            \n\t\t.ledr_s1_writedata                                                   (mm_interconnect_0_ledr_s1_writedata),                           \n\t\t.ledr_s1_chipselect                                                  (mm_interconnect_0_ledr_s1_chipselect),                          \n\t\t.mm_clock_crossing_bridge_1_s0_address                               (mm_interconnect_0_mm_clock_crossing_bridge_1_s0_address),       \n\t\t.mm_clock_crossing_bridge_1_s0_write                                 (mm_interconnect_0_mm_clock_crossing_bridge_1_s0_write),         \n\t\t.mm_clock_crossing_bridge_1_s0_read                                  (mm_interconnect_0_mm_clock_crossing_bridge_1_s0_read),          \n\t\t.mm_clock_crossing_bridge_1_s0_readdata                              (mm_interconnect_0_mm_clock_crossing_bridge_1_s0_readdata),      \n\t\t.mm_clock_crossing_bridge_1_s0_writedata                             (mm_interconnect_0_mm_clock_crossing_bridge_1_s0_writedata),     \n\t\t.mm_clock_crossing_bridge_1_s0_burstcount                            (mm_interconnect_0_mm_clock_crossing_bridge_1_s0_burstcount),    \n\t\t.mm_clock_crossing_bridge_1_s0_byteenable                            (mm_interconnect_0_mm_clock_crossing_bridge_1_s0_byteenable),    \n\t\t.mm_clock_crossing_bridge_1_s0_readdatavalid                         (mm_interconnect_0_mm_clock_crossing_bridge_1_s0_readdatavalid), \n\t\t.mm_clock_crossing_bridge_1_s0_waitrequest                           (mm_interconnect_0_mm_clock_crossing_bridge_1_s0_waitrequest),   \n\t\t.mm_clock_crossing_bridge_1_s0_debugaccess                           (mm_interconnect_0_mm_clock_crossing_bridge_1_s0_debugaccess),   \n\t\t.onchip_memory2_s1_address                                           (mm_interconnect_0_onchip_memory2_s1_address),                   \n\t\t.onchip_memory2_s1_write                                             (mm_interconnect_0_onchip_memory2_s1_write),                     \n\t\t.onchip_memory2_s1_readdata                                          (mm_interconnect_0_onchip_memory2_s1_readdata),                  \n\t\t.onchip_memory2_s1_writedata                                         (mm_interconnect_0_onchip_memory2_s1_writedata),                 \n\t\t.onchip_memory2_s1_byteenable                                        (mm_interconnect_0_onchip_memory2_s1_byteenable),                \n\t\t.onchip_memory2_s1_chipselect                                        (mm_interconnect_0_onchip_memory2_s1_chipselect),                \n\t\t.onchip_memory2_s1_clken                                             (mm_interconnect_0_onchip_memory2_s1_clken),                     \n\t\t.seg7_avalon_slave_address                                           (mm_interconnect_0_seg7_avalon_slave_address),                   \n\t\t.seg7_avalon_slave_write                                             (mm_interconnect_0_seg7_avalon_slave_write),                     \n\t\t.seg7_avalon_slave_read                                              (mm_interconnect_0_seg7_avalon_slave_read),                      \n\t\t.seg7_avalon_slave_readdata                                          (mm_interconnect_0_seg7_avalon_slave_readdata),                  \n\t\t.seg7_avalon_slave_writedata                                         (mm_interconnect_0_seg7_avalon_slave_writedata),                 \n\t\t.sw_s1_address                                                       (mm_interconnect_0_sw_s1_address),                               \n\t\t.sw_s1_write                                                         (mm_interconnect_0_sw_s1_write),                                 \n\t\t.sw_s1_readdata                                                      (mm_interconnect_0_sw_s1_readdata),                              \n\t\t.sw_s1_writedata                                                     (mm_interconnect_0_sw_s1_writedata),                             \n\t\t.sw_s1_chipselect                                                    (mm_interconnect_0_sw_s1_chipselect),                            \n\t\t.timer_stamp_s1_address                                              (mm_interconnect_0_timer_stamp_s1_address),                      \n\t\t.timer_stamp_s1_write                                                (mm_interconnect_0_timer_stamp_s1_write),                        \n\t\t.timer_stamp_s1_readdata                                             (mm_interconnect_0_timer_stamp_s1_readdata),                     \n\t\t.timer_stamp_s1_writedata                                            (mm_interconnect_0_timer_stamp_s1_writedata),                    \n\t\t.timer_stamp_s1_chipselect                                           (mm_interconnect_0_timer_stamp_s1_chipselect),                   \n\t\t.uart_s1_address                                                     (mm_interconnect_0_uart_s1_address),                             \n\t\t.uart_s1_write                                                       (mm_interconnect_0_uart_s1_write),                               \n\t\t.uart_s1_read                                                        (mm_interconnect_0_uart_s1_read),                                \n\t\t.uart_s1_readdata                                                    (mm_interconnect_0_uart_s1_readdata),                            \n\t\t.uart_s1_writedata                                                   (mm_interconnect_0_uart_s1_writedata),                           \n\t\t.uart_s1_begintransfer                                               (mm_interconnect_0_uart_s1_begintransfer),                       \n\t\t.uart_s1_chipselect                                                  (mm_interconnect_0_uart_s1_chipselect)                           \n\t);\n\n\tDE1_SoC_QSYS_mm_interconnect_1 mm_interconnect_1 (\n\t\t.pll_sys_outclk0_clk                             (pll_sys_outclk0_clk),                      \n\t\t.alt_vip_vfb_0_reset_reset_bridge_in_reset_reset (rst_controller_002_reset_out_reset),       \n\t\t.alt_vip_vfb_0_read_master_address               (alt_vip_vfb_0_read_master_address),        \n\t\t.alt_vip_vfb_0_read_master_waitrequest           (alt_vip_vfb_0_read_master_waitrequest),    \n\t\t.alt_vip_vfb_0_read_master_burstcount            (alt_vip_vfb_0_read_master_burstcount),     \n\t\t.alt_vip_vfb_0_read_master_read                  (alt_vip_vfb_0_read_master_read),           \n\t\t.alt_vip_vfb_0_read_master_readdata              (alt_vip_vfb_0_read_master_readdata),       \n\t\t.alt_vip_vfb_0_read_master_readdatavalid         (alt_vip_vfb_0_read_master_readdatavalid),  \n\t\t.alt_vip_vfb_0_write_master_address              (alt_vip_vfb_0_write_master_address),       \n\t\t.alt_vip_vfb_0_write_master_waitrequest          (alt_vip_vfb_0_write_master_waitrequest),   \n\t\t.alt_vip_vfb_0_write_master_burstcount           (alt_vip_vfb_0_write_master_burstcount),    \n\t\t.alt_vip_vfb_0_write_master_write                (alt_vip_vfb_0_write_master_write),         \n\t\t.alt_vip_vfb_0_write_master_writedata            (alt_vip_vfb_0_write_master_writedata),     \n\t\t.sdram_s1_address                                (mm_interconnect_1_sdram_s1_address),       \n\t\t.sdram_s1_write                                  (mm_interconnect_1_sdram_s1_write),         \n\t\t.sdram_s1_read                                   (mm_interconnect_1_sdram_s1_read),          \n\t\t.sdram_s1_readdata                               (mm_interconnect_1_sdram_s1_readdata),      \n\t\t.sdram_s1_writedata                              (mm_interconnect_1_sdram_s1_writedata),     \n\t\t.sdram_s1_byteenable                             (mm_interconnect_1_sdram_s1_byteenable),    \n\t\t.sdram_s1_readdatavalid                          (mm_interconnect_1_sdram_s1_readdatavalid), \n\t\t.sdram_s1_waitrequest                            (mm_interconnect_1_sdram_s1_waitrequest),   \n\t\t.sdram_s1_chipselect                             (mm_interconnect_1_sdram_s1_chipselect)     \n\t);\n\n\tDE1_SoC_QSYS_mm_interconnect_2 mm_interconnect_2 (\n\t\t.pll_sys_outclk2_clk                                         (pll_sys_outclk2_clk),                            \n\t\t.clock_crossing_io_slow_m0_reset_reset_bridge_in_reset_reset (rst_controller_reset_out_reset),                 \n\t\t.clock_crossing_io_slow_m0_address                           (clock_crossing_io_slow_m0_address),              \n\t\t.clock_crossing_io_slow_m0_waitrequest                       (clock_crossing_io_slow_m0_waitrequest),          \n\t\t.clock_crossing_io_slow_m0_burstcount                        (clock_crossing_io_slow_m0_burstcount),           \n\t\t.clock_crossing_io_slow_m0_byteenable                        (clock_crossing_io_slow_m0_byteenable),           \n\t\t.clock_crossing_io_slow_m0_read                              (clock_crossing_io_slow_m0_read),                 \n\t\t.clock_crossing_io_slow_m0_readdata                          (clock_crossing_io_slow_m0_readdata),             \n\t\t.clock_crossing_io_slow_m0_readdatavalid                     (clock_crossing_io_slow_m0_readdatavalid),        \n\t\t.clock_crossing_io_slow_m0_write                             (clock_crossing_io_slow_m0_write),                \n\t\t.clock_crossing_io_slow_m0_writedata                         (clock_crossing_io_slow_m0_writedata),            \n\t\t.clock_crossing_io_slow_m0_debugaccess                       (clock_crossing_io_slow_m0_debugaccess),          \n\t\t.i2c_scl_s1_address                                          (mm_interconnect_2_i2c_scl_s1_address),           \n\t\t.i2c_scl_s1_write                                            (mm_interconnect_2_i2c_scl_s1_write),             \n\t\t.i2c_scl_s1_readdata                                         (mm_interconnect_2_i2c_scl_s1_readdata),          \n\t\t.i2c_scl_s1_writedata                                        (mm_interconnect_2_i2c_scl_s1_writedata),         \n\t\t.i2c_scl_s1_chipselect                                       (mm_interconnect_2_i2c_scl_s1_chipselect),        \n\t\t.i2c_sda_s1_address                                          (mm_interconnect_2_i2c_sda_s1_address),           \n\t\t.i2c_sda_s1_write                                            (mm_interconnect_2_i2c_sda_s1_write),             \n\t\t.i2c_sda_s1_readdata                                         (mm_interconnect_2_i2c_sda_s1_readdata),          \n\t\t.i2c_sda_s1_writedata                                        (mm_interconnect_2_i2c_sda_s1_writedata),         \n\t\t.i2c_sda_s1_chipselect                                       (mm_interconnect_2_i2c_sda_s1_chipselect),        \n\t\t.sysid_control_slave_address                                 (mm_interconnect_2_sysid_control_slave_address),  \n\t\t.sysid_control_slave_readdata                                (mm_interconnect_2_sysid_control_slave_readdata), \n\t\t.td_reset_n_s1_address                                       (mm_interconnect_2_td_reset_n_s1_address),        \n\t\t.td_reset_n_s1_write                                         (mm_interconnect_2_td_reset_n_s1_write),          \n\t\t.td_reset_n_s1_readdata                                      (mm_interconnect_2_td_reset_n_s1_readdata),       \n\t\t.td_reset_n_s1_writedata                                     (mm_interconnect_2_td_reset_n_s1_writedata),      \n\t\t.td_reset_n_s1_chipselect                                    (mm_interconnect_2_td_reset_n_s1_chipselect),     \n\t\t.td_status_s1_address                                        (mm_interconnect_2_td_status_s1_address),         \n\t\t.td_status_s1_readdata                                       (mm_interconnect_2_td_status_s1_readdata),        \n\t\t.timer_s1_address                                            (mm_interconnect_2_timer_s1_address),             \n\t\t.timer_s1_write                                              (mm_interconnect_2_timer_s1_write),               \n\t\t.timer_s1_readdata                                           (mm_interconnect_2_timer_s1_readdata),            \n\t\t.timer_s1_writedata                                          (mm_interconnect_2_timer_s1_writedata),           \n\t\t.timer_s1_chipselect                                         (mm_interconnect_2_timer_s1_chipselect)           \n\t);\n\n\tDE1_SoC_QSYS_mm_interconnect_3 mm_interconnect_3 (\n\t\t.pll_sys_outclk4_clk                                             (pll_sys_outclk4_clk),                                 \n\t\t.mm_clock_crossing_bridge_1_m0_reset_reset_bridge_in_reset_reset (rst_controller_004_reset_out_reset),                  \n\t\t.mm_clock_crossing_bridge_1_m0_address                           (mm_clock_crossing_bridge_1_m0_address),               \n\t\t.mm_clock_crossing_bridge_1_m0_waitrequest                       (mm_clock_crossing_bridge_1_m0_waitrequest),           \n\t\t.mm_clock_crossing_bridge_1_m0_burstcount                        (mm_clock_crossing_bridge_1_m0_burstcount),            \n\t\t.mm_clock_crossing_bridge_1_m0_byteenable                        (mm_clock_crossing_bridge_1_m0_byteenable),            \n\t\t.mm_clock_crossing_bridge_1_m0_read                              (mm_clock_crossing_bridge_1_m0_read),                  \n\t\t.mm_clock_crossing_bridge_1_m0_readdata                          (mm_clock_crossing_bridge_1_m0_readdata),              \n\t\t.mm_clock_crossing_bridge_1_m0_readdatavalid                     (mm_clock_crossing_bridge_1_m0_readdatavalid),         \n\t\t.mm_clock_crossing_bridge_1_m0_write                             (mm_clock_crossing_bridge_1_m0_write),                 \n\t\t.mm_clock_crossing_bridge_1_m0_writedata                         (mm_clock_crossing_bridge_1_m0_writedata),             \n\t\t.mm_clock_crossing_bridge_1_m0_debugaccess                       (mm_clock_crossing_bridge_1_m0_debugaccess),           \n\t\t.spi_0_spi_control_port_address                                  (mm_interconnect_3_spi_0_spi_control_port_address),    \n\t\t.spi_0_spi_control_port_write                                    (mm_interconnect_3_spi_0_spi_control_port_write),      \n\t\t.spi_0_spi_control_port_read                                     (mm_interconnect_3_spi_0_spi_control_port_read),       \n\t\t.spi_0_spi_control_port_readdata                                 (mm_interconnect_3_spi_0_spi_control_port_readdata),   \n\t\t.spi_0_spi_control_port_writedata                                (mm_interconnect_3_spi_0_spi_control_port_writedata),  \n\t\t.spi_0_spi_control_port_chipselect                               (mm_interconnect_3_spi_0_spi_control_port_chipselect)  \n\t);\n\n\tDE1_SoC_QSYS_mm_interconnect_4 mm_interconnect_4 (\n\t\t.hps_0_f2h_axi_slave_awid                                         (mm_interconnect_4_hps_0_f2h_axi_slave_awid),    \n\t\t.hps_0_f2h_axi_slave_awaddr                                       (mm_interconnect_4_hps_0_f2h_axi_slave_awaddr),  \n\t\t.hps_0_f2h_axi_slave_awlen                                        (mm_interconnect_4_hps_0_f2h_axi_slave_awlen),   \n\t\t.hps_0_f2h_axi_slave_awsize                                       (mm_interconnect_4_hps_0_f2h_axi_slave_awsize),  \n\t\t.hps_0_f2h_axi_slave_awburst                                      (mm_interconnect_4_hps_0_f2h_axi_slave_awburst), \n\t\t.hps_0_f2h_axi_slave_awlock                                       (mm_interconnect_4_hps_0_f2h_axi_slave_awlock),  \n\t\t.hps_0_f2h_axi_slave_awcache                                      (mm_interconnect_4_hps_0_f2h_axi_slave_awcache), \n\t\t.hps_0_f2h_axi_slave_awprot                                       (mm_interconnect_4_hps_0_f2h_axi_slave_awprot),  \n\t\t.hps_0_f2h_axi_slave_awuser                                       (mm_interconnect_4_hps_0_f2h_axi_slave_awuser),  \n\t\t.hps_0_f2h_axi_slave_awvalid                                      (mm_interconnect_4_hps_0_f2h_axi_slave_awvalid), \n\t\t.hps_0_f2h_axi_slave_awready                                      (mm_interconnect_4_hps_0_f2h_axi_slave_awready), \n\t\t.hps_0_f2h_axi_slave_wid                                          (mm_interconnect_4_hps_0_f2h_axi_slave_wid),     \n\t\t.hps_0_f2h_axi_slave_wdata                                        (mm_interconnect_4_hps_0_f2h_axi_slave_wdata),   \n\t\t.hps_0_f2h_axi_slave_wstrb                                        (mm_interconnect_4_hps_0_f2h_axi_slave_wstrb),   \n\t\t.hps_0_f2h_axi_slave_wlast                                        (mm_interconnect_4_hps_0_f2h_axi_slave_wlast),   \n\t\t.hps_0_f2h_axi_slave_wvalid                                       (mm_interconnect_4_hps_0_f2h_axi_slave_wvalid),  \n\t\t.hps_0_f2h_axi_slave_wready                                       (mm_interconnect_4_hps_0_f2h_axi_slave_wready),  \n\t\t.hps_0_f2h_axi_slave_bid                                          (mm_interconnect_4_hps_0_f2h_axi_slave_bid),     \n\t\t.hps_0_f2h_axi_slave_bresp                                        (mm_interconnect_4_hps_0_f2h_axi_slave_bresp),   \n\t\t.hps_0_f2h_axi_slave_bvalid                                       (mm_interconnect_4_hps_0_f2h_axi_slave_bvalid),  \n\t\t.hps_0_f2h_axi_slave_bready                                       (mm_interconnect_4_hps_0_f2h_axi_slave_bready),  \n\t\t.hps_0_f2h_axi_slave_arid                                         (mm_interconnect_4_hps_0_f2h_axi_slave_arid),    \n\t\t.hps_0_f2h_axi_slave_araddr                                       (mm_interconnect_4_hps_0_f2h_axi_slave_araddr),  \n\t\t.hps_0_f2h_axi_slave_arlen                                        (mm_interconnect_4_hps_0_f2h_axi_slave_arlen),   \n\t\t.hps_0_f2h_axi_slave_arsize                                       (mm_interconnect_4_hps_0_f2h_axi_slave_arsize),  \n\t\t.hps_0_f2h_axi_slave_arburst                                      (mm_interconnect_4_hps_0_f2h_axi_slave_arburst), \n\t\t.hps_0_f2h_axi_slave_arlock                                       (mm_interconnect_4_hps_0_f2h_axi_slave_arlock),  \n\t\t.hps_0_f2h_axi_slave_arcache                                      (mm_interconnect_4_hps_0_f2h_axi_slave_arcache), \n\t\t.hps_0_f2h_axi_slave_arprot                                       (mm_interconnect_4_hps_0_f2h_axi_slave_arprot),  \n\t\t.hps_0_f2h_axi_slave_aruser                                       (mm_interconnect_4_hps_0_f2h_axi_slave_aruser),  \n\t\t.hps_0_f2h_axi_slave_arvalid                                      (mm_interconnect_4_hps_0_f2h_axi_slave_arvalid), \n\t\t.hps_0_f2h_axi_slave_arready                                      (mm_interconnect_4_hps_0_f2h_axi_slave_arready), \n\t\t.hps_0_f2h_axi_slave_rid                                          (mm_interconnect_4_hps_0_f2h_axi_slave_rid),     \n\t\t.hps_0_f2h_axi_slave_rdata                                        (mm_interconnect_4_hps_0_f2h_axi_slave_rdata),   \n\t\t.hps_0_f2h_axi_slave_rresp                                        (mm_interconnect_4_hps_0_f2h_axi_slave_rresp),   \n\t\t.hps_0_f2h_axi_slave_rlast                                        (mm_interconnect_4_hps_0_f2h_axi_slave_rlast),   \n\t\t.hps_0_f2h_axi_slave_rvalid                                       (mm_interconnect_4_hps_0_f2h_axi_slave_rvalid),  \n\t\t.hps_0_f2h_axi_slave_rready                                       (mm_interconnect_4_hps_0_f2h_axi_slave_rready),  \n\t\t.clk_50_clk_clk                                                   (clk_50),                                        \n\t\t.pll_sys_outclk0_clk                                              (pll_sys_outclk0_clk),                           \n\t\t.alt_vip_vfr_0_clock_master_reset_reset_bridge_in_reset_reset     (rst_controller_002_reset_out_reset),            \n\t\t.hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset (rst_controller_006_reset_out_reset),            \n\t\t.alt_vip_vfr_0_avalon_master_address                              (alt_vip_vfr_0_avalon_master_address),           \n\t\t.alt_vip_vfr_0_avalon_master_waitrequest                          (alt_vip_vfr_0_avalon_master_waitrequest),       \n\t\t.alt_vip_vfr_0_avalon_master_burstcount                           (alt_vip_vfr_0_avalon_master_burstcount),        \n\t\t.alt_vip_vfr_0_avalon_master_read                                 (alt_vip_vfr_0_avalon_master_read),              \n\t\t.alt_vip_vfr_0_avalon_master_readdata                             (alt_vip_vfr_0_avalon_master_readdata),          \n\t\t.alt_vip_vfr_0_avalon_master_readdatavalid                        (alt_vip_vfr_0_avalon_master_readdatavalid)      \n\t);\n\n\tDE1_SoC_QSYS_irq_mapper irq_mapper (\n\t\t.clk           (pll_sys_outclk0_clk),                \n\t\t.reset         (rst_controller_002_reset_out_reset), \n\t\t.receiver0_irq (irq_mapper_receiver0_irq),           \n\t\t.receiver1_irq (irq_mapper_receiver1_irq),           \n\t\t.receiver2_irq (irq_mapper_receiver2_irq),           \n\t\t.receiver3_irq (irq_mapper_receiver3_irq),           \n\t\t.receiver4_irq (irq_mapper_receiver4_irq),           \n\t\t.sender_irq    (cpu_d_irq_irq)                       \n\t);\n\n\tDE1_SoC_QSYS_irq_mapper_001 irq_mapper_001 (\n\t\t.clk        (),                   \n\t\t.reset      (),                   \n\t\t.sender_irq (hps_0_f2h_irq0_irq)  \n\t);\n\n\tDE1_SoC_QSYS_irq_mapper_001 irq_mapper_002 (\n\t\t.clk        (),                   \n\t\t.reset      (),                   \n\t\t.sender_irq (hps_0_f2h_irq1_irq)  \n\t);\n\n\taltera_irq_clock_crosser #(\n\t\t.IRQ_WIDTH (1)\n\t) irq_synchronizer (\n\t\t.receiver_clk   (pll_sys_outclk2_clk),                \n\t\t.sender_clk     (pll_sys_outclk0_clk),                \n\t\t.receiver_reset (rst_controller_reset_out_reset),     \n\t\t.sender_reset   (rst_controller_002_reset_out_reset), \n\t\t.receiver_irq   (irq_synchronizer_receiver_irq),      \n\t\t.sender_irq     (irq_mapper_receiver0_irq)            \n\t);\n\n\taltera_irq_clock_crosser #(\n\t\t.IRQ_WIDTH (1)\n\t) irq_synchronizer_001 (\n\t\t.receiver_clk   (pll_sys_outclk4_clk),                \n\t\t.sender_clk     (pll_sys_outclk0_clk),                \n\t\t.receiver_reset (rst_controller_004_reset_out_reset), \n\t\t.sender_reset   (rst_controller_002_reset_out_reset), \n\t\t.receiver_irq   (irq_synchronizer_001_receiver_irq),  \n\t\t.sender_irq     (irq_mapper_receiver3_irq)            \n\t);\n\n\taltera_reset_controller #(\n\t\t.NUM_RESET_INPUTS          (1),\n\t\t.OUTPUT_RESET_SYNC_EDGES   (\"deassert\"),\n\t\t.SYNC_DEPTH                (2),\n\t\t.RESET_REQUEST_PRESENT     (0),\n\t\t.RESET_REQ_WAIT_TIME       (1),\n\t\t.MIN_RST_ASSERTION_TIME    (3),\n\t\t.RESET_REQ_EARLY_DSRT_TIME (1),\n\t\t.USE_RESET_REQUEST_IN0     (0),\n\t\t.USE_RESET_REQUEST_IN1     (0),\n\t\t.USE_RESET_REQUEST_IN2     (0),\n\t\t.USE_RESET_REQUEST_IN3     (0),\n\t\t.USE_RESET_REQUEST_IN4     (0),\n\t\t.USE_RESET_REQUEST_IN5     (0),\n\t\t.USE_RESET_REQUEST_IN6     (0),\n\t\t.USE_RESET_REQUEST_IN7     (0),\n\t\t.USE_RESET_REQUEST_IN8     (0),\n\t\t.USE_RESET_REQUEST_IN9     (0),\n\t\t.USE_RESET_REQUEST_IN10    (0),\n\t\t.USE_RESET_REQUEST_IN11    (0),\n\t\t.USE_RESET_REQUEST_IN12    (0),\n\t\t.USE_RESET_REQUEST_IN13    (0),\n\t\t.USE_RESET_REQUEST_IN14    (0),\n\t\t.USE_RESET_REQUEST_IN15    (0),\n\t\t.ADAPT_RESET_REQUEST       (0)\n\t) rst_controller (\n\t\t.reset_in0      (~reset_n),                       \n\t\t.clk            (pll_sys_outclk2_clk),            \n\t\t.reset_out      (rst_controller_reset_out_reset), \n\t\t.reset_req      (),                               \n\t\t.reset_req_in0  (1'b0),                           \n\t\t.reset_in1      (1'b0),                           \n\t\t.reset_req_in1  (1'b0),                           \n\t\t.reset_in2      (1'b0),                           \n\t\t.reset_req_in2  (1'b0),                           \n\t\t.reset_in3      (1'b0),                           \n\t\t.reset_req_in3  (1'b0),                           \n\t\t.reset_in4      (1'b0),                           \n\t\t.reset_req_in4  (1'b0),                           \n\t\t.reset_in5      (1'b0),                           \n\t\t.reset_req_in5  (1'b0),                           \n\t\t.reset_in6      (1'b0),                           \n\t\t.reset_req_in6  (1'b0),                           \n\t\t.reset_in7      (1'b0),                           \n\t\t.reset_req_in7  (1'b0),                           \n\t\t.reset_in8      (1'b0),                           \n\t\t.reset_req_in8  (1'b0),                           \n\t\t.reset_in9      (1'b0),                           \n\t\t.reset_req_in9  (1'b0),                           \n\t\t.reset_in10     (1'b0),                           \n\t\t.reset_req_in10 (1'b0),                           \n\t\t.reset_in11     (1'b0),                           \n\t\t.reset_req_in11 (1'b0),                           \n\t\t.reset_in12     (1'b0),                           \n\t\t.reset_req_in12 (1'b0),                           \n\t\t.reset_in13     (1'b0),                           \n\t\t.reset_req_in13 (1'b0),                           \n\t\t.reset_in14     (1'b0),                           \n\t\t.reset_req_in14 (1'b0),                           \n\t\t.reset_in15     (1'b0),                           \n\t\t.reset_req_in15 (1'b0)                            \n\t);\n\n\taltera_reset_controller #(\n\t\t.NUM_RESET_INPUTS          (2),\n\t\t.OUTPUT_RESET_SYNC_EDGES   (\"deassert\"),\n\t\t.SYNC_DEPTH                (2),\n\t\t.RESET_REQUEST_PRESENT     (1),\n\t\t.RESET_REQ_WAIT_TIME       (1),\n\t\t.MIN_RST_ASSERTION_TIME    (3),\n\t\t.RESET_REQ_EARLY_DSRT_TIME (1),\n\t\t.USE_RESET_REQUEST_IN0     (0),\n\t\t.USE_RESET_REQUEST_IN1     (0),\n\t\t.USE_RESET_REQUEST_IN2     (0),\n\t\t.USE_RESET_REQUEST_IN3     (0),\n\t\t.USE_RESET_REQUEST_IN4     (0),\n\t\t.USE_RESET_REQUEST_IN5     (0),\n\t\t.USE_RESET_REQUEST_IN6     (0),\n\t\t.USE_RESET_REQUEST_IN7     (0),\n\t\t.USE_RESET_REQUEST_IN8     (0),\n\t\t.USE_RESET_REQUEST_IN9     (0),\n\t\t.USE_RESET_REQUEST_IN10    (0),\n\t\t.USE_RESET_REQUEST_IN11    (0),\n\t\t.USE_RESET_REQUEST_IN12    (0),\n\t\t.USE_RESET_REQUEST_IN13    (0),\n\t\t.USE_RESET_REQUEST_IN14    (0),\n\t\t.USE_RESET_REQUEST_IN15    (0),\n\t\t.ADAPT_RESET_REQUEST       (0)\n\t) rst_controller_001 (\n\t\t.reset_in0      (~reset_n),                               \n\t\t.reset_in1      (cpu_jtag_debug_module_reset_reset),      \n\t\t.clk            (pll_sys_outclk0_clk),                    \n\t\t.reset_out      (rst_controller_001_reset_out_reset),     \n\t\t.reset_req      (rst_controller_001_reset_out_reset_req), \n\t\t.reset_req_in0  (1'b0),                                   \n\t\t.reset_req_in1  (1'b0),                                   \n\t\t.reset_in2      (1'b0),                                   \n\t\t.reset_req_in2  (1'b0),                                   \n\t\t.reset_in3      (1'b0),                                   \n\t\t.reset_req_in3  (1'b0),                                   \n\t\t.reset_in4      (1'b0),                                   \n\t\t.reset_req_in4  (1'b0),                                   \n\t\t.reset_in5      (1'b0),                                   \n\t\t.reset_req_in5  (1'b0),                                   \n\t\t.reset_in6      (1'b0),                                   \n\t\t.reset_req_in6  (1'b0),                                   \n\t\t.reset_in7      (1'b0),                                   \n\t\t.reset_req_in7  (1'b0),                                   \n\t\t.reset_in8      (1'b0),                                   \n\t\t.reset_req_in8  (1'b0),                                   \n\t\t.reset_in9      (1'b0),                                   \n\t\t.reset_req_in9  (1'b0),                                   \n\t\t.reset_in10     (1'b0),                                   \n\t\t.reset_req_in10 (1'b0),                                   \n\t\t.reset_in11     (1'b0),                                   \n\t\t.reset_req_in11 (1'b0),                                   \n\t\t.reset_in12     (1'b0),                                   \n\t\t.reset_req_in12 (1'b0),                                   \n\t\t.reset_in13     (1'b0),                                   \n\t\t.reset_req_in13 (1'b0),                                   \n\t\t.reset_in14     (1'b0),                                   \n\t\t.reset_req_in14 (1'b0),                                   \n\t\t.reset_in15     (1'b0),                                   \n\t\t.reset_req_in15 (1'b0)                                    \n\t);\n\n\taltera_reset_controller #(\n\t\t.NUM_RESET_INPUTS          (1),\n\t\t.OUTPUT_RESET_SYNC_EDGES   (\"deassert\"),\n\t\t.SYNC_DEPTH                (2),\n\t\t.RESET_REQUEST_PRESENT     (1),\n\t\t.RESET_REQ_WAIT_TIME       (1),\n\t\t.MIN_RST_ASSERTION_TIME    (3),\n\t\t.RESET_REQ_EARLY_DSRT_TIME (1),\n\t\t.USE_RESET_REQUEST_IN0     (0),\n\t\t.USE_RESET_REQUEST_IN1     (0),\n\t\t.USE_RESET_REQUEST_IN2     (0),\n\t\t.USE_RESET_REQUEST_IN3     (0),\n\t\t.USE_RESET_REQUEST_IN4     (0),\n\t\t.USE_RESET_REQUEST_IN5     (0),\n\t\t.USE_RESET_REQUEST_IN6     (0),\n\t\t.USE_RESET_REQUEST_IN7     (0),\n\t\t.USE_RESET_REQUEST_IN8     (0),\n\t\t.USE_RESET_REQUEST_IN9     (0),\n\t\t.USE_RESET_REQUEST_IN10    (0),\n\t\t.USE_RESET_REQUEST_IN11    (0),\n\t\t.USE_RESET_REQUEST_IN12    (0),\n\t\t.USE_RESET_REQUEST_IN13    (0),\n\t\t.USE_RESET_REQUEST_IN14    (0),\n\t\t.USE_RESET_REQUEST_IN15    (0),\n\t\t.ADAPT_RESET_REQUEST       (0)\n\t) rst_controller_002 (\n\t\t.reset_in0      (~reset_n),                               \n\t\t.clk            (pll_sys_outclk0_clk),                    \n\t\t.reset_out      (rst_controller_002_reset_out_reset),     \n\t\t.reset_req      (rst_controller_002_reset_out_reset_req), \n\t\t.reset_req_in0  (1'b0),                                   \n\t\t.reset_in1      (1'b0),                                   \n\t\t.reset_req_in1  (1'b0),                                   \n\t\t.reset_in2      (1'b0),                                   \n\t\t.reset_req_in2  (1'b0),                                   \n\t\t.reset_in3      (1'b0),                                   \n\t\t.reset_req_in3  (1'b0),                                   \n\t\t.reset_in4      (1'b0),                                   \n\t\t.reset_req_in4  (1'b0),                                   \n\t\t.reset_in5      (1'b0),                                   \n\t\t.reset_req_in5  (1'b0),                                   \n\t\t.reset_in6      (1'b0),                                   \n\t\t.reset_req_in6  (1'b0),                                   \n\t\t.reset_in7      (1'b0),                                   \n\t\t.reset_req_in7  (1'b0),                                   \n\t\t.reset_in8      (1'b0),                                   \n\t\t.reset_req_in8  (1'b0),                                   \n\t\t.reset_in9      (1'b0),                                   \n\t\t.reset_req_in9  (1'b0),                                   \n\t\t.reset_in10     (1'b0),                                   \n\t\t.reset_req_in10 (1'b0),                                   \n\t\t.reset_in11     (1'b0),                                   \n\t\t.reset_req_in11 (1'b0),                                   \n\t\t.reset_in12     (1'b0),                                   \n\t\t.reset_req_in12 (1'b0),                                   \n\t\t.reset_in13     (1'b0),                                   \n\t\t.reset_req_in13 (1'b0),                                   \n\t\t.reset_in14     (1'b0),                                   \n\t\t.reset_req_in14 (1'b0),                                   \n\t\t.reset_in15     (1'b0),                                   \n\t\t.reset_req_in15 (1'b0)                                    \n\t);\n\n\taltera_reset_controller #(\n\t\t.NUM_RESET_INPUTS          (1),\n\t\t.OUTPUT_RESET_SYNC_EDGES   (\"deassert\"),\n\t\t.SYNC_DEPTH                (2),\n\t\t.RESET_REQUEST_PRESENT     (0),\n\t\t.RESET_REQ_WAIT_TIME       (1),\n\t\t.MIN_RST_ASSERTION_TIME    (3),\n\t\t.RESET_REQ_EARLY_DSRT_TIME (1),\n\t\t.USE_RESET_REQUEST_IN0     (0),\n\t\t.USE_RESET_REQUEST_IN1     (0),\n\t\t.USE_RESET_REQUEST_IN2     (0),\n\t\t.USE_RESET_REQUEST_IN3     (0),\n\t\t.USE_RESET_REQUEST_IN4     (0),\n\t\t.USE_RESET_REQUEST_IN5     (0),\n\t\t.USE_RESET_REQUEST_IN6     (0),\n\t\t.USE_RESET_REQUEST_IN7     (0),\n\t\t.USE_RESET_REQUEST_IN8     (0),\n\t\t.USE_RESET_REQUEST_IN9     (0),\n\t\t.USE_RESET_REQUEST_IN10    (0),\n\t\t.USE_RESET_REQUEST_IN11    (0),\n\t\t.USE_RESET_REQUEST_IN12    (0),\n\t\t.USE_RESET_REQUEST_IN13    (0),\n\t\t.USE_RESET_REQUEST_IN14    (0),\n\t\t.USE_RESET_REQUEST_IN15    (0),\n\t\t.ADAPT_RESET_REQUEST       (0)\n\t) rst_controller_003 (\n\t\t.reset_in0      (~reset_n),                           \n\t\t.clk            (clk_50),                             \n\t\t.reset_out      (rst_controller_003_reset_out_reset), \n\t\t.reset_req      (),                                   \n\t\t.reset_req_in0  (1'b0),                               \n\t\t.reset_in1      (1'b0),                               \n\t\t.reset_req_in1  (1'b0),                               \n\t\t.reset_in2      (1'b0),                               \n\t\t.reset_req_in2  (1'b0),                               \n\t\t.reset_in3      (1'b0),                               \n\t\t.reset_req_in3  (1'b0),                               \n\t\t.reset_in4      (1'b0),                               \n\t\t.reset_req_in4  (1'b0),                               \n\t\t.reset_in5      (1'b0),                               \n\t\t.reset_req_in5  (1'b0),                               \n\t\t.reset_in6      (1'b0),                               \n\t\t.reset_req_in6  (1'b0),                               \n\t\t.reset_in7      (1'b0),                               \n\t\t.reset_req_in7  (1'b0),                               \n\t\t.reset_in8      (1'b0),                               \n\t\t.reset_req_in8  (1'b0),                               \n\t\t.reset_in9      (1'b0),                               \n\t\t.reset_req_in9  (1'b0),                               \n\t\t.reset_in10     (1'b0),                               \n\t\t.reset_req_in10 (1'b0),                               \n\t\t.reset_in11     (1'b0),                               \n\t\t.reset_req_in11 (1'b0),                               \n\t\t.reset_in12     (1'b0),                               \n\t\t.reset_req_in12 (1'b0),                               \n\t\t.reset_in13     (1'b0),                               \n\t\t.reset_req_in13 (1'b0),                               \n\t\t.reset_in14     (1'b0),                               \n\t\t.reset_req_in14 (1'b0),                               \n\t\t.reset_in15     (1'b0),                               \n\t\t.reset_req_in15 (1'b0)                                \n\t);\n\n\taltera_reset_controller #(\n\t\t.NUM_RESET_INPUTS          (1),\n\t\t.OUTPUT_RESET_SYNC_EDGES   (\"deassert\"),\n\t\t.SYNC_DEPTH                (2),\n\t\t.RESET_REQUEST_PRESENT     (0),\n\t\t.RESET_REQ_WAIT_TIME       (1),\n\t\t.MIN_RST_ASSERTION_TIME    (3),\n\t\t.RESET_REQ_EARLY_DSRT_TIME (1),\n\t\t.USE_RESET_REQUEST_IN0     (0),\n\t\t.USE_RESET_REQUEST_IN1     (0),\n\t\t.USE_RESET_REQUEST_IN2     (0),\n\t\t.USE_RESET_REQUEST_IN3     (0),\n\t\t.USE_RESET_REQUEST_IN4     (0),\n\t\t.USE_RESET_REQUEST_IN5     (0),\n\t\t.USE_RESET_REQUEST_IN6     (0),\n\t\t.USE_RESET_REQUEST_IN7     (0),\n\t\t.USE_RESET_REQUEST_IN8     (0),\n\t\t.USE_RESET_REQUEST_IN9     (0),\n\t\t.USE_RESET_REQUEST_IN10    (0),\n\t\t.USE_RESET_REQUEST_IN11    (0),\n\t\t.USE_RESET_REQUEST_IN12    (0),\n\t\t.USE_RESET_REQUEST_IN13    (0),\n\t\t.USE_RESET_REQUEST_IN14    (0),\n\t\t.USE_RESET_REQUEST_IN15    (0),\n\t\t.ADAPT_RESET_REQUEST       (0)\n\t) rst_controller_004 (\n\t\t.reset_in0      (~reset_n),                           \n\t\t.clk            (pll_sys_outclk4_clk),                \n\t\t.reset_out      (rst_controller_004_reset_out_reset), \n\t\t.reset_req      (),                                   \n\t\t.reset_req_in0  (1'b0),                               \n\t\t.reset_in1      (1'b0),                               \n\t\t.reset_req_in1  (1'b0),                               \n\t\t.reset_in2      (1'b0),                               \n\t\t.reset_req_in2  (1'b0),                               \n\t\t.reset_in3      (1'b0),                               \n\t\t.reset_req_in3  (1'b0),                               \n\t\t.reset_in4      (1'b0),                               \n\t\t.reset_req_in4  (1'b0),                               \n\t\t.reset_in5      (1'b0),                               \n\t\t.reset_req_in5  (1'b0),                               \n\t\t.reset_in6      (1'b0),                               \n\t\t.reset_req_in6  (1'b0),                               \n\t\t.reset_in7      (1'b0),                               \n\t\t.reset_req_in7  (1'b0),                               \n\t\t.reset_in8      (1'b0),                               \n\t\t.reset_req_in8  (1'b0),                               \n\t\t.reset_in9      (1'b0),                               \n\t\t.reset_req_in9  (1'b0),                               \n\t\t.reset_in10     (1'b0),                               \n\t\t.reset_req_in10 (1'b0),                               \n\t\t.reset_in11     (1'b0),                               \n\t\t.reset_req_in11 (1'b0),                               \n\t\t.reset_in12     (1'b0),                               \n\t\t.reset_req_in12 (1'b0),                               \n\t\t.reset_in13     (1'b0),                               \n\t\t.reset_req_in13 (1'b0),                               \n\t\t.reset_in14     (1'b0),                               \n\t\t.reset_req_in14 (1'b0),                               \n\t\t.reset_in15     (1'b0),                               \n\t\t.reset_req_in15 (1'b0)                                \n\t);\n\n\taltera_reset_controller #(\n\t\t.NUM_RESET_INPUTS          (1),\n\t\t.OUTPUT_RESET_SYNC_EDGES   (\"deassert\"),\n\t\t.SYNC_DEPTH                (2),\n\t\t.RESET_REQUEST_PRESENT     (0),\n\t\t.RESET_REQ_WAIT_TIME       (1),\n\t\t.MIN_RST_ASSERTION_TIME    (3),\n\t\t.RESET_REQ_EARLY_DSRT_TIME (1),\n\t\t.USE_RESET_REQUEST_IN0     (0),\n\t\t.USE_RESET_REQUEST_IN1     (0),\n\t\t.USE_RESET_REQUEST_IN2     (0),\n\t\t.USE_RESET_REQUEST_IN3     (0),\n\t\t.USE_RESET_REQUEST_IN4     (0),\n\t\t.USE_RESET_REQUEST_IN5     (0),\n\t\t.USE_RESET_REQUEST_IN6     (0),\n\t\t.USE_RESET_REQUEST_IN7     (0),\n\t\t.USE_RESET_REQUEST_IN8     (0),\n\t\t.USE_RESET_REQUEST_IN9     (0),\n\t\t.USE_RESET_REQUEST_IN10    (0),\n\t\t.USE_RESET_REQUEST_IN11    (0),\n\t\t.USE_RESET_REQUEST_IN12    (0),\n\t\t.USE_RESET_REQUEST_IN13    (0),\n\t\t.USE_RESET_REQUEST_IN14    (0),\n\t\t.USE_RESET_REQUEST_IN15    (0),\n\t\t.ADAPT_RESET_REQUEST       (0)\n\t) rst_controller_005 (\n\t\t.reset_in0      (~reset_n),                           \n\t\t.clk            (pll_audio_outclk0_clk),              \n\t\t.reset_out      (rst_controller_005_reset_out_reset), \n\t\t.reset_req      (),                                   \n\t\t.reset_req_in0  (1'b0),                               \n\t\t.reset_in1      (1'b0),                               \n\t\t.reset_req_in1  (1'b0),                               \n\t\t.reset_in2      (1'b0),                               \n\t\t.reset_req_in2  (1'b0),                               \n\t\t.reset_in3      (1'b0),                               \n\t\t.reset_req_in3  (1'b0),                               \n\t\t.reset_in4      (1'b0),                               \n\t\t.reset_req_in4  (1'b0),                               \n\t\t.reset_in5      (1'b0),                               \n\t\t.reset_req_in5  (1'b0),                               \n\t\t.reset_in6      (1'b0),                               \n\t\t.reset_req_in6  (1'b0),                               \n\t\t.reset_in7      (1'b0),                               \n\t\t.reset_req_in7  (1'b0),                               \n\t\t.reset_in8      (1'b0),                               \n\t\t.reset_req_in8  (1'b0),                               \n\t\t.reset_in9      (1'b0),                               \n\t\t.reset_req_in9  (1'b0),                               \n\t\t.reset_in10     (1'b0),                               \n\t\t.reset_req_in10 (1'b0),                               \n\t\t.reset_in11     (1'b0),                               \n\t\t.reset_req_in11 (1'b0),                               \n\t\t.reset_in12     (1'b0),                               \n\t\t.reset_req_in12 (1'b0),                               \n\t\t.reset_in13     (1'b0),                               \n\t\t.reset_req_in13 (1'b0),                               \n\t\t.reset_in14     (1'b0),                               \n\t\t.reset_req_in14 (1'b0),                               \n\t\t.reset_in15     (1'b0),                               \n\t\t.reset_req_in15 (1'b0)                                \n\t);\n\n\taltera_reset_controller #(\n\t\t.NUM_RESET_INPUTS          (1),\n\t\t.OUTPUT_RESET_SYNC_EDGES   (\"deassert\"),\n\t\t.SYNC_DEPTH                (2),\n\t\t.RESET_REQUEST_PRESENT     (0),\n\t\t.RESET_REQ_WAIT_TIME       (1),\n\t\t.MIN_RST_ASSERTION_TIME    (3),\n\t\t.RESET_REQ_EARLY_DSRT_TIME (1),\n\t\t.USE_RESET_REQUEST_IN0     (0),\n\t\t.USE_RESET_REQUEST_IN1     (0),\n\t\t.USE_RESET_REQUEST_IN2     (0),\n\t\t.USE_RESET_REQUEST_IN3     (0),\n\t\t.USE_RESET_REQUEST_IN4     (0),\n\t\t.USE_RESET_REQUEST_IN5     (0),\n\t\t.USE_RESET_REQUEST_IN6     (0),\n\t\t.USE_RESET_REQUEST_IN7     (0),\n\t\t.USE_RESET_REQUEST_IN8     (0),\n\t\t.USE_RESET_REQUEST_IN9     (0),\n\t\t.USE_RESET_REQUEST_IN10    (0),\n\t\t.USE_RESET_REQUEST_IN11    (0),\n\t\t.USE_RESET_REQUEST_IN12    (0),\n\t\t.USE_RESET_REQUEST_IN13    (0),\n\t\t.USE_RESET_REQUEST_IN14    (0),\n\t\t.USE_RESET_REQUEST_IN15    (0),\n\t\t.ADAPT_RESET_REQUEST       (0)\n\t) rst_controller_006 (\n\t\t.reset_in0      (~hps_0_h2f_reset_reset_n),           \n\t\t.clk            (clk_50),                             \n\t\t.reset_out      (rst_controller_006_reset_out_reset), \n\t\t.reset_req      (),                                   \n\t\t.reset_req_in0  (1'b0),                               \n\t\t.reset_in1      (1'b0),                               \n\t\t.reset_req_in1  (1'b0),                               \n\t\t.reset_in2      (1'b0),                               \n\t\t.reset_req_in2  (1'b0),                               \n\t\t.reset_in3      (1'b0),                               \n\t\t.reset_req_in3  (1'b0),                               \n\t\t.reset_in4      (1'b0),                               \n\t\t.reset_req_in4  (1'b0),                               \n\t\t.reset_in5      (1'b0),                               \n\t\t.reset_req_in5  (1'b0),                               \n\t\t.reset_in6      (1'b0),                               \n\t\t.reset_req_in6  (1'b0),                               \n\t\t.reset_in7      (1'b0),                               \n\t\t.reset_req_in7  (1'b0),                               \n\t\t.reset_in8      (1'b0),                               \n\t\t.reset_req_in8  (1'b0),                               \n\t\t.reset_in9      (1'b0),                               \n\t\t.reset_req_in9  (1'b0),                               \n\t\t.reset_in10     (1'b0),                               \n\t\t.reset_req_in10 (1'b0),                               \n\t\t.reset_in11     (1'b0),                               \n\t\t.reset_req_in11 (1'b0),                               \n\t\t.reset_in12     (1'b0),                               \n\t\t.reset_req_in12 (1'b0),                               \n\t\t.reset_in13     (1'b0),                               \n\t\t.reset_req_in13 (1'b0),                               \n\t\t.reset_in14     (1'b0),                               \n\t\t.reset_req_in14 (1'b0),                               \n\t\t.reset_in15     (1'b0),                               \n\t\t.reset_req_in15 (1'b0)                                \n\t);\n\nendmodule\n```"
        },
        {
            "role": "user",
            "content": "Based on the provided original Verilog code, its comments and above answers, generate a detailed specification for the module. Include the following information in a single, concise paragraph:\n1. The name of the module.\n2. A simple explanation of the module's functionality.\n3. The input and output ports, along with a brief explanation of each.\n4. The internal signals used within the module, with a brief explanation of their purpose.\n5. An overview of the different blocks or sections in the code and their functions.\nEnsure that the specification is clear and accurately reflects the details from the code and comments.\nYour answer should be structured and well-organized, providing a comprehensive and detailed overview of the module's design and operation.\nPlease provide your answer in the following format:\nModule name: [module name]. Module specification: [module specification]."
        },
        {
            "role": "assistant",
            "content": "Module name: DE1_SoC_QSYS. Module specification: This module is a top-level system integration module for a DE1-SoC FPGA board, implementing a complex system-on-chip design. It interconnects various hardware components and IP cores, including an ARM processor (HPS), memory interfaces (SDRAM, on-chip memory), peripherals (UART, SPI, I2C, GPIO), video processing components (VIP modules for scaling, mixing, etc.), audio interfaces, and clock management (PLLs). The module has numerous input and output ports for interfacing with external components, including clocks, resets, video signals, memory interfaces, and various peripheral I/O. Internal signals facilitate communication between different components, handling data transfer, control, and synchronization. The code is organized into sections for instantiating individual components (e.g., CPU, memory, peripherals, video processing"
        }
    ],
    "claude-message": [
        {
            "role": "user",
            "content": [
                {
                    "type": "text",
                    "text": "You are an expert in hardware design with a deep understanding of Verilog RTL codes. Now I want to train a large language model for code comment generation tasks specifically focused on Verilog RTL codes. And I want you to help me process the raw data, transforming it into suitable formats that can serve as inputs and outputs for the model."
                },
                {
                    "type": "text",
                    "text": "Name of the module and its functionality is as follows: \nModule name: DE1_SoC_QSYS\n\nExplanation: This module appears to be a top-level system integration module for a DE1-SoC FPGA board. It interconnects various hardware components and IP cores, including a processor (likely an ARM core in the HPS), memory interfaces (SDRAM, on-chip memory), peripherals (UART, SPI, I2C, GPIO), video processing components (VIP modules for scaling, mixing, etc.), audio interfaces, and clock management (PLLs). The module handles signal routing, clock domains, and reset logic for the entire system, creating a complete system-on-chip design for the DE1-SoC platform."
                },
                {
                    "type": "text",
                    "text": "Input and output ports and their explanation is as follows: \nInput ports:\n[clk_50, in_port_to_the_td_status, reset_n, vid_clk_to_the_alt_vip_cti_0, vid_data_to_the_alt_vip_cti_0, vid_datavalid_to_the_alt_vip_cti_0, vid_locked_to_the_alt_vip_cti_0, key_external_connection_export, sw_external_connection_export, spi_0_external_MISO, audio_conduit_end_ADCDAT, audio_conduit_end_ADCLRC, audio_conduit_end_BCLK, uart_external_connection_rxd, hps_io_hps_io_emac1_inst_RXD0, hps_io_hps_io_emac1_inst_RX_CTL, hps_io_hps_io_emac1_inst_RX_CLK, hps_io_hps_io_emac1_inst_RXD1, hps_io_hps_io_emac1_inst_RXD2, hps_io_hps_io_emac1_inst_RXD3, hps_io_hps_io_usb1_inst_CLK, hps_io_hps_io_usb1_inst_DIR, hps_io_hps_io_usb1_inst_NXT, hps_io_hps_io_spim1_inst_MISO, hps_io_hps_io_uart0_inst_RX, memory_oct_rzqin, alt_vip_itc_0_clocked_video_vid_clk, ir_rx_conduit_end_export]\n\nExplanation: These ports include clock inputs, reset signals, video input signals, various peripheral inputs (keys, switches, SPI, audio, UART), and HPS-related inputs for Ethernet, USB, and other interfaces.\n\nOutput ports:\n[out_port_from_the_i2c_scl, out_port_from_the_td_reset_n, overflow_from_the_alt_vip_cti_0, zs_addr_from_the_sdram, zs_ba_from_the_sdram, zs_cas_n_from_the_sdram, zs_cke_from_the_sdram, zs_cs_n_from_the_sdram, zs_dqm_from_the_sdram, zs_ras_n_from_the_sdram, zs_we_n_from_the_sdram, pll_0_locked_export, clk_sdram_clk, clk_vga_clk, seg7_conduit_end_export, ledr_external_connection_export, spi_0_external_MOSI, spi_0_external_SCLK, spi_0_external_SS_n, audio_conduit_end_XCK, audio_conduit_end_DACDAT, uart_external_connection_txd, pll_audio_locked_export, memory_mem_a, memory_mem_ba, memory_mem_ck, memory_mem_ck_n, memory_mem_cke, memory_mem_cs_n, memory_mem_ras_n, memory_mem_cas_n, memory_mem_we_n, memory_mem_reset_n, memory_mem_odt, memory_mem_dm, hps_io_hps_io_emac1_inst_TX_CLK, hps_io_hps_io_emac1_inst_TXD0, hps_io_hps_io_emac1_inst_TXD1, hps_io_hps_io_emac1_inst_TXD2, hps_io_hps_io_emac1_inst_TXD3, hps_io_hps_io_emac1_inst_MDC, hps_io_hps_io_emac1_inst_TX_CTL, hps_io_hps_io_qspi_inst_SS0, hps_io_hps_io_qspi_inst_CLK, hps_io_hps_io_sdio_inst_CLK, hps_io_hps_io_usb1_inst_STP, hps_io_hps_io_spim1_inst_CLK, hps_io_hps_io_spim1_inst_MOSI, hps_io_hps_io_spim1_inst_SS0, hps_io_hps_io_uart0_inst_TX, hps_0_h2f_reset_reset_n, alt_vip_itc_0_clocked_video_vid_data, alt_vip_itc_0_clocked_video_underflow, alt_vip_itc_0_clocked_video_vid_datavalid, alt_vip_itc_0_clocked_video_vid_v_sync, alt_vip_itc_0_clocked_video_vid_h_sync, alt_vip_itc_0_clocked_video_vid_f, alt_vip_itc_0_clocked_video_vid_h, alt_vip_itc_0_clocked_video_vid_v]\n\nExplanation: These ports include various control and data outputs for SDRAM, PLL status, clocks, 7-segment display, LEDs, SPI, audio, UART, memory interfaces, and HPS-related outputs for Ethernet, USB, QSPI, SDIO, and video signals."
                },
                {
                    "type": "text",
                    "text": "Internal signals and their explanation is as follows: \nInternal signals:\n[alt_vip_cti_0_dout_endofpacket, alt_vip_cti_0_dout_valid, alt_vip_cti_0_dout_startofpacket, alt_vip_cti_0_dout_data, alt_vip_cti_0_dout_ready, alt_vip_cpr_0_dout0_endofpacket, alt_vip_cpr_0_dout0_valid, alt_vip_cpr_0_dout0_startofpacket, alt_vip_cpr_0_dout0_data, alt_vip_cpr_0_dout0_ready, alt_vip_clip_0_dout_endofpacket, alt_vip_clip_0_dout_valid, alt_vip_clip_0_dout_startofpacket, alt_vip_clip_0_dout_data, alt_vip_clip_0_dout_ready, alt_vip_crs_0_dout_endofpacket, alt_vip_crs_0_dout_valid, alt_vip_crs_0_dout_startofpacket, alt_vip_crs_0_dout_data, alt_vip_crs_0_dout_ready, alt_vip_csc_0_dout_endofpacket, alt_vip_csc_0_dout_valid, alt_vip_csc_0_dout_startofpacket, alt_vip_csc_0_dout_data, alt_vip_csc_0_dout_ready, pll_sys_outclk2_clk, pll_sys_outclk0_clk, pll_audio_outclk0_clk, pll_sys_outclk4_clk, alt_vip_dil_0_dout_endofpacket, alt_vip_dil_0_dout_valid, alt_vip_dil_0_dout_startofpacket, alt_vip_dil_0_dout_data, alt_vip_dil_0_dout_ready, alt_vip_cl_scl_0_dout_endofpacket, alt_vip_cl_scl_0_dout_valid, alt_vip_cl_scl_0_dout_startofpacket, alt_vip_cl_scl_0_dout_data, alt_vip_cl_scl_0_dout_ready, alt_vip_vfr_0_avalon_streaming_source_endofpacket, alt_vip_vfr_0_avalon_streaming_source_valid, alt_vip_vfr_0_avalon_streaming_source_startofpacket, alt_vip_vfr_0_avalon_streaming_source_data, alt_vip_vfr_0_avalon_streaming_source_ready, alt_vip_mix_0_dout_endofpacket, alt_vip_mix_0_dout_valid, alt_vip_mix_0_dout_startofpacket, alt_vip_mix_0_dout_data, alt_vip_mix_0_dout_ready, alt_vip_vfb_0_dout_endofpacket, alt_vip_vfb_0_dout_valid, alt_vip_vfb_0_dout_startofpacket, alt_vip_vfb_0_dout_data, alt_vip_vfb_0_dout_ready, alt_vip_cpr_1_dout0_endofpacket, alt_vip_cpr_1_dout0_valid, alt_vip_cpr_1_dout0_startofpacket, alt_vip_cpr_1_dout0_data, alt_vip_cpr_1_dout0_ready, alt_vip_cpr_2_dout0_endofpacket, alt_vip_cpr_2_dout0_valid, alt_vip_cpr_2_dout0_startofpacket, alt_vip_cpr_2_dout0_data, alt_vip_cpr_2_dout0_ready, cpu_data_master_waitrequest, cpu_data_master_writedata, cpu_data_master_address, cpu_data_master_write, cpu_data_master_read, cpu_data_master_readdata, cpu_data_master_debugaccess, cpu_data_master_readdatavalid, cpu_data_master_byteenable, cpu_instruction_master_waitrequest, cpu_instruction_master_address, cpu_instruction_master_read, cpu_instruction_master_readdata, cpu_instruction_master_readdatavalid, hps_0_h2f_lw_axi_master_awid, hps_0_h2f_lw_axi_master_awaddr, hps_0_h2f_lw_axi_master_awlen, hps_0_h2f_lw_axi_master_awsize, hps_0_h2f_lw_axi_master_awburst, hps_0_h2f_lw_axi_master_awlock, hps_0_h2f_lw_axi_master_awcache, hps_0_h2f_lw_axi_master_awprot, hps_0_h2f_lw_axi_master_awvalid, hps_0_h2f_lw_axi_master_awready, hps_0_h2f_lw_axi_master_wid, hps_0_h2f_lw_axi_master_wdata, hps_0_h2f_lw_axi_master_wstrb, hps_0_h2f_lw_axi_master_wlast, hps_0_h2f_lw_axi_master_wvalid, hps_0_h2f_lw_axi_master_wready, hps_0_h2f_lw_axi_master_bid, hps_0_h2f_lw_axi_master_bresp, hps_0_h2f_lw_axi_master_bvalid, hps_0_h2f_lw_axi_master_bready, hps_0_h2f_lw_axi_master_arid, hps_0_h2f_lw_axi_master_araddr, hps_0_h2f_lw_axi_master_arlen, hps_0_h2f_lw_axi_master_arsize, hps_0_h2f_lw_axi_master_arburst, hps_0_h2f_lw_axi_master_arlock, hps_0_h2f_lw_axi_master_arcache, hps_0_h2f_lw_axi_master_arprot, hps_0_h2f_lw_axi_master_arvalid, hps_0_h2f_lw_axi_master_arready, hps_0_h2f_lw_axi_master_rid, hps_0_h2f_lw_axi_master_rdata, hps_0_h2f_lw_axi_master_rresp, hps_0_h2f_lw_axi_master_rlast, hps_0_h2f_lw_axi_master_rvalid, hps_0_h2f_lw_axi_master_rready, alt_vip_vfb_0_read_master_burstcount, alt_vip_vfb_0_read_master_waitrequest, alt_vip_vfb_0_read_master_address, alt_vip_vfb_0_read_master_read, alt_vip_vfb_0_read_master_readdata, alt_vip_vfb_0_read_master_readdatavalid, alt_vip_vfb_0_write_master_burstcount, alt_vip_vfb_0_write_master_waitrequest, alt_vip_vfb_0_write_master_writedata, alt_vip_vfb_0_write_master_address, alt_vip_vfb_0_write_master_write, clock_crossing_io_slow_m0_burstcount, clock_crossing_io_slow_m0_waitrequest, clock_crossing_io_slow_m0_address, clock_crossing_io_slow_m0_writedata, clock_crossing_io_slow_m0_write, clock_crossing_io_slow_m0_read, clock_crossing_io_slow_m0_readdata, clock_crossing_io_slow_m0_debugaccess, clock_crossing_io_slow_m0_byteenable, clock_crossing_io_slow_m0_readdatavalid, mm_clock_crossing_bridge_1_m0_burstcount, mm_clock_crossing_bridge_1_m0_waitrequest, mm_clock_crossing_bridge_1_m0_address, mm_clock_crossing_bridge_1_m0_writedata, mm_clock_crossing_bridge_1_m0_write, mm_clock_crossing_bridge_1_m0_read, mm_clock_crossing_bridge_1_m0_readdata, mm_clock_crossing_bridge_1_m0_debugaccess, mm_clock_crossing_bridge_1_m0_byteenable, mm_clock_crossing_bridge_1_m0_readdatavalid, alt_vip_vfr_0_avalon_master_waitrequest, alt_vip_vfr_0_avalon_master_burstcount, alt_vip_vfr_0_avalon_master_address, alt_vip_vfr_0_avalon_master_read, alt_vip_vfr_0_avalon_master_readdata, alt_vip_vfr_0_avalon_master_readdatavalid, irq_mapper_receiver1_irq, irq_mapper_receiver2_irq, irq_mapper_receiver4_irq, cpu_d_irq_irq, hps_0_f2h_irq0_irq, hps_0_f2h_irq1_irq, irq_mapper_receiver0_irq, irq_synchronizer_receiver_irq, irq_mapper_receiver3_irq, irq_synchronizer_001_receiver_irq, rst_controller_reset_out_reset, rst_controller_001_reset_out_reset, rst_controller_001_reset_out_reset_req, cpu_jtag_debug_module_reset_reset, rst_controller_002_reset_out_reset, rst_controller_002_reset_out_reset_req, rst_controller_003_reset_out_reset, rst_controller_004_reset_out_reset, rst_controller_005_reset_out_reset, rst_controller_006_reset_out_reset]\n\nExplanation:\nThese internal signals represent interconnections between various components and modules within the system. They include:\n\n1. Video processing signals (alt_vip_*): These handle video data flow between different video processing blocks.\n2. PLL output clocks: Generated clock signals for different parts of the system.\n3. CPU signals: Data and instruction interfaces for the CPU.\n4. HPS AXI signals: AXI bus signals for communication with the Hard Processor System.\n5. Memory interface signals: For reading and writing to various memory components.\n6. Clock crossing and bridge signals: For managing data transfer between different clock domains.\n7. Interrupt signals: For handling system interrupts.\n8. Reset signals: For managing resets in different parts of the system.\n\nThese signals facilitate data transfer, control, and synchronization between various components of the complex system-on-chip design."
                },
                {
                    "type": "text",
                    "text": "Original Verilog code is as follows: \n<code>\n\n\n\n`timescale 1 ps / 1 ps\nmodule DE1_SoC_QSYS (\n\t\toutput wire        out_port_from_the_i2c_scl,                 \n\t\tinout  wire        bidir_port_to_and_from_the_i2c_sda,        \n\t\toutput wire        out_port_from_the_td_reset_n,              \n\t\tinput  wire        clk_50,                                    \n\t\tinput  wire [1:0]  in_port_to_the_td_status,                  \n\t\tinput  wire        reset_n,                                   \n\t\tinput  wire        vid_clk_to_the_alt_vip_cti_0,              \n\t\tinput  wire [7:0]  vid_data_to_the_alt_vip_cti_0,             \n\t\toutput wire        overflow_from_the_alt_vip_cti_0,           \n\t\tinput  wire        vid_datavalid_to_the_alt_vip_cti_0,        \n\t\tinput  wire        vid_locked_to_the_alt_vip_cti_0,           \n\t\toutput wire [12:0] zs_addr_from_the_sdram,                    \n\t\toutput wire [1:0]  zs_ba_from_the_sdram,                      \n\t\toutput wire        zs_cas_n_from_the_sdram,                   \n\t\toutput wire        zs_cke_from_the_sdram,                     \n\t\toutput wire        zs_cs_n_from_the_sdram,                    \n\t\tinout  wire [15:0] zs_dq_to_and_from_the_sdram,               \n\t\toutput wire [1:0]  zs_dqm_from_the_sdram,                     \n\t\toutput wire        zs_ras_n_from_the_sdram,                   \n\t\toutput wire        zs_we_n_from_the_sdram,                    \n\t\toutput wire        pll_0_locked_export,                       \n\t\toutput wire        clk_sdram_clk,                             \n\t\toutput wire        clk_vga_clk,                               \n\t\toutput wire [47:0] seg7_conduit_end_export,                   \n\t\toutput wire [9:0]  ledr_external_connection_export,           \n\t\tinput  wire [3:0]  key_external_connection_export,            \n\t\tinput  wire [9:0]  sw_external_connection_export,             \n\t\tinput  wire        spi_0_external_MISO,                       \n\t\toutput wire        spi_0_external_MOSI,                       \n\t\toutput wire        spi_0_external_SCLK,                       \n\t\toutput wire        spi_0_external_SS_n,                       \n\t\toutput wire        audio_conduit_end_XCK,                     \n\t\tinput  wire        audio_conduit_end_ADCDAT,                  \n\t\tinput  wire        audio_conduit_end_ADCLRC,                  \n\t\toutput wire        audio_conduit_end_DACDAT,                  \n\t\tinput  wire        audio_conduit_end_DACLRC,                  \n\t\tinput  wire        audio_conduit_end_BCLK,                    \n\t\tinput  wire        uart_external_connection_rxd,              \n\t\toutput wire        uart_external_connection_txd,              \n\t\toutput wire        pll_audio_locked_export,                   \n\t\toutput wire [14:0] memory_mem_a,                              \n\t\toutput wire [2:0]  memory_mem_ba,                             \n\t\toutput wire        memory_mem_ck,                             \n\t\toutput wire        memory_mem_ck_n,                           \n\t\toutput wire        memory_mem_cke,                            \n\t\toutput wire        memory_mem_cs_n,                           \n\t\toutput wire        memory_mem_ras_n,                          \n\t\toutput wire        memory_mem_cas_n,                          \n\t\toutput wire        memory_mem_we_n,                           \n\t\toutput wire        memory_mem_reset_n,                        \n\t\tinout  wire [31:0] memory_mem_dq,                             \n\t\tinout  wire [3:0]  memory_mem_dqs,                            \n\t\tinout  wire [3:0]  memory_mem_dqs_n,                          \n\t\toutput wire        memory_mem_odt,                            \n\t\toutput wire [3:0]  memory_mem_dm,                             \n\t\tinput  wire        memory_oct_rzqin,                          \n\t\toutput wire        hps_io_hps_io_emac1_inst_TX_CLK,           \n\t\toutput wire        hps_io_hps_io_emac1_inst_TXD0,             \n\t\toutput wire        hps_io_hps_io_emac1_inst_TXD1,             \n\t\toutput wire        hps_io_hps_io_emac1_inst_TXD2,             \n\t\toutput wire        hps_io_hps_io_emac1_inst_TXD3,             \n\t\tinput  wire        hps_io_hps_io_emac1_inst_RXD0,             \n\t\tinout  wire        hps_io_hps_io_emac1_inst_MDIO,             \n\t\toutput wire        hps_io_hps_io_emac1_inst_MDC,              \n\t\tinput  wire        hps_io_hps_io_emac1_inst_RX_CTL,           \n\t\toutput wire        hps_io_hps_io_emac1_inst_TX_CTL,           \n\t\tinput  wire        hps_io_hps_io_emac1_inst_RX_CLK,           \n\t\tinput  wire        hps_io_hps_io_emac1_inst_RXD1,             \n\t\tinput  wire        hps_io_hps_io_emac1_inst_RXD2,             \n\t\tinput  wire        hps_io_hps_io_emac1_inst_RXD3,             \n\t\tinout  wire        hps_io_hps_io_qspi_inst_IO0,               \n\t\tinout  wire        hps_io_hps_io_qspi_inst_IO1,               \n\t\tinout  wire        hps_io_hps_io_qspi_inst_IO2,               \n\t\tinout  wire        hps_io_hps_io_qspi_inst_IO3,               \n\t\toutput wire        hps_io_hps_io_qspi_inst_SS0,               \n\t\toutput wire        hps_io_hps_io_qspi_inst_CLK,               \n\t\tinout  wire        hps_io_hps_io_sdio_inst_CMD,               \n\t\tinout  wire        hps_io_hps_io_sdio_inst_D0,                \n\t\tinout  wire        hps_io_hps_io_sdio_inst_D1,                \n\t\toutput wire        hps_io_hps_io_sdio_inst_CLK,               \n\t\tinout  wire        hps_io_hps_io_sdio_inst_D2,                \n\t\tinout  wire        hps_io_hps_io_sdio_inst_D3,                \n\t\tinout  wire        hps_io_hps_io_usb1_inst_D0,                \n\t\tinout  wire        hps_io_hps_io_usb1_inst_D1,                \n\t\tinout  wire        hps_io_hps_io_usb1_inst_D2,                \n\t\tinout  wire        hps_io_hps_io_usb1_inst_D3,                \n\t\tinout  wire        hps_io_hps_io_usb1_inst_D4,                \n\t\tinout  wire        hps_io_hps_io_usb1_inst_D5,                \n\t\tinout  wire        hps_io_hps_io_usb1_inst_D6,                \n\t\tinout  wire        hps_io_hps_io_usb1_inst_D7,                \n\t\tinput  wire        hps_io_hps_io_usb1_inst_CLK,               \n\t\toutput wire        hps_io_hps_io_usb1_inst_STP,               \n\t\tinput  wire        hps_io_hps_io_usb1_inst_DIR,               \n\t\tinput  wire        hps_io_hps_io_usb1_inst_NXT,               \n\t\toutput wire        hps_io_hps_io_spim1_inst_CLK,              \n\t\toutput wire        hps_io_hps_io_spim1_inst_MOSI,             \n\t\tinput  wire        hps_io_hps_io_spim1_inst_MISO,             \n\t\toutput wire        hps_io_hps_io_spim1_inst_SS0,              \n\t\tinput  wire        hps_io_hps_io_uart0_inst_RX,               \n\t\toutput wire        hps_io_hps_io_uart0_inst_TX,               \n\t\tinout  wire        hps_io_hps_io_i2c0_inst_SDA,               \n\t\tinout  wire        hps_io_hps_io_i2c0_inst_SCL,               \n\t\tinout  wire        hps_io_hps_io_i2c1_inst_SDA,               \n\t\tinout  wire        hps_io_hps_io_i2c1_inst_SCL,               \n\t\tinout  wire        hps_io_hps_io_gpio_inst_GPIO09,            \n\t\tinout  wire        hps_io_hps_io_gpio_inst_GPIO35,            \n\t\tinout  wire        hps_io_hps_io_gpio_inst_GPIO40,            \n\t\tinout  wire        hps_io_hps_io_gpio_inst_GPIO41,            \n\t\tinout  wire        hps_io_hps_io_gpio_inst_GPIO48,            \n\t\tinout  wire        hps_io_hps_io_gpio_inst_GPIO53,            \n\t\tinout  wire        hps_io_hps_io_gpio_inst_GPIO54,            \n\t\tinout  wire        hps_io_hps_io_gpio_inst_GPIO61,            \n\t\toutput wire        hps_0_h2f_reset_reset_n,                   \n\t\tinput  wire        alt_vip_itc_0_clocked_video_vid_clk,       \n\t\toutput wire [23:0] alt_vip_itc_0_clocked_video_vid_data,      \n\t\toutput wire        alt_vip_itc_0_clocked_video_underflow,     \n\t\toutput wire        alt_vip_itc_0_clocked_video_vid_datavalid, \n\t\toutput wire        alt_vip_itc_0_clocked_video_vid_v_sync,    \n\t\toutput wire        alt_vip_itc_0_clocked_video_vid_h_sync,    \n\t\toutput wire        alt_vip_itc_0_clocked_video_vid_f,         \n\t\toutput wire        alt_vip_itc_0_clocked_video_vid_h,         \n\t\toutput wire        alt_vip_itc_0_clocked_video_vid_v,         \n\t\tinput  wire        ir_rx_conduit_end_export                   \n\t);\n\n\twire          alt_vip_cti_0_dout_endofpacket;                                \n\twire          alt_vip_cti_0_dout_valid;                                      \n\twire          alt_vip_cti_0_dout_startofpacket;                              \n\twire    [7:0] alt_vip_cti_0_dout_data;                                       \n\twire          alt_vip_cti_0_dout_ready;                                      \n\twire          alt_vip_cpr_0_dout0_endofpacket;                               \n\twire          alt_vip_cpr_0_dout0_valid;                                     \n\twire          alt_vip_cpr_0_dout0_startofpacket;                             \n\twire   [15:0] alt_vip_cpr_0_dout0_data;                                      \n\twire          alt_vip_cpr_0_dout0_ready;                                     \n\twire          alt_vip_clip_0_dout_endofpacket;                               \n\twire          alt_vip_clip_0_dout_valid;                                     \n\twire          alt_vip_clip_0_dout_startofpacket;                             \n\twire   [23:0] alt_vip_clip_0_dout_data;                                      \n\twire          alt_vip_clip_0_dout_ready;                                     \n\twire          alt_vip_crs_0_dout_endofpacket;                                \n\twire          alt_vip_crs_0_dout_valid;                                      \n\twire          alt_vip_crs_0_dout_startofpacket;                              \n\twire   [23:0] alt_vip_crs_0_dout_data;                                       \n\twire          alt_vip_crs_0_dout_ready;                                      \n\twire          alt_vip_csc_0_dout_endofpacket;                                \n\twire          alt_vip_csc_0_dout_valid;                                      \n\twire          alt_vip_csc_0_dout_startofpacket;                              \n\twire   [23:0] alt_vip_csc_0_dout_data;                                       \n\twire          alt_vip_csc_0_dout_ready;                                      \n\twire          pll_sys_outclk2_clk;                                           \n\twire          pll_sys_outclk0_clk;                                           \n\twire          pll_audio_outclk0_clk;                                         \n\twire          pll_sys_outclk4_clk;                                           \n\twire          alt_vip_dil_0_dout_endofpacket;                                \n\twire          alt_vip_dil_0_dout_valid;                                      \n\twire          alt_vip_dil_0_dout_startofpacket;                              \n\twire   [15:0] alt_vip_dil_0_dout_data;                                       \n\twire          alt_vip_dil_0_dout_ready;                                      \n\twire          alt_vip_cl_scl_0_dout_endofpacket;                             \n\twire          alt_vip_cl_scl_0_dout_valid;                                   \n\twire          alt_vip_cl_scl_0_dout_startofpacket;                           \n\twire   [23:0] alt_vip_cl_scl_0_dout_data;                                    \n\twire          alt_vip_cl_scl_0_dout_ready;                                   \n\twire          alt_vip_vfr_0_avalon_streaming_source_endofpacket;             \n\twire          alt_vip_vfr_0_avalon_streaming_source_valid;                   \n\twire          alt_vip_vfr_0_avalon_streaming_source_startofpacket;           \n\twire   [31:0] alt_vip_vfr_0_avalon_streaming_source_data;                    \n\twire          alt_vip_vfr_0_avalon_streaming_source_ready;                   \n\twire          alt_vip_mix_0_dout_endofpacket;                                \n\twire          alt_vip_mix_0_dout_valid;                                      \n\twire          alt_vip_mix_0_dout_startofpacket;                              \n\twire   [23:0] alt_vip_mix_0_dout_data;                                       \n\twire          alt_vip_mix_0_dout_ready;                                      \n\twire          alt_vip_vfb_0_dout_endofpacket;                                \n\twire          alt_vip_vfb_0_dout_valid;                                      \n\twire          alt_vip_vfb_0_dout_startofpacket;                              \n\twire   [23:0] alt_vip_vfb_0_dout_data;                                       \n\twire          alt_vip_vfb_0_dout_ready;                                      \n\twire          alt_vip_cpr_1_dout0_endofpacket;                               \n\twire          alt_vip_cpr_1_dout0_valid;                                     \n\twire          alt_vip_cpr_1_dout0_startofpacket;                             \n\twire   [23:0] alt_vip_cpr_1_dout0_data;                                      \n\twire          alt_vip_cpr_1_dout0_ready;                                     \n\twire          alt_vip_cpr_2_dout0_endofpacket;                               \n\twire          alt_vip_cpr_2_dout0_valid;                                     \n\twire          alt_vip_cpr_2_dout0_startofpacket;                             \n\twire   [23:0] alt_vip_cpr_2_dout0_data;                                      \n\twire          alt_vip_cpr_2_dout0_ready;                                     \n\twire          mm_interconnect_0_cpu_jtag_debug_module_waitrequest;           \n\twire   [31:0] mm_interconnect_0_cpu_jtag_debug_module_writedata;             \n\twire    [8:0] mm_interconnect_0_cpu_jtag_debug_module_address;               \n\twire          mm_interconnect_0_cpu_jtag_debug_module_write;                 \n\twire          mm_interconnect_0_cpu_jtag_debug_module_read;                  \n\twire   [31:0] mm_interconnect_0_cpu_jtag_debug_module_readdata;              \n\twire          mm_interconnect_0_cpu_jtag_debug_module_debugaccess;           \n\twire    [3:0] mm_interconnect_0_cpu_jtag_debug_module_byteenable;            \n\twire   [31:0] mm_interconnect_0_ledr_s1_writedata;                           \n\twire    [1:0] mm_interconnect_0_ledr_s1_address;                             \n\twire          mm_interconnect_0_ledr_s1_chipselect;                          \n\twire          mm_interconnect_0_ledr_s1_write;                               \n\twire   [31:0] mm_interconnect_0_ledr_s1_readdata;                            \n\twire   [31:0] mm_interconnect_0_sw_s1_writedata;                             \n\twire    [1:0] mm_interconnect_0_sw_s1_address;                               \n\twire          mm_interconnect_0_sw_s1_chipselect;                            \n\twire          mm_interconnect_0_sw_s1_write;                                 \n\twire   [31:0] mm_interconnect_0_sw_s1_readdata;                              \n\twire          mm_interconnect_0_jtag_uart_avalon_jtag_slave_waitrequest;     \n\twire   [31:0] mm_interconnect_0_jtag_uart_avalon_jtag_slave_writedata;       \n\twire    [0:0] mm_interconnect_0_jtag_uart_avalon_jtag_slave_address;         \n\twire          mm_interconnect_0_jtag_uart_avalon_jtag_slave_chipselect;      \n\twire          mm_interconnect_0_jtag_uart_avalon_jtag_slave_write;           \n\twire          mm_interconnect_0_jtag_uart_avalon_jtag_slave_read;            \n\twire   [31:0] mm_interconnect_0_jtag_uart_avalon_jtag_slave_readdata;        \n\twire   [31:0] mm_interconnect_0_onchip_memory2_s1_writedata;                 \n\twire   [15:0] mm_interconnect_0_onchip_memory2_s1_address;                   \n\twire          mm_interconnect_0_onchip_memory2_s1_chipselect;                \n\twire          mm_interconnect_0_onchip_memory2_s1_clken;                     \n\twire          mm_interconnect_0_onchip_memory2_s1_write;                     \n\twire   [31:0] mm_interconnect_0_onchip_memory2_s1_readdata;                  \n\twire    [3:0] mm_interconnect_0_onchip_memory2_s1_byteenable;                \n\twire          cpu_data_master_waitrequest;                                   \n\twire   [31:0] cpu_data_master_writedata;                                     \n\twire   [25:0] cpu_data_master_address;                                       \n\twire          cpu_data_master_write;                                         \n\twire          cpu_data_master_read;                                          \n\twire   [31:0] cpu_data_master_readdata;                                      \n\twire          cpu_data_master_debugaccess;                                   \n\twire          cpu_data_master_readdatavalid;                                 \n\twire    [3:0] cpu_data_master_byteenable;                                    \n\twire          mm_interconnect_0_mm_clock_crossing_bridge_1_s0_waitrequest;   \n\twire    [0:0] mm_interconnect_0_mm_clock_crossing_bridge_1_s0_burstcount;    \n\twire   [31:0] mm_interconnect_0_mm_clock_crossing_bridge_1_s0_writedata;     \n\twire    [8:0] mm_interconnect_0_mm_clock_crossing_bridge_1_s0_address;       \n\twire          mm_interconnect_0_mm_clock_crossing_bridge_1_s0_write;         \n\twire          mm_interconnect_0_mm_clock_crossing_bridge_1_s0_read;          \n\twire   [31:0] mm_interconnect_0_mm_clock_crossing_bridge_1_s0_readdata;      \n\twire          mm_interconnect_0_mm_clock_crossing_bridge_1_s0_debugaccess;   \n\twire          mm_interconnect_0_mm_clock_crossing_bridge_1_s0_readdatavalid; \n\twire    [3:0] mm_interconnect_0_mm_clock_crossing_bridge_1_s0_byteenable;    \n\twire   [15:0] mm_interconnect_0_alt_vip_mix_0_control_writedata;             \n\twire    [5:0] mm_interconnect_0_alt_vip_mix_0_control_address;               \n\twire          mm_interconnect_0_alt_vip_mix_0_control_chipselect;            \n\twire          mm_interconnect_0_alt_vip_mix_0_control_write;                 \n\twire   [15:0] mm_interconnect_0_alt_vip_mix_0_control_readdata;              \n\twire   [15:0] mm_interconnect_0_audio_avalon_slave_writedata;                \n\twire    [2:0] mm_interconnect_0_audio_avalon_slave_address;                  \n\twire          mm_interconnect_0_audio_avalon_slave_write;                    \n\twire          mm_interconnect_0_audio_avalon_slave_read;                     \n\twire   [15:0] mm_interconnect_0_audio_avalon_slave_readdata;                 \n\twire          mm_interconnect_0_clock_crossing_io_slow_s0_waitrequest;       \n\twire    [0:0] mm_interconnect_0_clock_crossing_io_slow_s0_burstcount;        \n\twire   [31:0] mm_interconnect_0_clock_crossing_io_slow_s0_writedata;         \n\twire    [8:0] mm_interconnect_0_clock_crossing_io_slow_s0_address;           \n\twire          mm_interconnect_0_clock_crossing_io_slow_s0_write;             \n\twire          mm_interconnect_0_clock_crossing_io_slow_s0_read;              \n\twire   [31:0] mm_interconnect_0_clock_crossing_io_slow_s0_readdata;          \n\twire          mm_interconnect_0_clock_crossing_io_slow_s0_debugaccess;       \n\twire          mm_interconnect_0_clock_crossing_io_slow_s0_readdatavalid;     \n\twire    [3:0] mm_interconnect_0_clock_crossing_io_slow_s0_byteenable;        \n\twire    [7:0] mm_interconnect_0_seg7_avalon_slave_writedata;                 \n\twire    [2:0] mm_interconnect_0_seg7_avalon_slave_address;                   \n\twire          mm_interconnect_0_seg7_avalon_slave_write;                     \n\twire          mm_interconnect_0_seg7_avalon_slave_read;                      \n\twire    [7:0] mm_interconnect_0_seg7_avalon_slave_readdata;                  \n\twire   [15:0] mm_interconnect_0_uart_s1_writedata;                           \n\twire    [2:0] mm_interconnect_0_uart_s1_address;                             \n\twire          mm_interconnect_0_uart_s1_chipselect;                          \n\twire          mm_interconnect_0_uart_s1_write;                               \n\twire          mm_interconnect_0_uart_s1_read;                                \n\twire   [15:0] mm_interconnect_0_uart_s1_readdata;                            \n\twire          mm_interconnect_0_uart_s1_begintransfer;                       \n\twire          hps_0_h2f_lw_axi_master_awvalid;                               \n\twire    [2:0] hps_0_h2f_lw_axi_master_arsize;                                \n\twire    [1:0] hps_0_h2f_lw_axi_master_arlock;                                \n\twire    [3:0] hps_0_h2f_lw_axi_master_awcache;                               \n\twire          hps_0_h2f_lw_axi_master_arready;                               \n\twire   [11:0] hps_0_h2f_lw_axi_master_arid;                                  \n\twire          hps_0_h2f_lw_axi_master_rready;                                \n\twire          hps_0_h2f_lw_axi_master_bready;                                \n\twire    [2:0] hps_0_h2f_lw_axi_master_awsize;                                \n\twire    [2:0] hps_0_h2f_lw_axi_master_awprot;                                \n\twire          hps_0_h2f_lw_axi_master_arvalid;                               \n\twire    [2:0] hps_0_h2f_lw_axi_master_arprot;                                \n\twire   [11:0] hps_0_h2f_lw_axi_master_bid;                                   \n\twire    [3:0] hps_0_h2f_lw_axi_master_arlen;                                 \n\twire          hps_0_h2f_lw_axi_master_awready;                               \n\twire   [11:0] hps_0_h2f_lw_axi_master_awid;                                  \n\twire          hps_0_h2f_lw_axi_master_bvalid;                                \n\twire   [11:0] hps_0_h2f_lw_axi_master_wid;                                   \n\twire    [1:0] hps_0_h2f_lw_axi_master_awlock;                                \n\twire    [1:0] hps_0_h2f_lw_axi_master_awburst;                               \n\twire    [1:0] hps_0_h2f_lw_axi_master_bresp;                                 \n\twire    [3:0] hps_0_h2f_lw_axi_master_wstrb;                                 \n\twire          hps_0_h2f_lw_axi_master_rvalid;                                \n\twire   [31:0] hps_0_h2f_lw_axi_master_wdata;                                 \n\twire          hps_0_h2f_lw_axi_master_wready;                                \n\twire    [1:0] hps_0_h2f_lw_axi_master_arburst;                               \n\twire   [31:0] hps_0_h2f_lw_axi_master_rdata;                                 \n\twire   [20:0] hps_0_h2f_lw_axi_master_araddr;                                \n\twire    [3:0] hps_0_h2f_lw_axi_master_arcache;                               \n\twire    [3:0] hps_0_h2f_lw_axi_master_awlen;                                 \n\twire   [20:0] hps_0_h2f_lw_axi_master_awaddr;                                \n\twire   [11:0] hps_0_h2f_lw_axi_master_rid;                                   \n\twire          hps_0_h2f_lw_axi_master_wvalid;                                \n\twire    [1:0] hps_0_h2f_lw_axi_master_rresp;                                 \n\twire          hps_0_h2f_lw_axi_master_wlast;                                 \n\twire          hps_0_h2f_lw_axi_master_rlast;                                 \n\twire          cpu_instruction_master_waitrequest;                            \n\twire   [19:0] cpu_instruction_master_address;                                \n\twire          cpu_instruction_master_read;                                   \n\twire   [31:0] cpu_instruction_master_readdata;                               \n\twire          cpu_instruction_master_readdatavalid;                          \n\twire   [31:0] mm_interconnect_0_key_s1_writedata;                            \n\twire    [1:0] mm_interconnect_0_key_s1_address;                              \n\twire          mm_interconnect_0_key_s1_chipselect;                           \n\twire          mm_interconnect_0_key_s1_write;                                \n\twire   [31:0] mm_interconnect_0_key_s1_readdata;                             \n\twire   [31:0] mm_interconnect_0_alt_vip_vfr_0_avalon_slave_writedata;        \n\twire    [4:0] mm_interconnect_0_alt_vip_vfr_0_avalon_slave_address;          \n\twire          mm_interconnect_0_alt_vip_vfr_0_avalon_slave_write;            \n\twire          mm_interconnect_0_alt_vip_vfr_0_avalon_slave_read;             \n\twire   [31:0] mm_interconnect_0_alt_vip_vfr_0_avalon_slave_readdata;         \n\twire   [31:0] mm_interconnect_0_ir_rx_avalon_slave_writedata;                \n\twire    [0:0] mm_interconnect_0_ir_rx_avalon_slave_address;                  \n\twire          mm_interconnect_0_ir_rx_avalon_slave_chipselect;               \n\twire          mm_interconnect_0_ir_rx_avalon_slave_write;                    \n\twire          mm_interconnect_0_ir_rx_avalon_slave_read;                     \n\twire   [31:0] mm_interconnect_0_ir_rx_avalon_slave_readdata;                 \n\twire   [15:0] mm_interconnect_0_alt_vip_cti_0_control_writedata;             \n\twire    [3:0] mm_interconnect_0_alt_vip_cti_0_control_address;               \n\twire          mm_interconnect_0_alt_vip_cti_0_control_write;                 \n\twire          mm_interconnect_0_alt_vip_cti_0_control_read;                  \n\twire   [15:0] mm_interconnect_0_alt_vip_cti_0_control_readdata;              \n\twire   [15:0] mm_interconnect_0_timer_stamp_s1_writedata;                    \n\twire    [2:0] mm_interconnect_0_timer_stamp_s1_address;                      \n\twire          mm_interconnect_0_timer_stamp_s1_chipselect;                   \n\twire          mm_interconnect_0_timer_stamp_s1_write;                        \n\twire   [15:0] mm_interconnect_0_timer_stamp_s1_readdata;                     \n\twire          mm_interconnect_1_sdram_s1_waitrequest;                        \n\twire   [15:0] mm_interconnect_1_sdram_s1_writedata;                          \n\twire   [24:0] mm_interconnect_1_sdram_s1_address;                            \n\twire          mm_interconnect_1_sdram_s1_chipselect;                         \n\twire          mm_interconnect_1_sdram_s1_write;                              \n\twire          mm_interconnect_1_sdram_s1_read;                               \n\twire   [15:0] mm_interconnect_1_sdram_s1_readdata;                           \n\twire          mm_interconnect_1_sdram_s1_readdatavalid;                      \n\twire    [1:0] mm_interconnect_1_sdram_s1_byteenable;                         \n\twire    [2:0] alt_vip_vfb_0_read_master_burstcount;                          \n\twire          alt_vip_vfb_0_read_master_waitrequest;                         \n\twire   [31:0] alt_vip_vfb_0_read_master_address;                             \n\twire          alt_vip_vfb_0_read_master_read;                                \n\twire   [31:0] alt_vip_vfb_0_read_master_readdata;                            \n\twire          alt_vip_vfb_0_read_master_readdatavalid;                       \n\twire    [2:0] alt_vip_vfb_0_write_master_burstcount;                         \n\twire          alt_vip_vfb_0_write_master_waitrequest;                        \n\twire   [31:0] alt_vip_vfb_0_write_master_writedata;                          \n\twire   [31:0] alt_vip_vfb_0_write_master_address;                            \n\twire          alt_vip_vfb_0_write_master_write;                              \n\twire    [0:0] clock_crossing_io_slow_m0_burstcount;                          \n\twire          clock_crossing_io_slow_m0_waitrequest;                         \n\twire    [8:0] clock_crossing_io_slow_m0_address;                             \n\twire   [31:0] clock_crossing_io_slow_m0_writedata;                           \n\twire          clock_crossing_io_slow_m0_write;                               \n\twire          clock_crossing_io_slow_m0_read;                                \n\twire   [31:0] clock_crossing_io_slow_m0_readdata;                            \n\twire          clock_crossing_io_slow_m0_debugaccess;                         \n\twire    [3:0] clock_crossing_io_slow_m0_byteenable;                          \n\twire          clock_crossing_io_slow_m0_readdatavalid;                       \n\twire   [31:0] mm_interconnect_2_i2c_scl_s1_writedata;                        \n\twire    [1:0] mm_interconnect_2_i2c_scl_s1_address;                          \n\twire          mm_interconnect_2_i2c_scl_s1_chipselect;                       \n\twire          mm_interconnect_2_i2c_scl_s1_write;                            \n\twire   [31:0] mm_interconnect_2_i2c_scl_s1_readdata;                         \n\twire    [0:0] mm_interconnect_2_sysid_control_slave_address;                 \n\twire   [31:0] mm_interconnect_2_sysid_control_slave_readdata;                \n\twire   [31:0] mm_interconnect_2_td_reset_n_s1_writedata;                     \n\twire    [1:0] mm_interconnect_2_td_reset_n_s1_address;                       \n\twire          mm_interconnect_2_td_reset_n_s1_chipselect;                    \n\twire          mm_interconnect_2_td_reset_n_s1_write;                         \n\twire   [31:0] mm_interconnect_2_td_reset_n_s1_readdata;                      \n\twire    [1:0] mm_interconnect_2_td_status_s1_address;                        \n\twire   [31:0] mm_interconnect_2_td_status_s1_readdata;                       \n\twire   [15:0] mm_interconnect_2_timer_s1_writedata;                          \n\twire    [2:0] mm_interconnect_2_timer_s1_address;                            \n\twire          mm_interconnect_2_timer_s1_chipselect;                         \n\twire          mm_interconnect_2_timer_s1_write;                              \n\twire   [15:0] mm_interconnect_2_timer_s1_readdata;                           \n\twire   [31:0] mm_interconnect_2_i2c_sda_s1_writedata;                        \n\twire    [1:0] mm_interconnect_2_i2c_sda_s1_address;                          \n\twire          mm_interconnect_2_i2c_sda_s1_chipselect;                       \n\twire          mm_interconnect_2_i2c_sda_s1_write;                            \n\twire   [31:0] mm_interconnect_2_i2c_sda_s1_readdata;                         \n\twire    [0:0] mm_clock_crossing_bridge_1_m0_burstcount;                      \n\twire          mm_clock_crossing_bridge_1_m0_waitrequest;                     \n\twire    [8:0] mm_clock_crossing_bridge_1_m0_address;                         \n\twire   [31:0] mm_clock_crossing_bridge_1_m0_writedata;                       \n\twire          mm_clock_crossing_bridge_1_m0_write;                           \n\twire          mm_clock_crossing_bridge_1_m0_read;                            \n\twire   [31:0] mm_clock_crossing_bridge_1_m0_readdata;                        \n\twire          mm_clock_crossing_bridge_1_m0_debugaccess;                     \n\twire    [3:0] mm_clock_crossing_bridge_1_m0_byteenable;                      \n\twire          mm_clock_crossing_bridge_1_m0_readdatavalid;                   \n\twire   [15:0] mm_interconnect_3_spi_0_spi_control_port_writedata;            \n\twire    [2:0] mm_interconnect_3_spi_0_spi_control_port_address;              \n\twire          mm_interconnect_3_spi_0_spi_control_port_chipselect;           \n\twire          mm_interconnect_3_spi_0_spi_control_port_write;                \n\twire          mm_interconnect_3_spi_0_spi_control_port_read;                 \n\twire   [15:0] mm_interconnect_3_spi_0_spi_control_port_readdata;             \n\twire          mm_interconnect_4_hps_0_f2h_axi_slave_awvalid;                 \n\twire    [2:0] mm_interconnect_4_hps_0_f2h_axi_slave_arsize;                  \n\twire    [1:0] mm_interconnect_4_hps_0_f2h_axi_slave_arlock;                  \n\twire    [3:0] mm_interconnect_4_hps_0_f2h_axi_slave_awcache;                 \n\twire          mm_interconnect_4_hps_0_f2h_axi_slave_arready;                 \n\twire    [7:0] mm_interconnect_4_hps_0_f2h_axi_slave_arid;                    \n\twire          mm_interconnect_4_hps_0_f2h_axi_slave_rready;                  \n\twire          mm_interconnect_4_hps_0_f2h_axi_slave_bready;                  \n\twire    [2:0] mm_interconnect_4_hps_0_f2h_axi_slave_awsize;                  \n\twire    [2:0] mm_interconnect_4_hps_0_f2h_axi_slave_awprot;                  \n\twire          mm_interconnect_4_hps_0_f2h_axi_slave_arvalid;                 \n\twire    [2:0] mm_interconnect_4_hps_0_f2h_axi_slave_arprot;                  \n\twire    [7:0] mm_interconnect_4_hps_0_f2h_axi_slave_bid;                     \n\twire    [3:0] mm_interconnect_4_hps_0_f2h_axi_slave_arlen;                   \n\twire          mm_interconnect_4_hps_0_f2h_axi_slave_awready;                 \n\twire    [7:0] mm_interconnect_4_hps_0_f2h_axi_slave_awid;                    \n\twire          mm_interconnect_4_hps_0_f2h_axi_slave_bvalid;                  \n\twire    [7:0] mm_interconnect_4_hps_0_f2h_axi_slave_wid;                     \n\twire    [1:0] mm_interconnect_4_hps_0_f2h_axi_slave_awlock;                  \n\twire    [1:0] mm_interconnect_4_hps_0_f2h_axi_slave_awburst;                 \n\twire    [1:0] mm_interconnect_4_hps_0_f2h_axi_slave_bresp;                   \n\twire    [4:0] mm_interconnect_4_hps_0_f2h_axi_slave_aruser;                  \n\twire    [4:0] mm_interconnect_4_hps_0_f2h_axi_slave_awuser;                  \n\twire   [15:0] mm_interconnect_4_hps_0_f2h_axi_slave_wstrb;                   \n\twire          mm_interconnect_4_hps_0_f2h_axi_slave_rvalid;                  \n\twire    [1:0] mm_interconnect_4_hps_0_f2h_axi_slave_arburst;                 \n\twire  [127:0] mm_interconnect_4_hps_0_f2h_axi_slave_wdata;                   \n\twire          mm_interconnect_4_hps_0_f2h_axi_slave_wready;                  \n\twire  [127:0] mm_interconnect_4_hps_0_f2h_axi_slave_rdata;                   \n\twire   [31:0] mm_interconnect_4_hps_0_f2h_axi_slave_araddr;                  \n\twire    [3:0] mm_interconnect_4_hps_0_f2h_axi_slave_arcache;                 \n\twire    [3:0] mm_interconnect_4_hps_0_f2h_axi_slave_awlen;                   \n\twire   [31:0] mm_interconnect_4_hps_0_f2h_axi_slave_awaddr;                  \n\twire    [7:0] mm_interconnect_4_hps_0_f2h_axi_slave_rid;                     \n\twire          mm_interconnect_4_hps_0_f2h_axi_slave_wvalid;                  \n\twire    [1:0] mm_interconnect_4_hps_0_f2h_axi_slave_rresp;                   \n\twire          mm_interconnect_4_hps_0_f2h_axi_slave_wlast;                   \n\twire          mm_interconnect_4_hps_0_f2h_axi_slave_rlast;                   \n\twire          alt_vip_vfr_0_avalon_master_waitrequest;                       \n\twire    [5:0] alt_vip_vfr_0_avalon_master_burstcount;                        \n\twire   [31:0] alt_vip_vfr_0_avalon_master_address;                           \n\twire          alt_vip_vfr_0_avalon_master_read;                              \n\twire  [127:0] alt_vip_vfr_0_avalon_master_readdata;                          \n\twire          alt_vip_vfr_0_avalon_master_readdatavalid;                     \n\twire          irq_mapper_receiver1_irq;                                      \n\twire          irq_mapper_receiver2_irq;                                      \n\twire          irq_mapper_receiver4_irq;                                      \n\twire   [31:0] cpu_d_irq_irq;                                                 \n\twire   [31:0] hps_0_f2h_irq0_irq;                                            \n\twire   [31:0] hps_0_f2h_irq1_irq;                                            \n\twire          irq_mapper_receiver0_irq;                                      \n\twire    [0:0] irq_synchronizer_receiver_irq;                                 \n\twire          irq_mapper_receiver3_irq;                                      \n\twire    [0:0] irq_synchronizer_001_receiver_irq;                             \n\twire          rst_controller_reset_out_reset;                                \n\twire          rst_controller_001_reset_out_reset;                            \n\twire          rst_controller_001_reset_out_reset_req;                        \n\twire          cpu_jtag_debug_module_reset_reset;                             \n\twire          rst_controller_002_reset_out_reset;                            \n\twire          rst_controller_002_reset_out_reset_req;                        \n\twire          rst_controller_003_reset_out_reset;                            \n\twire          rst_controller_004_reset_out_reset;                            \n\twire          rst_controller_005_reset_out_reset;                            \n\twire          rst_controller_006_reset_out_reset;                            \n\n\tDE1_SoC_QSYS_timer timer (\n\t\t.clk        (pll_sys_outclk2_clk),                   \n\t\t.reset_n    (~rst_controller_reset_out_reset),       \n\t\t.address    (mm_interconnect_2_timer_s1_address),    \n\t\t.writedata  (mm_interconnect_2_timer_s1_writedata),  \n\t\t.readdata   (mm_interconnect_2_timer_s1_readdata),   \n\t\t.chipselect (mm_interconnect_2_timer_s1_chipselect), \n\t\t.write_n    (~mm_interconnect_2_timer_s1_write),     \n\t\t.irq        (irq_synchronizer_receiver_irq)          \n\t);\n\n\tDE1_SoC_QSYS_onchip_memory2 onchip_memory2 (\n\t\t.clk        (pll_sys_outclk0_clk),                            \n\t\t.address    (mm_interconnect_0_onchip_memory2_s1_address),    \n\t\t.clken      (mm_interconnect_0_onchip_memory2_s1_clken),      \n\t\t.chipselect (mm_interconnect_0_onchip_memory2_s1_chipselect), \n\t\t.write      (mm_interconnect_0_onchip_memory2_s1_write),      \n\t\t.readdata   (mm_interconnect_0_onchip_memory2_s1_readdata),   \n\t\t.writedata  (mm_interconnect_0_onchip_memory2_s1_writedata),  \n\t\t.byteenable (mm_interconnect_0_onchip_memory2_s1_byteenable), \n\t\t.reset      (rst_controller_001_reset_out_reset),             \n\t\t.reset_req  (rst_controller_001_reset_out_reset_req)          \n\t);\n\n\tDE1_SoC_QSYS_sdram sdram (\n\t\t.clk            (pll_sys_outclk0_clk),                      \n\t\t.reset_n        (~rst_controller_002_reset_out_reset),      \n\t\t.az_addr        (mm_interconnect_1_sdram_s1_address),       \n\t\t.az_be_n        (~mm_interconnect_1_sdram_s1_byteenable),   \n\t\t.az_cs          (mm_interconnect_1_sdram_s1_chipselect),    \n\t\t.az_data        (mm_interconnect_1_sdram_s1_writedata),     \n\t\t.az_rd_n        (~mm_interconnect_1_sdram_s1_read),         \n\t\t.az_wr_n        (~mm_interconnect_1_sdram_s1_write),        \n\t\t.za_data        (mm_interconnect_1_sdram_s1_readdata),      \n\t\t.za_valid       (mm_interconnect_1_sdram_s1_readdatavalid), \n\t\t.za_waitrequest (mm_interconnect_1_sdram_s1_waitrequest),   \n\t\t.zs_addr        (zs_addr_from_the_sdram),                   \n\t\t.zs_ba          (zs_ba_from_the_sdram),                     \n\t\t.zs_cas_n       (zs_cas_n_from_the_sdram),                  \n\t\t.zs_cke         (zs_cke_from_the_sdram),                    \n\t\t.zs_cs_n        (zs_cs_n_from_the_sdram),                   \n\t\t.zs_dq          (zs_dq_to_and_from_the_sdram),              \n\t\t.zs_dqm         (zs_dqm_from_the_sdram),                    \n\t\t.zs_ras_n       (zs_ras_n_from_the_sdram),                  \n\t\t.zs_we_n        (zs_we_n_from_the_sdram)                    \n\t);\n\n\tDE1_SoC_QSYS_i2c_scl i2c_scl (\n\t\t.clk        (pll_sys_outclk2_clk),                     \n\t\t.reset_n    (~rst_controller_reset_out_reset),         \n\t\t.address    (mm_interconnect_2_i2c_scl_s1_address),    \n\t\t.write_n    (~mm_interconnect_2_i2c_scl_s1_write),     \n\t\t.writedata  (mm_interconnect_2_i2c_scl_s1_writedata),  \n\t\t.chipselect (mm_interconnect_2_i2c_scl_s1_chipselect), \n\t\t.readdata   (mm_interconnect_2_i2c_scl_s1_readdata),   \n\t\t.out_port   (out_port_from_the_i2c_scl)                \n\t);\n\n\tDE1_SoC_QSYS_i2c_sda i2c_sda (\n\t\t.clk        (pll_sys_outclk2_clk),                     \n\t\t.reset_n    (~rst_controller_reset_out_reset),         \n\t\t.address    (mm_interconnect_2_i2c_sda_s1_address),    \n\t\t.write_n    (~mm_interconnect_2_i2c_sda_s1_write),     \n\t\t.writedata  (mm_interconnect_2_i2c_sda_s1_writedata),  \n\t\t.chipselect (mm_interconnect_2_i2c_sda_s1_chipselect), \n\t\t.readdata   (mm_interconnect_2_i2c_sda_s1_readdata),   \n\t\t.bidir_port (bidir_port_to_and_from_the_i2c_sda)       \n\t);\n\n\tDE1_SoC_QSYS_jtag_uart jtag_uart (\n\t\t.clk            (pll_sys_outclk0_clk),                                       \n\t\t.rst_n          (~rst_controller_001_reset_out_reset),                       \n\t\t.av_chipselect  (mm_interconnect_0_jtag_uart_avalon_jtag_slave_chipselect),  \n\t\t.av_address     (mm_interconnect_0_jtag_uart_avalon_jtag_slave_address),     \n\t\t.av_read_n      (~mm_interconnect_0_jtag_uart_avalon_jtag_slave_read),       \n\t\t.av_readdata    (mm_interconnect_0_jtag_uart_avalon_jtag_slave_readdata),    \n\t\t.av_write_n     (~mm_interconnect_0_jtag_uart_avalon_jtag_slave_write),      \n\t\t.av_writedata   (mm_interconnect_0_jtag_uart_avalon_jtag_slave_writedata),   \n\t\t.av_waitrequest (mm_interconnect_0_jtag_uart_avalon_jtag_slave_waitrequest), \n\t\t.av_irq         (irq_mapper_receiver1_irq)                                   \n\t);\n\n\talt_vipcti131_Vid2IS #(\n\t\t.BPS                           (8),\n\t\t.NUMBER_OF_COLOUR_PLANES       (2),\n\t\t.COLOUR_PLANES_ARE_IN_PARALLEL (0),\n\t\t.SYNC_TO                       (0),\n\t\t.USE_EMBEDDED_SYNCS            (1),\n\t\t.ADD_DATA_ENABLE_SIGNAL        (0),\n\t\t.ACCEPT_COLOURS_IN_SEQ         (0),\n\t\t.USE_STD                       (0),\n\t\t.STD_WIDTH                     (1),\n\t\t.GENERATE_ANC                  (0),\n\t\t.INTERLACED                    (1),\n\t\t.H_ACTIVE_PIXELS_F0            (720),\n\t\t.V_ACTIVE_LINES_F0             (288),\n\t\t.V_ACTIVE_LINES_F1             (288),\n\t\t.FIFO_DEPTH                    (1440),\n\t\t.CLOCKS_ARE_SAME               (0),\n\t\t.USE_CONTROL                   (1),\n\t\t.GENERATE_SYNC                 (0)\n\t) alt_vip_cti_0 (\n\t\t.is_clk            (pll_sys_outclk0_clk),                               \n\t\t.rst               (rst_controller_002_reset_out_reset),                \n\t\t.av_address        (mm_interconnect_0_alt_vip_cti_0_control_address),   \n\t\t.av_read           (mm_interconnect_0_alt_vip_cti_0_control_read),      \n\t\t.av_readdata       (mm_interconnect_0_alt_vip_cti_0_control_readdata),  \n\t\t.av_write          (mm_interconnect_0_alt_vip_cti_0_control_write),     \n\t\t.av_writedata      (mm_interconnect_0_alt_vip_cti_0_control_writedata), \n\t\t.status_update_int (),                                                  \n\t\t.is_data           (alt_vip_cti_0_dout_data),                           \n\t\t.is_valid          (alt_vip_cti_0_dout_valid),                          \n\t\t.is_ready          (alt_vip_cti_0_dout_ready),                          \n\t\t.is_sop            (alt_vip_cti_0_dout_startofpacket),                  \n\t\t.is_eop            (alt_vip_cti_0_dout_endofpacket),                    \n\t\t.vid_clk           (vid_clk_to_the_alt_vip_cti_0),                      \n\t\t.vid_data          (vid_data_to_the_alt_vip_cti_0),                     \n\t\t.overflow          (overflow_from_the_alt_vip_cti_0),                   \n\t\t.vid_datavalid     (vid_datavalid_to_the_alt_vip_cti_0),                \n\t\t.vid_locked        (vid_locked_to_the_alt_vip_cti_0)                    \n\t);\n\n\tDE1_SoC_QSYS_alt_vip_cpr_0 alt_vip_cpr_0 (\n\t\t.clock               (pll_sys_outclk0_clk),                \n\t\t.reset               (rst_controller_002_reset_out_reset), \n\t\t.din0_ready          (alt_vip_cti_0_dout_ready),           \n\t\t.din0_valid          (alt_vip_cti_0_dout_valid),           \n\t\t.din0_data           (alt_vip_cti_0_dout_data),            \n\t\t.din0_startofpacket  (alt_vip_cti_0_dout_startofpacket),   \n\t\t.din0_endofpacket    (alt_vip_cti_0_dout_endofpacket),     \n\t\t.dout0_ready         (alt_vip_cpr_0_dout0_ready),          \n\t\t.dout0_valid         (alt_vip_cpr_0_dout0_valid),          \n\t\t.dout0_data          (alt_vip_cpr_0_dout0_data),           \n\t\t.dout0_startofpacket (alt_vip_cpr_0_dout0_startofpacket),  \n\t\t.dout0_endofpacket   (alt_vip_cpr_0_dout0_endofpacket)     \n\t);\n\n\tDE1_SoC_QSYS_alt_vip_dil_0 alt_vip_dil_0 (\n\t\t.clock              (pll_sys_outclk0_clk),                \n\t\t.reset              (rst_controller_002_reset_out_reset), \n\t\t.din_ready          (alt_vip_cpr_0_dout0_ready),          \n\t\t.din_valid          (alt_vip_cpr_0_dout0_valid),          \n\t\t.din_data           (alt_vip_cpr_0_dout0_data),           \n\t\t.din_startofpacket  (alt_vip_cpr_0_dout0_startofpacket),  \n\t\t.din_endofpacket    (alt_vip_cpr_0_dout0_endofpacket),    \n\t\t.dout_ready         (alt_vip_dil_0_dout_ready),           \n\t\t.dout_valid         (alt_vip_dil_0_dout_valid),           \n\t\t.dout_data          (alt_vip_dil_0_dout_data),            \n\t\t.dout_startofpacket (alt_vip_dil_0_dout_startofpacket),   \n\t\t.dout_endofpacket   (alt_vip_dil_0_dout_endofpacket)      \n\t);\n\n\tDE1_SoC_QSYS_alt_vip_crs_0 alt_vip_crs_0 (\n\t\t.clock              (pll_sys_outclk0_clk),                \n\t\t.reset              (rst_controller_002_reset_out_reset), \n\t\t.din_ready          (alt_vip_dil_0_dout_ready),           \n\t\t.din_valid          (alt_vip_dil_0_dout_valid),           \n\t\t.din_data           (alt_vip_dil_0_dout_data),            \n\t\t.din_startofpacket  (alt_vip_dil_0_dout_startofpacket),   \n\t\t.din_endofpacket    (alt_vip_dil_0_dout_endofpacket),     \n\t\t.dout_ready         (alt_vip_crs_0_dout_ready),           \n\t\t.dout_valid         (alt_vip_crs_0_dout_valid),           \n\t\t.dout_data          (alt_vip_crs_0_dout_data),            \n\t\t.dout_startofpacket (alt_vip_crs_0_dout_startofpacket),   \n\t\t.dout_endofpacket   (alt_vip_crs_0_dout_endofpacket)      \n\t);\n\n\tDE1_SoC_QSYS_alt_vip_csc_0 alt_vip_csc_0 (\n\t\t.clock              (pll_sys_outclk0_clk),                \n\t\t.reset              (rst_controller_002_reset_out_reset), \n\t\t.din_ready          (alt_vip_crs_0_dout_ready),           \n\t\t.din_valid          (alt_vip_crs_0_dout_valid),           \n\t\t.din_data           (alt_vip_crs_0_dout_data),            \n\t\t.din_startofpacket  (alt_vip_crs_0_dout_startofpacket),   \n\t\t.din_endofpacket    (alt_vip_crs_0_dout_endofpacket),     \n\t\t.dout_ready         (alt_vip_csc_0_dout_ready),           \n\t\t.dout_valid         (alt_vip_csc_0_dout_valid),           \n\t\t.dout_data          (alt_vip_csc_0_dout_data),            \n\t\t.dout_startofpacket (alt_vip_csc_0_dout_startofpacket),   \n\t\t.dout_endofpacket   (alt_vip_csc_0_dout_endofpacket)      \n\t);\n\n\tDE1_SoC_QSYS_alt_vip_clip_0 alt_vip_clip_0 (\n\t\t.clock              (pll_sys_outclk0_clk),                \n\t\t.reset              (rst_controller_002_reset_out_reset), \n\t\t.din_ready          (alt_vip_csc_0_dout_ready),           \n\t\t.din_valid          (alt_vip_csc_0_dout_valid),           \n\t\t.din_data           (alt_vip_csc_0_dout_data),            \n\t\t.din_startofpacket  (alt_vip_csc_0_dout_startofpacket),   \n\t\t.din_endofpacket    (alt_vip_csc_0_dout_endofpacket),     \n\t\t.dout_ready         (alt_vip_clip_0_dout_ready),          \n\t\t.dout_valid         (alt_vip_clip_0_dout_valid),          \n\t\t.dout_data          (alt_vip_clip_0_dout_data),           \n\t\t.dout_startofpacket (alt_vip_clip_0_dout_startofpacket),  \n\t\t.dout_endofpacket   (alt_vip_clip_0_dout_endofpacket)     \n\t);\n\n\tDE1_SoC_QSYS_alt_vip_vfb_0 alt_vip_vfb_0 (\n\t\t.clock                        (pll_sys_outclk0_clk),                     \n\t\t.reset                        (rst_controller_002_reset_out_reset),      \n\t\t.din_ready                    (alt_vip_cl_scl_0_dout_ready),             \n\t\t.din_valid                    (alt_vip_cl_scl_0_dout_valid),             \n\t\t.din_data                     (alt_vip_cl_scl_0_dout_data),              \n\t\t.din_startofpacket            (alt_vip_cl_scl_0_dout_startofpacket),     \n\t\t.din_endofpacket              (alt_vip_cl_scl_0_dout_endofpacket),       \n\t\t.dout_ready                   (alt_vip_vfb_0_dout_ready),                \n\t\t.dout_valid                   (alt_vip_vfb_0_dout_valid),                \n\t\t.dout_data                    (alt_vip_vfb_0_dout_data),                 \n\t\t.dout_startofpacket           (alt_vip_vfb_0_dout_startofpacket),        \n\t\t.dout_endofpacket             (alt_vip_vfb_0_dout_endofpacket),          \n\t\t.read_master_av_address       (alt_vip_vfb_0_read_master_address),       \n\t\t.read_master_av_read          (alt_vip_vfb_0_read_master_read),          \n\t\t.read_master_av_waitrequest   (alt_vip_vfb_0_read_master_waitrequest),   \n\t\t.read_master_av_readdatavalid (alt_vip_vfb_0_read_master_readdatavalid), \n\t\t.read_master_av_readdata      (alt_vip_vfb_0_read_master_readdata),      \n\t\t.read_master_av_burstcount    (alt_vip_vfb_0_read_master_burstcount),    \n\t\t.write_master_av_address      (alt_vip_vfb_0_write_master_address),      \n\t\t.write_master_av_write        (alt_vip_vfb_0_write_master_write),        \n\t\t.write_master_av_writedata    (alt_vip_vfb_0_write_master_writedata),    \n\t\t.write_master_av_waitrequest  (alt_vip_vfb_0_write_master_waitrequest),  \n\t\t.write_master_av_burstcount   (alt_vip_vfb_0_write_master_burstcount)    \n\t);\n\n\tDE1_SoC_QSYS_td_status td_status (\n\t\t.clk      (pll_sys_outclk2_clk),                     \n\t\t.reset_n  (~rst_controller_reset_out_reset),         \n\t\t.address  (mm_interconnect_2_td_status_s1_address),  \n\t\t.readdata (mm_interconnect_2_td_status_s1_readdata), \n\t\t.in_port  (in_port_to_the_td_status)                 \n\t);\n\n\tDE1_SoC_QSYS_i2c_scl td_reset_n (\n\t\t.clk        (pll_sys_outclk2_clk),                        \n\t\t.reset_n    (~rst_controller_reset_out_reset),            \n\t\t.address    (mm_interconnect_2_td_reset_n_s1_address),    \n\t\t.write_n    (~mm_interconnect_2_td_reset_n_s1_write),     \n\t\t.writedata  (mm_interconnect_2_td_reset_n_s1_writedata),  \n\t\t.chipselect (mm_interconnect_2_td_reset_n_s1_chipselect), \n\t\t.readdata   (mm_interconnect_2_td_reset_n_s1_readdata),   \n\t\t.out_port   (out_port_from_the_td_reset_n)                \n\t);\n\n\taltera_avalon_mm_clock_crossing_bridge #(\n\t\t.DATA_WIDTH          (32),\n\t\t.SYMBOL_WIDTH        (8),\n\t\t.ADDRESS_WIDTH       (9),\n\t\t.BURSTCOUNT_WIDTH    (1),\n\t\t.COMMAND_FIFO_DEPTH  (32),\n\t\t.RESPONSE_FIFO_DEPTH (256),\n\t\t.MASTER_SYNC_DEPTH   (3),\n\t\t.SLAVE_SYNC_DEPTH    (3)\n\t) clock_crossing_io_slow (\n\t\t.m0_clk           (pll_sys_outclk2_clk),                                       \n\t\t.m0_reset         (rst_controller_reset_out_reset),                            \n\t\t.s0_clk           (pll_sys_outclk0_clk),                                       \n\t\t.s0_reset         (rst_controller_002_reset_out_reset),                        \n\t\t.s0_waitrequest   (mm_interconnect_0_clock_crossing_io_slow_s0_waitrequest),   \n\t\t.s0_readdata      (mm_interconnect_0_clock_crossing_io_slow_s0_readdata),      \n\t\t.s0_readdatavalid (mm_interconnect_0_clock_crossing_io_slow_s0_readdatavalid), \n\t\t.s0_burstcount    (mm_interconnect_0_clock_crossing_io_slow_s0_burstcount),    \n\t\t.s0_writedata     (mm_interconnect_0_clock_crossing_io_slow_s0_writedata),     \n\t\t.s0_address       (mm_interconnect_0_clock_crossing_io_slow_s0_address),       \n\t\t.s0_write         (mm_interconnect_0_clock_crossing_io_slow_s0_write),         \n\t\t.s0_read          (mm_interconnect_0_clock_crossing_io_slow_s0_read),          \n\t\t.s0_byteenable    (mm_interconnect_0_clock_crossing_io_slow_s0_byteenable),    \n\t\t.s0_debugaccess   (mm_interconnect_0_clock_crossing_io_slow_s0_debugaccess),   \n\t\t.m0_waitrequest   (clock_crossing_io_slow_m0_waitrequest),                     \n\t\t.m0_readdata      (clock_crossing_io_slow_m0_readdata),                        \n\t\t.m0_readdatavalid (clock_crossing_io_slow_m0_readdatavalid),                   \n\t\t.m0_burstcount    (clock_crossing_io_slow_m0_burstcount),                      \n\t\t.m0_writedata     (clock_crossing_io_slow_m0_writedata),                       \n\t\t.m0_address       (clock_crossing_io_slow_m0_address),                         \n\t\t.m0_write         (clock_crossing_io_slow_m0_write),                           \n\t\t.m0_read          (clock_crossing_io_slow_m0_read),                            \n\t\t.m0_byteenable    (clock_crossing_io_slow_m0_byteenable),                      \n\t\t.m0_debugaccess   (clock_crossing_io_slow_m0_debugaccess)                      \n\t);\n\n\tDE1_SoC_QSYS_cpu cpu (\n\t\t.clk                                   (pll_sys_outclk0_clk),                                 \n\t\t.reset_n                               (~rst_controller_002_reset_out_reset),                 \n\t\t.reset_req                             (rst_controller_002_reset_out_reset_req),              \n\t\t.d_address                             (cpu_data_master_address),                             \n\t\t.d_byteenable                          (cpu_data_master_byteenable),                          \n\t\t.d_read                                (cpu_data_master_read),                                \n\t\t.d_readdata                            (cpu_data_master_readdata),                            \n\t\t.d_waitrequest                         (cpu_data_master_waitrequest),                         \n\t\t.d_write                               (cpu_data_master_write),                               \n\t\t.d_writedata                           (cpu_data_master_writedata),                           \n\t\t.d_readdatavalid                       (cpu_data_master_readdatavalid),                       \n\t\t.jtag_debug_module_debugaccess_to_roms (cpu_data_master_debugaccess),                         \n\t\t.i_address                             (cpu_instruction_master_address),                      \n\t\t.i_read                                (cpu_instruction_master_read),                         \n\t\t.i_readdata                            (cpu_instruction_master_readdata),                     \n\t\t.i_waitrequest                         (cpu_instruction_master_waitrequest),                  \n\t\t.i_readdatavalid                       (cpu_instruction_master_readdatavalid),                \n\t\t.d_irq                                 (cpu_d_irq_irq),                                       \n\t\t.jtag_debug_module_resetrequest        (cpu_jtag_debug_module_reset_reset),                   \n\t\t.jtag_debug_module_address             (mm_interconnect_0_cpu_jtag_debug_module_address),     \n\t\t.jtag_debug_module_byteenable          (mm_interconnect_0_cpu_jtag_debug_module_byteenable),  \n\t\t.jtag_debug_module_debugaccess         (mm_interconnect_0_cpu_jtag_debug_module_debugaccess), \n\t\t.jtag_debug_module_read                (mm_interconnect_0_cpu_jtag_debug_module_read),        \n\t\t.jtag_debug_module_readdata            (mm_interconnect_0_cpu_jtag_debug_module_readdata),    \n\t\t.jtag_debug_module_waitrequest         (mm_interconnect_0_cpu_jtag_debug_module_waitrequest), \n\t\t.jtag_debug_module_write               (mm_interconnect_0_cpu_jtag_debug_module_write),       \n\t\t.jtag_debug_module_writedata           (mm_interconnect_0_cpu_jtag_debug_module_writedata),   \n\t\t.no_ci_readra                          ()                                                     \n\t);\n\n\tDE1_SoC_QSYS_sysid sysid (\n\t\t.clock    (pll_sys_outclk2_clk),                            \n\t\t.reset_n  (~rst_controller_reset_out_reset),                \n\t\t.readdata (mm_interconnect_2_sysid_control_slave_readdata), \n\t\t.address  (mm_interconnect_2_sysid_control_slave_address)   \n\t);\n\n\tDE1_SoC_QSYS_alt_vip_cl_scl_0 #(\n\t\t.SYMBOLS_IN_SEQ      (1),\n\t\t.SYMBOLS_IN_PAR      (3),\n\t\t.BITS_PER_SYMBOL     (8),\n\t\t.EXTRA_PIPELINING    (0),\n\t\t.IS_422              (0),\n\t\t.NO_BLANKING         (1),\n\t\t.MAX_IN_WIDTH        (640),\n\t\t.MAX_IN_HEIGHT       (480),\n\t\t.MAX_OUT_WIDTH       (270),\n\t\t.MAX_OUT_HEIGHT      (200),\n\t\t.RUNTIME_CONTROL     (0),\n\t\t.ALWAYS_DOWNSCALE    (1),\n\t\t.ALGORITHM_NAME      (\"POLYPHASE\"),\n\t\t.DEFAULT_EDGE_THRESH (7),\n\t\t.DEFAULT_UPPER_BLUR  (15),\n\t\t.DEFAULT_LOWER_BLUR  (0),\n\t\t.ENABLE_FIR          (0),\n\t\t.ARE_IDENTICAL       (1),\n\t\t.V_TAPS              (8),\n\t\t.V_PHASES            (16),\n\t\t.H_TAPS              (8),\n\t\t.H_PHASES            (16),\n\t\t.V_SIGNED            (1),\n\t\t.V_INTEGER_BITS      (1),\n\t\t.V_FRACTION_BITS     (7),\n\t\t.H_SIGNED            (1),\n\t\t.H_INTEGER_BITS      (1),\n\t\t.H_FRACTION_BITS     (7),\n\t\t.PRESERVE_BITS       (0),\n\t\t.LOAD_AT_RUNTIME     (0),\n\t\t.V_BANKS             (1),\n\t\t.V_SYMMETRIC         (0),\n\t\t.V_FUNCTION          (\"LANCZOS_2\"),\n\t\t.V_COEFF_FILE        (\"<enter file name (including full path)>\"),\n\t\t.H_BANKS             (1),\n\t\t.H_SYMMETRIC         (0),\n\t\t.H_FUNCTION          (\"LANCZOS_2\"),\n\t\t.H_COEFF_FILE        (\"<enter file name (including full path)>\"),\n\t\t.IS_420              (0)\n\t) alt_vip_cl_scl_0 (\n\t\t.main_clock         (pll_sys_outclk0_clk),                 \n\t\t.main_reset         (rst_controller_002_reset_out_reset),  \n\t\t.din_data           (alt_vip_clip_0_dout_data),            \n\t\t.din_valid          (alt_vip_clip_0_dout_valid),           \n\t\t.din_startofpacket  (alt_vip_clip_0_dout_startofpacket),   \n\t\t.din_endofpacket    (alt_vip_clip_0_dout_endofpacket),     \n\t\t.din_ready          (alt_vip_clip_0_dout_ready),           \n\t\t.dout_data          (alt_vip_cl_scl_0_dout_data),          \n\t\t.dout_valid         (alt_vip_cl_scl_0_dout_valid),         \n\t\t.dout_startofpacket (alt_vip_cl_scl_0_dout_startofpacket), \n\t\t.dout_endofpacket   (alt_vip_cl_scl_0_dout_endofpacket),   \n\t\t.dout_ready         (alt_vip_cl_scl_0_dout_ready)          \n\t);\n\n\tDE1_SoC_QSYS_pll_sys pll_sys (\n\t\t.refclk   (clk_50),                             \n\t\t.rst      (rst_controller_003_reset_out_reset), \n\t\t.outclk_0 (pll_sys_outclk0_clk),                \n\t\t.outclk_1 (clk_sdram_clk),                      \n\t\t.outclk_2 (pll_sys_outclk2_clk),                \n\t\t.outclk_3 (clk_vga_clk),                        \n\t\t.outclk_4 (pll_sys_outclk4_clk),                \n\t\t.locked   (pll_0_locked_export)                 \n\t);\n\n\tSEG7_IF #(\n\t\t.SEG7_NUM       (6),\n\t\t.ADDR_WIDTH     (3),\n\t\t.DEFAULT_ACTIVE (1),\n\t\t.LOW_ACTIVE     (1)\n\t) seg7 (\n\t\t.s_address   (mm_interconnect_0_seg7_avalon_slave_address),   \n\t\t.s_read      (mm_interconnect_0_seg7_avalon_slave_read),      \n\t\t.s_readdata  (mm_interconnect_0_seg7_avalon_slave_readdata),  \n\t\t.s_write     (mm_interconnect_0_seg7_avalon_slave_write),     \n\t\t.s_writedata (mm_interconnect_0_seg7_avalon_slave_writedata), \n\t\t.SEG7        (seg7_conduit_end_export),                       \n\t\t.s_clk       (pll_sys_outclk2_clk),                           \n\t\t.s_reset     (rst_controller_reset_out_reset)                 \n\t);\n\n\tDE1_SoC_QSYS_sw sw (\n\t\t.clk        (pll_sys_outclk2_clk),                \n\t\t.reset_n    (~rst_controller_reset_out_reset),    \n\t\t.address    (mm_interconnect_0_sw_s1_address),    \n\t\t.write_n    (~mm_interconnect_0_sw_s1_write),     \n\t\t.writedata  (mm_interconnect_0_sw_s1_writedata),  \n\t\t.chipselect (mm_interconnect_0_sw_s1_chipselect), \n\t\t.readdata   (mm_interconnect_0_sw_s1_readdata),   \n\t\t.in_port    (sw_external_connection_export),      \n\t\t.irq        ()                                    \n\t);\n\n\tDE1_SoC_QSYS_key key (\n\t\t.clk        (pll_sys_outclk2_clk),                 \n\t\t.reset_n    (~rst_controller_reset_out_reset),     \n\t\t.address    (mm_interconnect_0_key_s1_address),    \n\t\t.write_n    (~mm_interconnect_0_key_s1_write),     \n\t\t.writedata  (mm_interconnect_0_key_s1_writedata),  \n\t\t.chipselect (mm_interconnect_0_key_s1_chipselect), \n\t\t.readdata   (mm_interconnect_0_key_s1_readdata),   \n\t\t.in_port    (key_external_connection_export),      \n\t\t.irq        ()                                     \n\t);\n\n\tDE1_SoC_QSYS_ledr ledr (\n\t\t.clk        (pll_sys_outclk2_clk),                  \n\t\t.reset_n    (~rst_controller_reset_out_reset),      \n\t\t.address    (mm_interconnect_0_ledr_s1_address),    \n\t\t.write_n    (~mm_interconnect_0_ledr_s1_write),     \n\t\t.writedata  (mm_interconnect_0_ledr_s1_writedata),  \n\t\t.chipselect (mm_interconnect_0_ledr_s1_chipselect), \n\t\t.readdata   (mm_interconnect_0_ledr_s1_readdata),   \n\t\t.out_port   (ledr_external_connection_export)       \n\t);\n\n\tDE1_SoC_QSYS_spi_0 spi_0 (\n\t\t.clk           (pll_sys_outclk4_clk),                                 \n\t\t.reset_n       (~rst_controller_004_reset_out_reset),                 \n\t\t.data_from_cpu (mm_interconnect_3_spi_0_spi_control_port_writedata),  \n\t\t.data_to_cpu   (mm_interconnect_3_spi_0_spi_control_port_readdata),   \n\t\t.mem_addr      (mm_interconnect_3_spi_0_spi_control_port_address),    \n\t\t.read_n        (~mm_interconnect_3_spi_0_spi_control_port_read),      \n\t\t.spi_select    (mm_interconnect_3_spi_0_spi_control_port_chipselect), \n\t\t.write_n       (~mm_interconnect_3_spi_0_spi_control_port_write),     \n\t\t.irq           (irq_synchronizer_001_receiver_irq),                   \n\t\t.MISO          (spi_0_external_MISO),                                 \n\t\t.MOSI          (spi_0_external_MOSI),                                 \n\t\t.SCLK          (spi_0_external_SCLK),                                 \n\t\t.SS_n          (spi_0_external_SS_n)                                  \n\t);\n\n\tAUDIO_IF audio (\n\t\t.avs_s1_address       (mm_interconnect_0_audio_avalon_slave_address),   \n\t\t.avs_s1_read          (mm_interconnect_0_audio_avalon_slave_read),      \n\t\t.avs_s1_readdata      (mm_interconnect_0_audio_avalon_slave_readdata),  \n\t\t.avs_s1_write         (mm_interconnect_0_audio_avalon_slave_write),     \n\t\t.avs_s1_writedata     (mm_interconnect_0_audio_avalon_slave_writedata), \n\t\t.avs_s1_clk           (pll_audio_outclk0_clk),                          \n\t\t.avs_s1_reset         (rst_controller_005_reset_out_reset),             \n\t\t.avs_s1_export_XCK    (audio_conduit_end_XCK),                          \n\t\t.avs_s1_export_ADCDAT (audio_conduit_end_ADCDAT),                       \n\t\t.avs_s1_export_ADCLRC (audio_conduit_end_ADCLRC),                       \n\t\t.avs_s1_export_DACDAT (audio_conduit_end_DACDAT),                       \n\t\t.avs_s1_export_DACLRC (audio_conduit_end_DACLRC),                       \n\t\t.avs_s1_export_BCLK   (audio_conduit_end_BCLK)                          \n\t);\n\n\tDE1_SoC_QSYS_pll_audio pll_audio (\n\t\t.refclk   (clk_50),                             \n\t\t.rst      (rst_controller_003_reset_out_reset), \n\t\t.outclk_0 (pll_audio_outclk0_clk),              \n\t\t.locked   (pll_audio_locked_export)             \n\t);\n\n\tDE1_SoC_QSYS_uart uart (\n\t\t.clk           (pll_sys_outclk0_clk),                     \n\t\t.reset_n       (~rst_controller_002_reset_out_reset),     \n\t\t.address       (mm_interconnect_0_uart_s1_address),       \n\t\t.begintransfer (mm_interconnect_0_uart_s1_begintransfer), \n\t\t.chipselect    (mm_interconnect_0_uart_s1_chipselect),    \n\t\t.read_n        (~mm_interconnect_0_uart_s1_read),         \n\t\t.write_n       (~mm_interconnect_0_uart_s1_write),        \n\t\t.writedata     (mm_interconnect_0_uart_s1_writedata),     \n\t\t.readdata      (mm_interconnect_0_uart_s1_readdata),      \n\t\t.dataavailable (),                                        \n\t\t.readyfordata  (),                                        \n\t\t.rxd           (uart_external_connection_rxd),            \n\t\t.txd           (uart_external_connection_txd),            \n\t\t.irq           (irq_mapper_receiver2_irq)                 \n\t);\n\n\tDE1_SoC_QSYS_timer_stamp timer_stamp (\n\t\t.clk        (pll_sys_outclk0_clk),                         \n\t\t.reset_n    (~rst_controller_002_reset_out_reset),         \n\t\t.address    (mm_interconnect_0_timer_stamp_s1_address),    \n\t\t.writedata  (mm_interconnect_0_timer_stamp_s1_writedata),  \n\t\t.readdata   (mm_interconnect_0_timer_stamp_s1_readdata),   \n\t\t.chipselect (mm_interconnect_0_timer_stamp_s1_chipselect), \n\t\t.write_n    (~mm_interconnect_0_timer_stamp_s1_write),     \n\t\t.irq        (irq_mapper_receiver4_irq)                     \n\t);\n\n\taltera_avalon_mm_clock_crossing_bridge #(\n\t\t.DATA_WIDTH          (32),\n\t\t.SYMBOL_WIDTH        (8),\n\t\t.ADDRESS_WIDTH       (9),\n\t\t.BURSTCOUNT_WIDTH    (1),\n\t\t.COMMAND_FIFO_DEPTH  (32),\n\t\t.RESPONSE_FIFO_DEPTH (64),\n\t\t.MASTER_SYNC_DEPTH   (3),\n\t\t.SLAVE_SYNC_DEPTH    (3)\n\t) mm_clock_crossing_bridge_1 (\n\t\t.m0_clk           (pll_sys_outclk4_clk),                                           \n\t\t.m0_reset         (rst_controller_004_reset_out_reset),                            \n\t\t.s0_clk           (pll_sys_outclk0_clk),                                           \n\t\t.s0_reset         (rst_controller_002_reset_out_reset),                            \n\t\t.s0_waitrequest   (mm_interconnect_0_mm_clock_crossing_bridge_1_s0_waitrequest),   \n\t\t.s0_readdata      (mm_interconnect_0_mm_clock_crossing_bridge_1_s0_readdata),      \n\t\t.s0_readdatavalid (mm_interconnect_0_mm_clock_crossing_bridge_1_s0_readdatavalid), \n\t\t.s0_burstcount    (mm_interconnect_0_mm_clock_crossing_bridge_1_s0_burstcount),    \n\t\t.s0_writedata     (mm_interconnect_0_mm_clock_crossing_bridge_1_s0_writedata),     \n\t\t.s0_address       (mm_interconnect_0_mm_clock_crossing_bridge_1_s0_address),       \n\t\t.s0_write         (mm_interconnect_0_mm_clock_crossing_bridge_1_s0_write),         \n\t\t.s0_read          (mm_interconnect_0_mm_clock_crossing_bridge_1_s0_read),          \n\t\t.s0_byteenable    (mm_interconnect_0_mm_clock_crossing_bridge_1_s0_byteenable),    \n\t\t.s0_debugaccess   (mm_interconnect_0_mm_clock_crossing_bridge_1_s0_debugaccess),   \n\t\t.m0_waitrequest   (mm_clock_crossing_bridge_1_m0_waitrequest),                     \n\t\t.m0_readdata      (mm_clock_crossing_bridge_1_m0_readdata),                        \n\t\t.m0_readdatavalid (mm_clock_crossing_bridge_1_m0_readdatavalid),                   \n\t\t.m0_burstcount    (mm_clock_crossing_bridge_1_m0_burstcount),                      \n\t\t.m0_writedata     (mm_clock_crossing_bridge_1_m0_writedata),                       \n\t\t.m0_address       (mm_clock_crossing_bridge_1_m0_address),                         \n\t\t.m0_write         (mm_clock_crossing_bridge_1_m0_write),                           \n\t\t.m0_read          (mm_clock_crossing_bridge_1_m0_read),                            \n\t\t.m0_byteenable    (mm_clock_crossing_bridge_1_m0_byteenable),                      \n\t\t.m0_debugaccess   (mm_clock_crossing_bridge_1_m0_debugaccess)                      \n\t);\n\n\tDE1_SoC_QSYS_hps_0 #(\n\t\t.F2S_Width (3),\n\t\t.S2F_Width (2)\n\t) hps_0 (\n\t\t.mem_a                    (memory_mem_a),                                  \n\t\t.mem_ba                   (memory_mem_ba),                                 \n\t\t.mem_ck                   (memory_mem_ck),                                 \n\t\t.mem_ck_n                 (memory_mem_ck_n),                               \n\t\t.mem_cke                  (memory_mem_cke),                                \n\t\t.mem_cs_n                 (memory_mem_cs_n),                               \n\t\t.mem_ras_n                (memory_mem_ras_n),                              \n\t\t.mem_cas_n                (memory_mem_cas_n),                              \n\t\t.mem_we_n                 (memory_mem_we_n),                               \n\t\t.mem_reset_n              (memory_mem_reset_n),                            \n\t\t.mem_dq                   (memory_mem_dq),                                 \n\t\t.mem_dqs                  (memory_mem_dqs),                                \n\t\t.mem_dqs_n                (memory_mem_dqs_n),                              \n\t\t.mem_odt                  (memory_mem_odt),                                \n\t\t.mem_dm                   (memory_mem_dm),                                 \n\t\t.oct_rzqin                (memory_oct_rzqin),                              \n\t\t.hps_io_emac1_inst_TX_CLK (hps_io_hps_io_emac1_inst_TX_CLK),               \n\t\t.hps_io_emac1_inst_TXD0   (hps_io_hps_io_emac1_inst_TXD0),                 \n\t\t.hps_io_emac1_inst_TXD1   (hps_io_hps_io_emac1_inst_TXD1),                 \n\t\t.hps_io_emac1_inst_TXD2   (hps_io_hps_io_emac1_inst_TXD2),                 \n\t\t.hps_io_emac1_inst_TXD3   (hps_io_hps_io_emac1_inst_TXD3),                 \n\t\t.hps_io_emac1_inst_RXD0   (hps_io_hps_io_emac1_inst_RXD0),                 \n\t\t.hps_io_emac1_inst_MDIO   (hps_io_hps_io_emac1_inst_MDIO),                 \n\t\t.hps_io_emac1_inst_MDC    (hps_io_hps_io_emac1_inst_MDC),                  \n\t\t.hps_io_emac1_inst_RX_CTL (hps_io_hps_io_emac1_inst_RX_CTL),               \n\t\t.hps_io_emac1_inst_TX_CTL (hps_io_hps_io_emac1_inst_TX_CTL),               \n\t\t.hps_io_emac1_inst_RX_CLK (hps_io_hps_io_emac1_inst_RX_CLK),               \n\t\t.hps_io_emac1_inst_RXD1   (hps_io_hps_io_emac1_inst_RXD1),                 \n\t\t.hps_io_emac1_inst_RXD2   (hps_io_hps_io_emac1_inst_RXD2),                 \n\t\t.hps_io_emac1_inst_RXD3   (hps_io_hps_io_emac1_inst_RXD3),                 \n\t\t.hps_io_qspi_inst_IO0     (hps_io_hps_io_qspi_inst_IO0),                   \n\t\t.hps_io_qspi_inst_IO1     (hps_io_hps_io_qspi_inst_IO1),                   \n\t\t.hps_io_qspi_inst_IO2     (hps_io_hps_io_qspi_inst_IO2),                   \n\t\t.hps_io_qspi_inst_IO3     (hps_io_hps_io_qspi_inst_IO3),                   \n\t\t.hps_io_qspi_inst_SS0     (hps_io_hps_io_qspi_inst_SS0),                   \n\t\t.hps_io_qspi_inst_CLK     (hps_io_hps_io_qspi_inst_CLK),                   \n\t\t.hps_io_sdio_inst_CMD     (hps_io_hps_io_sdio_inst_CMD),                   \n\t\t.hps_io_sdio_inst_D0      (hps_io_hps_io_sdio_inst_D0),                    \n\t\t.hps_io_sdio_inst_D1      (hps_io_hps_io_sdio_inst_D1),                    \n\t\t.hps_io_sdio_inst_CLK     (hps_io_hps_io_sdio_inst_CLK),                   \n\t\t.hps_io_sdio_inst_D2      (hps_io_hps_io_sdio_inst_D2),                    \n\t\t.hps_io_sdio_inst_D3      (hps_io_hps_io_sdio_inst_D3),                    \n\t\t.hps_io_usb1_inst_D0      (hps_io_hps_io_usb1_inst_D0),                    \n\t\t.hps_io_usb1_inst_D1      (hps_io_hps_io_usb1_inst_D1),                    \n\t\t.hps_io_usb1_inst_D2      (hps_io_hps_io_usb1_inst_D2),                    \n\t\t.hps_io_usb1_inst_D3      (hps_io_hps_io_usb1_inst_D3),                    \n\t\t.hps_io_usb1_inst_D4      (hps_io_hps_io_usb1_inst_D4),                    \n\t\t.hps_io_usb1_inst_D5      (hps_io_hps_io_usb1_inst_D5),                    \n\t\t.hps_io_usb1_inst_D6      (hps_io_hps_io_usb1_inst_D6),                    \n\t\t.hps_io_usb1_inst_D7      (hps_io_hps_io_usb1_inst_D7),                    \n\t\t.hps_io_usb1_inst_CLK     (hps_io_hps_io_usb1_inst_CLK),                   \n\t\t.hps_io_usb1_inst_STP     (hps_io_hps_io_usb1_inst_STP),                   \n\t\t.hps_io_usb1_inst_DIR     (hps_io_hps_io_usb1_inst_DIR),                   \n\t\t.hps_io_usb1_inst_NXT     (hps_io_hps_io_usb1_inst_NXT),                   \n\t\t.hps_io_spim1_inst_CLK    (hps_io_hps_io_spim1_inst_CLK),                  \n\t\t.hps_io_spim1_inst_MOSI   (hps_io_hps_io_spim1_inst_MOSI),                 \n\t\t.hps_io_spim1_inst_MISO   (hps_io_hps_io_spim1_inst_MISO),                 \n\t\t.hps_io_spim1_inst_SS0    (hps_io_hps_io_spim1_inst_SS0),                  \n\t\t.hps_io_uart0_inst_RX     (hps_io_hps_io_uart0_inst_RX),                   \n\t\t.hps_io_uart0_inst_TX     (hps_io_hps_io_uart0_inst_TX),                   \n\t\t.hps_io_i2c0_inst_SDA     (hps_io_hps_io_i2c0_inst_SDA),                   \n\t\t.hps_io_i2c0_inst_SCL     (hps_io_hps_io_i2c0_inst_SCL),                   \n\t\t.hps_io_i2c1_inst_SDA     (hps_io_hps_io_i2c1_inst_SDA),                   \n\t\t.hps_io_i2c1_inst_SCL     (hps_io_hps_io_i2c1_inst_SCL),                   \n\t\t.hps_io_gpio_inst_GPIO09  (hps_io_hps_io_gpio_inst_GPIO09),                \n\t\t.hps_io_gpio_inst_GPIO35  (hps_io_hps_io_gpio_inst_GPIO35),                \n\t\t.hps_io_gpio_inst_GPIO40  (hps_io_hps_io_gpio_inst_GPIO40),                \n\t\t.hps_io_gpio_inst_GPIO41  (hps_io_hps_io_gpio_inst_GPIO41),                \n\t\t.hps_io_gpio_inst_GPIO48  (hps_io_hps_io_gpio_inst_GPIO48),                \n\t\t.hps_io_gpio_inst_GPIO53  (hps_io_hps_io_gpio_inst_GPIO53),                \n\t\t.hps_io_gpio_inst_GPIO54  (hps_io_hps_io_gpio_inst_GPIO54),                \n\t\t.hps_io_gpio_inst_GPIO61  (hps_io_hps_io_gpio_inst_GPIO61),                \n\t\t.h2f_rst_n                (hps_0_h2f_reset_reset_n),                       \n\t\t.h2f_axi_clk              (clk_50),                                        \n\t\t.h2f_AWID                 (),                                              \n\t\t.h2f_AWADDR               (),                                              \n\t\t.h2f_AWLEN                (),                                              \n\t\t.h2f_AWSIZE               (),                                              \n\t\t.h2f_AWBURST              (),                                              \n\t\t.h2f_AWLOCK               (),                                              \n\t\t.h2f_AWCACHE              (),                                              \n\t\t.h2f_AWPROT               (),                                              \n\t\t.h2f_AWVALID              (),                                              \n\t\t.h2f_AWREADY              (),                                              \n\t\t.h2f_WID                  (),                                              \n\t\t.h2f_WDATA                (),                                              \n\t\t.h2f_WSTRB                (),                                              \n\t\t.h2f_WLAST                (),                                              \n\t\t.h2f_WVALID               (),                                              \n\t\t.h2f_WREADY               (),                                              \n\t\t.h2f_BID                  (),                                              \n\t\t.h2f_BRESP                (),                                              \n\t\t.h2f_BVALID               (),                                              \n\t\t.h2f_BREADY               (),                                              \n\t\t.h2f_ARID                 (),                                              \n\t\t.h2f_ARADDR               (),                                              \n\t\t.h2f_ARLEN                (),                                              \n\t\t.h2f_ARSIZE               (),                                              \n\t\t.h2f_ARBURST              (),                                              \n\t\t.h2f_ARLOCK               (),                                              \n\t\t.h2f_ARCACHE              (),                                              \n\t\t.h2f_ARPROT               (),                                              \n\t\t.h2f_ARVALID              (),                                              \n\t\t.h2f_ARREADY              (),                                              \n\t\t.h2f_RID                  (),                                              \n\t\t.h2f_RDATA                (),                                              \n\t\t.h2f_RRESP                (),                                              \n\t\t.h2f_RLAST                (),                                              \n\t\t.h2f_RVALID               (),                                              \n\t\t.h2f_RREADY               (),                                              \n\t\t.f2h_axi_clk              (clk_50),                                        \n\t\t.f2h_AWID                 (mm_interconnect_4_hps_0_f2h_axi_slave_awid),    \n\t\t.f2h_AWADDR               (mm_interconnect_4_hps_0_f2h_axi_slave_awaddr),  \n\t\t.f2h_AWLEN                (mm_interconnect_4_hps_0_f2h_axi_slave_awlen),   \n\t\t.f2h_AWSIZE               (mm_interconnect_4_hps_0_f2h_axi_slave_awsize),  \n\t\t.f2h_AWBURST              (mm_interconnect_4_hps_0_f2h_axi_slave_awburst), \n\t\t.f2h_AWLOCK               (mm_interconnect_4_hps_0_f2h_axi_slave_awlock),  \n\t\t.f2h_AWCACHE              (mm_interconnect_4_hps_0_f2h_axi_slave_awcache), \n\t\t.f2h_AWPROT               (mm_interconnect_4_hps_0_f2h_axi_slave_awprot),  \n\t\t.f2h_AWVALID              (mm_interconnect_4_hps_0_f2h_axi_slave_awvalid), \n\t\t.f2h_AWREADY              (mm_interconnect_4_hps_0_f2h_axi_slave_awready), \n\t\t.f2h_AWUSER               (mm_interconnect_4_hps_0_f2h_axi_slave_awuser),  \n\t\t.f2h_WID                  (mm_interconnect_4_hps_0_f2h_axi_slave_wid),     \n\t\t.f2h_WDATA                (mm_interconnect_4_hps_0_f2h_axi_slave_wdata),   \n\t\t.f2h_WSTRB                (mm_interconnect_4_hps_0_f2h_axi_slave_wstrb),   \n\t\t.f2h_WLAST                (mm_interconnect_4_hps_0_f2h_axi_slave_wlast),   \n\t\t.f2h_WVALID               (mm_interconnect_4_hps_0_f2h_axi_slave_wvalid),  \n\t\t.f2h_WREADY               (mm_interconnect_4_hps_0_f2h_axi_slave_wready),  \n\t\t.f2h_BID                  (mm_interconnect_4_hps_0_f2h_axi_slave_bid),     \n\t\t.f2h_BRESP                (mm_interconnect_4_hps_0_f2h_axi_slave_bresp),   \n\t\t.f2h_BVALID               (mm_interconnect_4_hps_0_f2h_axi_slave_bvalid),  \n\t\t.f2h_BREADY               (mm_interconnect_4_hps_0_f2h_axi_slave_bready),  \n\t\t.f2h_ARID                 (mm_interconnect_4_hps_0_f2h_axi_slave_arid),    \n\t\t.f2h_ARADDR               (mm_interconnect_4_hps_0_f2h_axi_slave_araddr),  \n\t\t.f2h_ARLEN                (mm_interconnect_4_hps_0_f2h_axi_slave_arlen),   \n\t\t.f2h_ARSIZE               (mm_interconnect_4_hps_0_f2h_axi_slave_arsize),  \n\t\t.f2h_ARBURST              (mm_interconnect_4_hps_0_f2h_axi_slave_arburst), \n\t\t.f2h_ARLOCK               (mm_interconnect_4_hps_0_f2h_axi_slave_arlock),  \n\t\t.f2h_ARCACHE              (mm_interconnect_4_hps_0_f2h_axi_slave_arcache), \n\t\t.f2h_ARPROT               (mm_interconnect_4_hps_0_f2h_axi_slave_arprot),  \n\t\t.f2h_ARVALID              (mm_interconnect_4_hps_0_f2h_axi_slave_arvalid), \n\t\t.f2h_ARREADY              (mm_interconnect_4_hps_0_f2h_axi_slave_arready), \n\t\t.f2h_ARUSER               (mm_interconnect_4_hps_0_f2h_axi_slave_aruser),  \n\t\t.f2h_RID                  (mm_interconnect_4_hps_0_f2h_axi_slave_rid),     \n\t\t.f2h_RDATA                (mm_interconnect_4_hps_0_f2h_axi_slave_rdata),   \n\t\t.f2h_RRESP                (mm_interconnect_4_hps_0_f2h_axi_slave_rresp),   \n\t\t.f2h_RLAST                (mm_interconnect_4_hps_0_f2h_axi_slave_rlast),   \n\t\t.f2h_RVALID               (mm_interconnect_4_hps_0_f2h_axi_slave_rvalid),  \n\t\t.f2h_RREADY               (mm_interconnect_4_hps_0_f2h_axi_slave_rready),  \n\t\t.h2f_lw_axi_clk           (clk_50),                                        \n\t\t.h2f_lw_AWID              (hps_0_h2f_lw_axi_master_awid),                  \n\t\t.h2f_lw_AWADDR            (hps_0_h2f_lw_axi_master_awaddr),                \n\t\t.h2f_lw_AWLEN             (hps_0_h2f_lw_axi_master_awlen),                 \n\t\t.h2f_lw_AWSIZE            (hps_0_h2f_lw_axi_master_awsize),                \n\t\t.h2f_lw_AWBURST           (hps_0_h2f_lw_axi_master_awburst),               \n\t\t.h2f_lw_AWLOCK            (hps_0_h2f_lw_axi_master_awlock),                \n\t\t.h2f_lw_AWCACHE           (hps_0_h2f_lw_axi_master_awcache),               \n\t\t.h2f_lw_AWPROT            (hps_0_h2f_lw_axi_master_awprot),                \n\t\t.h2f_lw_AWVALID           (hps_0_h2f_lw_axi_master_awvalid),               \n\t\t.h2f_lw_AWREADY           (hps_0_h2f_lw_axi_master_awready),               \n\t\t.h2f_lw_WID               (hps_0_h2f_lw_axi_master_wid),                   \n\t\t.h2f_lw_WDATA             (hps_0_h2f_lw_axi_master_wdata),                 \n\t\t.h2f_lw_WSTRB             (hps_0_h2f_lw_axi_master_wstrb),                 \n\t\t.h2f_lw_WLAST             (hps_0_h2f_lw_axi_master_wlast),                 \n\t\t.h2f_lw_WVALID            (hps_0_h2f_lw_axi_master_wvalid),                \n\t\t.h2f_lw_WREADY            (hps_0_h2f_lw_axi_master_wready),                \n\t\t.h2f_lw_BID               (hps_0_h2f_lw_axi_master_bid),                   \n\t\t.h2f_lw_BRESP             (hps_0_h2f_lw_axi_master_bresp),                 \n\t\t.h2f_lw_BVALID            (hps_0_h2f_lw_axi_master_bvalid),                \n\t\t.h2f_lw_BREADY            (hps_0_h2f_lw_axi_master_bready),                \n\t\t.h2f_lw_ARID              (hps_0_h2f_lw_axi_master_arid),                  \n\t\t.h2f_lw_ARADDR            (hps_0_h2f_lw_axi_master_araddr),                \n\t\t.h2f_lw_ARLEN             (hps_0_h2f_lw_axi_master_arlen),                 \n\t\t.h2f_lw_ARSIZE            (hps_0_h2f_lw_axi_master_arsize),                \n\t\t.h2f_lw_ARBURST           (hps_0_h2f_lw_axi_master_arburst),               \n\t\t.h2f_lw_ARLOCK            (hps_0_h2f_lw_axi_master_arlock),                \n\t\t.h2f_lw_ARCACHE           (hps_0_h2f_lw_axi_master_arcache),               \n\t\t.h2f_lw_ARPROT            (hps_0_h2f_lw_axi_master_arprot),                \n\t\t.h2f_lw_ARVALID           (hps_0_h2f_lw_axi_master_arvalid),               \n\t\t.h2f_lw_ARREADY           (hps_0_h2f_lw_axi_master_arready),               \n\t\t.h2f_lw_RID               (hps_0_h2f_lw_axi_master_rid),                   \n\t\t.h2f_lw_RDATA             (hps_0_h2f_lw_axi_master_rdata),                 \n\t\t.h2f_lw_RRESP             (hps_0_h2f_lw_axi_master_rresp),                 \n\t\t.h2f_lw_RLAST             (hps_0_h2f_lw_axi_master_rlast),                 \n\t\t.h2f_lw_RVALID            (hps_0_h2f_lw_axi_master_rvalid),                \n\t\t.h2f_lw_RREADY            (hps_0_h2f_lw_axi_master_rready),                \n\t\t.f2h_irq_p0               (hps_0_f2h_irq0_irq),                            \n\t\t.f2h_irq_p1               (hps_0_f2h_irq1_irq)                             \n\t);\n\n\talt_vipvfr131_vfr #(\n\t\t.BITS_PER_PIXEL_PER_COLOR_PLANE (8),\n\t\t.NUMBER_OF_CHANNELS_IN_PARALLEL (4),\n\t\t.NUMBER_OF_CHANNELS_IN_SEQUENCE (1),\n\t\t.MAX_IMAGE_WIDTH                (1024),\n\t\t.MAX_IMAGE_HEIGHT               (768),\n\t\t.MEM_PORT_WIDTH                 (128),\n\t\t.RMASTER_FIFO_DEPTH             (64),\n\t\t.RMASTER_BURST_TARGET           (32),\n\t\t.CLOCKS_ARE_SEPARATE            (1)\n\t) alt_vip_vfr_0 (\n\t\t.clock                (pll_sys_outclk0_clk),                                    \n\t\t.reset                (rst_controller_002_reset_out_reset),                     \n\t\t.master_clock         (pll_sys_outclk0_clk),                                    \n\t\t.master_reset         (rst_controller_002_reset_out_reset),                     \n\t\t.slave_address        (mm_interconnect_0_alt_vip_vfr_0_avalon_slave_address),   \n\t\t.slave_write          (mm_interconnect_0_alt_vip_vfr_0_avalon_slave_write),     \n\t\t.slave_writedata      (mm_interconnect_0_alt_vip_vfr_0_avalon_slave_writedata), \n\t\t.slave_read           (mm_interconnect_0_alt_vip_vfr_0_avalon_slave_read),      \n\t\t.slave_readdata       (mm_interconnect_0_alt_vip_vfr_0_avalon_slave_readdata),  \n\t\t.slave_irq            (),                                                       \n\t\t.dout_data            (alt_vip_vfr_0_avalon_streaming_source_data),             \n\t\t.dout_valid           (alt_vip_vfr_0_avalon_streaming_source_valid),            \n\t\t.dout_ready           (alt_vip_vfr_0_avalon_streaming_source_ready),            \n\t\t.dout_startofpacket   (alt_vip_vfr_0_avalon_streaming_source_startofpacket),    \n\t\t.dout_endofpacket     (alt_vip_vfr_0_avalon_streaming_source_endofpacket),      \n\t\t.master_address       (alt_vip_vfr_0_avalon_master_address),                    \n\t\t.master_burstcount    (alt_vip_vfr_0_avalon_master_burstcount),                 \n\t\t.master_readdata      (alt_vip_vfr_0_avalon_master_readdata),                   \n\t\t.master_read          (alt_vip_vfr_0_avalon_master_read),                       \n\t\t.master_readdatavalid (alt_vip_vfr_0_avalon_master_readdatavalid),              \n\t\t.master_waitrequest   (alt_vip_vfr_0_avalon_master_waitrequest)                 \n\t);\n\n\talt_vipitc131_IS2Vid #(\n\t\t.NUMBER_OF_COLOUR_PLANES       (3),\n\t\t.COLOUR_PLANES_ARE_IN_PARALLEL (1),\n\t\t.BPS                           (8),\n\t\t.INTERLACED                    (0),\n\t\t.H_ACTIVE_PIXELS               (1024),\n\t\t.V_ACTIVE_LINES                (768),\n\t\t.ACCEPT_COLOURS_IN_SEQ         (0),\n\t\t.FIFO_DEPTH                    (10240),\n\t\t.CLOCKS_ARE_SAME               (0),\n\t\t.USE_CONTROL                   (0),\n\t\t.NO_OF_MODES                   (1),\n\t\t.THRESHOLD                     (10239),\n\t\t.STD_WIDTH                     (1),\n\t\t.GENERATE_SYNC                 (0),\n\t\t.USE_EMBEDDED_SYNCS            (0),\n\t\t.AP_LINE                       (0),\n\t\t.V_BLANK                       (0),\n\t\t.H_BLANK                       (0),\n\t\t.H_SYNC_LENGTH                 (136),\n\t\t.H_FRONT_PORCH                 (24),\n\t\t.H_BACK_PORCH                  (160),\n\t\t.V_SYNC_LENGTH                 (6),\n\t\t.V_FRONT_PORCH                 (3),\n\t\t.V_BACK_PORCH                  (29),\n\t\t.F_RISING_EDGE                 (0),\n\t\t.F_FALLING_EDGE                (0),\n\t\t.FIELD0_V_RISING_EDGE          (0),\n\t\t.FIELD0_V_BLANK                (0),\n\t\t.FIELD0_V_SYNC_LENGTH          (0),\n\t\t.FIELD0_V_FRONT_PORCH          (0),\n\t\t.FIELD0_V_BACK_PORCH           (0),\n\t\t.ANC_LINE                      (0),\n\t\t.FIELD0_ANC_LINE               (0)\n\t) alt_vip_itc_0 (\n\t\t.is_clk        (pll_sys_outclk0_clk),                       \n\t\t.rst           (rst_controller_002_reset_out_reset),        \n\t\t.is_data       (alt_vip_mix_0_dout_data),                   \n\t\t.is_valid      (alt_vip_mix_0_dout_valid),                  \n\t\t.is_ready      (alt_vip_mix_0_dout_ready),                  \n\t\t.is_sop        (alt_vip_mix_0_dout_startofpacket),          \n\t\t.is_eop        (alt_vip_mix_0_dout_endofpacket),            \n\t\t.vid_clk       (alt_vip_itc_0_clocked_video_vid_clk),       \n\t\t.vid_data      (alt_vip_itc_0_clocked_video_vid_data),      \n\t\t.underflow     (alt_vip_itc_0_clocked_video_underflow),     \n\t\t.vid_datavalid (alt_vip_itc_0_clocked_video_vid_datavalid), \n\t\t.vid_v_sync    (alt_vip_itc_0_clocked_video_vid_v_sync),    \n\t\t.vid_h_sync    (alt_vip_itc_0_clocked_video_vid_h_sync),    \n\t\t.vid_f         (alt_vip_itc_0_clocked_video_vid_f),         \n\t\t.vid_h         (alt_vip_itc_0_clocked_video_vid_h),         \n\t\t.vid_v         (alt_vip_itc_0_clocked_video_vid_v)          \n\t);\n\n\tDE1_SoC_QSYS_alt_vip_cpr_1 alt_vip_cpr_1 (\n\t\t.clock               (pll_sys_outclk0_clk),                                 \n\t\t.reset               (rst_controller_002_reset_out_reset),                  \n\t\t.din0_ready          (alt_vip_vfr_0_avalon_streaming_source_ready),         \n\t\t.din0_valid          (alt_vip_vfr_0_avalon_streaming_source_valid),         \n\t\t.din0_data           (alt_vip_vfr_0_avalon_streaming_source_data),          \n\t\t.din0_startofpacket  (alt_vip_vfr_0_avalon_streaming_source_startofpacket), \n\t\t.din0_endofpacket    (alt_vip_vfr_0_avalon_streaming_source_endofpacket),   \n\t\t.dout0_ready         (alt_vip_cpr_1_dout0_ready),                           \n\t\t.dout0_valid         (alt_vip_cpr_1_dout0_valid),                           \n\t\t.dout0_data          (alt_vip_cpr_1_dout0_data),                            \n\t\t.dout0_startofpacket (alt_vip_cpr_1_dout0_startofpacket),                   \n\t\t.dout0_endofpacket   (alt_vip_cpr_1_dout0_endofpacket)                      \n\t);\n\n\tDE1_SoC_QSYS_alt_vip_mix_0 alt_vip_mix_0 (\n\t\t.clock                 (pll_sys_outclk0_clk),                                \n\t\t.reset                 (rst_controller_002_reset_out_reset),                 \n\t\t.din_0_ready           (alt_vip_cpr_1_dout0_ready),                          \n\t\t.din_0_valid           (alt_vip_cpr_1_dout0_valid),                          \n\t\t.din_0_data            (alt_vip_cpr_1_dout0_data),                           \n\t\t.din_0_startofpacket   (alt_vip_cpr_1_dout0_startofpacket),                  \n\t\t.din_0_endofpacket     (alt_vip_cpr_1_dout0_endofpacket),                    \n\t\t.din_1_ready           (alt_vip_cpr_2_dout0_ready),                          \n\t\t.din_1_valid           (alt_vip_cpr_2_dout0_valid),                          \n\t\t.din_1_data            (alt_vip_cpr_2_dout0_data),                           \n\t\t.din_1_startofpacket   (alt_vip_cpr_2_dout0_startofpacket),                  \n\t\t.din_1_endofpacket     (alt_vip_cpr_2_dout0_endofpacket),                    \n\t\t.dout_ready            (alt_vip_mix_0_dout_ready),                           \n\t\t.dout_valid            (alt_vip_mix_0_dout_valid),                           \n\t\t.dout_data             (alt_vip_mix_0_dout_data),                            \n\t\t.dout_startofpacket    (alt_vip_mix_0_dout_startofpacket),                   \n\t\t.dout_endofpacket      (alt_vip_mix_0_dout_endofpacket),                     \n\t\t.control_av_chipselect (mm_interconnect_0_alt_vip_mix_0_control_chipselect), \n\t\t.control_av_write      (mm_interconnect_0_alt_vip_mix_0_control_write),      \n\t\t.control_av_address    (mm_interconnect_0_alt_vip_mix_0_control_address),    \n\t\t.control_av_writedata  (mm_interconnect_0_alt_vip_mix_0_control_writedata),  \n\t\t.control_av_readdata   (mm_interconnect_0_alt_vip_mix_0_control_readdata)    \n\t);\n\n\tDE1_SoC_QSYS_alt_vip_cpr_2 alt_vip_cpr_2 (\n\t\t.clock               (pll_sys_outclk0_clk),                \n\t\t.reset               (rst_controller_002_reset_out_reset), \n\t\t.din0_ready          (alt_vip_vfb_0_dout_ready),           \n\t\t.din0_valid          (alt_vip_vfb_0_dout_valid),           \n\t\t.din0_data           (alt_vip_vfb_0_dout_data),            \n\t\t.din0_startofpacket  (alt_vip_vfb_0_dout_startofpacket),   \n\t\t.din0_endofpacket    (alt_vip_vfb_0_dout_endofpacket),     \n\t\t.dout0_ready         (alt_vip_cpr_2_dout0_ready),          \n\t\t.dout0_valid         (alt_vip_cpr_2_dout0_valid),          \n\t\t.dout0_data          (alt_vip_cpr_2_dout0_data),           \n\t\t.dout0_startofpacket (alt_vip_cpr_2_dout0_startofpacket),  \n\t\t.dout0_endofpacket   (alt_vip_cpr_2_dout0_endofpacket)     \n\t);\n\n\tTERASIC_IR_RX_FIFO ir_rx (\n\t\t.s_read      (mm_interconnect_0_ir_rx_avalon_slave_read),        \n\t\t.s_cs_n      (~mm_interconnect_0_ir_rx_avalon_slave_chipselect), \n\t\t.s_readdata  (mm_interconnect_0_ir_rx_avalon_slave_readdata),    \n\t\t.s_write     (mm_interconnect_0_ir_rx_avalon_slave_write),       \n\t\t.s_writedata (mm_interconnect_0_ir_rx_avalon_slave_writedata),   \n\t\t.s_address   (mm_interconnect_0_ir_rx_avalon_slave_address),     \n\t\t.clk         (clk_50),                                           \n\t\t.reset_n     (~rst_controller_003_reset_out_reset),              \n\t\t.ir          (ir_rx_conduit_end_export),                         \n\t\t.irq         ()                                                  \n\t);\n\n\tDE1_SoC_QSYS_mm_interconnect_0 mm_interconnect_0 (\n\t\t.hps_0_h2f_lw_axi_master_awid                                        (hps_0_h2f_lw_axi_master_awid),                                  \n\t\t.hps_0_h2f_lw_axi_master_awaddr                                      (hps_0_h2f_lw_axi_master_awaddr),                                \n\t\t.hps_0_h2f_lw_axi_master_awlen                                       (hps_0_h2f_lw_axi_master_awlen),                                 \n\t\t.hps_0_h2f_lw_axi_master_awsize                                      (hps_0_h2f_lw_axi_master_awsize),                                \n\t\t.hps_0_h2f_lw_axi_master_awburst                                     (hps_0_h2f_lw_axi_master_awburst),                               \n\t\t.hps_0_h2f_lw_axi_master_awlock                                      (hps_0_h2f_lw_axi_master_awlock),                                \n\t\t.hps_0_h2f_lw_axi_master_awcache                                     (hps_0_h2f_lw_axi_master_awcache),                               \n\t\t.hps_0_h2f_lw_axi_master_awprot                                      (hps_0_h2f_lw_axi_master_awprot),                                \n\t\t.hps_0_h2f_lw_axi_master_awvalid                                     (hps_0_h2f_lw_axi_master_awvalid),                               \n\t\t.hps_0_h2f_lw_axi_master_awready                                     (hps_0_h2f_lw_axi_master_awready),                               \n\t\t.hps_0_h2f_lw_axi_master_wid                                         (hps_0_h2f_lw_axi_master_wid),                                   \n\t\t.hps_0_h2f_lw_axi_master_wdata                                       (hps_0_h2f_lw_axi_master_wdata),                                 \n\t\t.hps_0_h2f_lw_axi_master_wstrb                                       (hps_0_h2f_lw_axi_master_wstrb),                                 \n\t\t.hps_0_h2f_lw_axi_master_wlast                                       (hps_0_h2f_lw_axi_master_wlast),                                 \n\t\t.hps_0_h2f_lw_axi_master_wvalid                                      (hps_0_h2f_lw_axi_master_wvalid),                                \n\t\t.hps_0_h2f_lw_axi_master_wready                                      (hps_0_h2f_lw_axi_master_wready),                                \n\t\t.hps_0_h2f_lw_axi_master_bid                                         (hps_0_h2f_lw_axi_master_bid),                                   \n\t\t.hps_0_h2f_lw_axi_master_bresp                                       (hps_0_h2f_lw_axi_master_bresp),                                 \n\t\t.hps_0_h2f_lw_axi_master_bvalid                                      (hps_0_h2f_lw_axi_master_bvalid),                                \n\t\t.hps_0_h2f_lw_axi_master_bready                                      (hps_0_h2f_lw_axi_master_bready),                                \n\t\t.hps_0_h2f_lw_axi_master_arid                                        (hps_0_h2f_lw_axi_master_arid),                                  \n\t\t.hps_0_h2f_lw_axi_master_araddr                                      (hps_0_h2f_lw_axi_master_araddr),                                \n\t\t.hps_0_h2f_lw_axi_master_arlen                                       (hps_0_h2f_lw_axi_master_arlen),                                 \n\t\t.hps_0_h2f_lw_axi_master_arsize                                      (hps_0_h2f_lw_axi_master_arsize),                                \n\t\t.hps_0_h2f_lw_axi_master_arburst                                     (hps_0_h2f_lw_axi_master_arburst),                               \n\t\t.hps_0_h2f_lw_axi_master_arlock                                      (hps_0_h2f_lw_axi_master_arlock),                                \n\t\t.hps_0_h2f_lw_axi_master_arcache                                     (hps_0_h2f_lw_axi_master_arcache),                               \n\t\t.hps_0_h2f_lw_axi_master_arprot                                      (hps_0_h2f_lw_axi_master_arprot),                                \n\t\t.hps_0_h2f_lw_axi_master_arvalid                                     (hps_0_h2f_lw_axi_master_arvalid),                               \n\t\t.hps_0_h2f_lw_axi_master_arready                                     (hps_0_h2f_lw_axi_master_arready),                               \n\t\t.hps_0_h2f_lw_axi_master_rid                                         (hps_0_h2f_lw_axi_master_rid),                                   \n\t\t.hps_0_h2f_lw_axi_master_rdata                                       (hps_0_h2f_lw_axi_master_rdata),                                 \n\t\t.hps_0_h2f_lw_axi_master_rresp                                       (hps_0_h2f_lw_axi_master_rresp),                                 \n\t\t.hps_0_h2f_lw_axi_master_rlast                                       (hps_0_h2f_lw_axi_master_rlast),                                 \n\t\t.hps_0_h2f_lw_axi_master_rvalid                                      (hps_0_h2f_lw_axi_master_rvalid),                                \n\t\t.hps_0_h2f_lw_axi_master_rready                                      (hps_0_h2f_lw_axi_master_rready),                                \n\t\t.clk_50_clk_clk                                                      (clk_50),                                                        \n\t\t.pll_audio_outclk0_clk                                               (pll_audio_outclk0_clk),                                         \n\t\t.pll_sys_outclk0_clk                                                 (pll_sys_outclk0_clk),                                           \n\t\t.pll_sys_outclk2_clk                                                 (pll_sys_outclk2_clk),                                           \n\t\t.audio_clock_sink_reset_reset_bridge_in_reset_reset                  (rst_controller_005_reset_out_reset),                            \n\t\t.cpu_reset_n_reset_bridge_in_reset_reset                             (rst_controller_002_reset_out_reset),                            \n\t\t.hps_0_h2f_lw_axi_master_agent_clk_reset_reset_bridge_in_reset_reset (rst_controller_006_reset_out_reset),                            \n\t\t.ir_rx_clock_sink_reset_reset_bridge_in_reset_reset                  (rst_controller_003_reset_out_reset),                            \n\t\t.ledr_reset_reset_bridge_in_reset_reset                              (rst_controller_reset_out_reset),                                \n\t\t.onchip_memory2_reset1_reset_bridge_in_reset_reset                   (rst_controller_001_reset_out_reset),                            \n\t\t.cpu_data_master_address                                             (cpu_data_master_address),                                       \n\t\t.cpu_data_master_waitrequest                                         (cpu_data_master_waitrequest),                                   \n\t\t.cpu_data_master_byteenable                                          (cpu_data_master_byteenable),                                    \n\t\t.cpu_data_master_read                                                (cpu_data_master_read),                                          \n\t\t.cpu_data_master_readdata                                            (cpu_data_master_readdata),                                      \n\t\t.cpu_data_master_readdatavalid                                       (cpu_data_master_readdatavalid),                                 \n\t\t.cpu_data_master_write                                               (cpu_data_master_write),                                         \n\t\t.cpu_data_master_writedata                                           (cpu_data_master_writedata),                                     \n\t\t.cpu_data_master_debugaccess                                         (cpu_data_master_debugaccess),                                   \n\t\t.cpu_instruction_master_address                                      (cpu_instruction_master_address),                                \n\t\t.cpu_instruction_master_waitrequest                                  (cpu_instruction_master_waitrequest),                            \n\t\t.cpu_instruction_master_read                                         (cpu_instruction_master_read),                                   \n\t\t.cpu_instruction_master_readdata                                     (cpu_instruction_master_readdata),                               \n\t\t.cpu_instruction_master_readdatavalid                                (cpu_instruction_master_readdatavalid),                          \n\t\t.alt_vip_cti_0_control_address                                       (mm_interconnect_0_alt_vip_cti_0_control_address),               \n\t\t.alt_vip_cti_0_control_write                                         (mm_interconnect_0_alt_vip_cti_0_control_write),                 \n\t\t.alt_vip_cti_0_control_read                                          (mm_interconnect_0_alt_vip_cti_0_control_read),                  \n\t\t.alt_vip_cti_0_control_readdata                                      (mm_interconnect_0_alt_vip_cti_0_control_readdata),              \n\t\t.alt_vip_cti_0_control_writedata                                     (mm_interconnect_0_alt_vip_cti_0_control_writedata),             \n\t\t.alt_vip_mix_0_control_address                                       (mm_interconnect_0_alt_vip_mix_0_control_address),               \n\t\t.alt_vip_mix_0_control_write                                         (mm_interconnect_0_alt_vip_mix_0_control_write),                 \n\t\t.alt_vip_mix_0_control_readdata                                      (mm_interconnect_0_alt_vip_mix_0_control_readdata),              \n\t\t.alt_vip_mix_0_control_writedata                                     (mm_interconnect_0_alt_vip_mix_0_control_writedata),             \n\t\t.alt_vip_mix_0_control_chipselect                                    (mm_interconnect_0_alt_vip_mix_0_control_chipselect),            \n\t\t.alt_vip_vfr_0_avalon_slave_address                                  (mm_interconnect_0_alt_vip_vfr_0_avalon_slave_address),          \n\t\t.alt_vip_vfr_0_avalon_slave_write                                    (mm_interconnect_0_alt_vip_vfr_0_avalon_slave_write),            \n\t\t.alt_vip_vfr_0_avalon_slave_read                                     (mm_interconnect_0_alt_vip_vfr_0_avalon_slave_read),             \n\t\t.alt_vip_vfr_0_avalon_slave_readdata                                 (mm_interconnect_0_alt_vip_vfr_0_avalon_slave_readdata),         \n\t\t.alt_vip_vfr_0_avalon_slave_writedata                                (mm_interconnect_0_alt_vip_vfr_0_avalon_slave_writedata),        \n\t\t.audio_avalon_slave_address                                          (mm_interconnect_0_audio_avalon_slave_address),                  \n\t\t.audio_avalon_slave_write                                            (mm_interconnect_0_audio_avalon_slave_write),                    \n\t\t.audio_avalon_slave_read                                             (mm_interconnect_0_audio_avalon_slave_read),                     \n\t\t.audio_avalon_slave_readdata                                         (mm_interconnect_0_audio_avalon_slave_readdata),                 \n\t\t.audio_avalon_slave_writedata                                        (mm_interconnect_0_audio_avalon_slave_writedata),                \n\t\t.clock_crossing_io_slow_s0_address                                   (mm_interconnect_0_clock_crossing_io_slow_s0_address),           \n\t\t.clock_crossing_io_slow_s0_write                                     (mm_interconnect_0_clock_crossing_io_slow_s0_write),             \n\t\t.clock_crossing_io_slow_s0_read                                      (mm_interconnect_0_clock_crossing_io_slow_s0_read),              \n\t\t.clock_crossing_io_slow_s0_readdata                                  (mm_interconnect_0_clock_crossing_io_slow_s0_readdata),          \n\t\t.clock_crossing_io_slow_s0_writedata                                 (mm_interconnect_0_clock_crossing_io_slow_s0_writedata),         \n\t\t.clock_crossing_io_slow_s0_burstcount                                (mm_interconnect_0_clock_crossing_io_slow_s0_burstcount),        \n\t\t.clock_crossing_io_slow_s0_byteenable                                (mm_interconnect_0_clock_crossing_io_slow_s0_byteenable),        \n\t\t.clock_crossing_io_slow_s0_readdatavalid                             (mm_interconnect_0_clock_crossing_io_slow_s0_readdatavalid),     \n\t\t.clock_crossing_io_slow_s0_waitrequest                               (mm_interconnect_0_clock_crossing_io_slow_s0_waitrequest),       \n\t\t.clock_crossing_io_slow_s0_debugaccess                               (mm_interconnect_0_clock_crossing_io_slow_s0_debugaccess),       \n\t\t.cpu_jtag_debug_module_address                                       (mm_interconnect_0_cpu_jtag_debug_module_address),               \n\t\t.cpu_jtag_debug_module_write                                         (mm_interconnect_0_cpu_jtag_debug_module_write),                 \n\t\t.cpu_jtag_debug_module_read                                          (mm_interconnect_0_cpu_jtag_debug_module_read),                  \n\t\t.cpu_jtag_debug_module_readdata                                      (mm_interconnect_0_cpu_jtag_debug_module_readdata),              \n\t\t.cpu_jtag_debug_module_writedata                                     (mm_interconnect_0_cpu_jtag_debug_module_writedata),             \n\t\t.cpu_jtag_debug_module_byteenable                                    (mm_interconnect_0_cpu_jtag_debug_module_byteenable),            \n\t\t.cpu_jtag_debug_module_waitrequest                                   (mm_interconnect_0_cpu_jtag_debug_module_waitrequest),           \n\t\t.cpu_jtag_debug_module_debugaccess                                   (mm_interconnect_0_cpu_jtag_debug_module_debugaccess),           \n\t\t.ir_rx_avalon_slave_address                                          (mm_interconnect_0_ir_rx_avalon_slave_address),                  \n\t\t.ir_rx_avalon_slave_write                                            (mm_interconnect_0_ir_rx_avalon_slave_write),                    \n\t\t.ir_rx_avalon_slave_read                                             (mm_interconnect_0_ir_rx_avalon_slave_read),                     \n\t\t.ir_rx_avalon_slave_readdata                                         (mm_interconnect_0_ir_rx_avalon_slave_readdata),                 \n\t\t.ir_rx_avalon_slave_writedata                                        (mm_interconnect_0_ir_rx_avalon_slave_writedata),                \n\t\t.ir_rx_avalon_slave_chipselect                                       (mm_interconnect_0_ir_rx_avalon_slave_chipselect),               \n\t\t.jtag_uart_avalon_jtag_slave_address                                 (mm_interconnect_0_jtag_uart_avalon_jtag_slave_address),         \n\t\t.jtag_uart_avalon_jtag_slave_write                                   (mm_interconnect_0_jtag_uart_avalon_jtag_slave_write),           \n\t\t.jtag_uart_avalon_jtag_slave_read                                    (mm_interconnect_0_jtag_uart_avalon_jtag_slave_read),            \n\t\t.jtag_uart_avalon_jtag_slave_readdata                                (mm_interconnect_0_jtag_uart_avalon_jtag_slave_readdata),        \n\t\t.jtag_uart_avalon_jtag_slave_writedata                               (mm_interconnect_0_jtag_uart_avalon_jtag_slave_writedata),       \n\t\t.jtag_uart_avalon_jtag_slave_waitrequest                             (mm_interconnect_0_jtag_uart_avalon_jtag_slave_waitrequest),     \n\t\t.jtag_uart_avalon_jtag_slave_chipselect                              (mm_interconnect_0_jtag_uart_avalon_jtag_slave_chipselect),      \n\t\t.key_s1_address                                                      (mm_interconnect_0_key_s1_address),                              \n\t\t.key_s1_write                                                        (mm_interconnect_0_key_s1_write),                                \n\t\t.key_s1_readdata                                                     (mm_interconnect_0_key_s1_readdata),                             \n\t\t.key_s1_writedata                                                    (mm_interconnect_0_key_s1_writedata),                            \n\t\t.key_s1_chipselect                                                   (mm_interconnect_0_key_s1_chipselect),                           \n\t\t.ledr_s1_address                                                     (mm_interconnect_0_ledr_s1_address),                             \n\t\t.ledr_s1_write                                                       (mm_interconnect_0_ledr_s1_write),                               \n\t\t.ledr_s1_readdata                                                    (mm_interconnect_0_ledr_s1_readdata),                            \n\t\t.ledr_s1_writedata                                                   (mm_interconnect_0_ledr_s1_writedata),                           \n\t\t.ledr_s1_chipselect                                                  (mm_interconnect_0_ledr_s1_chipselect),                          \n\t\t.mm_clock_crossing_bridge_1_s0_address                               (mm_interconnect_0_mm_clock_crossing_bridge_1_s0_address),       \n\t\t.mm_clock_crossing_bridge_1_s0_write                                 (mm_interconnect_0_mm_clock_crossing_bridge_1_s0_write),         \n\t\t.mm_clock_crossing_bridge_1_s0_read                                  (mm_interconnect_0_mm_clock_crossing_bridge_1_s0_read),          \n\t\t.mm_clock_crossing_bridge_1_s0_readdata                              (mm_interconnect_0_mm_clock_crossing_bridge_1_s0_readdata),      \n\t\t.mm_clock_crossing_bridge_1_s0_writedata                             (mm_interconnect_0_mm_clock_crossing_bridge_1_s0_writedata),     \n\t\t.mm_clock_crossing_bridge_1_s0_burstcount                            (mm_interconnect_0_mm_clock_crossing_bridge_1_s0_burstcount),    \n\t\t.mm_clock_crossing_bridge_1_s0_byteenable                            (mm_interconnect_0_mm_clock_crossing_bridge_1_s0_byteenable),    \n\t\t.mm_clock_crossing_bridge_1_s0_readdatavalid                         (mm_interconnect_0_mm_clock_crossing_bridge_1_s0_readdatavalid), \n\t\t.mm_clock_crossing_bridge_1_s0_waitrequest                           (mm_interconnect_0_mm_clock_crossing_bridge_1_s0_waitrequest),   \n\t\t.mm_clock_crossing_bridge_1_s0_debugaccess                           (mm_interconnect_0_mm_clock_crossing_bridge_1_s0_debugaccess),   \n\t\t.onchip_memory2_s1_address                                           (mm_interconnect_0_onchip_memory2_s1_address),                   \n\t\t.onchip_memory2_s1_write                                             (mm_interconnect_0_onchip_memory2_s1_write),                     \n\t\t.onchip_memory2_s1_readdata                                          (mm_interconnect_0_onchip_memory2_s1_readdata),                  \n\t\t.onchip_memory2_s1_writedata                                         (mm_interconnect_0_onchip_memory2_s1_writedata),                 \n\t\t.onchip_memory2_s1_byteenable                                        (mm_interconnect_0_onchip_memory2_s1_byteenable),                \n\t\t.onchip_memory2_s1_chipselect                                        (mm_interconnect_0_onchip_memory2_s1_chipselect),                \n\t\t.onchip_memory2_s1_clken                                             (mm_interconnect_0_onchip_memory2_s1_clken),                     \n\t\t.seg7_avalon_slave_address                                           (mm_interconnect_0_seg7_avalon_slave_address),                   \n\t\t.seg7_avalon_slave_write                                             (mm_interconnect_0_seg7_avalon_slave_write),                     \n\t\t.seg7_avalon_slave_read                                              (mm_interconnect_0_seg7_avalon_slave_read),                      \n\t\t.seg7_avalon_slave_readdata                                          (mm_interconnect_0_seg7_avalon_slave_readdata),                  \n\t\t.seg7_avalon_slave_writedata                                         (mm_interconnect_0_seg7_avalon_slave_writedata),                 \n\t\t.sw_s1_address                                                       (mm_interconnect_0_sw_s1_address),                               \n\t\t.sw_s1_write                                                         (mm_interconnect_0_sw_s1_write),                                 \n\t\t.sw_s1_readdata                                                      (mm_interconnect_0_sw_s1_readdata),                              \n\t\t.sw_s1_writedata                                                     (mm_interconnect_0_sw_s1_writedata),                             \n\t\t.sw_s1_chipselect                                                    (mm_interconnect_0_sw_s1_chipselect),                            \n\t\t.timer_stamp_s1_address                                              (mm_interconnect_0_timer_stamp_s1_address),                      \n\t\t.timer_stamp_s1_write                                                (mm_interconnect_0_timer_stamp_s1_write),                        \n\t\t.timer_stamp_s1_readdata                                             (mm_interconnect_0_timer_stamp_s1_readdata),                     \n\t\t.timer_stamp_s1_writedata                                            (mm_interconnect_0_timer_stamp_s1_writedata),                    \n\t\t.timer_stamp_s1_chipselect                                           (mm_interconnect_0_timer_stamp_s1_chipselect),                   \n\t\t.uart_s1_address                                                     (mm_interconnect_0_uart_s1_address),                             \n\t\t.uart_s1_write                                                       (mm_interconnect_0_uart_s1_write),                               \n\t\t.uart_s1_read                                                        (mm_interconnect_0_uart_s1_read),                                \n\t\t.uart_s1_readdata                                                    (mm_interconnect_0_uart_s1_readdata),                            \n\t\t.uart_s1_writedata                                                   (mm_interconnect_0_uart_s1_writedata),                           \n\t\t.uart_s1_begintransfer                                               (mm_interconnect_0_uart_s1_begintransfer),                       \n\t\t.uart_s1_chipselect                                                  (mm_interconnect_0_uart_s1_chipselect)                           \n\t);\n\n\tDE1_SoC_QSYS_mm_interconnect_1 mm_interconnect_1 (\n\t\t.pll_sys_outclk0_clk                             (pll_sys_outclk0_clk),                      \n\t\t.alt_vip_vfb_0_reset_reset_bridge_in_reset_reset (rst_controller_002_reset_out_reset),       \n\t\t.alt_vip_vfb_0_read_master_address               (alt_vip_vfb_0_read_master_address),        \n\t\t.alt_vip_vfb_0_read_master_waitrequest           (alt_vip_vfb_0_read_master_waitrequest),    \n\t\t.alt_vip_vfb_0_read_master_burstcount            (alt_vip_vfb_0_read_master_burstcount),     \n\t\t.alt_vip_vfb_0_read_master_read                  (alt_vip_vfb_0_read_master_read),           \n\t\t.alt_vip_vfb_0_read_master_readdata              (alt_vip_vfb_0_read_master_readdata),       \n\t\t.alt_vip_vfb_0_read_master_readdatavalid         (alt_vip_vfb_0_read_master_readdatavalid),  \n\t\t.alt_vip_vfb_0_write_master_address              (alt_vip_vfb_0_write_master_address),       \n\t\t.alt_vip_vfb_0_write_master_waitrequest          (alt_vip_vfb_0_write_master_waitrequest),   \n\t\t.alt_vip_vfb_0_write_master_burstcount           (alt_vip_vfb_0_write_master_burstcount),    \n\t\t.alt_vip_vfb_0_write_master_write                (alt_vip_vfb_0_write_master_write),         \n\t\t.alt_vip_vfb_0_write_master_writedata            (alt_vip_vfb_0_write_master_writedata),     \n\t\t.sdram_s1_address                                (mm_interconnect_1_sdram_s1_address),       \n\t\t.sdram_s1_write                                  (mm_interconnect_1_sdram_s1_write),         \n\t\t.sdram_s1_read                                   (mm_interconnect_1_sdram_s1_read),          \n\t\t.sdram_s1_readdata                               (mm_interconnect_1_sdram_s1_readdata),      \n\t\t.sdram_s1_writedata                              (mm_interconnect_1_sdram_s1_writedata),     \n\t\t.sdram_s1_byteenable                             (mm_interconnect_1_sdram_s1_byteenable),    \n\t\t.sdram_s1_readdatavalid                          (mm_interconnect_1_sdram_s1_readdatavalid), \n\t\t.sdram_s1_waitrequest                            (mm_interconnect_1_sdram_s1_waitrequest),   \n\t\t.sdram_s1_chipselect                             (mm_interconnect_1_sdram_s1_chipselect)     \n\t);\n\n\tDE1_SoC_QSYS_mm_interconnect_2 mm_interconnect_2 (\n\t\t.pll_sys_outclk2_clk                                         (pll_sys_outclk2_clk),                            \n\t\t.clock_crossing_io_slow_m0_reset_reset_bridge_in_reset_reset (rst_controller_reset_out_reset),                 \n\t\t.clock_crossing_io_slow_m0_address                           (clock_crossing_io_slow_m0_address),              \n\t\t.clock_crossing_io_slow_m0_waitrequest                       (clock_crossing_io_slow_m0_waitrequest),          \n\t\t.clock_crossing_io_slow_m0_burstcount                        (clock_crossing_io_slow_m0_burstcount),           \n\t\t.clock_crossing_io_slow_m0_byteenable                        (clock_crossing_io_slow_m0_byteenable),           \n\t\t.clock_crossing_io_slow_m0_read                              (clock_crossing_io_slow_m0_read),                 \n\t\t.clock_crossing_io_slow_m0_readdata                          (clock_crossing_io_slow_m0_readdata),             \n\t\t.clock_crossing_io_slow_m0_readdatavalid                     (clock_crossing_io_slow_m0_readdatavalid),        \n\t\t.clock_crossing_io_slow_m0_write                             (clock_crossing_io_slow_m0_write),                \n\t\t.clock_crossing_io_slow_m0_writedata                         (clock_crossing_io_slow_m0_writedata),            \n\t\t.clock_crossing_io_slow_m0_debugaccess                       (clock_crossing_io_slow_m0_debugaccess),          \n\t\t.i2c_scl_s1_address                                          (mm_interconnect_2_i2c_scl_s1_address),           \n\t\t.i2c_scl_s1_write                                            (mm_interconnect_2_i2c_scl_s1_write),             \n\t\t.i2c_scl_s1_readdata                                         (mm_interconnect_2_i2c_scl_s1_readdata),          \n\t\t.i2c_scl_s1_writedata                                        (mm_interconnect_2_i2c_scl_s1_writedata),         \n\t\t.i2c_scl_s1_chipselect                                       (mm_interconnect_2_i2c_scl_s1_chipselect),        \n\t\t.i2c_sda_s1_address                                          (mm_interconnect_2_i2c_sda_s1_address),           \n\t\t.i2c_sda_s1_write                                            (mm_interconnect_2_i2c_sda_s1_write),             \n\t\t.i2c_sda_s1_readdata                                         (mm_interconnect_2_i2c_sda_s1_readdata),          \n\t\t.i2c_sda_s1_writedata                                        (mm_interconnect_2_i2c_sda_s1_writedata),         \n\t\t.i2c_sda_s1_chipselect                                       (mm_interconnect_2_i2c_sda_s1_chipselect),        \n\t\t.sysid_control_slave_address                                 (mm_interconnect_2_sysid_control_slave_address),  \n\t\t.sysid_control_slave_readdata                                (mm_interconnect_2_sysid_control_slave_readdata), \n\t\t.td_reset_n_s1_address                                       (mm_interconnect_2_td_reset_n_s1_address),        \n\t\t.td_reset_n_s1_write                                         (mm_interconnect_2_td_reset_n_s1_write),          \n\t\t.td_reset_n_s1_readdata                                      (mm_interconnect_2_td_reset_n_s1_readdata),       \n\t\t.td_reset_n_s1_writedata                                     (mm_interconnect_2_td_reset_n_s1_writedata),      \n\t\t.td_reset_n_s1_chipselect                                    (mm_interconnect_2_td_reset_n_s1_chipselect),     \n\t\t.td_status_s1_address                                        (mm_interconnect_2_td_status_s1_address),         \n\t\t.td_status_s1_readdata                                       (mm_interconnect_2_td_status_s1_readdata),        \n\t\t.timer_s1_address                                            (mm_interconnect_2_timer_s1_address),             \n\t\t.timer_s1_write                                              (mm_interconnect_2_timer_s1_write),               \n\t\t.timer_s1_readdata                                           (mm_interconnect_2_timer_s1_readdata),            \n\t\t.timer_s1_writedata                                          (mm_interconnect_2_timer_s1_writedata),           \n\t\t.timer_s1_chipselect                                         (mm_interconnect_2_timer_s1_chipselect)           \n\t);\n\n\tDE1_SoC_QSYS_mm_interconnect_3 mm_interconnect_3 (\n\t\t.pll_sys_outclk4_clk                                             (pll_sys_outclk4_clk),                                 \n\t\t.mm_clock_crossing_bridge_1_m0_reset_reset_bridge_in_reset_reset (rst_controller_004_reset_out_reset),                  \n\t\t.mm_clock_crossing_bridge_1_m0_address                           (mm_clock_crossing_bridge_1_m0_address),               \n\t\t.mm_clock_crossing_bridge_1_m0_waitrequest                       (mm_clock_crossing_bridge_1_m0_waitrequest),           \n\t\t.mm_clock_crossing_bridge_1_m0_burstcount                        (mm_clock_crossing_bridge_1_m0_burstcount),            \n\t\t.mm_clock_crossing_bridge_1_m0_byteenable                        (mm_clock_crossing_bridge_1_m0_byteenable),            \n\t\t.mm_clock_crossing_bridge_1_m0_read                              (mm_clock_crossing_bridge_1_m0_read),                  \n\t\t.mm_clock_crossing_bridge_1_m0_readdata                          (mm_clock_crossing_bridge_1_m0_readdata),              \n\t\t.mm_clock_crossing_bridge_1_m0_readdatavalid                     (mm_clock_crossing_bridge_1_m0_readdatavalid),         \n\t\t.mm_clock_crossing_bridge_1_m0_write                             (mm_clock_crossing_bridge_1_m0_write),                 \n\t\t.mm_clock_crossing_bridge_1_m0_writedata                         (mm_clock_crossing_bridge_1_m0_writedata),             \n\t\t.mm_clock_crossing_bridge_1_m0_debugaccess                       (mm_clock_crossing_bridge_1_m0_debugaccess),           \n\t\t.spi_0_spi_control_port_address                                  (mm_interconnect_3_spi_0_spi_control_port_address),    \n\t\t.spi_0_spi_control_port_write                                    (mm_interconnect_3_spi_0_spi_control_port_write),      \n\t\t.spi_0_spi_control_port_read                                     (mm_interconnect_3_spi_0_spi_control_port_read),       \n\t\t.spi_0_spi_control_port_readdata                                 (mm_interconnect_3_spi_0_spi_control_port_readdata),   \n\t\t.spi_0_spi_control_port_writedata                                (mm_interconnect_3_spi_0_spi_control_port_writedata),  \n\t\t.spi_0_spi_control_port_chipselect                               (mm_interconnect_3_spi_0_spi_control_port_chipselect)  \n\t);\n\n\tDE1_SoC_QSYS_mm_interconnect_4 mm_interconnect_4 (\n\t\t.hps_0_f2h_axi_slave_awid                                         (mm_interconnect_4_hps_0_f2h_axi_slave_awid),    \n\t\t.hps_0_f2h_axi_slave_awaddr                                       (mm_interconnect_4_hps_0_f2h_axi_slave_awaddr),  \n\t\t.hps_0_f2h_axi_slave_awlen                                        (mm_interconnect_4_hps_0_f2h_axi_slave_awlen),   \n\t\t.hps_0_f2h_axi_slave_awsize                                       (mm_interconnect_4_hps_0_f2h_axi_slave_awsize),  \n\t\t.hps_0_f2h_axi_slave_awburst                                      (mm_interconnect_4_hps_0_f2h_axi_slave_awburst), \n\t\t.hps_0_f2h_axi_slave_awlock                                       (mm_interconnect_4_hps_0_f2h_axi_slave_awlock),  \n\t\t.hps_0_f2h_axi_slave_awcache                                      (mm_interconnect_4_hps_0_f2h_axi_slave_awcache), \n\t\t.hps_0_f2h_axi_slave_awprot                                       (mm_interconnect_4_hps_0_f2h_axi_slave_awprot),  \n\t\t.hps_0_f2h_axi_slave_awuser                                       (mm_interconnect_4_hps_0_f2h_axi_slave_awuser),  \n\t\t.hps_0_f2h_axi_slave_awvalid                                      (mm_interconnect_4_hps_0_f2h_axi_slave_awvalid), \n\t\t.hps_0_f2h_axi_slave_awready                                      (mm_interconnect_4_hps_0_f2h_axi_slave_awready), \n\t\t.hps_0_f2h_axi_slave_wid                                          (mm_interconnect_4_hps_0_f2h_axi_slave_wid),     \n\t\t.hps_0_f2h_axi_slave_wdata                                        (mm_interconnect_4_hps_0_f2h_axi_slave_wdata),   \n\t\t.hps_0_f2h_axi_slave_wstrb                                        (mm_interconnect_4_hps_0_f2h_axi_slave_wstrb),   \n\t\t.hps_0_f2h_axi_slave_wlast                                        (mm_interconnect_4_hps_0_f2h_axi_slave_wlast),   \n\t\t.hps_0_f2h_axi_slave_wvalid                                       (mm_interconnect_4_hps_0_f2h_axi_slave_wvalid),  \n\t\t.hps_0_f2h_axi_slave_wready                                       (mm_interconnect_4_hps_0_f2h_axi_slave_wready),  \n\t\t.hps_0_f2h_axi_slave_bid                                          (mm_interconnect_4_hps_0_f2h_axi_slave_bid),     \n\t\t.hps_0_f2h_axi_slave_bresp                                        (mm_interconnect_4_hps_0_f2h_axi_slave_bresp),   \n\t\t.hps_0_f2h_axi_slave_bvalid                                       (mm_interconnect_4_hps_0_f2h_axi_slave_bvalid),  \n\t\t.hps_0_f2h_axi_slave_bready                                       (mm_interconnect_4_hps_0_f2h_axi_slave_bready),  \n\t\t.hps_0_f2h_axi_slave_arid                                         (mm_interconnect_4_hps_0_f2h_axi_slave_arid),    \n\t\t.hps_0_f2h_axi_slave_araddr                                       (mm_interconnect_4_hps_0_f2h_axi_slave_araddr),  \n\t\t.hps_0_f2h_axi_slave_arlen                                        (mm_interconnect_4_hps_0_f2h_axi_slave_arlen),   \n\t\t.hps_0_f2h_axi_slave_arsize                                       (mm_interconnect_4_hps_0_f2h_axi_slave_arsize),  \n\t\t.hps_0_f2h_axi_slave_arburst                                      (mm_interconnect_4_hps_0_f2h_axi_slave_arburst), \n\t\t.hps_0_f2h_axi_slave_arlock                                       (mm_interconnect_4_hps_0_f2h_axi_slave_arlock),  \n\t\t.hps_0_f2h_axi_slave_arcache                                      (mm_interconnect_4_hps_0_f2h_axi_slave_arcache), \n\t\t.hps_0_f2h_axi_slave_arprot                                       (mm_interconnect_4_hps_0_f2h_axi_slave_arprot),  \n\t\t.hps_0_f2h_axi_slave_aruser                                       (mm_interconnect_4_hps_0_f2h_axi_slave_aruser),  \n\t\t.hps_0_f2h_axi_slave_arvalid                                      (mm_interconnect_4_hps_0_f2h_axi_slave_arvalid), \n\t\t.hps_0_f2h_axi_slave_arready                                      (mm_interconnect_4_hps_0_f2h_axi_slave_arready), \n\t\t.hps_0_f2h_axi_slave_rid                                          (mm_interconnect_4_hps_0_f2h_axi_slave_rid),     \n\t\t.hps_0_f2h_axi_slave_rdata                                        (mm_interconnect_4_hps_0_f2h_axi_slave_rdata),   \n\t\t.hps_0_f2h_axi_slave_rresp                                        (mm_interconnect_4_hps_0_f2h_axi_slave_rresp),   \n\t\t.hps_0_f2h_axi_slave_rlast                                        (mm_interconnect_4_hps_0_f2h_axi_slave_rlast),   \n\t\t.hps_0_f2h_axi_slave_rvalid                                       (mm_interconnect_4_hps_0_f2h_axi_slave_rvalid),  \n\t\t.hps_0_f2h_axi_slave_rready                                       (mm_interconnect_4_hps_0_f2h_axi_slave_rready),  \n\t\t.clk_50_clk_clk                                                   (clk_50),                                        \n\t\t.pll_sys_outclk0_clk                                              (pll_sys_outclk0_clk),                           \n\t\t.alt_vip_vfr_0_clock_master_reset_reset_bridge_in_reset_reset     (rst_controller_002_reset_out_reset),            \n\t\t.hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset (rst_controller_006_reset_out_reset),            \n\t\t.alt_vip_vfr_0_avalon_master_address                              (alt_vip_vfr_0_avalon_master_address),           \n\t\t.alt_vip_vfr_0_avalon_master_waitrequest                          (alt_vip_vfr_0_avalon_master_waitrequest),       \n\t\t.alt_vip_vfr_0_avalon_master_burstcount                           (alt_vip_vfr_0_avalon_master_burstcount),        \n\t\t.alt_vip_vfr_0_avalon_master_read                                 (alt_vip_vfr_0_avalon_master_read),              \n\t\t.alt_vip_vfr_0_avalon_master_readdata                             (alt_vip_vfr_0_avalon_master_readdata),          \n\t\t.alt_vip_vfr_0_avalon_master_readdatavalid                        (alt_vip_vfr_0_avalon_master_readdatavalid)      \n\t);\n\n\tDE1_SoC_QSYS_irq_mapper irq_mapper (\n\t\t.clk           (pll_sys_outclk0_clk),                \n\t\t.reset         (rst_controller_002_reset_out_reset), \n\t\t.receiver0_irq (irq_mapper_receiver0_irq),           \n\t\t.receiver1_irq (irq_mapper_receiver1_irq),           \n\t\t.receiver2_irq (irq_mapper_receiver2_irq),           \n\t\t.receiver3_irq (irq_mapper_receiver3_irq),           \n\t\t.receiver4_irq (irq_mapper_receiver4_irq),           \n\t\t.sender_irq    (cpu_d_irq_irq)                       \n\t);\n\n\tDE1_SoC_QSYS_irq_mapper_001 irq_mapper_001 (\n\t\t.clk        (),                   \n\t\t.reset      (),                   \n\t\t.sender_irq (hps_0_f2h_irq0_irq)  \n\t);\n\n\tDE1_SoC_QSYS_irq_mapper_001 irq_mapper_002 (\n\t\t.clk        (),                   \n\t\t.reset      (),                   \n\t\t.sender_irq (hps_0_f2h_irq1_irq)  \n\t);\n\n\taltera_irq_clock_crosser #(\n\t\t.IRQ_WIDTH (1)\n\t) irq_synchronizer (\n\t\t.receiver_clk   (pll_sys_outclk2_clk),                \n\t\t.sender_clk     (pll_sys_outclk0_clk),                \n\t\t.receiver_reset (rst_controller_reset_out_reset),     \n\t\t.sender_reset   (rst_controller_002_reset_out_reset), \n\t\t.receiver_irq   (irq_synchronizer_receiver_irq),      \n\t\t.sender_irq     (irq_mapper_receiver0_irq)            \n\t);\n\n\taltera_irq_clock_crosser #(\n\t\t.IRQ_WIDTH (1)\n\t) irq_synchronizer_001 (\n\t\t.receiver_clk   (pll_sys_outclk4_clk),                \n\t\t.sender_clk     (pll_sys_outclk0_clk),                \n\t\t.receiver_reset (rst_controller_004_reset_out_reset), \n\t\t.sender_reset   (rst_controller_002_reset_out_reset), \n\t\t.receiver_irq   (irq_synchronizer_001_receiver_irq),  \n\t\t.sender_irq     (irq_mapper_receiver3_irq)            \n\t);\n\n\taltera_reset_controller #(\n\t\t.NUM_RESET_INPUTS          (1),\n\t\t.OUTPUT_RESET_SYNC_EDGES   (\"deassert\"),\n\t\t.SYNC_DEPTH                (2),\n\t\t.RESET_REQUEST_PRESENT     (0),\n\t\t.RESET_REQ_WAIT_TIME       (1),\n\t\t.MIN_RST_ASSERTION_TIME    (3),\n\t\t.RESET_REQ_EARLY_DSRT_TIME (1),\n\t\t.USE_RESET_REQUEST_IN0     (0),\n\t\t.USE_RESET_REQUEST_IN1     (0),\n\t\t.USE_RESET_REQUEST_IN2     (0),\n\t\t.USE_RESET_REQUEST_IN3     (0),\n\t\t.USE_RESET_REQUEST_IN4     (0),\n\t\t.USE_RESET_REQUEST_IN5     (0),\n\t\t.USE_RESET_REQUEST_IN6     (0),\n\t\t.USE_RESET_REQUEST_IN7     (0),\n\t\t.USE_RESET_REQUEST_IN8     (0),\n\t\t.USE_RESET_REQUEST_IN9     (0),\n\t\t.USE_RESET_REQUEST_IN10    (0),\n\t\t.USE_RESET_REQUEST_IN11    (0),\n\t\t.USE_RESET_REQUEST_IN12    (0),\n\t\t.USE_RESET_REQUEST_IN13    (0),\n\t\t.USE_RESET_REQUEST_IN14    (0),\n\t\t.USE_RESET_REQUEST_IN15    (0),\n\t\t.ADAPT_RESET_REQUEST       (0)\n\t) rst_controller (\n\t\t.reset_in0      (~reset_n),                       \n\t\t.clk            (pll_sys_outclk2_clk),            \n\t\t.reset_out      (rst_controller_reset_out_reset), \n\t\t.reset_req      (),                               \n\t\t.reset_req_in0  (1'b0),                           \n\t\t.reset_in1      (1'b0),                           \n\t\t.reset_req_in1  (1'b0),                           \n\t\t.reset_in2      (1'b0),                           \n\t\t.reset_req_in2  (1'b0),                           \n\t\t.reset_in3      (1'b0),                           \n\t\t.reset_req_in3  (1'b0),                           \n\t\t.reset_in4      (1'b0),                           \n\t\t.reset_req_in4  (1'b0),                           \n\t\t.reset_in5      (1'b0),                           \n\t\t.reset_req_in5  (1'b0),                           \n\t\t.reset_in6      (1'b0),                           \n\t\t.reset_req_in6  (1'b0),                           \n\t\t.reset_in7      (1'b0),                           \n\t\t.reset_req_in7  (1'b0),                           \n\t\t.reset_in8      (1'b0),                           \n\t\t.reset_req_in8  (1'b0),                           \n\t\t.reset_in9      (1'b0),                           \n\t\t.reset_req_in9  (1'b0),                           \n\t\t.reset_in10     (1'b0),                           \n\t\t.reset_req_in10 (1'b0),                           \n\t\t.reset_in11     (1'b0),                           \n\t\t.reset_req_in11 (1'b0),                           \n\t\t.reset_in12     (1'b0),                           \n\t\t.reset_req_in12 (1'b0),                           \n\t\t.reset_in13     (1'b0),                           \n\t\t.reset_req_in13 (1'b0),                           \n\t\t.reset_in14     (1'b0),                           \n\t\t.reset_req_in14 (1'b0),                           \n\t\t.reset_in15     (1'b0),                           \n\t\t.reset_req_in15 (1'b0)                            \n\t);\n\n\taltera_reset_controller #(\n\t\t.NUM_RESET_INPUTS          (2),\n\t\t.OUTPUT_RESET_SYNC_EDGES   (\"deassert\"),\n\t\t.SYNC_DEPTH                (2),\n\t\t.RESET_REQUEST_PRESENT     (1),\n\t\t.RESET_REQ_WAIT_TIME       (1),\n\t\t.MIN_RST_ASSERTION_TIME    (3),\n\t\t.RESET_REQ_EARLY_DSRT_TIME (1),\n\t\t.USE_RESET_REQUEST_IN0     (0),\n\t\t.USE_RESET_REQUEST_IN1     (0),\n\t\t.USE_RESET_REQUEST_IN2     (0),\n\t\t.USE_RESET_REQUEST_IN3     (0),\n\t\t.USE_RESET_REQUEST_IN4     (0),\n\t\t.USE_RESET_REQUEST_IN5     (0),\n\t\t.USE_RESET_REQUEST_IN6     (0),\n\t\t.USE_RESET_REQUEST_IN7     (0),\n\t\t.USE_RESET_REQUEST_IN8     (0),\n\t\t.USE_RESET_REQUEST_IN9     (0),\n\t\t.USE_RESET_REQUEST_IN10    (0),\n\t\t.USE_RESET_REQUEST_IN11    (0),\n\t\t.USE_RESET_REQUEST_IN12    (0),\n\t\t.USE_RESET_REQUEST_IN13    (0),\n\t\t.USE_RESET_REQUEST_IN14    (0),\n\t\t.USE_RESET_REQUEST_IN15    (0),\n\t\t.ADAPT_RESET_REQUEST       (0)\n\t) rst_controller_001 (\n\t\t.reset_in0      (~reset_n),                               \n\t\t.reset_in1      (cpu_jtag_debug_module_reset_reset),      \n\t\t.clk            (pll_sys_outclk0_clk),                    \n\t\t.reset_out      (rst_controller_001_reset_out_reset),     \n\t\t.reset_req      (rst_controller_001_reset_out_reset_req), \n\t\t.reset_req_in0  (1'b0),                                   \n\t\t.reset_req_in1  (1'b0),                                   \n\t\t.reset_in2      (1'b0),                                   \n\t\t.reset_req_in2  (1'b0),                                   \n\t\t.reset_in3      (1'b0),                                   \n\t\t.reset_req_in3  (1'b0),                                   \n\t\t.reset_in4      (1'b0),                                   \n\t\t.reset_req_in4  (1'b0),                                   \n\t\t.reset_in5      (1'b0),                                   \n\t\t.reset_req_in5  (1'b0),                                   \n\t\t.reset_in6      (1'b0),                                   \n\t\t.reset_req_in6  (1'b0),                                   \n\t\t.reset_in7      (1'b0),                                   \n\t\t.reset_req_in7  (1'b0),                                   \n\t\t.reset_in8      (1'b0),                                   \n\t\t.reset_req_in8  (1'b0),                                   \n\t\t.reset_in9      (1'b0),                                   \n\t\t.reset_req_in9  (1'b0),                                   \n\t\t.reset_in10     (1'b0),                                   \n\t\t.reset_req_in10 (1'b0),                                   \n\t\t.reset_in11     (1'b0),                                   \n\t\t.reset_req_in11 (1'b0),                                   \n\t\t.reset_in12     (1'b0),                                   \n\t\t.reset_req_in12 (1'b0),                                   \n\t\t.reset_in13     (1'b0),                                   \n\t\t.reset_req_in13 (1'b0),                                   \n\t\t.reset_in14     (1'b0),                                   \n\t\t.reset_req_in14 (1'b0),                                   \n\t\t.reset_in15     (1'b0),                                   \n\t\t.reset_req_in15 (1'b0)                                    \n\t);\n\n\taltera_reset_controller #(\n\t\t.NUM_RESET_INPUTS          (1),\n\t\t.OUTPUT_RESET_SYNC_EDGES   (\"deassert\"),\n\t\t.SYNC_DEPTH                (2),\n\t\t.RESET_REQUEST_PRESENT     (1),\n\t\t.RESET_REQ_WAIT_TIME       (1),\n\t\t.MIN_RST_ASSERTION_TIME    (3),\n\t\t.RESET_REQ_EARLY_DSRT_TIME (1),\n\t\t.USE_RESET_REQUEST_IN0     (0),\n\t\t.USE_RESET_REQUEST_IN1     (0),\n\t\t.USE_RESET_REQUEST_IN2     (0),\n\t\t.USE_RESET_REQUEST_IN3     (0),\n\t\t.USE_RESET_REQUEST_IN4     (0),\n\t\t.USE_RESET_REQUEST_IN5     (0),\n\t\t.USE_RESET_REQUEST_IN6     (0),\n\t\t.USE_RESET_REQUEST_IN7     (0),\n\t\t.USE_RESET_REQUEST_IN8     (0),\n\t\t.USE_RESET_REQUEST_IN9     (0),\n\t\t.USE_RESET_REQUEST_IN10    (0),\n\t\t.USE_RESET_REQUEST_IN11    (0),\n\t\t.USE_RESET_REQUEST_IN12    (0),\n\t\t.USE_RESET_REQUEST_IN13    (0),\n\t\t.USE_RESET_REQUEST_IN14    (0),\n\t\t.USE_RESET_REQUEST_IN15    (0),\n\t\t.ADAPT_RESET_REQUEST       (0)\n\t) rst_controller_002 (\n\t\t.reset_in0      (~reset_n),                               \n\t\t.clk            (pll_sys_outclk0_clk),                    \n\t\t.reset_out      (rst_controller_002_reset_out_reset),     \n\t\t.reset_req      (rst_controller_002_reset_out_reset_req), \n\t\t.reset_req_in0  (1'b0),                                   \n\t\t.reset_in1      (1'b0),                                   \n\t\t.reset_req_in1  (1'b0),                                   \n\t\t.reset_in2      (1'b0),                                   \n\t\t.reset_req_in2  (1'b0),                                   \n\t\t.reset_in3      (1'b0),                                   \n\t\t.reset_req_in3  (1'b0),                                   \n\t\t.reset_in4      (1'b0),                                   \n\t\t.reset_req_in4  (1'b0),                                   \n\t\t.reset_in5      (1'b0),                                   \n\t\t.reset_req_in5  (1'b0),                                   \n\t\t.reset_in6      (1'b0),                                   \n\t\t.reset_req_in6  (1'b0),                                   \n\t\t.reset_in7      (1'b0),                                   \n\t\t.reset_req_in7  (1'b0),                                   \n\t\t.reset_in8      (1'b0),                                   \n\t\t.reset_req_in8  (1'b0),                                   \n\t\t.reset_in9      (1'b0),                                   \n\t\t.reset_req_in9  (1'b0),                                   \n\t\t.reset_in10     (1'b0),                                   \n\t\t.reset_req_in10 (1'b0),                                   \n\t\t.reset_in11     (1'b0),                                   \n\t\t.reset_req_in11 (1'b0),                                   \n\t\t.reset_in12     (1'b0),                                   \n\t\t.reset_req_in12 (1'b0),                                   \n\t\t.reset_in13     (1'b0),                                   \n\t\t.reset_req_in13 (1'b0),                                   \n\t\t.reset_in14     (1'b0),                                   \n\t\t.reset_req_in14 (1'b0),                                   \n\t\t.reset_in15     (1'b0),                                   \n\t\t.reset_req_in15 (1'b0)                                    \n\t);\n\n\taltera_reset_controller #(\n\t\t.NUM_RESET_INPUTS          (1),\n\t\t.OUTPUT_RESET_SYNC_EDGES   (\"deassert\"),\n\t\t.SYNC_DEPTH                (2),\n\t\t.RESET_REQUEST_PRESENT     (0),\n\t\t.RESET_REQ_WAIT_TIME       (1),\n\t\t.MIN_RST_ASSERTION_TIME    (3),\n\t\t.RESET_REQ_EARLY_DSRT_TIME (1),\n\t\t.USE_RESET_REQUEST_IN0     (0),\n\t\t.USE_RESET_REQUEST_IN1     (0),\n\t\t.USE_RESET_REQUEST_IN2     (0),\n\t\t.USE_RESET_REQUEST_IN3     (0),\n\t\t.USE_RESET_REQUEST_IN4     (0),\n\t\t.USE_RESET_REQUEST_IN5     (0),\n\t\t.USE_RESET_REQUEST_IN6     (0),\n\t\t.USE_RESET_REQUEST_IN7     (0),\n\t\t.USE_RESET_REQUEST_IN8     (0),\n\t\t.USE_RESET_REQUEST_IN9     (0),\n\t\t.USE_RESET_REQUEST_IN10    (0),\n\t\t.USE_RESET_REQUEST_IN11    (0),\n\t\t.USE_RESET_REQUEST_IN12    (0),\n\t\t.USE_RESET_REQUEST_IN13    (0),\n\t\t.USE_RESET_REQUEST_IN14    (0),\n\t\t.USE_RESET_REQUEST_IN15    (0),\n\t\t.ADAPT_RESET_REQUEST       (0)\n\t) rst_controller_003 (\n\t\t.reset_in0      (~reset_n),                           \n\t\t.clk            (clk_50),                             \n\t\t.reset_out      (rst_controller_003_reset_out_reset), \n\t\t.reset_req      (),                                   \n\t\t.reset_req_in0  (1'b0),                               \n\t\t.reset_in1      (1'b0),                               \n\t\t.reset_req_in1  (1'b0),                               \n\t\t.reset_in2      (1'b0),                               \n\t\t.reset_req_in2  (1'b0),                               \n\t\t.reset_in3      (1'b0),                               \n\t\t.reset_req_in3  (1'b0),                               \n\t\t.reset_in4      (1'b0),                               \n\t\t.reset_req_in4  (1'b0),                               \n\t\t.reset_in5      (1'b0),                               \n\t\t.reset_req_in5  (1'b0),                               \n\t\t.reset_in6      (1'b0),                               \n\t\t.reset_req_in6  (1'b0),                               \n\t\t.reset_in7      (1'b0),                               \n\t\t.reset_req_in7  (1'b0),                               \n\t\t.reset_in8      (1'b0),                               \n\t\t.reset_req_in8  (1'b0),                               \n\t\t.reset_in9      (1'b0),                               \n\t\t.reset_req_in9  (1'b0),                               \n\t\t.reset_in10     (1'b0),                               \n\t\t.reset_req_in10 (1'b0),                               \n\t\t.reset_in11     (1'b0),                               \n\t\t.reset_req_in11 (1'b0),                               \n\t\t.reset_in12     (1'b0),                               \n\t\t.reset_req_in12 (1'b0),                               \n\t\t.reset_in13     (1'b0),                               \n\t\t.reset_req_in13 (1'b0),                               \n\t\t.reset_in14     (1'b0),                               \n\t\t.reset_req_in14 (1'b0),                               \n\t\t.reset_in15     (1'b0),                               \n\t\t.reset_req_in15 (1'b0)                                \n\t);\n\n\taltera_reset_controller #(\n\t\t.NUM_RESET_INPUTS          (1),\n\t\t.OUTPUT_RESET_SYNC_EDGES   (\"deassert\"),\n\t\t.SYNC_DEPTH                (2),\n\t\t.RESET_REQUEST_PRESENT     (0),\n\t\t.RESET_REQ_WAIT_TIME       (1),\n\t\t.MIN_RST_ASSERTION_TIME    (3),\n\t\t.RESET_REQ_EARLY_DSRT_TIME (1),\n\t\t.USE_RESET_REQUEST_IN0     (0),\n\t\t.USE_RESET_REQUEST_IN1     (0),\n\t\t.USE_RESET_REQUEST_IN2     (0),\n\t\t.USE_RESET_REQUEST_IN3     (0),\n\t\t.USE_RESET_REQUEST_IN4     (0),\n\t\t.USE_RESET_REQUEST_IN5     (0),\n\t\t.USE_RESET_REQUEST_IN6     (0),\n\t\t.USE_RESET_REQUEST_IN7     (0),\n\t\t.USE_RESET_REQUEST_IN8     (0),\n\t\t.USE_RESET_REQUEST_IN9     (0),\n\t\t.USE_RESET_REQUEST_IN10    (0),\n\t\t.USE_RESET_REQUEST_IN11    (0),\n\t\t.USE_RESET_REQUEST_IN12    (0),\n\t\t.USE_RESET_REQUEST_IN13    (0),\n\t\t.USE_RESET_REQUEST_IN14    (0),\n\t\t.USE_RESET_REQUEST_IN15    (0),\n\t\t.ADAPT_RESET_REQUEST       (0)\n\t) rst_controller_004 (\n\t\t.reset_in0      (~reset_n),                           \n\t\t.clk            (pll_sys_outclk4_clk),                \n\t\t.reset_out      (rst_controller_004_reset_out_reset), \n\t\t.reset_req      (),                                   \n\t\t.reset_req_in0  (1'b0),                               \n\t\t.reset_in1      (1'b0),                               \n\t\t.reset_req_in1  (1'b0),                               \n\t\t.reset_in2      (1'b0),                               \n\t\t.reset_req_in2  (1'b0),                               \n\t\t.reset_in3      (1'b0),                               \n\t\t.reset_req_in3  (1'b0),                               \n\t\t.reset_in4      (1'b0),                               \n\t\t.reset_req_in4  (1'b0),                               \n\t\t.reset_in5      (1'b0),                               \n\t\t.reset_req_in5  (1'b0),                               \n\t\t.reset_in6      (1'b0),                               \n\t\t.reset_req_in6  (1'b0),                               \n\t\t.reset_in7      (1'b0),                               \n\t\t.reset_req_in7  (1'b0),                               \n\t\t.reset_in8      (1'b0),                               \n\t\t.reset_req_in8  (1'b0),                               \n\t\t.reset_in9      (1'b0),                               \n\t\t.reset_req_in9  (1'b0),                               \n\t\t.reset_in10     (1'b0),                               \n\t\t.reset_req_in10 (1'b0),                               \n\t\t.reset_in11     (1'b0),                               \n\t\t.reset_req_in11 (1'b0),                               \n\t\t.reset_in12     (1'b0),                               \n\t\t.reset_req_in12 (1'b0),                               \n\t\t.reset_in13     (1'b0),                               \n\t\t.reset_req_in13 (1'b0),                               \n\t\t.reset_in14     (1'b0),                               \n\t\t.reset_req_in14 (1'b0),                               \n\t\t.reset_in15     (1'b0),                               \n\t\t.reset_req_in15 (1'b0)                                \n\t);\n\n\taltera_reset_controller #(\n\t\t.NUM_RESET_INPUTS          (1),\n\t\t.OUTPUT_RESET_SYNC_EDGES   (\"deassert\"),\n\t\t.SYNC_DEPTH                (2),\n\t\t.RESET_REQUEST_PRESENT     (0),\n\t\t.RESET_REQ_WAIT_TIME       (1),\n\t\t.MIN_RST_ASSERTION_TIME    (3),\n\t\t.RESET_REQ_EARLY_DSRT_TIME (1),\n\t\t.USE_RESET_REQUEST_IN0     (0),\n\t\t.USE_RESET_REQUEST_IN1     (0),\n\t\t.USE_RESET_REQUEST_IN2     (0),\n\t\t.USE_RESET_REQUEST_IN3     (0),\n\t\t.USE_RESET_REQUEST_IN4     (0),\n\t\t.USE_RESET_REQUEST_IN5     (0),\n\t\t.USE_RESET_REQUEST_IN6     (0),\n\t\t.USE_RESET_REQUEST_IN7     (0),\n\t\t.USE_RESET_REQUEST_IN8     (0),\n\t\t.USE_RESET_REQUEST_IN9     (0),\n\t\t.USE_RESET_REQUEST_IN10    (0),\n\t\t.USE_RESET_REQUEST_IN11    (0),\n\t\t.USE_RESET_REQUEST_IN12    (0),\n\t\t.USE_RESET_REQUEST_IN13    (0),\n\t\t.USE_RESET_REQUEST_IN14    (0),\n\t\t.USE_RESET_REQUEST_IN15    (0),\n\t\t.ADAPT_RESET_REQUEST       (0)\n\t) rst_controller_005 (\n\t\t.reset_in0      (~reset_n),                           \n\t\t.clk            (pll_audio_outclk0_clk),              \n\t\t.reset_out      (rst_controller_005_reset_out_reset), \n\t\t.reset_req      (),                                   \n\t\t.reset_req_in0  (1'b0),                               \n\t\t.reset_in1      (1'b0),                               \n\t\t.reset_req_in1  (1'b0),                               \n\t\t.reset_in2      (1'b0),                               \n\t\t.reset_req_in2  (1'b0),                               \n\t\t.reset_in3      (1'b0),                               \n\t\t.reset_req_in3  (1'b0),                               \n\t\t.reset_in4      (1'b0),                               \n\t\t.reset_req_in4  (1'b0),                               \n\t\t.reset_in5      (1'b0),                               \n\t\t.reset_req_in5  (1'b0),                               \n\t\t.reset_in6      (1'b0),                               \n\t\t.reset_req_in6  (1'b0),                               \n\t\t.reset_in7      (1'b0),                               \n\t\t.reset_req_in7  (1'b0),                               \n\t\t.reset_in8      (1'b0),                               \n\t\t.reset_req_in8  (1'b0),                               \n\t\t.reset_in9      (1'b0),                               \n\t\t.reset_req_in9  (1'b0),                               \n\t\t.reset_in10     (1'b0),                               \n\t\t.reset_req_in10 (1'b0),                               \n\t\t.reset_in11     (1'b0),                               \n\t\t.reset_req_in11 (1'b0),                               \n\t\t.reset_in12     (1'b0),                               \n\t\t.reset_req_in12 (1'b0),                               \n\t\t.reset_in13     (1'b0),                               \n\t\t.reset_req_in13 (1'b0),                               \n\t\t.reset_in14     (1'b0),                               \n\t\t.reset_req_in14 (1'b0),                               \n\t\t.reset_in15     (1'b0),                               \n\t\t.reset_req_in15 (1'b0)                                \n\t);\n\n\taltera_reset_controller #(\n\t\t.NUM_RESET_INPUTS          (1),\n\t\t.OUTPUT_RESET_SYNC_EDGES   (\"deassert\"),\n\t\t.SYNC_DEPTH                (2),\n\t\t.RESET_REQUEST_PRESENT     (0),\n\t\t.RESET_REQ_WAIT_TIME       (1),\n\t\t.MIN_RST_ASSERTION_TIME    (3),\n\t\t.RESET_REQ_EARLY_DSRT_TIME (1),\n\t\t.USE_RESET_REQUEST_IN0     (0),\n\t\t.USE_RESET_REQUEST_IN1     (0),\n\t\t.USE_RESET_REQUEST_IN2     (0),\n\t\t.USE_RESET_REQUEST_IN3     (0),\n\t\t.USE_RESET_REQUEST_IN4     (0),\n\t\t.USE_RESET_REQUEST_IN5     (0),\n\t\t.USE_RESET_REQUEST_IN6     (0),\n\t\t.USE_RESET_REQUEST_IN7     (0),\n\t\t.USE_RESET_REQUEST_IN8     (0),\n\t\t.USE_RESET_REQUEST_IN9     (0),\n\t\t.USE_RESET_REQUEST_IN10    (0),\n\t\t.USE_RESET_REQUEST_IN11    (0),\n\t\t.USE_RESET_REQUEST_IN12    (0),\n\t\t.USE_RESET_REQUEST_IN13    (0),\n\t\t.USE_RESET_REQUEST_IN14    (0),\n\t\t.USE_RESET_REQUEST_IN15    (0),\n\t\t.ADAPT_RESET_REQUEST       (0)\n\t) rst_controller_006 (\n\t\t.reset_in0      (~hps_0_h2f_reset_reset_n),           \n\t\t.clk            (clk_50),                             \n\t\t.reset_out      (rst_controller_006_reset_out_reset), \n\t\t.reset_req      (),                                   \n\t\t.reset_req_in0  (1'b0),                               \n\t\t.reset_in1      (1'b0),                               \n\t\t.reset_req_in1  (1'b0),                               \n\t\t.reset_in2      (1'b0),                               \n\t\t.reset_req_in2  (1'b0),                               \n\t\t.reset_in3      (1'b0),                               \n\t\t.reset_req_in3  (1'b0),                               \n\t\t.reset_in4      (1'b0),                               \n\t\t.reset_req_in4  (1'b0),                               \n\t\t.reset_in5      (1'b0),                               \n\t\t.reset_req_in5  (1'b0),                               \n\t\t.reset_in6      (1'b0),                               \n\t\t.reset_req_in6  (1'b0),                               \n\t\t.reset_in7      (1'b0),                               \n\t\t.reset_req_in7  (1'b0),                               \n\t\t.reset_in8      (1'b0),                               \n\t\t.reset_req_in8  (1'b0),                               \n\t\t.reset_in9      (1'b0),                               \n\t\t.reset_req_in9  (1'b0),                               \n\t\t.reset_in10     (1'b0),                               \n\t\t.reset_req_in10 (1'b0),                               \n\t\t.reset_in11     (1'b0),                               \n\t\t.reset_req_in11 (1'b0),                               \n\t\t.reset_in12     (1'b0),                               \n\t\t.reset_req_in12 (1'b0),                               \n\t\t.reset_in13     (1'b0),                               \n\t\t.reset_req_in13 (1'b0),                               \n\t\t.reset_in14     (1'b0),                               \n\t\t.reset_req_in14 (1'b0),                               \n\t\t.reset_in15     (1'b0),                               \n\t\t.reset_req_in15 (1'b0)                                \n\t);\n\nendmodule\n</code>"
                },
                {
                    "type": "text",
                    "text": "Based on the provided original Verilog code, its comments and above answers, generate a detailed specification for the module. Include the following information in a single, concise paragraph:\n1. The name of the module.\n2. A simple explanation of the module's functionality.\n3. The input and output ports, along with a brief explanation of each.\n4. The internal signals used within the module, with a brief explanation of their purpose.\n5. An overview of the different blocks or sections in the code and their functions.\nEnsure that the specification is clear and accurately reflects the details from the code and comments.\nYour answer should be structured and well-organized, providing a comprehensive and detailed overview of the module's design and operation.\nPlease provide your answer in the following format:\nModule name: [module name]. Module specification: [module specification]."
                },
                {
                    "type": "text",
                    "text": "Module name: DE1_SoC_QSYS. Module specification: This module is a top-level system integration module for a DE1-SoC FPGA board, implementing a complex system-on-chip design. It interconnects various hardware components and IP cores, including an ARM processor (HPS), memory interfaces (SDRAM, on-chip memory), peripherals (UART, SPI, I2C, GPIO), video processing components (VIP modules for scaling, mixing, etc.), audio interfaces, and clock management (PLLs). The module has numerous input and output ports for interfacing with external components, including clocks, resets, video signals, memory interfaces, and various peripheral I/O. Internal signals facilitate communication between different components, handling data transfer, control, and synchronization. The code is organized into sections for instantiating individual components (e.g., CPU, memory, peripherals, video processing"
                }
            ]
        }
    ]
}