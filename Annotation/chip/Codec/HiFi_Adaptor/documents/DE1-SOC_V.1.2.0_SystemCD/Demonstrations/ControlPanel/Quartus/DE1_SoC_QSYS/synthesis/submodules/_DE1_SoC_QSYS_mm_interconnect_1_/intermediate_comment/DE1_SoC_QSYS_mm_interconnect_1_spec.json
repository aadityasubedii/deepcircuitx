{
    "spec": "Module name: DE1_SoC_QSYS_mm_interconnect_1. Module specification: This module is an interconnect or bus matrix for a System-on-Chip (SoC) design, managing communication between multiple masters (ALT_VIP_VFB read and write masters) and a slave (SDRAM). It features input ports for clock, reset, and master interfaces, and output ports for slave interfaces. The module uses internal signals for address routing, command/response demultiplexing, width adaptation, and burst adaptation. Key components include Avalon Universal Master/Slave translators, address routers, command and response crossbars, width adapters, and burst adapters. These components work together to handle data transfers, arbitration, and protocol conversions between different SoC components, allowing efficient communication despite differences in bus widths, protocols, or timing requirements. The module employs various",
    "gpt-message": [
        {
            "role": "system",
            "content": "You are an expert in hardware design with a deep understanding of Verilog RTL codes. Now I want to train a large language model for code comment generation tasks specifically focused on Verilog RTL codes. And I want you to help me process the raw data, transforming it into suitable formats that can serve as inputs and outputs for the model."
        },
        {
            "role": "user",
            "content": "Name of the module and its functionality is as follows: \nModule name: DE1_SoC_QSYS_mm_interconnect_1\n\nExplanation: This module appears to be an interconnect or bus matrix for a System-on-Chip (SoC) design. It handles communication between multiple masters (like ALT_VIP_VFB read and write masters) and slaves (like SDRAM). The module includes components for address routing, command/response demultiplexing, width adaptation, and burst adaptation. It manages data transfers, arbitration, and protocol conversions between different components of the SoC, allowing them to communicate efficiently despite potentially different bus widths, protocols, or timing requirements."
        },
        {
            "role": "user",
            "content": "Input and output ports and their explanation is as follows: \nHere is a summary of the input and output ports for the DE1_SoC_QSYS_mm_interconnect_1 module:\n\nInput ports:\n- pll_sys_outclk0_clk\n- alt_vip_vfb_0_reset_reset_bridge_in_reset_reset\n- alt_vip_vfb_0_read_master_address\n- alt_vip_vfb_0_read_master_burstcount\n- alt_vip_vfb_0_read_master_read\n- alt_vip_vfb_0_write_master_address\n- alt_vip_vfb_0_write_master_burstcount\n- alt_vip_vfb_0_write_master_write\n- alt_vip_vfb_0_write_master_writedata\n- sdram_s1_readdata\n- sdram_s1_readdatavalid\n- sdram_s1_waitrequest\n\nExplanation: These inputs include clock and reset signals, as well as control and data signals from the VIP frame buffer read/write masters and SDRAM slave interface.\n\nOutput ports:\n- alt_vip_vfb_0_read_master_waitrequest\n- alt_vip_vfb_0_read_master_readdata\n- alt_vip_vfb_0_read_master_readdatavalid\n- alt_vip_vfb_0_write_master_waitrequest\n- sdram_s1_address\n- sdram_s1_write\n- sdram_s1_read\n- sdram_s1_writedata\n- sdram_s1_byteenable\n- sdram_s1_chipselect\n\nExplanation: These outputs provide status and data signals back to the VIP frame buffer masters, as well as control and data signals to the SDRAM slave interface for memory access operations."
        },
        {
            "role": "user",
            "content": "Internal signals and their explanation is as follows: \nInternal signals:\n- Avalon Universal Master signals (e.g., alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_address, alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_burstcount, etc.)\n- Response and request FIFO signals (e.g., sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_data, sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data, etc.)\n- Address router signals (e.g., addr_router_src_data, addr_router_src_channel, etc.)\n- Command and response crossbar signals (e.g., cmd_xbar_demux_src0_data, rsp_xbar_demux_src0_data, etc.)\n- Width adapter signals (e.g., width_adapter_src_data, width_adapter_src_channel, etc.)\n- Burst adapter signals (e.g., burst_adapter_source0_data, burst_adapter_source0_channel, etc.)\n\nExplanation:\n- Avalon Universal Master signals: These handle communication between masters and the interconnect, carrying address, data, and control information.\n- FIFO signals: These manage buffering and flow control for requests and responses between components.\n- Address router signals: These direct transactions to the appropriate slave based on address decoding.\n- Crossbar signals: These manage the routing of commands and responses between multiple masters and slaves.\n- Width adapter signals: These handle data width conversion between components with different bus widths.\n- Burst adapter signals: These modify burst transactions to match the capabilities of the target slave.\n\nThese internal signals collectively enable the interconnect to manage complex communication patterns between multiple masters and slaves, handling protocol conversions, arbitration, and data routing."
        },
        {
            "role": "user",
            "content": "Original Verilog code is as follows: \n```verilog\n\n\n\n\n\n\n\n`timescale 1 ps / 1 ps\nmodule DE1_SoC_QSYS_mm_interconnect_1 (\n\t\tinput  wire        pll_sys_outclk0_clk,                             \n\t\tinput  wire        alt_vip_vfb_0_reset_reset_bridge_in_reset_reset, \n\t\tinput  wire [31:0] alt_vip_vfb_0_read_master_address,               \n\t\toutput wire        alt_vip_vfb_0_read_master_waitrequest,           \n\t\tinput  wire [2:0]  alt_vip_vfb_0_read_master_burstcount,            \n\t\tinput  wire        alt_vip_vfb_0_read_master_read,                  \n\t\toutput wire [31:0] alt_vip_vfb_0_read_master_readdata,              \n\t\toutput wire        alt_vip_vfb_0_read_master_readdatavalid,         \n\t\tinput  wire [31:0] alt_vip_vfb_0_write_master_address,              \n\t\toutput wire        alt_vip_vfb_0_write_master_waitrequest,          \n\t\tinput  wire [2:0]  alt_vip_vfb_0_write_master_burstcount,           \n\t\tinput  wire        alt_vip_vfb_0_write_master_write,                \n\t\tinput  wire [31:0] alt_vip_vfb_0_write_master_writedata,            \n\t\toutput wire [24:0] sdram_s1_address,                                \n\t\toutput wire        sdram_s1_write,                                  \n\t\toutput wire        sdram_s1_read,                                   \n\t\tinput  wire [15:0] sdram_s1_readdata,                               \n\t\toutput wire [15:0] sdram_s1_writedata,                              \n\t\toutput wire [1:0]  sdram_s1_byteenable,                             \n\t\tinput  wire        sdram_s1_readdatavalid,                          \n\t\tinput  wire        sdram_s1_waitrequest,                            \n\t\toutput wire        sdram_s1_chipselect                              \n\t);\n\n\twire          alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_waitrequest;             \n\twire    [4:0] alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_burstcount;              \n\twire   [31:0] alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_writedata;               \n\twire   [31:0] alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_address;                 \n\twire          alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_lock;                    \n\twire          alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_write;                   \n\twire          alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_read;                    \n\twire   [31:0] alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_readdata;                \n\twire          alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_debugaccess;             \n\twire    [3:0] alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_byteenable;              \n\twire          alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_readdatavalid;           \n\twire          rsp_xbar_mux_src_endofpacket;                                                           \n\twire          rsp_xbar_mux_src_valid;                                                                 \n\twire          rsp_xbar_mux_src_startofpacket;                                                         \n\twire  [103:0] rsp_xbar_mux_src_data;                                                                  \n\twire    [1:0] rsp_xbar_mux_src_channel;                                                               \n\twire          rsp_xbar_mux_src_ready;                                                                 \n\twire          alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_waitrequest;            \n\twire    [4:0] alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_burstcount;             \n\twire   [31:0] alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_writedata;              \n\twire   [31:0] alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_address;                \n\twire          alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_lock;                   \n\twire          alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_write;                  \n\twire          alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_read;                   \n\twire   [31:0] alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_readdata;               \n\twire          alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_debugaccess;            \n\twire    [3:0] alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_byteenable;             \n\twire          alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_readdatavalid;          \n\twire          rsp_xbar_mux_001_src_endofpacket;                                                       \n\twire          rsp_xbar_mux_001_src_valid;                                                             \n\twire          rsp_xbar_mux_001_src_startofpacket;                                                     \n\twire  [103:0] rsp_xbar_mux_001_src_data;                                                              \n\twire    [1:0] rsp_xbar_mux_001_src_channel;                                                           \n\twire          rsp_xbar_mux_001_src_ready;                                                             \n\twire          sdram_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                      \n\twire    [1:0] sdram_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                       \n\twire   [15:0] sdram_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                        \n\twire   [31:0] sdram_s1_translator_avalon_universal_slave_0_agent_m0_address;                          \n\twire          sdram_s1_translator_avalon_universal_slave_0_agent_m0_write;                            \n\twire          sdram_s1_translator_avalon_universal_slave_0_agent_m0_lock;                             \n\twire          sdram_s1_translator_avalon_universal_slave_0_agent_m0_read;                             \n\twire   [15:0] sdram_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                         \n\twire          sdram_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                    \n\twire          sdram_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                      \n\twire    [1:0] sdram_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                       \n\twire          sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;               \n\twire          sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                     \n\twire          sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;             \n\twire   [86:0] sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                      \n\twire          sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                     \n\twire          sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;            \n\twire          sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                  \n\twire          sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;          \n\twire   [86:0] sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                   \n\twire          sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                  \n\twire          sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                \n\twire   [17:0] sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                 \n\twire          sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                \n\twire          sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_out_valid;                \n\twire   [17:0] sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_out_data;                 \n\twire          sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_out_ready;                \n\twire          alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_agent_cp_endofpacket;    \n\twire          alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_agent_cp_valid;          \n\twire          alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_agent_cp_startofpacket;  \n\twire  [103:0] alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_agent_cp_data;           \n\twire          alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_agent_cp_ready;          \n\twire          addr_router_src_endofpacket;                                                            \n\twire          addr_router_src_valid;                                                                  \n\twire          addr_router_src_startofpacket;                                                          \n\twire  [103:0] addr_router_src_data;                                                                   \n\twire    [1:0] addr_router_src_channel;                                                                \n\twire          addr_router_src_ready;                                                                  \n\twire          alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_agent_cp_endofpacket;   \n\twire          alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_agent_cp_valid;         \n\twire          alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_agent_cp_startofpacket; \n\twire  [103:0] alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_agent_cp_data;          \n\twire          alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_agent_cp_ready;         \n\twire          addr_router_001_src_endofpacket;                                                        \n\twire          addr_router_001_src_valid;                                                              \n\twire          addr_router_001_src_startofpacket;                                                      \n\twire  [103:0] addr_router_001_src_data;                                                               \n\twire    [1:0] addr_router_001_src_channel;                                                            \n\twire          addr_router_001_src_ready;                                                              \n\twire          cmd_xbar_demux_src0_endofpacket;                                                        \n\twire          cmd_xbar_demux_src0_valid;                                                              \n\twire          cmd_xbar_demux_src0_startofpacket;                                                      \n\twire  [103:0] cmd_xbar_demux_src0_data;                                                               \n\twire    [1:0] cmd_xbar_demux_src0_channel;                                                            \n\twire          cmd_xbar_demux_src0_ready;                                                              \n\twire          cmd_xbar_demux_001_src0_endofpacket;                                                    \n\twire          cmd_xbar_demux_001_src0_valid;                                                          \n\twire          cmd_xbar_demux_001_src0_startofpacket;                                                  \n\twire  [103:0] cmd_xbar_demux_001_src0_data;                                                           \n\twire    [1:0] cmd_xbar_demux_001_src0_channel;                                                        \n\twire          cmd_xbar_demux_001_src0_ready;                                                          \n\twire          rsp_xbar_demux_src0_endofpacket;                                                        \n\twire          rsp_xbar_demux_src0_valid;                                                              \n\twire          rsp_xbar_demux_src0_startofpacket;                                                      \n\twire  [103:0] rsp_xbar_demux_src0_data;                                                               \n\twire    [1:0] rsp_xbar_demux_src0_channel;                                                            \n\twire          rsp_xbar_demux_src0_ready;                                                              \n\twire          rsp_xbar_demux_src1_endofpacket;                                                        \n\twire          rsp_xbar_demux_src1_valid;                                                              \n\twire          rsp_xbar_demux_src1_startofpacket;                                                      \n\twire  [103:0] rsp_xbar_demux_src1_data;                                                               \n\twire    [1:0] rsp_xbar_demux_src1_channel;                                                            \n\twire          rsp_xbar_demux_src1_ready;                                                              \n\twire          id_router_src_endofpacket;                                                              \n\twire          id_router_src_valid;                                                                    \n\twire          id_router_src_startofpacket;                                                            \n\twire   [85:0] id_router_src_data;                                                                     \n\twire    [1:0] id_router_src_channel;                                                                  \n\twire          id_router_src_ready;                                                                    \n\twire          width_adapter_src_endofpacket;                                                          \n\twire          width_adapter_src_valid;                                                                \n\twire          width_adapter_src_startofpacket;                                                        \n\twire  [103:0] width_adapter_src_data;                                                                 \n\twire          width_adapter_src_ready;                                                                \n\twire    [1:0] width_adapter_src_channel;                                                              \n\twire          cmd_xbar_mux_src_endofpacket;                                                           \n\twire          cmd_xbar_mux_src_valid;                                                                 \n\twire          cmd_xbar_mux_src_startofpacket;                                                         \n\twire  [103:0] cmd_xbar_mux_src_data;                                                                  \n\twire    [1:0] cmd_xbar_mux_src_channel;                                                               \n\twire          cmd_xbar_mux_src_ready;                                                                 \n\twire          width_adapter_001_src_endofpacket;                                                      \n\twire          width_adapter_001_src_valid;                                                            \n\twire          width_adapter_001_src_startofpacket;                                                    \n\twire   [85:0] width_adapter_001_src_data;                                                             \n\twire          width_adapter_001_src_ready;                                                            \n\twire    [1:0] width_adapter_001_src_channel;                                                          \n\twire          burst_adapter_source0_endofpacket;                                                      \n\twire          burst_adapter_source0_valid;                                                            \n\twire          burst_adapter_source0_startofpacket;                                                    \n\twire   [85:0] burst_adapter_source0_data;                                                             \n\twire          burst_adapter_source0_ready;                                                            \n\twire    [1:0] burst_adapter_source0_channel;                                                          \n\twire          agent_pipeline_source0_endofpacket;                                                     \n\twire          agent_pipeline_source0_valid;                                                           \n\twire          agent_pipeline_source0_startofpacket;                                                   \n\twire   [85:0] agent_pipeline_source0_data;                                                            \n\twire    [1:0] agent_pipeline_source0_channel;                                                         \n\twire          agent_pipeline_source0_ready;                                                           \n\twire          sdram_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                      \n\twire          sdram_s1_translator_avalon_universal_slave_0_agent_rp_valid;                            \n\twire          sdram_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                    \n\twire   [85:0] sdram_s1_translator_avalon_universal_slave_0_agent_rp_data;                             \n\twire          sdram_s1_translator_avalon_universal_slave_0_agent_rp_ready;                            \n\twire          agent_pipeline_001_source0_endofpacket;                                                 \n\twire          agent_pipeline_001_source0_valid;                                                       \n\twire          agent_pipeline_001_source0_startofpacket;                                               \n\twire   [85:0] agent_pipeline_001_source0_data;                                                        \n\twire          agent_pipeline_001_source0_ready;                                                       \n\n\taltera_merlin_master_translator #(\n\t\t.AV_ADDRESS_W                (32),\n\t\t.AV_DATA_W                   (32),\n\t\t.AV_BURSTCOUNT_W             (3),\n\t\t.AV_BYTEENABLE_W             (4),\n\t\t.UAV_ADDRESS_W               (32),\n\t\t.UAV_BURSTCOUNT_W            (5),\n\t\t.USE_READ                    (1),\n\t\t.USE_WRITE                   (0),\n\t\t.USE_BEGINBURSTTRANSFER      (0),\n\t\t.USE_BEGINTRANSFER           (0),\n\t\t.USE_CHIPSELECT              (0),\n\t\t.USE_BURSTCOUNT              (1),\n\t\t.USE_READDATAVALID           (1),\n\t\t.USE_WAITREQUEST             (1),\n\t\t.USE_READRESPONSE            (0),\n\t\t.USE_WRITERESPONSE           (0),\n\t\t.AV_SYMBOLS_PER_WORD         (4),\n\t\t.AV_ADDRESS_SYMBOLS          (1),\n\t\t.AV_BURSTCOUNT_SYMBOLS       (0),\n\t\t.AV_CONSTANT_BURST_BEHAVIOR  (1),\n\t\t.UAV_CONSTANT_BURST_BEHAVIOR (0),\n\t\t.AV_LINEWRAPBURSTS           (0),\n\t\t.AV_REGISTERINCOMINGSIGNALS  (0)\n\t) alt_vip_vfb_0_read_master_translator (\n\t\t.clk                      (pll_sys_outclk0_clk),                                                          \n\t\t.reset                    (alt_vip_vfb_0_reset_reset_bridge_in_reset_reset),                              \n\t\t.uav_address              (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_address),       \n\t\t.uav_burstcount           (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_burstcount),    \n\t\t.uav_read                 (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_read),          \n\t\t.uav_write                (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_write),         \n\t\t.uav_waitrequest          (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_waitrequest),   \n\t\t.uav_readdatavalid        (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_readdatavalid), \n\t\t.uav_byteenable           (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_byteenable),    \n\t\t.uav_readdata             (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_readdata),      \n\t\t.uav_writedata            (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_writedata),     \n\t\t.uav_lock                 (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_lock),          \n\t\t.uav_debugaccess          (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_debugaccess),   \n\t\t.av_address               (alt_vip_vfb_0_read_master_address),                                            \n\t\t.av_waitrequest           (alt_vip_vfb_0_read_master_waitrequest),                                        \n\t\t.av_burstcount            (alt_vip_vfb_0_read_master_burstcount),                                         \n\t\t.av_read                  (alt_vip_vfb_0_read_master_read),                                               \n\t\t.av_readdata              (alt_vip_vfb_0_read_master_readdata),                                           \n\t\t.av_readdatavalid         (alt_vip_vfb_0_read_master_readdatavalid),                                      \n\t\t.av_byteenable            (4'b1111),                                                                      \n\t\t.av_beginbursttransfer    (1'b0),                                                                         \n\t\t.av_begintransfer         (1'b0),                                                                         \n\t\t.av_chipselect            (1'b0),                                                                         \n\t\t.av_write                 (1'b0),                                                                         \n\t\t.av_writedata             (32'b00000000000000000000000000000000),                                         \n\t\t.av_lock                  (1'b0),                                                                         \n\t\t.av_debugaccess           (1'b0),                                                                         \n\t\t.uav_clken                (),                                                                             \n\t\t.av_clken                 (1'b1),                                                                         \n\t\t.uav_response             (2'b00),                                                                        \n\t\t.av_response              (),                                                                             \n\t\t.uav_writeresponserequest (),                                                                             \n\t\t.uav_writeresponsevalid   (1'b0),                                                                         \n\t\t.av_writeresponserequest  (1'b0),                                                                         \n\t\t.av_writeresponsevalid    ()                                                                              \n\t);\n\n\taltera_merlin_master_translator #(\n\t\t.AV_ADDRESS_W                (32),\n\t\t.AV_DATA_W                   (32),\n\t\t.AV_BURSTCOUNT_W             (3),\n\t\t.AV_BYTEENABLE_W             (4),\n\t\t.UAV_ADDRESS_W               (32),\n\t\t.UAV_BURSTCOUNT_W            (5),\n\t\t.USE_READ                    (0),\n\t\t.USE_WRITE                   (1),\n\t\t.USE_BEGINBURSTTRANSFER      (0),\n\t\t.USE_BEGINTRANSFER           (0),\n\t\t.USE_CHIPSELECT              (0),\n\t\t.USE_BURSTCOUNT              (1),\n\t\t.USE_READDATAVALID           (0),\n\t\t.USE_WAITREQUEST             (1),\n\t\t.USE_READRESPONSE            (0),\n\t\t.USE_WRITERESPONSE           (0),\n\t\t.AV_SYMBOLS_PER_WORD         (4),\n\t\t.AV_ADDRESS_SYMBOLS          (1),\n\t\t.AV_BURSTCOUNT_SYMBOLS       (0),\n\t\t.AV_CONSTANT_BURST_BEHAVIOR  (1),\n\t\t.UAV_CONSTANT_BURST_BEHAVIOR (0),\n\t\t.AV_LINEWRAPBURSTS           (0),\n\t\t.AV_REGISTERINCOMINGSIGNALS  (0)\n\t) alt_vip_vfb_0_write_master_translator (\n\t\t.clk                      (pll_sys_outclk0_clk),                                                           \n\t\t.reset                    (alt_vip_vfb_0_reset_reset_bridge_in_reset_reset),                               \n\t\t.uav_address              (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_address),       \n\t\t.uav_burstcount           (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_burstcount),    \n\t\t.uav_read                 (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_read),          \n\t\t.uav_write                (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_write),         \n\t\t.uav_waitrequest          (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_waitrequest),   \n\t\t.uav_readdatavalid        (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_readdatavalid), \n\t\t.uav_byteenable           (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_byteenable),    \n\t\t.uav_readdata             (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_readdata),      \n\t\t.uav_writedata            (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_writedata),     \n\t\t.uav_lock                 (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_lock),          \n\t\t.uav_debugaccess          (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_debugaccess),   \n\t\t.av_address               (alt_vip_vfb_0_write_master_address),                                            \n\t\t.av_waitrequest           (alt_vip_vfb_0_write_master_waitrequest),                                        \n\t\t.av_burstcount            (alt_vip_vfb_0_write_master_burstcount),                                         \n\t\t.av_write                 (alt_vip_vfb_0_write_master_write),                                              \n\t\t.av_writedata             (alt_vip_vfb_0_write_master_writedata),                                          \n\t\t.av_byteenable            (4'b1111),                                                                       \n\t\t.av_beginbursttransfer    (1'b0),                                                                          \n\t\t.av_begintransfer         (1'b0),                                                                          \n\t\t.av_chipselect            (1'b0),                                                                          \n\t\t.av_read                  (1'b0),                                                                          \n\t\t.av_readdata              (),                                                                              \n\t\t.av_readdatavalid         (),                                                                              \n\t\t.av_lock                  (1'b0),                                                                          \n\t\t.av_debugaccess           (1'b0),                                                                          \n\t\t.uav_clken                (),                                                                              \n\t\t.av_clken                 (1'b1),                                                                          \n\t\t.uav_response             (2'b00),                                                                         \n\t\t.av_response              (),                                                                              \n\t\t.uav_writeresponserequest (),                                                                              \n\t\t.uav_writeresponsevalid   (1'b0),                                                                          \n\t\t.av_writeresponserequest  (1'b0),                                                                          \n\t\t.av_writeresponsevalid    ()                                                                               \n\t);\n\n\taltera_merlin_slave_translator #(\n\t\t.AV_ADDRESS_W                   (25),\n\t\t.AV_DATA_W                      (16),\n\t\t.UAV_DATA_W                     (16),\n\t\t.AV_BURSTCOUNT_W                (1),\n\t\t.AV_BYTEENABLE_W                (2),\n\t\t.UAV_BYTEENABLE_W               (2),\n\t\t.UAV_ADDRESS_W                  (32),\n\t\t.UAV_BURSTCOUNT_W               (2),\n\t\t.AV_READLATENCY                 (0),\n\t\t.USE_READDATAVALID              (1),\n\t\t.USE_WAITREQUEST                (1),\n\t\t.USE_UAV_CLKEN                  (0),\n\t\t.USE_READRESPONSE               (0),\n\t\t.USE_WRITERESPONSE              (0),\n\t\t.AV_SYMBOLS_PER_WORD            (2),\n\t\t.AV_ADDRESS_SYMBOLS             (0),\n\t\t.AV_BURSTCOUNT_SYMBOLS          (0),\n\t\t.AV_CONSTANT_BURST_BEHAVIOR     (0),\n\t\t.UAV_CONSTANT_BURST_BEHAVIOR    (0),\n\t\t.AV_REQUIRE_UNALIGNED_ADDRESSES (0),\n\t\t.CHIPSELECT_THROUGH_READLATENCY (0),\n\t\t.AV_READ_WAIT_CYCLES            (1),\n\t\t.AV_WRITE_WAIT_CYCLES           (0),\n\t\t.AV_SETUP_WAIT_CYCLES           (0),\n\t\t.AV_DATA_HOLD_CYCLES            (0)\n\t) sdram_s1_translator (\n\t\t.clk                      (pll_sys_outclk0_clk),                                                 \n\t\t.reset                    (alt_vip_vfb_0_reset_reset_bridge_in_reset_reset),                     \n\t\t.uav_address              (sdram_s1_translator_avalon_universal_slave_0_agent_m0_address),       \n\t\t.uav_burstcount           (sdram_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    \n\t\t.uav_read                 (sdram_s1_translator_avalon_universal_slave_0_agent_m0_read),          \n\t\t.uav_write                (sdram_s1_translator_avalon_universal_slave_0_agent_m0_write),         \n\t\t.uav_waitrequest          (sdram_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   \n\t\t.uav_readdatavalid        (sdram_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), \n\t\t.uav_byteenable           (sdram_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    \n\t\t.uav_readdata             (sdram_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      \n\t\t.uav_writedata            (sdram_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     \n\t\t.uav_lock                 (sdram_s1_translator_avalon_universal_slave_0_agent_m0_lock),          \n\t\t.uav_debugaccess          (sdram_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   \n\t\t.av_address               (sdram_s1_address),                                                    \n\t\t.av_write                 (sdram_s1_write),                                                      \n\t\t.av_read                  (sdram_s1_read),                                                       \n\t\t.av_readdata              (sdram_s1_readdata),                                                   \n\t\t.av_writedata             (sdram_s1_writedata),                                                  \n\t\t.av_byteenable            (sdram_s1_byteenable),                                                 \n\t\t.av_readdatavalid         (sdram_s1_readdatavalid),                                              \n\t\t.av_waitrequest           (sdram_s1_waitrequest),                                                \n\t\t.av_chipselect            (sdram_s1_chipselect),                                                 \n\t\t.av_begintransfer         (),                                                                    \n\t\t.av_beginbursttransfer    (),                                                                    \n\t\t.av_burstcount            (),                                                                    \n\t\t.av_writebyteenable       (),                                                                    \n\t\t.av_lock                  (),                                                                    \n\t\t.av_clken                 (),                                                                    \n\t\t.uav_clken                (1'b0),                                                                \n\t\t.av_debugaccess           (),                                                                    \n\t\t.av_outputenable          (),                                                                    \n\t\t.uav_response             (),                                                                    \n\t\t.av_response              (2'b00),                                                               \n\t\t.uav_writeresponserequest (1'b0),                                                                \n\t\t.uav_writeresponsevalid   (),                                                                    \n\t\t.av_writeresponserequest  (),                                                                    \n\t\t.av_writeresponsevalid    (1'b0)                                                                 \n\t);\n\n\taltera_merlin_master_agent #(\n\t\t.PKT_PROTECTION_H          (94),\n\t\t.PKT_PROTECTION_L          (92),\n\t\t.PKT_BEGIN_BURST           (87),\n\t\t.PKT_BURSTWRAP_H           (79),\n\t\t.PKT_BURSTWRAP_L           (79),\n\t\t.PKT_BURST_SIZE_H          (82),\n\t\t.PKT_BURST_SIZE_L          (80),\n\t\t.PKT_BURST_TYPE_H          (84),\n\t\t.PKT_BURST_TYPE_L          (83),\n\t\t.PKT_BYTE_CNT_H            (78),\n\t\t.PKT_BYTE_CNT_L            (74),\n\t\t.PKT_ADDR_H                (67),\n\t\t.PKT_ADDR_L                (36),\n\t\t.PKT_TRANS_COMPRESSED_READ (68),\n\t\t.PKT_TRANS_POSTED          (69),\n\t\t.PKT_TRANS_WRITE           (70),\n\t\t.PKT_TRANS_READ            (71),\n\t\t.PKT_TRANS_LOCK            (72),\n\t\t.PKT_TRANS_EXCLUSIVE       (73),\n\t\t.PKT_DATA_H                (31),\n\t\t.PKT_DATA_L                (0),\n\t\t.PKT_BYTEEN_H              (35),\n\t\t.PKT_BYTEEN_L              (32),\n\t\t.PKT_SRC_ID_H              (89),\n\t\t.PKT_SRC_ID_L              (89),\n\t\t.PKT_DEST_ID_H             (90),\n\t\t.PKT_DEST_ID_L             (90),\n\t\t.PKT_THREAD_ID_H           (91),\n\t\t.PKT_THREAD_ID_L           (91),\n\t\t.PKT_CACHE_H               (98),\n\t\t.PKT_CACHE_L               (95),\n\t\t.PKT_DATA_SIDEBAND_H       (86),\n\t\t.PKT_DATA_SIDEBAND_L       (86),\n\t\t.PKT_QOS_H                 (88),\n\t\t.PKT_QOS_L                 (88),\n\t\t.PKT_ADDR_SIDEBAND_H       (85),\n\t\t.PKT_ADDR_SIDEBAND_L       (85),\n\t\t.PKT_RESPONSE_STATUS_H     (100),\n\t\t.PKT_RESPONSE_STATUS_L     (99),\n\t\t.PKT_ORI_BURST_SIZE_L      (101),\n\t\t.PKT_ORI_BURST_SIZE_H      (103),\n\t\t.ST_DATA_W                 (104),\n\t\t.ST_CHANNEL_W              (2),\n\t\t.AV_BURSTCOUNT_W           (5),\n\t\t.SUPPRESS_0_BYTEEN_RSP     (0),\n\t\t.ID                        (0),\n\t\t.BURSTWRAP_VALUE           (1),\n\t\t.CACHE_VALUE               (0),\n\t\t.SECURE_ACCESS_BIT         (1),\n\t\t.USE_READRESPONSE          (0),\n\t\t.USE_WRITERESPONSE         (0)\n\t) alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_agent (\n\t\t.clk                     (pll_sys_outclk0_clk),                                                                   \n\t\t.reset                   (alt_vip_vfb_0_reset_reset_bridge_in_reset_reset),                                       \n\t\t.av_address              (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_address),                \n\t\t.av_write                (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_write),                  \n\t\t.av_read                 (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_read),                   \n\t\t.av_writedata            (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_writedata),              \n\t\t.av_readdata             (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_readdata),               \n\t\t.av_waitrequest          (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_waitrequest),            \n\t\t.av_readdatavalid        (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_readdatavalid),          \n\t\t.av_byteenable           (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_byteenable),             \n\t\t.av_burstcount           (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_burstcount),             \n\t\t.av_debugaccess          (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_debugaccess),            \n\t\t.av_lock                 (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_lock),                   \n\t\t.cp_valid                (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_agent_cp_valid),         \n\t\t.cp_data                 (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_agent_cp_data),          \n\t\t.cp_startofpacket        (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_agent_cp_startofpacket), \n\t\t.cp_endofpacket          (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_agent_cp_endofpacket),   \n\t\t.cp_ready                (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_agent_cp_ready),         \n\t\t.rp_valid                (rsp_xbar_mux_src_valid),                                                                \n\t\t.rp_data                 (rsp_xbar_mux_src_data),                                                                 \n\t\t.rp_channel              (rsp_xbar_mux_src_channel),                                                              \n\t\t.rp_startofpacket        (rsp_xbar_mux_src_startofpacket),                                                        \n\t\t.rp_endofpacket          (rsp_xbar_mux_src_endofpacket),                                                          \n\t\t.rp_ready                (rsp_xbar_mux_src_ready),                                                                \n\t\t.av_response             (),                                                                                      \n\t\t.av_writeresponserequest (1'b0),                                                                                  \n\t\t.av_writeresponsevalid   ()                                                                                       \n\t);\n\n\taltera_merlin_master_agent #(\n\t\t.PKT_PROTECTION_H          (94),\n\t\t.PKT_PROTECTION_L          (92),\n\t\t.PKT_BEGIN_BURST           (87),\n\t\t.PKT_BURSTWRAP_H           (79),\n\t\t.PKT_BURSTWRAP_L           (79),\n\t\t.PKT_BURST_SIZE_H          (82),\n\t\t.PKT_BURST_SIZE_L          (80),\n\t\t.PKT_BURST_TYPE_H          (84),\n\t\t.PKT_BURST_TYPE_L          (83),\n\t\t.PKT_BYTE_CNT_H            (78),\n\t\t.PKT_BYTE_CNT_L            (74),\n\t\t.PKT_ADDR_H                (67),\n\t\t.PKT_ADDR_L                (36),\n\t\t.PKT_TRANS_COMPRESSED_READ (68),\n\t\t.PKT_TRANS_POSTED          (69),\n\t\t.PKT_TRANS_WRITE           (70),\n\t\t.PKT_TRANS_READ            (71),\n\t\t.PKT_TRANS_LOCK            (72),\n\t\t.PKT_TRANS_EXCLUSIVE       (73),\n\t\t.PKT_DATA_H                (31),\n\t\t.PKT_DATA_L                (0),\n\t\t.PKT_BYTEEN_H              (35),\n\t\t.PKT_BYTEEN_L              (32),\n\t\t.PKT_SRC_ID_H              (89),\n\t\t.PKT_SRC_ID_L              (89),\n\t\t.PKT_DEST_ID_H             (90),\n\t\t.PKT_DEST_ID_L             (90),\n\t\t.PKT_THREAD_ID_H           (91),\n\t\t.PKT_THREAD_ID_L           (91),\n\t\t.PKT_CACHE_H               (98),\n\t\t.PKT_CACHE_L               (95),\n\t\t.PKT_DATA_SIDEBAND_H       (86),\n\t\t.PKT_DATA_SIDEBAND_L       (86),\n\t\t.PKT_QOS_H                 (88),\n\t\t.PKT_QOS_L                 (88),\n\t\t.PKT_ADDR_SIDEBAND_H       (85),\n\t\t.PKT_ADDR_SIDEBAND_L       (85),\n\t\t.PKT_RESPONSE_STATUS_H     (100),\n\t\t.PKT_RESPONSE_STATUS_L     (99),\n\t\t.PKT_ORI_BURST_SIZE_L      (101),\n\t\t.PKT_ORI_BURST_SIZE_H      (103),\n\t\t.ST_DATA_W                 (104),\n\t\t.ST_CHANNEL_W              (2),\n\t\t.AV_BURSTCOUNT_W           (5),\n\t\t.SUPPRESS_0_BYTEEN_RSP     (0),\n\t\t.ID                        (1),\n\t\t.BURSTWRAP_VALUE           (1),\n\t\t.CACHE_VALUE               (0),\n\t\t.SECURE_ACCESS_BIT         (1),\n\t\t.USE_READRESPONSE          (0),\n\t\t.USE_WRITERESPONSE         (0)\n\t) alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_agent (\n\t\t.clk                     (pll_sys_outclk0_clk),                                                                    \n\t\t.reset                   (alt_vip_vfb_0_reset_reset_bridge_in_reset_reset),                                        \n\t\t.av_address              (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_address),                \n\t\t.av_write                (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_write),                  \n\t\t.av_read                 (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_read),                   \n\t\t.av_writedata            (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_writedata),              \n\t\t.av_readdata             (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_readdata),               \n\t\t.av_waitrequest          (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_waitrequest),            \n\t\t.av_readdatavalid        (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_readdatavalid),          \n\t\t.av_byteenable           (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_byteenable),             \n\t\t.av_burstcount           (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_burstcount),             \n\t\t.av_debugaccess          (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_debugaccess),            \n\t\t.av_lock                 (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_lock),                   \n\t\t.cp_valid                (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_agent_cp_valid),         \n\t\t.cp_data                 (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_agent_cp_data),          \n\t\t.cp_startofpacket        (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_agent_cp_startofpacket), \n\t\t.cp_endofpacket          (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_agent_cp_endofpacket),   \n\t\t.cp_ready                (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_agent_cp_ready),         \n\t\t.rp_valid                (rsp_xbar_mux_001_src_valid),                                                             \n\t\t.rp_data                 (rsp_xbar_mux_001_src_data),                                                              \n\t\t.rp_channel              (rsp_xbar_mux_001_src_channel),                                                           \n\t\t.rp_startofpacket        (rsp_xbar_mux_001_src_startofpacket),                                                     \n\t\t.rp_endofpacket          (rsp_xbar_mux_001_src_endofpacket),                                                       \n\t\t.rp_ready                (rsp_xbar_mux_001_src_ready),                                                             \n\t\t.av_response             (),                                                                                       \n\t\t.av_writeresponserequest (1'b0),                                                                                   \n\t\t.av_writeresponsevalid   ()                                                                                        \n\t);\n\n\taltera_merlin_slave_agent #(\n\t\t.PKT_DATA_H                (15),\n\t\t.PKT_DATA_L                (0),\n\t\t.PKT_BEGIN_BURST           (69),\n\t\t.PKT_SYMBOL_W              (8),\n\t\t.PKT_BYTEEN_H              (17),\n\t\t.PKT_BYTEEN_L              (16),\n\t\t.PKT_ADDR_H                (49),\n\t\t.PKT_ADDR_L                (18),\n\t\t.PKT_TRANS_COMPRESSED_READ (50),\n\t\t.PKT_TRANS_POSTED          (51),\n\t\t.PKT_TRANS_WRITE           (52),\n\t\t.PKT_TRANS_READ            (53),\n\t\t.PKT_TRANS_LOCK            (54),\n\t\t.PKT_SRC_ID_H              (71),\n\t\t.PKT_SRC_ID_L              (71),\n\t\t.PKT_DEST_ID_H             (72),\n\t\t.PKT_DEST_ID_L             (72),\n\t\t.PKT_BURSTWRAP_H           (61),\n\t\t.PKT_BURSTWRAP_L           (61),\n\t\t.PKT_BYTE_CNT_H            (60),\n\t\t.PKT_BYTE_CNT_L            (56),\n\t\t.PKT_PROTECTION_H          (76),\n\t\t.PKT_PROTECTION_L          (74),\n\t\t.PKT_RESPONSE_STATUS_H     (82),\n\t\t.PKT_RESPONSE_STATUS_L     (81),\n\t\t.PKT_BURST_SIZE_H          (64),\n\t\t.PKT_BURST_SIZE_L          (62),\n\t\t.PKT_ORI_BURST_SIZE_L      (83),\n\t\t.PKT_ORI_BURST_SIZE_H      (85),\n\t\t.ST_CHANNEL_W              (2),\n\t\t.ST_DATA_W                 (86),\n\t\t.AVS_BURSTCOUNT_W          (2),\n\t\t.SUPPRESS_0_BYTEEN_CMD     (1),\n\t\t.PREVENT_FIFO_OVERFLOW     (1),\n\t\t.USE_READRESPONSE          (0),\n\t\t.USE_WRITERESPONSE         (0)\n\t) sdram_s1_translator_avalon_universal_slave_0_agent (\n\t\t.clk                     (pll_sys_outclk0_clk),                                                           \n\t\t.reset                   (alt_vip_vfb_0_reset_reset_bridge_in_reset_reset),                               \n\t\t.m0_address              (sdram_s1_translator_avalon_universal_slave_0_agent_m0_address),                 \n\t\t.m0_burstcount           (sdram_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              \n\t\t.m0_byteenable           (sdram_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              \n\t\t.m0_debugaccess          (sdram_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             \n\t\t.m0_lock                 (sdram_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    \n\t\t.m0_readdata             (sdram_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                \n\t\t.m0_readdatavalid        (sdram_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           \n\t\t.m0_read                 (sdram_s1_translator_avalon_universal_slave_0_agent_m0_read),                    \n\t\t.m0_waitrequest          (sdram_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             \n\t\t.m0_writedata            (sdram_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               \n\t\t.m0_write                (sdram_s1_translator_avalon_universal_slave_0_agent_m0_write),                   \n\t\t.rp_endofpacket          (sdram_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             \n\t\t.rp_ready                (sdram_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   \n\t\t.rp_valid                (sdram_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   \n\t\t.rp_data                 (sdram_s1_translator_avalon_universal_slave_0_agent_rp_data),                    \n\t\t.rp_startofpacket        (sdram_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           \n\t\t.cp_ready                (agent_pipeline_source0_ready),                                                  \n\t\t.cp_valid                (agent_pipeline_source0_valid),                                                  \n\t\t.cp_data                 (agent_pipeline_source0_data),                                                   \n\t\t.cp_startofpacket        (agent_pipeline_source0_startofpacket),                                          \n\t\t.cp_endofpacket          (agent_pipeline_source0_endofpacket),                                            \n\t\t.cp_channel              (agent_pipeline_source0_channel),                                                \n\t\t.rf_sink_ready           (sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         \n\t\t.rf_sink_valid           (sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         \n\t\t.rf_sink_startofpacket   (sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), \n\t\t.rf_sink_endofpacket     (sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   \n\t\t.rf_sink_data            (sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          \n\t\t.rf_source_ready         (sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            \n\t\t.rf_source_valid         (sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            \n\t\t.rf_source_startofpacket (sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    \n\t\t.rf_source_endofpacket   (sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      \n\t\t.rf_source_data          (sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             \n\t\t.rdata_fifo_sink_ready   (sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_out_ready),       \n\t\t.rdata_fifo_sink_valid   (sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_out_valid),       \n\t\t.rdata_fifo_sink_data    (sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_out_data),        \n\t\t.rdata_fifo_src_ready    (sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       \n\t\t.rdata_fifo_src_valid    (sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       \n\t\t.rdata_fifo_src_data     (sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        \n\t\t.m0_response             (2'b00),                                                                         \n\t\t.m0_writeresponserequest (),                                                                              \n\t\t.m0_writeresponsevalid   (1'b0)                                                                           \n\t);\n\n\taltera_avalon_sc_fifo #(\n\t\t.SYMBOLS_PER_BEAT    (1),\n\t\t.BITS_PER_SYMBOL     (87),\n\t\t.FIFO_DEPTH          (8),\n\t\t.CHANNEL_WIDTH       (0),\n\t\t.ERROR_WIDTH         (0),\n\t\t.USE_PACKETS         (1),\n\t\t.USE_FILL_LEVEL      (0),\n\t\t.EMPTY_LATENCY       (1),\n\t\t.USE_MEMORY_BLOCKS   (0),\n\t\t.USE_STORE_FORWARD   (0),\n\t\t.USE_ALMOST_FULL_IF  (0),\n\t\t.USE_ALMOST_EMPTY_IF (0)\n\t) sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (\n\t\t.clk               (pll_sys_outclk0_clk),                                                           \n\t\t.reset             (alt_vip_vfb_0_reset_reset_bridge_in_reset_reset),                               \n\t\t.in_data           (sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             \n\t\t.in_valid          (sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            \n\t\t.in_ready          (sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            \n\t\t.in_startofpacket  (sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    \n\t\t.in_endofpacket    (sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      \n\t\t.out_data          (sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          \n\t\t.out_valid         (sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         \n\t\t.out_ready         (sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         \n\t\t.out_startofpacket (sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), \n\t\t.out_endofpacket   (sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   \n\t\t.csr_address       (2'b00),                                                                         \n\t\t.csr_read          (1'b0),                                                                          \n\t\t.csr_write         (1'b0),                                                                          \n\t\t.csr_readdata      (),                                                                              \n\t\t.csr_writedata     (32'b00000000000000000000000000000000),                                          \n\t\t.almost_full_data  (),                                                                              \n\t\t.almost_empty_data (),                                                                              \n\t\t.in_empty          (1'b0),                                                                          \n\t\t.out_empty         (),                                                                              \n\t\t.in_error          (1'b0),                                                                          \n\t\t.out_error         (),                                                                              \n\t\t.in_channel        (1'b0),                                                                          \n\t\t.out_channel       ()                                                                               \n\t);\n\n\taltera_avalon_sc_fifo #(\n\t\t.SYMBOLS_PER_BEAT    (1),\n\t\t.BITS_PER_SYMBOL     (18),\n\t\t.FIFO_DEPTH          (8),\n\t\t.CHANNEL_WIDTH       (0),\n\t\t.ERROR_WIDTH         (0),\n\t\t.USE_PACKETS         (0),\n\t\t.USE_FILL_LEVEL      (0),\n\t\t.EMPTY_LATENCY       (3),\n\t\t.USE_MEMORY_BLOCKS   (1),\n\t\t.USE_STORE_FORWARD   (0),\n\t\t.USE_ALMOST_FULL_IF  (0),\n\t\t.USE_ALMOST_EMPTY_IF (0)\n\t) sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo (\n\t\t.clk               (pll_sys_outclk0_clk),                                                     \n\t\t.reset             (alt_vip_vfb_0_reset_reset_bridge_in_reset_reset),                         \n\t\t.in_data           (sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),  \n\t\t.in_valid          (sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid), \n\t\t.in_ready          (sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready), \n\t\t.out_data          (sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_out_data),  \n\t\t.out_valid         (sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_out_valid), \n\t\t.out_ready         (sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_out_ready), \n\t\t.csr_address       (2'b00),                                                                   \n\t\t.csr_read          (1'b0),                                                                    \n\t\t.csr_write         (1'b0),                                                                    \n\t\t.csr_readdata      (),                                                                        \n\t\t.csr_writedata     (32'b00000000000000000000000000000000),                                    \n\t\t.almost_full_data  (),                                                                        \n\t\t.almost_empty_data (),                                                                        \n\t\t.in_startofpacket  (1'b0),                                                                    \n\t\t.in_endofpacket    (1'b0),                                                                    \n\t\t.out_startofpacket (),                                                                        \n\t\t.out_endofpacket   (),                                                                        \n\t\t.in_empty          (1'b0),                                                                    \n\t\t.out_empty         (),                                                                        \n\t\t.in_error          (1'b0),                                                                    \n\t\t.out_error         (),                                                                        \n\t\t.in_channel        (1'b0),                                                                    \n\t\t.out_channel       ()                                                                         \n\t);\n\n\tDE1_SoC_QSYS_mm_interconnect_1_addr_router addr_router (\n\t\t.sink_ready         (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_agent_cp_ready),         \n\t\t.sink_valid         (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_agent_cp_valid),         \n\t\t.sink_data          (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_agent_cp_data),          \n\t\t.sink_startofpacket (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_agent_cp_startofpacket), \n\t\t.sink_endofpacket   (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_agent_cp_endofpacket),   \n\t\t.clk                (pll_sys_outclk0_clk),                                                                   \n\t\t.reset              (alt_vip_vfb_0_reset_reset_bridge_in_reset_reset),                                       \n\t\t.src_ready          (addr_router_src_ready),                                                                 \n\t\t.src_valid          (addr_router_src_valid),                                                                 \n\t\t.src_data           (addr_router_src_data),                                                                  \n\t\t.src_channel        (addr_router_src_channel),                                                               \n\t\t.src_startofpacket  (addr_router_src_startofpacket),                                                         \n\t\t.src_endofpacket    (addr_router_src_endofpacket)                                                            \n\t);\n\n\tDE1_SoC_QSYS_mm_interconnect_1_addr_router addr_router_001 (\n\t\t.sink_ready         (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_agent_cp_ready),         \n\t\t.sink_valid         (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_agent_cp_valid),         \n\t\t.sink_data          (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_agent_cp_data),          \n\t\t.sink_startofpacket (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_agent_cp_startofpacket), \n\t\t.sink_endofpacket   (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_agent_cp_endofpacket),   \n\t\t.clk                (pll_sys_outclk0_clk),                                                                    \n\t\t.reset              (alt_vip_vfb_0_reset_reset_bridge_in_reset_reset),                                        \n\t\t.src_ready          (addr_router_001_src_ready),                                                              \n\t\t.src_valid          (addr_router_001_src_valid),                                                              \n\t\t.src_data           (addr_router_001_src_data),                                                               \n\t\t.src_channel        (addr_router_001_src_channel),                                                            \n\t\t.src_startofpacket  (addr_router_001_src_startofpacket),                                                      \n\t\t.src_endofpacket    (addr_router_001_src_endofpacket)                                                         \n\t);\n\n\tDE1_SoC_QSYS_mm_interconnect_1_id_router id_router (\n\t\t.sink_ready         (agent_pipeline_001_source0_ready),                \n\t\t.sink_valid         (agent_pipeline_001_source0_valid),                \n\t\t.sink_data          (agent_pipeline_001_source0_data),                 \n\t\t.sink_startofpacket (agent_pipeline_001_source0_startofpacket),        \n\t\t.sink_endofpacket   (agent_pipeline_001_source0_endofpacket),          \n\t\t.clk                (pll_sys_outclk0_clk),                             \n\t\t.reset              (alt_vip_vfb_0_reset_reset_bridge_in_reset_reset), \n\t\t.src_ready          (id_router_src_ready),                             \n\t\t.src_valid          (id_router_src_valid),                             \n\t\t.src_data           (id_router_src_data),                              \n\t\t.src_channel        (id_router_src_channel),                           \n\t\t.src_startofpacket  (id_router_src_startofpacket),                     \n\t\t.src_endofpacket    (id_router_src_endofpacket)                        \n\t);\n\n\taltera_merlin_burst_adapter #(\n\t\t.PKT_ADDR_H                (49),\n\t\t.PKT_ADDR_L                (18),\n\t\t.PKT_BEGIN_BURST           (69),\n\t\t.PKT_BYTE_CNT_H            (60),\n\t\t.PKT_BYTE_CNT_L            (56),\n\t\t.PKT_BYTEEN_H              (17),\n\t\t.PKT_BYTEEN_L              (16),\n\t\t.PKT_BURST_SIZE_H          (64),\n\t\t.PKT_BURST_SIZE_L          (62),\n\t\t.PKT_BURST_TYPE_H          (66),\n\t\t.PKT_BURST_TYPE_L          (65),\n\t\t.PKT_BURSTWRAP_H           (61),\n\t\t.PKT_BURSTWRAP_L           (61),\n\t\t.PKT_TRANS_COMPRESSED_READ (50),\n\t\t.PKT_TRANS_WRITE           (52),\n\t\t.PKT_TRANS_READ            (53),\n\t\t.OUT_NARROW_SIZE           (0),\n\t\t.IN_NARROW_SIZE            (0),\n\t\t.OUT_FIXED                 (0),\n\t\t.OUT_COMPLETE_WRAP         (0),\n\t\t.ST_DATA_W                 (86),\n\t\t.ST_CHANNEL_W              (2),\n\t\t.OUT_BYTE_CNT_H            (57),\n\t\t.OUT_BURSTWRAP_H           (61),\n\t\t.COMPRESSED_READ_SUPPORT   (1),\n\t\t.BYTEENABLE_SYNTHESIS      (1),\n\t\t.PIPE_INPUTS               (0),\n\t\t.NO_WRAP_SUPPORT           (0),\n\t\t.BURSTWRAP_CONST_MASK      (1),\n\t\t.BURSTWRAP_CONST_VALUE     (1)\n\t) burst_adapter (\n\t\t.clk                   (pll_sys_outclk0_clk),                             \n\t\t.reset                 (alt_vip_vfb_0_reset_reset_bridge_in_reset_reset), \n\t\t.sink0_valid           (width_adapter_001_src_valid),                     \n\t\t.sink0_data            (width_adapter_001_src_data),                      \n\t\t.sink0_channel         (width_adapter_001_src_channel),                   \n\t\t.sink0_startofpacket   (width_adapter_001_src_startofpacket),             \n\t\t.sink0_endofpacket     (width_adapter_001_src_endofpacket),               \n\t\t.sink0_ready           (width_adapter_001_src_ready),                     \n\t\t.source0_valid         (burst_adapter_source0_valid),                     \n\t\t.source0_data          (burst_adapter_source0_data),                      \n\t\t.source0_channel       (burst_adapter_source0_channel),                   \n\t\t.source0_startofpacket (burst_adapter_source0_startofpacket),             \n\t\t.source0_endofpacket   (burst_adapter_source0_endofpacket),               \n\t\t.source0_ready         (burst_adapter_source0_ready)                      \n\t);\n\n\tDE1_SoC_QSYS_mm_interconnect_1_cmd_xbar_demux cmd_xbar_demux (\n\t\t.clk                (pll_sys_outclk0_clk),                             \n\t\t.reset              (alt_vip_vfb_0_reset_reset_bridge_in_reset_reset), \n\t\t.sink_ready         (addr_router_src_ready),                           \n\t\t.sink_channel       (addr_router_src_channel),                         \n\t\t.sink_data          (addr_router_src_data),                            \n\t\t.sink_startofpacket (addr_router_src_startofpacket),                   \n\t\t.sink_endofpacket   (addr_router_src_endofpacket),                     \n\t\t.sink_valid         (addr_router_src_valid),                           \n\t\t.src0_ready         (cmd_xbar_demux_src0_ready),                       \n\t\t.src0_valid         (cmd_xbar_demux_src0_valid),                       \n\t\t.src0_data          (cmd_xbar_demux_src0_data),                        \n\t\t.src0_channel       (cmd_xbar_demux_src0_channel),                     \n\t\t.src0_startofpacket (cmd_xbar_demux_src0_startofpacket),               \n\t\t.src0_endofpacket   (cmd_xbar_demux_src0_endofpacket)                  \n\t);\n\n\tDE1_SoC_QSYS_mm_interconnect_1_cmd_xbar_demux cmd_xbar_demux_001 (\n\t\t.clk                (pll_sys_outclk0_clk),                             \n\t\t.reset              (alt_vip_vfb_0_reset_reset_bridge_in_reset_reset), \n\t\t.sink_ready         (addr_router_001_src_ready),                       \n\t\t.sink_channel       (addr_router_001_src_channel),                     \n\t\t.sink_data          (addr_router_001_src_data),                        \n\t\t.sink_startofpacket (addr_router_001_src_startofpacket),               \n\t\t.sink_endofpacket   (addr_router_001_src_endofpacket),                 \n\t\t.sink_valid         (addr_router_001_src_valid),                       \n\t\t.src0_ready         (cmd_xbar_demux_001_src0_ready),                   \n\t\t.src0_valid         (cmd_xbar_demux_001_src0_valid),                   \n\t\t.src0_data          (cmd_xbar_demux_001_src0_data),                    \n\t\t.src0_channel       (cmd_xbar_demux_001_src0_channel),                 \n\t\t.src0_startofpacket (cmd_xbar_demux_001_src0_startofpacket),           \n\t\t.src0_endofpacket   (cmd_xbar_demux_001_src0_endofpacket)              \n\t);\n\n\tDE1_SoC_QSYS_mm_interconnect_1_cmd_xbar_mux cmd_xbar_mux (\n\t\t.clk                 (pll_sys_outclk0_clk),                             \n\t\t.reset               (alt_vip_vfb_0_reset_reset_bridge_in_reset_reset), \n\t\t.src_ready           (cmd_xbar_mux_src_ready),                          \n\t\t.src_valid           (cmd_xbar_mux_src_valid),                          \n\t\t.src_data            (cmd_xbar_mux_src_data),                           \n\t\t.src_channel         (cmd_xbar_mux_src_channel),                        \n\t\t.src_startofpacket   (cmd_xbar_mux_src_startofpacket),                  \n\t\t.src_endofpacket     (cmd_xbar_mux_src_endofpacket),                    \n\t\t.sink0_ready         (cmd_xbar_demux_src0_ready),                       \n\t\t.sink0_valid         (cmd_xbar_demux_src0_valid),                       \n\t\t.sink0_channel       (cmd_xbar_demux_src0_channel),                     \n\t\t.sink0_data          (cmd_xbar_demux_src0_data),                        \n\t\t.sink0_startofpacket (cmd_xbar_demux_src0_startofpacket),               \n\t\t.sink0_endofpacket   (cmd_xbar_demux_src0_endofpacket),                 \n\t\t.sink1_ready         (cmd_xbar_demux_001_src0_ready),                   \n\t\t.sink1_valid         (cmd_xbar_demux_001_src0_valid),                   \n\t\t.sink1_channel       (cmd_xbar_demux_001_src0_channel),                 \n\t\t.sink1_data          (cmd_xbar_demux_001_src0_data),                    \n\t\t.sink1_startofpacket (cmd_xbar_demux_001_src0_startofpacket),           \n\t\t.sink1_endofpacket   (cmd_xbar_demux_001_src0_endofpacket)              \n\t);\n\n\tDE1_SoC_QSYS_mm_interconnect_1_rsp_xbar_demux rsp_xbar_demux (\n\t\t.clk                (pll_sys_outclk0_clk),                             \n\t\t.reset              (alt_vip_vfb_0_reset_reset_bridge_in_reset_reset), \n\t\t.sink_ready         (width_adapter_src_ready),                         \n\t\t.sink_channel       (width_adapter_src_channel),                       \n\t\t.sink_data          (width_adapter_src_data),                          \n\t\t.sink_startofpacket (width_adapter_src_startofpacket),                 \n\t\t.sink_endofpacket   (width_adapter_src_endofpacket),                   \n\t\t.sink_valid         (width_adapter_src_valid),                         \n\t\t.src0_ready         (rsp_xbar_demux_src0_ready),                       \n\t\t.src0_valid         (rsp_xbar_demux_src0_valid),                       \n\t\t.src0_data          (rsp_xbar_demux_src0_data),                        \n\t\t.src0_channel       (rsp_xbar_demux_src0_channel),                     \n\t\t.src0_startofpacket (rsp_xbar_demux_src0_startofpacket),               \n\t\t.src0_endofpacket   (rsp_xbar_demux_src0_endofpacket),                 \n\t\t.src1_ready         (rsp_xbar_demux_src1_ready),                       \n\t\t.src1_valid         (rsp_xbar_demux_src1_valid),                       \n\t\t.src1_data          (rsp_xbar_demux_src1_data),                        \n\t\t.src1_channel       (rsp_xbar_demux_src1_channel),                     \n\t\t.src1_startofpacket (rsp_xbar_demux_src1_startofpacket),               \n\t\t.src1_endofpacket   (rsp_xbar_demux_src1_endofpacket)                  \n\t);\n\n\tDE1_SoC_QSYS_mm_interconnect_1_rsp_xbar_mux rsp_xbar_mux (\n\t\t.clk                 (pll_sys_outclk0_clk),                             \n\t\t.reset               (alt_vip_vfb_0_reset_reset_bridge_in_reset_reset), \n\t\t.src_ready           (rsp_xbar_mux_src_ready),                          \n\t\t.src_valid           (rsp_xbar_mux_src_valid),                          \n\t\t.src_data            (rsp_xbar_mux_src_data),                           \n\t\t.src_channel         (rsp_xbar_mux_src_channel),                        \n\t\t.src_startofpacket   (rsp_xbar_mux_src_startofpacket),                  \n\t\t.src_endofpacket     (rsp_xbar_mux_src_endofpacket),                    \n\t\t.sink0_ready         (rsp_xbar_demux_src0_ready),                       \n\t\t.sink0_valid         (rsp_xbar_demux_src0_valid),                       \n\t\t.sink0_channel       (rsp_xbar_demux_src0_channel),                     \n\t\t.sink0_data          (rsp_xbar_demux_src0_data),                        \n\t\t.sink0_startofpacket (rsp_xbar_demux_src0_startofpacket),               \n\t\t.sink0_endofpacket   (rsp_xbar_demux_src0_endofpacket)                  \n\t);\n\n\tDE1_SoC_QSYS_mm_interconnect_1_rsp_xbar_mux rsp_xbar_mux_001 (\n\t\t.clk                 (pll_sys_outclk0_clk),                             \n\t\t.reset               (alt_vip_vfb_0_reset_reset_bridge_in_reset_reset), \n\t\t.src_ready           (rsp_xbar_mux_001_src_ready),                      \n\t\t.src_valid           (rsp_xbar_mux_001_src_valid),                      \n\t\t.src_data            (rsp_xbar_mux_001_src_data),                       \n\t\t.src_channel         (rsp_xbar_mux_001_src_channel),                    \n\t\t.src_startofpacket   (rsp_xbar_mux_001_src_startofpacket),              \n\t\t.src_endofpacket     (rsp_xbar_mux_001_src_endofpacket),                \n\t\t.sink0_ready         (rsp_xbar_demux_src1_ready),                       \n\t\t.sink0_valid         (rsp_xbar_demux_src1_valid),                       \n\t\t.sink0_channel       (rsp_xbar_demux_src1_channel),                     \n\t\t.sink0_data          (rsp_xbar_demux_src1_data),                        \n\t\t.sink0_startofpacket (rsp_xbar_demux_src1_startofpacket),               \n\t\t.sink0_endofpacket   (rsp_xbar_demux_src1_endofpacket)                  \n\t);\n\n\taltera_merlin_width_adapter #(\n\t\t.IN_PKT_ADDR_H                 (49),\n\t\t.IN_PKT_ADDR_L                 (18),\n\t\t.IN_PKT_DATA_H                 (15),\n\t\t.IN_PKT_DATA_L                 (0),\n\t\t.IN_PKT_BYTEEN_H               (17),\n\t\t.IN_PKT_BYTEEN_L               (16),\n\t\t.IN_PKT_BYTE_CNT_H             (60),\n\t\t.IN_PKT_BYTE_CNT_L             (56),\n\t\t.IN_PKT_TRANS_COMPRESSED_READ  (50),\n\t\t.IN_PKT_BURSTWRAP_H            (61),\n\t\t.IN_PKT_BURSTWRAP_L            (61),\n\t\t.IN_PKT_BURST_SIZE_H           (64),\n\t\t.IN_PKT_BURST_SIZE_L           (62),\n\t\t.IN_PKT_RESPONSE_STATUS_H      (82),\n\t\t.IN_PKT_RESPONSE_STATUS_L      (81),\n\t\t.IN_PKT_TRANS_EXCLUSIVE        (55),\n\t\t.IN_PKT_BURST_TYPE_H           (66),\n\t\t.IN_PKT_BURST_TYPE_L           (65),\n\t\t.IN_PKT_ORI_BURST_SIZE_L       (83),\n\t\t.IN_PKT_ORI_BURST_SIZE_H       (85),\n\t\t.IN_ST_DATA_W                  (86),\n\t\t.OUT_PKT_ADDR_H                (67),\n\t\t.OUT_PKT_ADDR_L                (36),\n\t\t.OUT_PKT_DATA_H                (31),\n\t\t.OUT_PKT_DATA_L                (0),\n\t\t.OUT_PKT_BYTEEN_H              (35),\n\t\t.OUT_PKT_BYTEEN_L              (32),\n\t\t.OUT_PKT_BYTE_CNT_H            (78),\n\t\t.OUT_PKT_BYTE_CNT_L            (74),\n\t\t.OUT_PKT_TRANS_COMPRESSED_READ (68),\n\t\t.OUT_PKT_BURST_SIZE_H          (82),\n\t\t.OUT_PKT_BURST_SIZE_L          (80),\n\t\t.OUT_PKT_RESPONSE_STATUS_H     (100),\n\t\t.OUT_PKT_RESPONSE_STATUS_L     (99),\n\t\t.OUT_PKT_TRANS_EXCLUSIVE       (73),\n\t\t.OUT_PKT_BURST_TYPE_H          (84),\n\t\t.OUT_PKT_BURST_TYPE_L          (83),\n\t\t.OUT_PKT_ORI_BURST_SIZE_L      (101),\n\t\t.OUT_PKT_ORI_BURST_SIZE_H      (103),\n\t\t.OUT_ST_DATA_W                 (104),\n\t\t.ST_CHANNEL_W                  (2),\n\t\t.OPTIMIZE_FOR_RSP              (0),\n\t\t.RESPONSE_PATH                 (1),\n\t\t.CONSTANT_BURST_SIZE           (1),\n\t\t.PACKING                       (1)\n\t) width_adapter (\n\t\t.clk                  (pll_sys_outclk0_clk),                             \n\t\t.reset                (alt_vip_vfb_0_reset_reset_bridge_in_reset_reset), \n\t\t.in_valid             (id_router_src_valid),                             \n\t\t.in_channel           (id_router_src_channel),                           \n\t\t.in_startofpacket     (id_router_src_startofpacket),                     \n\t\t.in_endofpacket       (id_router_src_endofpacket),                       \n\t\t.in_ready             (id_router_src_ready),                             \n\t\t.in_data              (id_router_src_data),                              \n\t\t.out_endofpacket      (width_adapter_src_endofpacket),                   \n\t\t.out_data             (width_adapter_src_data),                          \n\t\t.out_channel          (width_adapter_src_channel),                       \n\t\t.out_valid            (width_adapter_src_valid),                         \n\t\t.out_ready            (width_adapter_src_ready),                         \n\t\t.out_startofpacket    (width_adapter_src_startofpacket),                 \n\t\t.in_command_size_data (3'b000)                                           \n\t);\n\n\taltera_merlin_width_adapter #(\n\t\t.IN_PKT_ADDR_H                 (67),\n\t\t.IN_PKT_ADDR_L                 (36),\n\t\t.IN_PKT_DATA_H                 (31),\n\t\t.IN_PKT_DATA_L                 (0),\n\t\t.IN_PKT_BYTEEN_H               (35),\n\t\t.IN_PKT_BYTEEN_L               (32),\n\t\t.IN_PKT_BYTE_CNT_H             (78),\n\t\t.IN_PKT_BYTE_CNT_L             (74),\n\t\t.IN_PKT_TRANS_COMPRESSED_READ  (68),\n\t\t.IN_PKT_BURSTWRAP_H            (79),\n\t\t.IN_PKT_BURSTWRAP_L            (79),\n\t\t.IN_PKT_BURST_SIZE_H           (82),\n\t\t.IN_PKT_BURST_SIZE_L           (80),\n\t\t.IN_PKT_RESPONSE_STATUS_H      (100),\n\t\t.IN_PKT_RESPONSE_STATUS_L      (99),\n\t\t.IN_PKT_TRANS_EXCLUSIVE        (73),\n\t\t.IN_PKT_BURST_TYPE_H           (84),\n\t\t.IN_PKT_BURST_TYPE_L           (83),\n\t\t.IN_PKT_ORI_BURST_SIZE_L       (101),\n\t\t.IN_PKT_ORI_BURST_SIZE_H       (103),\n\t\t.IN_ST_DATA_W                  (104),\n\t\t.OUT_PKT_ADDR_H                (49),\n\t\t.OUT_PKT_ADDR_L                (18),\n\t\t.OUT_PKT_DATA_H                (15),\n\t\t.OUT_PKT_DATA_L                (0),\n\t\t.OUT_PKT_BYTEEN_H              (17),\n\t\t.OUT_PKT_BYTEEN_L              (16),\n\t\t.OUT_PKT_BYTE_CNT_H            (60),\n\t\t.OUT_PKT_BYTE_CNT_L            (56),\n\t\t.OUT_PKT_TRANS_COMPRESSED_READ (50),\n\t\t.OUT_PKT_BURST_SIZE_H          (64),\n\t\t.OUT_PKT_BURST_SIZE_L          (62),\n\t\t.OUT_PKT_RESPONSE_STATUS_H     (82),\n\t\t.OUT_PKT_RESPONSE_STATUS_L     (81),\n\t\t.OUT_PKT_TRANS_EXCLUSIVE       (55),\n\t\t.OUT_PKT_BURST_TYPE_H          (66),\n\t\t.OUT_PKT_BURST_TYPE_L          (65),\n\t\t.OUT_PKT_ORI_BURST_SIZE_L      (83),\n\t\t.OUT_PKT_ORI_BURST_SIZE_H      (85),\n\t\t.OUT_ST_DATA_W                 (86),\n\t\t.ST_CHANNEL_W                  (2),\n\t\t.OPTIMIZE_FOR_RSP              (0),\n\t\t.RESPONSE_PATH                 (0),\n\t\t.CONSTANT_BURST_SIZE           (1),\n\t\t.PACKING                       (1)\n\t) width_adapter_001 (\n\t\t.clk                  (pll_sys_outclk0_clk),                             \n\t\t.reset                (alt_vip_vfb_0_reset_reset_bridge_in_reset_reset), \n\t\t.in_valid             (cmd_xbar_mux_src_valid),                          \n\t\t.in_channel           (cmd_xbar_mux_src_channel),                        \n\t\t.in_startofpacket     (cmd_xbar_mux_src_startofpacket),                  \n\t\t.in_endofpacket       (cmd_xbar_mux_src_endofpacket),                    \n\t\t.in_ready             (cmd_xbar_mux_src_ready),                          \n\t\t.in_data              (cmd_xbar_mux_src_data),                           \n\t\t.out_endofpacket      (width_adapter_001_src_endofpacket),               \n\t\t.out_data             (width_adapter_001_src_data),                      \n\t\t.out_channel          (width_adapter_001_src_channel),                   \n\t\t.out_valid            (width_adapter_001_src_valid),                     \n\t\t.out_ready            (width_adapter_001_src_ready),                     \n\t\t.out_startofpacket    (width_adapter_001_src_startofpacket),             \n\t\t.in_command_size_data (3'b000)                                           \n\t);\n\n\taltera_avalon_st_pipeline_stage #(\n\t\t.SYMBOLS_PER_BEAT (1),\n\t\t.BITS_PER_SYMBOL  (86),\n\t\t.USE_PACKETS      (1),\n\t\t.USE_EMPTY        (0),\n\t\t.EMPTY_WIDTH      (0),\n\t\t.CHANNEL_WIDTH    (2),\n\t\t.PACKET_WIDTH     (2),\n\t\t.ERROR_WIDTH      (0),\n\t\t.PIPELINE_READY   (1)\n\t) agent_pipeline (\n\t\t.clk               (pll_sys_outclk0_clk),                             \n\t\t.reset             (alt_vip_vfb_0_reset_reset_bridge_in_reset_reset), \n\t\t.in_ready          (burst_adapter_source0_ready),                     \n\t\t.in_valid          (burst_adapter_source0_valid),                     \n\t\t.in_startofpacket  (burst_adapter_source0_startofpacket),             \n\t\t.in_endofpacket    (burst_adapter_source0_endofpacket),               \n\t\t.in_data           (burst_adapter_source0_data),                      \n\t\t.in_channel        (burst_adapter_source0_channel),                   \n\t\t.out_ready         (agent_pipeline_source0_ready),                    \n\t\t.out_valid         (agent_pipeline_source0_valid),                    \n\t\t.out_startofpacket (agent_pipeline_source0_startofpacket),            \n\t\t.out_endofpacket   (agent_pipeline_source0_endofpacket),              \n\t\t.out_data          (agent_pipeline_source0_data),                     \n\t\t.out_channel       (agent_pipeline_source0_channel),                  \n\t\t.in_empty          (1'b0),                                            \n\t\t.out_empty         (),                                                \n\t\t.out_error         (),                                                \n\t\t.in_error          (1'b0)                                             \n\t);\n\n\taltera_avalon_st_pipeline_stage #(\n\t\t.SYMBOLS_PER_BEAT (1),\n\t\t.BITS_PER_SYMBOL  (86),\n\t\t.USE_PACKETS      (1),\n\t\t.USE_EMPTY        (0),\n\t\t.EMPTY_WIDTH      (0),\n\t\t.CHANNEL_WIDTH    (0),\n\t\t.PACKET_WIDTH     (2),\n\t\t.ERROR_WIDTH      (0),\n\t\t.PIPELINE_READY   (1)\n\t) agent_pipeline_001 (\n\t\t.clk               (pll_sys_outclk0_clk),                                                 \n\t\t.reset             (alt_vip_vfb_0_reset_reset_bridge_in_reset_reset),                     \n\t\t.in_ready          (sdram_s1_translator_avalon_universal_slave_0_agent_rp_ready),         \n\t\t.in_valid          (sdram_s1_translator_avalon_universal_slave_0_agent_rp_valid),         \n\t\t.in_startofpacket  (sdram_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), \n\t\t.in_endofpacket    (sdram_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   \n\t\t.in_data           (sdram_s1_translator_avalon_universal_slave_0_agent_rp_data),          \n\t\t.out_ready         (agent_pipeline_001_source0_ready),                                    \n\t\t.out_valid         (agent_pipeline_001_source0_valid),                                    \n\t\t.out_startofpacket (agent_pipeline_001_source0_startofpacket),                            \n\t\t.out_endofpacket   (agent_pipeline_001_source0_endofpacket),                              \n\t\t.out_data          (agent_pipeline_001_source0_data),                                     \n\t\t.in_empty          (1'b0),                                                                \n\t\t.out_empty         (),                                                                    \n\t\t.out_error         (),                                                                    \n\t\t.in_error          (1'b0),                                                                \n\t\t.out_channel       (),                                                                    \n\t\t.in_channel        (1'b0)                                                                 \n\t);\n\nendmodule\n```"
        },
        {
            "role": "user",
            "content": "Based on the provided original Verilog code, its comments and above answers, generate a detailed specification for the module. Include the following information in a single, concise paragraph:\n1. The name of the module.\n2. A simple explanation of the module's functionality.\n3. The input and output ports, along with a brief explanation of each.\n4. The internal signals used within the module, with a brief explanation of their purpose.\n5. An overview of the different blocks or sections in the code and their functions.\nEnsure that the specification is clear and accurately reflects the details from the code and comments.\nYour answer should be structured and well-organized, providing a comprehensive and detailed overview of the module's design and operation.\nPlease provide your answer in the following format:\nModule name: [module name]. Module specification: [module specification]."
        },
        {
            "role": "assistant",
            "content": "Module name: DE1_SoC_QSYS_mm_interconnect_1. Module specification: This module is an interconnect or bus matrix for a System-on-Chip (SoC) design, managing communication between multiple masters (ALT_VIP_VFB read and write masters) and a slave (SDRAM). It features input ports for clock, reset, and master interfaces, and output ports for slave interfaces. The module uses internal signals for address routing, command/response demultiplexing, width adaptation, and burst adaptation. Key components include Avalon Universal Master/Slave translators, address routers, command and response crossbars, width adapters, and burst adapters. These components work together to handle data transfers, arbitration, and protocol conversions between different SoC components, allowing efficient communication despite differences in bus widths, protocols, or timing requirements. The module employs various"
        }
    ],
    "claude-message": [
        {
            "role": "user",
            "content": [
                {
                    "type": "text",
                    "text": "You are an expert in hardware design with a deep understanding of Verilog RTL codes. Now I want to train a large language model for code comment generation tasks specifically focused on Verilog RTL codes. And I want you to help me process the raw data, transforming it into suitable formats that can serve as inputs and outputs for the model."
                },
                {
                    "type": "text",
                    "text": "Name of the module and its functionality is as follows: \nModule name: DE1_SoC_QSYS_mm_interconnect_1\n\nExplanation: This module appears to be an interconnect or bus matrix for a System-on-Chip (SoC) design. It handles communication between multiple masters (like ALT_VIP_VFB read and write masters) and slaves (like SDRAM). The module includes components for address routing, command/response demultiplexing, width adaptation, and burst adaptation. It manages data transfers, arbitration, and protocol conversions between different components of the SoC, allowing them to communicate efficiently despite potentially different bus widths, protocols, or timing requirements."
                },
                {
                    "type": "text",
                    "text": "Input and output ports and their explanation is as follows: \nHere is a summary of the input and output ports for the DE1_SoC_QSYS_mm_interconnect_1 module:\n\nInput ports:\n- pll_sys_outclk0_clk\n- alt_vip_vfb_0_reset_reset_bridge_in_reset_reset\n- alt_vip_vfb_0_read_master_address\n- alt_vip_vfb_0_read_master_burstcount\n- alt_vip_vfb_0_read_master_read\n- alt_vip_vfb_0_write_master_address\n- alt_vip_vfb_0_write_master_burstcount\n- alt_vip_vfb_0_write_master_write\n- alt_vip_vfb_0_write_master_writedata\n- sdram_s1_readdata\n- sdram_s1_readdatavalid\n- sdram_s1_waitrequest\n\nExplanation: These inputs include clock and reset signals, as well as control and data signals from the VIP frame buffer read/write masters and SDRAM slave interface.\n\nOutput ports:\n- alt_vip_vfb_0_read_master_waitrequest\n- alt_vip_vfb_0_read_master_readdata\n- alt_vip_vfb_0_read_master_readdatavalid\n- alt_vip_vfb_0_write_master_waitrequest\n- sdram_s1_address\n- sdram_s1_write\n- sdram_s1_read\n- sdram_s1_writedata\n- sdram_s1_byteenable\n- sdram_s1_chipselect\n\nExplanation: These outputs provide status and data signals back to the VIP frame buffer masters, as well as control and data signals to the SDRAM slave interface for memory access operations."
                },
                {
                    "type": "text",
                    "text": "Internal signals and their explanation is as follows: \nInternal signals:\n- Avalon Universal Master signals (e.g., alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_address, alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_burstcount, etc.)\n- Response and request FIFO signals (e.g., sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_data, sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data, etc.)\n- Address router signals (e.g., addr_router_src_data, addr_router_src_channel, etc.)\n- Command and response crossbar signals (e.g., cmd_xbar_demux_src0_data, rsp_xbar_demux_src0_data, etc.)\n- Width adapter signals (e.g., width_adapter_src_data, width_adapter_src_channel, etc.)\n- Burst adapter signals (e.g., burst_adapter_source0_data, burst_adapter_source0_channel, etc.)\n\nExplanation:\n- Avalon Universal Master signals: These handle communication between masters and the interconnect, carrying address, data, and control information.\n- FIFO signals: These manage buffering and flow control for requests and responses between components.\n- Address router signals: These direct transactions to the appropriate slave based on address decoding.\n- Crossbar signals: These manage the routing of commands and responses between multiple masters and slaves.\n- Width adapter signals: These handle data width conversion between components with different bus widths.\n- Burst adapter signals: These modify burst transactions to match the capabilities of the target slave.\n\nThese internal signals collectively enable the interconnect to manage complex communication patterns between multiple masters and slaves, handling protocol conversions, arbitration, and data routing."
                },
                {
                    "type": "text",
                    "text": "Original Verilog code is as follows: \n<code>\n\n\n\n\n\n\n`timescale 1 ps / 1 ps\nmodule DE1_SoC_QSYS_mm_interconnect_1 (\n\t\tinput  wire        pll_sys_outclk0_clk,                             \n\t\tinput  wire        alt_vip_vfb_0_reset_reset_bridge_in_reset_reset, \n\t\tinput  wire [31:0] alt_vip_vfb_0_read_master_address,               \n\t\toutput wire        alt_vip_vfb_0_read_master_waitrequest,           \n\t\tinput  wire [2:0]  alt_vip_vfb_0_read_master_burstcount,            \n\t\tinput  wire        alt_vip_vfb_0_read_master_read,                  \n\t\toutput wire [31:0] alt_vip_vfb_0_read_master_readdata,              \n\t\toutput wire        alt_vip_vfb_0_read_master_readdatavalid,         \n\t\tinput  wire [31:0] alt_vip_vfb_0_write_master_address,              \n\t\toutput wire        alt_vip_vfb_0_write_master_waitrequest,          \n\t\tinput  wire [2:0]  alt_vip_vfb_0_write_master_burstcount,           \n\t\tinput  wire        alt_vip_vfb_0_write_master_write,                \n\t\tinput  wire [31:0] alt_vip_vfb_0_write_master_writedata,            \n\t\toutput wire [24:0] sdram_s1_address,                                \n\t\toutput wire        sdram_s1_write,                                  \n\t\toutput wire        sdram_s1_read,                                   \n\t\tinput  wire [15:0] sdram_s1_readdata,                               \n\t\toutput wire [15:0] sdram_s1_writedata,                              \n\t\toutput wire [1:0]  sdram_s1_byteenable,                             \n\t\tinput  wire        sdram_s1_readdatavalid,                          \n\t\tinput  wire        sdram_s1_waitrequest,                            \n\t\toutput wire        sdram_s1_chipselect                              \n\t);\n\n\twire          alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_waitrequest;             \n\twire    [4:0] alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_burstcount;              \n\twire   [31:0] alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_writedata;               \n\twire   [31:0] alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_address;                 \n\twire          alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_lock;                    \n\twire          alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_write;                   \n\twire          alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_read;                    \n\twire   [31:0] alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_readdata;                \n\twire          alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_debugaccess;             \n\twire    [3:0] alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_byteenable;              \n\twire          alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_readdatavalid;           \n\twire          rsp_xbar_mux_src_endofpacket;                                                           \n\twire          rsp_xbar_mux_src_valid;                                                                 \n\twire          rsp_xbar_mux_src_startofpacket;                                                         \n\twire  [103:0] rsp_xbar_mux_src_data;                                                                  \n\twire    [1:0] rsp_xbar_mux_src_channel;                                                               \n\twire          rsp_xbar_mux_src_ready;                                                                 \n\twire          alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_waitrequest;            \n\twire    [4:0] alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_burstcount;             \n\twire   [31:0] alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_writedata;              \n\twire   [31:0] alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_address;                \n\twire          alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_lock;                   \n\twire          alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_write;                  \n\twire          alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_read;                   \n\twire   [31:0] alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_readdata;               \n\twire          alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_debugaccess;            \n\twire    [3:0] alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_byteenable;             \n\twire          alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_readdatavalid;          \n\twire          rsp_xbar_mux_001_src_endofpacket;                                                       \n\twire          rsp_xbar_mux_001_src_valid;                                                             \n\twire          rsp_xbar_mux_001_src_startofpacket;                                                     \n\twire  [103:0] rsp_xbar_mux_001_src_data;                                                              \n\twire    [1:0] rsp_xbar_mux_001_src_channel;                                                           \n\twire          rsp_xbar_mux_001_src_ready;                                                             \n\twire          sdram_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                      \n\twire    [1:0] sdram_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                       \n\twire   [15:0] sdram_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                        \n\twire   [31:0] sdram_s1_translator_avalon_universal_slave_0_agent_m0_address;                          \n\twire          sdram_s1_translator_avalon_universal_slave_0_agent_m0_write;                            \n\twire          sdram_s1_translator_avalon_universal_slave_0_agent_m0_lock;                             \n\twire          sdram_s1_translator_avalon_universal_slave_0_agent_m0_read;                             \n\twire   [15:0] sdram_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                         \n\twire          sdram_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                    \n\twire          sdram_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                      \n\twire    [1:0] sdram_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                       \n\twire          sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;               \n\twire          sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                     \n\twire          sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;             \n\twire   [86:0] sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                      \n\twire          sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                     \n\twire          sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;            \n\twire          sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                  \n\twire          sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;          \n\twire   [86:0] sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                   \n\twire          sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                  \n\twire          sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                \n\twire   [17:0] sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                 \n\twire          sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                \n\twire          sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_out_valid;                \n\twire   [17:0] sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_out_data;                 \n\twire          sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_out_ready;                \n\twire          alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_agent_cp_endofpacket;    \n\twire          alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_agent_cp_valid;          \n\twire          alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_agent_cp_startofpacket;  \n\twire  [103:0] alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_agent_cp_data;           \n\twire          alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_agent_cp_ready;          \n\twire          addr_router_src_endofpacket;                                                            \n\twire          addr_router_src_valid;                                                                  \n\twire          addr_router_src_startofpacket;                                                          \n\twire  [103:0] addr_router_src_data;                                                                   \n\twire    [1:0] addr_router_src_channel;                                                                \n\twire          addr_router_src_ready;                                                                  \n\twire          alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_agent_cp_endofpacket;   \n\twire          alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_agent_cp_valid;         \n\twire          alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_agent_cp_startofpacket; \n\twire  [103:0] alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_agent_cp_data;          \n\twire          alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_agent_cp_ready;         \n\twire          addr_router_001_src_endofpacket;                                                        \n\twire          addr_router_001_src_valid;                                                              \n\twire          addr_router_001_src_startofpacket;                                                      \n\twire  [103:0] addr_router_001_src_data;                                                               \n\twire    [1:0] addr_router_001_src_channel;                                                            \n\twire          addr_router_001_src_ready;                                                              \n\twire          cmd_xbar_demux_src0_endofpacket;                                                        \n\twire          cmd_xbar_demux_src0_valid;                                                              \n\twire          cmd_xbar_demux_src0_startofpacket;                                                      \n\twire  [103:0] cmd_xbar_demux_src0_data;                                                               \n\twire    [1:0] cmd_xbar_demux_src0_channel;                                                            \n\twire          cmd_xbar_demux_src0_ready;                                                              \n\twire          cmd_xbar_demux_001_src0_endofpacket;                                                    \n\twire          cmd_xbar_demux_001_src0_valid;                                                          \n\twire          cmd_xbar_demux_001_src0_startofpacket;                                                  \n\twire  [103:0] cmd_xbar_demux_001_src0_data;                                                           \n\twire    [1:0] cmd_xbar_demux_001_src0_channel;                                                        \n\twire          cmd_xbar_demux_001_src0_ready;                                                          \n\twire          rsp_xbar_demux_src0_endofpacket;                                                        \n\twire          rsp_xbar_demux_src0_valid;                                                              \n\twire          rsp_xbar_demux_src0_startofpacket;                                                      \n\twire  [103:0] rsp_xbar_demux_src0_data;                                                               \n\twire    [1:0] rsp_xbar_demux_src0_channel;                                                            \n\twire          rsp_xbar_demux_src0_ready;                                                              \n\twire          rsp_xbar_demux_src1_endofpacket;                                                        \n\twire          rsp_xbar_demux_src1_valid;                                                              \n\twire          rsp_xbar_demux_src1_startofpacket;                                                      \n\twire  [103:0] rsp_xbar_demux_src1_data;                                                               \n\twire    [1:0] rsp_xbar_demux_src1_channel;                                                            \n\twire          rsp_xbar_demux_src1_ready;                                                              \n\twire          id_router_src_endofpacket;                                                              \n\twire          id_router_src_valid;                                                                    \n\twire          id_router_src_startofpacket;                                                            \n\twire   [85:0] id_router_src_data;                                                                     \n\twire    [1:0] id_router_src_channel;                                                                  \n\twire          id_router_src_ready;                                                                    \n\twire          width_adapter_src_endofpacket;                                                          \n\twire          width_adapter_src_valid;                                                                \n\twire          width_adapter_src_startofpacket;                                                        \n\twire  [103:0] width_adapter_src_data;                                                                 \n\twire          width_adapter_src_ready;                                                                \n\twire    [1:0] width_adapter_src_channel;                                                              \n\twire          cmd_xbar_mux_src_endofpacket;                                                           \n\twire          cmd_xbar_mux_src_valid;                                                                 \n\twire          cmd_xbar_mux_src_startofpacket;                                                         \n\twire  [103:0] cmd_xbar_mux_src_data;                                                                  \n\twire    [1:0] cmd_xbar_mux_src_channel;                                                               \n\twire          cmd_xbar_mux_src_ready;                                                                 \n\twire          width_adapter_001_src_endofpacket;                                                      \n\twire          width_adapter_001_src_valid;                                                            \n\twire          width_adapter_001_src_startofpacket;                                                    \n\twire   [85:0] width_adapter_001_src_data;                                                             \n\twire          width_adapter_001_src_ready;                                                            \n\twire    [1:0] width_adapter_001_src_channel;                                                          \n\twire          burst_adapter_source0_endofpacket;                                                      \n\twire          burst_adapter_source0_valid;                                                            \n\twire          burst_adapter_source0_startofpacket;                                                    \n\twire   [85:0] burst_adapter_source0_data;                                                             \n\twire          burst_adapter_source0_ready;                                                            \n\twire    [1:0] burst_adapter_source0_channel;                                                          \n\twire          agent_pipeline_source0_endofpacket;                                                     \n\twire          agent_pipeline_source0_valid;                                                           \n\twire          agent_pipeline_source0_startofpacket;                                                   \n\twire   [85:0] agent_pipeline_source0_data;                                                            \n\twire    [1:0] agent_pipeline_source0_channel;                                                         \n\twire          agent_pipeline_source0_ready;                                                           \n\twire          sdram_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                      \n\twire          sdram_s1_translator_avalon_universal_slave_0_agent_rp_valid;                            \n\twire          sdram_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                    \n\twire   [85:0] sdram_s1_translator_avalon_universal_slave_0_agent_rp_data;                             \n\twire          sdram_s1_translator_avalon_universal_slave_0_agent_rp_ready;                            \n\twire          agent_pipeline_001_source0_endofpacket;                                                 \n\twire          agent_pipeline_001_source0_valid;                                                       \n\twire          agent_pipeline_001_source0_startofpacket;                                               \n\twire   [85:0] agent_pipeline_001_source0_data;                                                        \n\twire          agent_pipeline_001_source0_ready;                                                       \n\n\taltera_merlin_master_translator #(\n\t\t.AV_ADDRESS_W                (32),\n\t\t.AV_DATA_W                   (32),\n\t\t.AV_BURSTCOUNT_W             (3),\n\t\t.AV_BYTEENABLE_W             (4),\n\t\t.UAV_ADDRESS_W               (32),\n\t\t.UAV_BURSTCOUNT_W            (5),\n\t\t.USE_READ                    (1),\n\t\t.USE_WRITE                   (0),\n\t\t.USE_BEGINBURSTTRANSFER      (0),\n\t\t.USE_BEGINTRANSFER           (0),\n\t\t.USE_CHIPSELECT              (0),\n\t\t.USE_BURSTCOUNT              (1),\n\t\t.USE_READDATAVALID           (1),\n\t\t.USE_WAITREQUEST             (1),\n\t\t.USE_READRESPONSE            (0),\n\t\t.USE_WRITERESPONSE           (0),\n\t\t.AV_SYMBOLS_PER_WORD         (4),\n\t\t.AV_ADDRESS_SYMBOLS          (1),\n\t\t.AV_BURSTCOUNT_SYMBOLS       (0),\n\t\t.AV_CONSTANT_BURST_BEHAVIOR  (1),\n\t\t.UAV_CONSTANT_BURST_BEHAVIOR (0),\n\t\t.AV_LINEWRAPBURSTS           (0),\n\t\t.AV_REGISTERINCOMINGSIGNALS  (0)\n\t) alt_vip_vfb_0_read_master_translator (\n\t\t.clk                      (pll_sys_outclk0_clk),                                                          \n\t\t.reset                    (alt_vip_vfb_0_reset_reset_bridge_in_reset_reset),                              \n\t\t.uav_address              (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_address),       \n\t\t.uav_burstcount           (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_burstcount),    \n\t\t.uav_read                 (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_read),          \n\t\t.uav_write                (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_write),         \n\t\t.uav_waitrequest          (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_waitrequest),   \n\t\t.uav_readdatavalid        (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_readdatavalid), \n\t\t.uav_byteenable           (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_byteenable),    \n\t\t.uav_readdata             (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_readdata),      \n\t\t.uav_writedata            (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_writedata),     \n\t\t.uav_lock                 (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_lock),          \n\t\t.uav_debugaccess          (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_debugaccess),   \n\t\t.av_address               (alt_vip_vfb_0_read_master_address),                                            \n\t\t.av_waitrequest           (alt_vip_vfb_0_read_master_waitrequest),                                        \n\t\t.av_burstcount            (alt_vip_vfb_0_read_master_burstcount),                                         \n\t\t.av_read                  (alt_vip_vfb_0_read_master_read),                                               \n\t\t.av_readdata              (alt_vip_vfb_0_read_master_readdata),                                           \n\t\t.av_readdatavalid         (alt_vip_vfb_0_read_master_readdatavalid),                                      \n\t\t.av_byteenable            (4'b1111),                                                                      \n\t\t.av_beginbursttransfer    (1'b0),                                                                         \n\t\t.av_begintransfer         (1'b0),                                                                         \n\t\t.av_chipselect            (1'b0),                                                                         \n\t\t.av_write                 (1'b0),                                                                         \n\t\t.av_writedata             (32'b00000000000000000000000000000000),                                         \n\t\t.av_lock                  (1'b0),                                                                         \n\t\t.av_debugaccess           (1'b0),                                                                         \n\t\t.uav_clken                (),                                                                             \n\t\t.av_clken                 (1'b1),                                                                         \n\t\t.uav_response             (2'b00),                                                                        \n\t\t.av_response              (),                                                                             \n\t\t.uav_writeresponserequest (),                                                                             \n\t\t.uav_writeresponsevalid   (1'b0),                                                                         \n\t\t.av_writeresponserequest  (1'b0),                                                                         \n\t\t.av_writeresponsevalid    ()                                                                              \n\t);\n\n\taltera_merlin_master_translator #(\n\t\t.AV_ADDRESS_W                (32),\n\t\t.AV_DATA_W                   (32),\n\t\t.AV_BURSTCOUNT_W             (3),\n\t\t.AV_BYTEENABLE_W             (4),\n\t\t.UAV_ADDRESS_W               (32),\n\t\t.UAV_BURSTCOUNT_W            (5),\n\t\t.USE_READ                    (0),\n\t\t.USE_WRITE                   (1),\n\t\t.USE_BEGINBURSTTRANSFER      (0),\n\t\t.USE_BEGINTRANSFER           (0),\n\t\t.USE_CHIPSELECT              (0),\n\t\t.USE_BURSTCOUNT              (1),\n\t\t.USE_READDATAVALID           (0),\n\t\t.USE_WAITREQUEST             (1),\n\t\t.USE_READRESPONSE            (0),\n\t\t.USE_WRITERESPONSE           (0),\n\t\t.AV_SYMBOLS_PER_WORD         (4),\n\t\t.AV_ADDRESS_SYMBOLS          (1),\n\t\t.AV_BURSTCOUNT_SYMBOLS       (0),\n\t\t.AV_CONSTANT_BURST_BEHAVIOR  (1),\n\t\t.UAV_CONSTANT_BURST_BEHAVIOR (0),\n\t\t.AV_LINEWRAPBURSTS           (0),\n\t\t.AV_REGISTERINCOMINGSIGNALS  (0)\n\t) alt_vip_vfb_0_write_master_translator (\n\t\t.clk                      (pll_sys_outclk0_clk),                                                           \n\t\t.reset                    (alt_vip_vfb_0_reset_reset_bridge_in_reset_reset),                               \n\t\t.uav_address              (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_address),       \n\t\t.uav_burstcount           (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_burstcount),    \n\t\t.uav_read                 (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_read),          \n\t\t.uav_write                (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_write),         \n\t\t.uav_waitrequest          (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_waitrequest),   \n\t\t.uav_readdatavalid        (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_readdatavalid), \n\t\t.uav_byteenable           (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_byteenable),    \n\t\t.uav_readdata             (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_readdata),      \n\t\t.uav_writedata            (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_writedata),     \n\t\t.uav_lock                 (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_lock),          \n\t\t.uav_debugaccess          (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_debugaccess),   \n\t\t.av_address               (alt_vip_vfb_0_write_master_address),                                            \n\t\t.av_waitrequest           (alt_vip_vfb_0_write_master_waitrequest),                                        \n\t\t.av_burstcount            (alt_vip_vfb_0_write_master_burstcount),                                         \n\t\t.av_write                 (alt_vip_vfb_0_write_master_write),                                              \n\t\t.av_writedata             (alt_vip_vfb_0_write_master_writedata),                                          \n\t\t.av_byteenable            (4'b1111),                                                                       \n\t\t.av_beginbursttransfer    (1'b0),                                                                          \n\t\t.av_begintransfer         (1'b0),                                                                          \n\t\t.av_chipselect            (1'b0),                                                                          \n\t\t.av_read                  (1'b0),                                                                          \n\t\t.av_readdata              (),                                                                              \n\t\t.av_readdatavalid         (),                                                                              \n\t\t.av_lock                  (1'b0),                                                                          \n\t\t.av_debugaccess           (1'b0),                                                                          \n\t\t.uav_clken                (),                                                                              \n\t\t.av_clken                 (1'b1),                                                                          \n\t\t.uav_response             (2'b00),                                                                         \n\t\t.av_response              (),                                                                              \n\t\t.uav_writeresponserequest (),                                                                              \n\t\t.uav_writeresponsevalid   (1'b0),                                                                          \n\t\t.av_writeresponserequest  (1'b0),                                                                          \n\t\t.av_writeresponsevalid    ()                                                                               \n\t);\n\n\taltera_merlin_slave_translator #(\n\t\t.AV_ADDRESS_W                   (25),\n\t\t.AV_DATA_W                      (16),\n\t\t.UAV_DATA_W                     (16),\n\t\t.AV_BURSTCOUNT_W                (1),\n\t\t.AV_BYTEENABLE_W                (2),\n\t\t.UAV_BYTEENABLE_W               (2),\n\t\t.UAV_ADDRESS_W                  (32),\n\t\t.UAV_BURSTCOUNT_W               (2),\n\t\t.AV_READLATENCY                 (0),\n\t\t.USE_READDATAVALID              (1),\n\t\t.USE_WAITREQUEST                (1),\n\t\t.USE_UAV_CLKEN                  (0),\n\t\t.USE_READRESPONSE               (0),\n\t\t.USE_WRITERESPONSE              (0),\n\t\t.AV_SYMBOLS_PER_WORD            (2),\n\t\t.AV_ADDRESS_SYMBOLS             (0),\n\t\t.AV_BURSTCOUNT_SYMBOLS          (0),\n\t\t.AV_CONSTANT_BURST_BEHAVIOR     (0),\n\t\t.UAV_CONSTANT_BURST_BEHAVIOR    (0),\n\t\t.AV_REQUIRE_UNALIGNED_ADDRESSES (0),\n\t\t.CHIPSELECT_THROUGH_READLATENCY (0),\n\t\t.AV_READ_WAIT_CYCLES            (1),\n\t\t.AV_WRITE_WAIT_CYCLES           (0),\n\t\t.AV_SETUP_WAIT_CYCLES           (0),\n\t\t.AV_DATA_HOLD_CYCLES            (0)\n\t) sdram_s1_translator (\n\t\t.clk                      (pll_sys_outclk0_clk),                                                 \n\t\t.reset                    (alt_vip_vfb_0_reset_reset_bridge_in_reset_reset),                     \n\t\t.uav_address              (sdram_s1_translator_avalon_universal_slave_0_agent_m0_address),       \n\t\t.uav_burstcount           (sdram_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    \n\t\t.uav_read                 (sdram_s1_translator_avalon_universal_slave_0_agent_m0_read),          \n\t\t.uav_write                (sdram_s1_translator_avalon_universal_slave_0_agent_m0_write),         \n\t\t.uav_waitrequest          (sdram_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   \n\t\t.uav_readdatavalid        (sdram_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), \n\t\t.uav_byteenable           (sdram_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    \n\t\t.uav_readdata             (sdram_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      \n\t\t.uav_writedata            (sdram_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     \n\t\t.uav_lock                 (sdram_s1_translator_avalon_universal_slave_0_agent_m0_lock),          \n\t\t.uav_debugaccess          (sdram_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   \n\t\t.av_address               (sdram_s1_address),                                                    \n\t\t.av_write                 (sdram_s1_write),                                                      \n\t\t.av_read                  (sdram_s1_read),                                                       \n\t\t.av_readdata              (sdram_s1_readdata),                                                   \n\t\t.av_writedata             (sdram_s1_writedata),                                                  \n\t\t.av_byteenable            (sdram_s1_byteenable),                                                 \n\t\t.av_readdatavalid         (sdram_s1_readdatavalid),                                              \n\t\t.av_waitrequest           (sdram_s1_waitrequest),                                                \n\t\t.av_chipselect            (sdram_s1_chipselect),                                                 \n\t\t.av_begintransfer         (),                                                                    \n\t\t.av_beginbursttransfer    (),                                                                    \n\t\t.av_burstcount            (),                                                                    \n\t\t.av_writebyteenable       (),                                                                    \n\t\t.av_lock                  (),                                                                    \n\t\t.av_clken                 (),                                                                    \n\t\t.uav_clken                (1'b0),                                                                \n\t\t.av_debugaccess           (),                                                                    \n\t\t.av_outputenable          (),                                                                    \n\t\t.uav_response             (),                                                                    \n\t\t.av_response              (2'b00),                                                               \n\t\t.uav_writeresponserequest (1'b0),                                                                \n\t\t.uav_writeresponsevalid   (),                                                                    \n\t\t.av_writeresponserequest  (),                                                                    \n\t\t.av_writeresponsevalid    (1'b0)                                                                 \n\t);\n\n\taltera_merlin_master_agent #(\n\t\t.PKT_PROTECTION_H          (94),\n\t\t.PKT_PROTECTION_L          (92),\n\t\t.PKT_BEGIN_BURST           (87),\n\t\t.PKT_BURSTWRAP_H           (79),\n\t\t.PKT_BURSTWRAP_L           (79),\n\t\t.PKT_BURST_SIZE_H          (82),\n\t\t.PKT_BURST_SIZE_L          (80),\n\t\t.PKT_BURST_TYPE_H          (84),\n\t\t.PKT_BURST_TYPE_L          (83),\n\t\t.PKT_BYTE_CNT_H            (78),\n\t\t.PKT_BYTE_CNT_L            (74),\n\t\t.PKT_ADDR_H                (67),\n\t\t.PKT_ADDR_L                (36),\n\t\t.PKT_TRANS_COMPRESSED_READ (68),\n\t\t.PKT_TRANS_POSTED          (69),\n\t\t.PKT_TRANS_WRITE           (70),\n\t\t.PKT_TRANS_READ            (71),\n\t\t.PKT_TRANS_LOCK            (72),\n\t\t.PKT_TRANS_EXCLUSIVE       (73),\n\t\t.PKT_DATA_H                (31),\n\t\t.PKT_DATA_L                (0),\n\t\t.PKT_BYTEEN_H              (35),\n\t\t.PKT_BYTEEN_L              (32),\n\t\t.PKT_SRC_ID_H              (89),\n\t\t.PKT_SRC_ID_L              (89),\n\t\t.PKT_DEST_ID_H             (90),\n\t\t.PKT_DEST_ID_L             (90),\n\t\t.PKT_THREAD_ID_H           (91),\n\t\t.PKT_THREAD_ID_L           (91),\n\t\t.PKT_CACHE_H               (98),\n\t\t.PKT_CACHE_L               (95),\n\t\t.PKT_DATA_SIDEBAND_H       (86),\n\t\t.PKT_DATA_SIDEBAND_L       (86),\n\t\t.PKT_QOS_H                 (88),\n\t\t.PKT_QOS_L                 (88),\n\t\t.PKT_ADDR_SIDEBAND_H       (85),\n\t\t.PKT_ADDR_SIDEBAND_L       (85),\n\t\t.PKT_RESPONSE_STATUS_H     (100),\n\t\t.PKT_RESPONSE_STATUS_L     (99),\n\t\t.PKT_ORI_BURST_SIZE_L      (101),\n\t\t.PKT_ORI_BURST_SIZE_H      (103),\n\t\t.ST_DATA_W                 (104),\n\t\t.ST_CHANNEL_W              (2),\n\t\t.AV_BURSTCOUNT_W           (5),\n\t\t.SUPPRESS_0_BYTEEN_RSP     (0),\n\t\t.ID                        (0),\n\t\t.BURSTWRAP_VALUE           (1),\n\t\t.CACHE_VALUE               (0),\n\t\t.SECURE_ACCESS_BIT         (1),\n\t\t.USE_READRESPONSE          (0),\n\t\t.USE_WRITERESPONSE         (0)\n\t) alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_agent (\n\t\t.clk                     (pll_sys_outclk0_clk),                                                                   \n\t\t.reset                   (alt_vip_vfb_0_reset_reset_bridge_in_reset_reset),                                       \n\t\t.av_address              (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_address),                \n\t\t.av_write                (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_write),                  \n\t\t.av_read                 (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_read),                   \n\t\t.av_writedata            (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_writedata),              \n\t\t.av_readdata             (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_readdata),               \n\t\t.av_waitrequest          (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_waitrequest),            \n\t\t.av_readdatavalid        (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_readdatavalid),          \n\t\t.av_byteenable           (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_byteenable),             \n\t\t.av_burstcount           (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_burstcount),             \n\t\t.av_debugaccess          (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_debugaccess),            \n\t\t.av_lock                 (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_lock),                   \n\t\t.cp_valid                (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_agent_cp_valid),         \n\t\t.cp_data                 (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_agent_cp_data),          \n\t\t.cp_startofpacket        (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_agent_cp_startofpacket), \n\t\t.cp_endofpacket          (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_agent_cp_endofpacket),   \n\t\t.cp_ready                (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_agent_cp_ready),         \n\t\t.rp_valid                (rsp_xbar_mux_src_valid),                                                                \n\t\t.rp_data                 (rsp_xbar_mux_src_data),                                                                 \n\t\t.rp_channel              (rsp_xbar_mux_src_channel),                                                              \n\t\t.rp_startofpacket        (rsp_xbar_mux_src_startofpacket),                                                        \n\t\t.rp_endofpacket          (rsp_xbar_mux_src_endofpacket),                                                          \n\t\t.rp_ready                (rsp_xbar_mux_src_ready),                                                                \n\t\t.av_response             (),                                                                                      \n\t\t.av_writeresponserequest (1'b0),                                                                                  \n\t\t.av_writeresponsevalid   ()                                                                                       \n\t);\n\n\taltera_merlin_master_agent #(\n\t\t.PKT_PROTECTION_H          (94),\n\t\t.PKT_PROTECTION_L          (92),\n\t\t.PKT_BEGIN_BURST           (87),\n\t\t.PKT_BURSTWRAP_H           (79),\n\t\t.PKT_BURSTWRAP_L           (79),\n\t\t.PKT_BURST_SIZE_H          (82),\n\t\t.PKT_BURST_SIZE_L          (80),\n\t\t.PKT_BURST_TYPE_H          (84),\n\t\t.PKT_BURST_TYPE_L          (83),\n\t\t.PKT_BYTE_CNT_H            (78),\n\t\t.PKT_BYTE_CNT_L            (74),\n\t\t.PKT_ADDR_H                (67),\n\t\t.PKT_ADDR_L                (36),\n\t\t.PKT_TRANS_COMPRESSED_READ (68),\n\t\t.PKT_TRANS_POSTED          (69),\n\t\t.PKT_TRANS_WRITE           (70),\n\t\t.PKT_TRANS_READ            (71),\n\t\t.PKT_TRANS_LOCK            (72),\n\t\t.PKT_TRANS_EXCLUSIVE       (73),\n\t\t.PKT_DATA_H                (31),\n\t\t.PKT_DATA_L                (0),\n\t\t.PKT_BYTEEN_H              (35),\n\t\t.PKT_BYTEEN_L              (32),\n\t\t.PKT_SRC_ID_H              (89),\n\t\t.PKT_SRC_ID_L              (89),\n\t\t.PKT_DEST_ID_H             (90),\n\t\t.PKT_DEST_ID_L             (90),\n\t\t.PKT_THREAD_ID_H           (91),\n\t\t.PKT_THREAD_ID_L           (91),\n\t\t.PKT_CACHE_H               (98),\n\t\t.PKT_CACHE_L               (95),\n\t\t.PKT_DATA_SIDEBAND_H       (86),\n\t\t.PKT_DATA_SIDEBAND_L       (86),\n\t\t.PKT_QOS_H                 (88),\n\t\t.PKT_QOS_L                 (88),\n\t\t.PKT_ADDR_SIDEBAND_H       (85),\n\t\t.PKT_ADDR_SIDEBAND_L       (85),\n\t\t.PKT_RESPONSE_STATUS_H     (100),\n\t\t.PKT_RESPONSE_STATUS_L     (99),\n\t\t.PKT_ORI_BURST_SIZE_L      (101),\n\t\t.PKT_ORI_BURST_SIZE_H      (103),\n\t\t.ST_DATA_W                 (104),\n\t\t.ST_CHANNEL_W              (2),\n\t\t.AV_BURSTCOUNT_W           (5),\n\t\t.SUPPRESS_0_BYTEEN_RSP     (0),\n\t\t.ID                        (1),\n\t\t.BURSTWRAP_VALUE           (1),\n\t\t.CACHE_VALUE               (0),\n\t\t.SECURE_ACCESS_BIT         (1),\n\t\t.USE_READRESPONSE          (0),\n\t\t.USE_WRITERESPONSE         (0)\n\t) alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_agent (\n\t\t.clk                     (pll_sys_outclk0_clk),                                                                    \n\t\t.reset                   (alt_vip_vfb_0_reset_reset_bridge_in_reset_reset),                                        \n\t\t.av_address              (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_address),                \n\t\t.av_write                (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_write),                  \n\t\t.av_read                 (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_read),                   \n\t\t.av_writedata            (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_writedata),              \n\t\t.av_readdata             (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_readdata),               \n\t\t.av_waitrequest          (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_waitrequest),            \n\t\t.av_readdatavalid        (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_readdatavalid),          \n\t\t.av_byteenable           (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_byteenable),             \n\t\t.av_burstcount           (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_burstcount),             \n\t\t.av_debugaccess          (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_debugaccess),            \n\t\t.av_lock                 (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_lock),                   \n\t\t.cp_valid                (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_agent_cp_valid),         \n\t\t.cp_data                 (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_agent_cp_data),          \n\t\t.cp_startofpacket        (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_agent_cp_startofpacket), \n\t\t.cp_endofpacket          (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_agent_cp_endofpacket),   \n\t\t.cp_ready                (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_agent_cp_ready),         \n\t\t.rp_valid                (rsp_xbar_mux_001_src_valid),                                                             \n\t\t.rp_data                 (rsp_xbar_mux_001_src_data),                                                              \n\t\t.rp_channel              (rsp_xbar_mux_001_src_channel),                                                           \n\t\t.rp_startofpacket        (rsp_xbar_mux_001_src_startofpacket),                                                     \n\t\t.rp_endofpacket          (rsp_xbar_mux_001_src_endofpacket),                                                       \n\t\t.rp_ready                (rsp_xbar_mux_001_src_ready),                                                             \n\t\t.av_response             (),                                                                                       \n\t\t.av_writeresponserequest (1'b0),                                                                                   \n\t\t.av_writeresponsevalid   ()                                                                                        \n\t);\n\n\taltera_merlin_slave_agent #(\n\t\t.PKT_DATA_H                (15),\n\t\t.PKT_DATA_L                (0),\n\t\t.PKT_BEGIN_BURST           (69),\n\t\t.PKT_SYMBOL_W              (8),\n\t\t.PKT_BYTEEN_H              (17),\n\t\t.PKT_BYTEEN_L              (16),\n\t\t.PKT_ADDR_H                (49),\n\t\t.PKT_ADDR_L                (18),\n\t\t.PKT_TRANS_COMPRESSED_READ (50),\n\t\t.PKT_TRANS_POSTED          (51),\n\t\t.PKT_TRANS_WRITE           (52),\n\t\t.PKT_TRANS_READ            (53),\n\t\t.PKT_TRANS_LOCK            (54),\n\t\t.PKT_SRC_ID_H              (71),\n\t\t.PKT_SRC_ID_L              (71),\n\t\t.PKT_DEST_ID_H             (72),\n\t\t.PKT_DEST_ID_L             (72),\n\t\t.PKT_BURSTWRAP_H           (61),\n\t\t.PKT_BURSTWRAP_L           (61),\n\t\t.PKT_BYTE_CNT_H            (60),\n\t\t.PKT_BYTE_CNT_L            (56),\n\t\t.PKT_PROTECTION_H          (76),\n\t\t.PKT_PROTECTION_L          (74),\n\t\t.PKT_RESPONSE_STATUS_H     (82),\n\t\t.PKT_RESPONSE_STATUS_L     (81),\n\t\t.PKT_BURST_SIZE_H          (64),\n\t\t.PKT_BURST_SIZE_L          (62),\n\t\t.PKT_ORI_BURST_SIZE_L      (83),\n\t\t.PKT_ORI_BURST_SIZE_H      (85),\n\t\t.ST_CHANNEL_W              (2),\n\t\t.ST_DATA_W                 (86),\n\t\t.AVS_BURSTCOUNT_W          (2),\n\t\t.SUPPRESS_0_BYTEEN_CMD     (1),\n\t\t.PREVENT_FIFO_OVERFLOW     (1),\n\t\t.USE_READRESPONSE          (0),\n\t\t.USE_WRITERESPONSE         (0)\n\t) sdram_s1_translator_avalon_universal_slave_0_agent (\n\t\t.clk                     (pll_sys_outclk0_clk),                                                           \n\t\t.reset                   (alt_vip_vfb_0_reset_reset_bridge_in_reset_reset),                               \n\t\t.m0_address              (sdram_s1_translator_avalon_universal_slave_0_agent_m0_address),                 \n\t\t.m0_burstcount           (sdram_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              \n\t\t.m0_byteenable           (sdram_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              \n\t\t.m0_debugaccess          (sdram_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             \n\t\t.m0_lock                 (sdram_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    \n\t\t.m0_readdata             (sdram_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                \n\t\t.m0_readdatavalid        (sdram_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           \n\t\t.m0_read                 (sdram_s1_translator_avalon_universal_slave_0_agent_m0_read),                    \n\t\t.m0_waitrequest          (sdram_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             \n\t\t.m0_writedata            (sdram_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               \n\t\t.m0_write                (sdram_s1_translator_avalon_universal_slave_0_agent_m0_write),                   \n\t\t.rp_endofpacket          (sdram_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             \n\t\t.rp_ready                (sdram_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   \n\t\t.rp_valid                (sdram_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   \n\t\t.rp_data                 (sdram_s1_translator_avalon_universal_slave_0_agent_rp_data),                    \n\t\t.rp_startofpacket        (sdram_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           \n\t\t.cp_ready                (agent_pipeline_source0_ready),                                                  \n\t\t.cp_valid                (agent_pipeline_source0_valid),                                                  \n\t\t.cp_data                 (agent_pipeline_source0_data),                                                   \n\t\t.cp_startofpacket        (agent_pipeline_source0_startofpacket),                                          \n\t\t.cp_endofpacket          (agent_pipeline_source0_endofpacket),                                            \n\t\t.cp_channel              (agent_pipeline_source0_channel),                                                \n\t\t.rf_sink_ready           (sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         \n\t\t.rf_sink_valid           (sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         \n\t\t.rf_sink_startofpacket   (sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), \n\t\t.rf_sink_endofpacket     (sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   \n\t\t.rf_sink_data            (sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          \n\t\t.rf_source_ready         (sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            \n\t\t.rf_source_valid         (sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            \n\t\t.rf_source_startofpacket (sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    \n\t\t.rf_source_endofpacket   (sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      \n\t\t.rf_source_data          (sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             \n\t\t.rdata_fifo_sink_ready   (sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_out_ready),       \n\t\t.rdata_fifo_sink_valid   (sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_out_valid),       \n\t\t.rdata_fifo_sink_data    (sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_out_data),        \n\t\t.rdata_fifo_src_ready    (sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       \n\t\t.rdata_fifo_src_valid    (sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       \n\t\t.rdata_fifo_src_data     (sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        \n\t\t.m0_response             (2'b00),                                                                         \n\t\t.m0_writeresponserequest (),                                                                              \n\t\t.m0_writeresponsevalid   (1'b0)                                                                           \n\t);\n\n\taltera_avalon_sc_fifo #(\n\t\t.SYMBOLS_PER_BEAT    (1),\n\t\t.BITS_PER_SYMBOL     (87),\n\t\t.FIFO_DEPTH          (8),\n\t\t.CHANNEL_WIDTH       (0),\n\t\t.ERROR_WIDTH         (0),\n\t\t.USE_PACKETS         (1),\n\t\t.USE_FILL_LEVEL      (0),\n\t\t.EMPTY_LATENCY       (1),\n\t\t.USE_MEMORY_BLOCKS   (0),\n\t\t.USE_STORE_FORWARD   (0),\n\t\t.USE_ALMOST_FULL_IF  (0),\n\t\t.USE_ALMOST_EMPTY_IF (0)\n\t) sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (\n\t\t.clk               (pll_sys_outclk0_clk),                                                           \n\t\t.reset             (alt_vip_vfb_0_reset_reset_bridge_in_reset_reset),                               \n\t\t.in_data           (sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             \n\t\t.in_valid          (sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            \n\t\t.in_ready          (sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            \n\t\t.in_startofpacket  (sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    \n\t\t.in_endofpacket    (sdram_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      \n\t\t.out_data          (sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          \n\t\t.out_valid         (sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         \n\t\t.out_ready         (sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         \n\t\t.out_startofpacket (sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), \n\t\t.out_endofpacket   (sdram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   \n\t\t.csr_address       (2'b00),                                                                         \n\t\t.csr_read          (1'b0),                                                                          \n\t\t.csr_write         (1'b0),                                                                          \n\t\t.csr_readdata      (),                                                                              \n\t\t.csr_writedata     (32'b00000000000000000000000000000000),                                          \n\t\t.almost_full_data  (),                                                                              \n\t\t.almost_empty_data (),                                                                              \n\t\t.in_empty          (1'b0),                                                                          \n\t\t.out_empty         (),                                                                              \n\t\t.in_error          (1'b0),                                                                          \n\t\t.out_error         (),                                                                              \n\t\t.in_channel        (1'b0),                                                                          \n\t\t.out_channel       ()                                                                               \n\t);\n\n\taltera_avalon_sc_fifo #(\n\t\t.SYMBOLS_PER_BEAT    (1),\n\t\t.BITS_PER_SYMBOL     (18),\n\t\t.FIFO_DEPTH          (8),\n\t\t.CHANNEL_WIDTH       (0),\n\t\t.ERROR_WIDTH         (0),\n\t\t.USE_PACKETS         (0),\n\t\t.USE_FILL_LEVEL      (0),\n\t\t.EMPTY_LATENCY       (3),\n\t\t.USE_MEMORY_BLOCKS   (1),\n\t\t.USE_STORE_FORWARD   (0),\n\t\t.USE_ALMOST_FULL_IF  (0),\n\t\t.USE_ALMOST_EMPTY_IF (0)\n\t) sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo (\n\t\t.clk               (pll_sys_outclk0_clk),                                                     \n\t\t.reset             (alt_vip_vfb_0_reset_reset_bridge_in_reset_reset),                         \n\t\t.in_data           (sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),  \n\t\t.in_valid          (sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid), \n\t\t.in_ready          (sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready), \n\t\t.out_data          (sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_out_data),  \n\t\t.out_valid         (sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_out_valid), \n\t\t.out_ready         (sdram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_out_ready), \n\t\t.csr_address       (2'b00),                                                                   \n\t\t.csr_read          (1'b0),                                                                    \n\t\t.csr_write         (1'b0),                                                                    \n\t\t.csr_readdata      (),                                                                        \n\t\t.csr_writedata     (32'b00000000000000000000000000000000),                                    \n\t\t.almost_full_data  (),                                                                        \n\t\t.almost_empty_data (),                                                                        \n\t\t.in_startofpacket  (1'b0),                                                                    \n\t\t.in_endofpacket    (1'b0),                                                                    \n\t\t.out_startofpacket (),                                                                        \n\t\t.out_endofpacket   (),                                                                        \n\t\t.in_empty          (1'b0),                                                                    \n\t\t.out_empty         (),                                                                        \n\t\t.in_error          (1'b0),                                                                    \n\t\t.out_error         (),                                                                        \n\t\t.in_channel        (1'b0),                                                                    \n\t\t.out_channel       ()                                                                         \n\t);\n\n\tDE1_SoC_QSYS_mm_interconnect_1_addr_router addr_router (\n\t\t.sink_ready         (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_agent_cp_ready),         \n\t\t.sink_valid         (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_agent_cp_valid),         \n\t\t.sink_data          (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_agent_cp_data),          \n\t\t.sink_startofpacket (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_agent_cp_startofpacket), \n\t\t.sink_endofpacket   (alt_vip_vfb_0_read_master_translator_avalon_universal_master_0_agent_cp_endofpacket),   \n\t\t.clk                (pll_sys_outclk0_clk),                                                                   \n\t\t.reset              (alt_vip_vfb_0_reset_reset_bridge_in_reset_reset),                                       \n\t\t.src_ready          (addr_router_src_ready),                                                                 \n\t\t.src_valid          (addr_router_src_valid),                                                                 \n\t\t.src_data           (addr_router_src_data),                                                                  \n\t\t.src_channel        (addr_router_src_channel),                                                               \n\t\t.src_startofpacket  (addr_router_src_startofpacket),                                                         \n\t\t.src_endofpacket    (addr_router_src_endofpacket)                                                            \n\t);\n\n\tDE1_SoC_QSYS_mm_interconnect_1_addr_router addr_router_001 (\n\t\t.sink_ready         (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_agent_cp_ready),         \n\t\t.sink_valid         (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_agent_cp_valid),         \n\t\t.sink_data          (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_agent_cp_data),          \n\t\t.sink_startofpacket (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_agent_cp_startofpacket), \n\t\t.sink_endofpacket   (alt_vip_vfb_0_write_master_translator_avalon_universal_master_0_agent_cp_endofpacket),   \n\t\t.clk                (pll_sys_outclk0_clk),                                                                    \n\t\t.reset              (alt_vip_vfb_0_reset_reset_bridge_in_reset_reset),                                        \n\t\t.src_ready          (addr_router_001_src_ready),                                                              \n\t\t.src_valid          (addr_router_001_src_valid),                                                              \n\t\t.src_data           (addr_router_001_src_data),                                                               \n\t\t.src_channel        (addr_router_001_src_channel),                                                            \n\t\t.src_startofpacket  (addr_router_001_src_startofpacket),                                                      \n\t\t.src_endofpacket    (addr_router_001_src_endofpacket)                                                         \n\t);\n\n\tDE1_SoC_QSYS_mm_interconnect_1_id_router id_router (\n\t\t.sink_ready         (agent_pipeline_001_source0_ready),                \n\t\t.sink_valid         (agent_pipeline_001_source0_valid),                \n\t\t.sink_data          (agent_pipeline_001_source0_data),                 \n\t\t.sink_startofpacket (agent_pipeline_001_source0_startofpacket),        \n\t\t.sink_endofpacket   (agent_pipeline_001_source0_endofpacket),          \n\t\t.clk                (pll_sys_outclk0_clk),                             \n\t\t.reset              (alt_vip_vfb_0_reset_reset_bridge_in_reset_reset), \n\t\t.src_ready          (id_router_src_ready),                             \n\t\t.src_valid          (id_router_src_valid),                             \n\t\t.src_data           (id_router_src_data),                              \n\t\t.src_channel        (id_router_src_channel),                           \n\t\t.src_startofpacket  (id_router_src_startofpacket),                     \n\t\t.src_endofpacket    (id_router_src_endofpacket)                        \n\t);\n\n\taltera_merlin_burst_adapter #(\n\t\t.PKT_ADDR_H                (49),\n\t\t.PKT_ADDR_L                (18),\n\t\t.PKT_BEGIN_BURST           (69),\n\t\t.PKT_BYTE_CNT_H            (60),\n\t\t.PKT_BYTE_CNT_L            (56),\n\t\t.PKT_BYTEEN_H              (17),\n\t\t.PKT_BYTEEN_L              (16),\n\t\t.PKT_BURST_SIZE_H          (64),\n\t\t.PKT_BURST_SIZE_L          (62),\n\t\t.PKT_BURST_TYPE_H          (66),\n\t\t.PKT_BURST_TYPE_L          (65),\n\t\t.PKT_BURSTWRAP_H           (61),\n\t\t.PKT_BURSTWRAP_L           (61),\n\t\t.PKT_TRANS_COMPRESSED_READ (50),\n\t\t.PKT_TRANS_WRITE           (52),\n\t\t.PKT_TRANS_READ            (53),\n\t\t.OUT_NARROW_SIZE           (0),\n\t\t.IN_NARROW_SIZE            (0),\n\t\t.OUT_FIXED                 (0),\n\t\t.OUT_COMPLETE_WRAP         (0),\n\t\t.ST_DATA_W                 (86),\n\t\t.ST_CHANNEL_W              (2),\n\t\t.OUT_BYTE_CNT_H            (57),\n\t\t.OUT_BURSTWRAP_H           (61),\n\t\t.COMPRESSED_READ_SUPPORT   (1),\n\t\t.BYTEENABLE_SYNTHESIS      (1),\n\t\t.PIPE_INPUTS               (0),\n\t\t.NO_WRAP_SUPPORT           (0),\n\t\t.BURSTWRAP_CONST_MASK      (1),\n\t\t.BURSTWRAP_CONST_VALUE     (1)\n\t) burst_adapter (\n\t\t.clk                   (pll_sys_outclk0_clk),                             \n\t\t.reset                 (alt_vip_vfb_0_reset_reset_bridge_in_reset_reset), \n\t\t.sink0_valid           (width_adapter_001_src_valid),                     \n\t\t.sink0_data            (width_adapter_001_src_data),                      \n\t\t.sink0_channel         (width_adapter_001_src_channel),                   \n\t\t.sink0_startofpacket   (width_adapter_001_src_startofpacket),             \n\t\t.sink0_endofpacket     (width_adapter_001_src_endofpacket),               \n\t\t.sink0_ready           (width_adapter_001_src_ready),                     \n\t\t.source0_valid         (burst_adapter_source0_valid),                     \n\t\t.source0_data          (burst_adapter_source0_data),                      \n\t\t.source0_channel       (burst_adapter_source0_channel),                   \n\t\t.source0_startofpacket (burst_adapter_source0_startofpacket),             \n\t\t.source0_endofpacket   (burst_adapter_source0_endofpacket),               \n\t\t.source0_ready         (burst_adapter_source0_ready)                      \n\t);\n\n\tDE1_SoC_QSYS_mm_interconnect_1_cmd_xbar_demux cmd_xbar_demux (\n\t\t.clk                (pll_sys_outclk0_clk),                             \n\t\t.reset              (alt_vip_vfb_0_reset_reset_bridge_in_reset_reset), \n\t\t.sink_ready         (addr_router_src_ready),                           \n\t\t.sink_channel       (addr_router_src_channel),                         \n\t\t.sink_data          (addr_router_src_data),                            \n\t\t.sink_startofpacket (addr_router_src_startofpacket),                   \n\t\t.sink_endofpacket   (addr_router_src_endofpacket),                     \n\t\t.sink_valid         (addr_router_src_valid),                           \n\t\t.src0_ready         (cmd_xbar_demux_src0_ready),                       \n\t\t.src0_valid         (cmd_xbar_demux_src0_valid),                       \n\t\t.src0_data          (cmd_xbar_demux_src0_data),                        \n\t\t.src0_channel       (cmd_xbar_demux_src0_channel),                     \n\t\t.src0_startofpacket (cmd_xbar_demux_src0_startofpacket),               \n\t\t.src0_endofpacket   (cmd_xbar_demux_src0_endofpacket)                  \n\t);\n\n\tDE1_SoC_QSYS_mm_interconnect_1_cmd_xbar_demux cmd_xbar_demux_001 (\n\t\t.clk                (pll_sys_outclk0_clk),                             \n\t\t.reset              (alt_vip_vfb_0_reset_reset_bridge_in_reset_reset), \n\t\t.sink_ready         (addr_router_001_src_ready),                       \n\t\t.sink_channel       (addr_router_001_src_channel),                     \n\t\t.sink_data          (addr_router_001_src_data),                        \n\t\t.sink_startofpacket (addr_router_001_src_startofpacket),               \n\t\t.sink_endofpacket   (addr_router_001_src_endofpacket),                 \n\t\t.sink_valid         (addr_router_001_src_valid),                       \n\t\t.src0_ready         (cmd_xbar_demux_001_src0_ready),                   \n\t\t.src0_valid         (cmd_xbar_demux_001_src0_valid),                   \n\t\t.src0_data          (cmd_xbar_demux_001_src0_data),                    \n\t\t.src0_channel       (cmd_xbar_demux_001_src0_channel),                 \n\t\t.src0_startofpacket (cmd_xbar_demux_001_src0_startofpacket),           \n\t\t.src0_endofpacket   (cmd_xbar_demux_001_src0_endofpacket)              \n\t);\n\n\tDE1_SoC_QSYS_mm_interconnect_1_cmd_xbar_mux cmd_xbar_mux (\n\t\t.clk                 (pll_sys_outclk0_clk),                             \n\t\t.reset               (alt_vip_vfb_0_reset_reset_bridge_in_reset_reset), \n\t\t.src_ready           (cmd_xbar_mux_src_ready),                          \n\t\t.src_valid           (cmd_xbar_mux_src_valid),                          \n\t\t.src_data            (cmd_xbar_mux_src_data),                           \n\t\t.src_channel         (cmd_xbar_mux_src_channel),                        \n\t\t.src_startofpacket   (cmd_xbar_mux_src_startofpacket),                  \n\t\t.src_endofpacket     (cmd_xbar_mux_src_endofpacket),                    \n\t\t.sink0_ready         (cmd_xbar_demux_src0_ready),                       \n\t\t.sink0_valid         (cmd_xbar_demux_src0_valid),                       \n\t\t.sink0_channel       (cmd_xbar_demux_src0_channel),                     \n\t\t.sink0_data          (cmd_xbar_demux_src0_data),                        \n\t\t.sink0_startofpacket (cmd_xbar_demux_src0_startofpacket),               \n\t\t.sink0_endofpacket   (cmd_xbar_demux_src0_endofpacket),                 \n\t\t.sink1_ready         (cmd_xbar_demux_001_src0_ready),                   \n\t\t.sink1_valid         (cmd_xbar_demux_001_src0_valid),                   \n\t\t.sink1_channel       (cmd_xbar_demux_001_src0_channel),                 \n\t\t.sink1_data          (cmd_xbar_demux_001_src0_data),                    \n\t\t.sink1_startofpacket (cmd_xbar_demux_001_src0_startofpacket),           \n\t\t.sink1_endofpacket   (cmd_xbar_demux_001_src0_endofpacket)              \n\t);\n\n\tDE1_SoC_QSYS_mm_interconnect_1_rsp_xbar_demux rsp_xbar_demux (\n\t\t.clk                (pll_sys_outclk0_clk),                             \n\t\t.reset              (alt_vip_vfb_0_reset_reset_bridge_in_reset_reset), \n\t\t.sink_ready         (width_adapter_src_ready),                         \n\t\t.sink_channel       (width_adapter_src_channel),                       \n\t\t.sink_data          (width_adapter_src_data),                          \n\t\t.sink_startofpacket (width_adapter_src_startofpacket),                 \n\t\t.sink_endofpacket   (width_adapter_src_endofpacket),                   \n\t\t.sink_valid         (width_adapter_src_valid),                         \n\t\t.src0_ready         (rsp_xbar_demux_src0_ready),                       \n\t\t.src0_valid         (rsp_xbar_demux_src0_valid),                       \n\t\t.src0_data          (rsp_xbar_demux_src0_data),                        \n\t\t.src0_channel       (rsp_xbar_demux_src0_channel),                     \n\t\t.src0_startofpacket (rsp_xbar_demux_src0_startofpacket),               \n\t\t.src0_endofpacket   (rsp_xbar_demux_src0_endofpacket),                 \n\t\t.src1_ready         (rsp_xbar_demux_src1_ready),                       \n\t\t.src1_valid         (rsp_xbar_demux_src1_valid),                       \n\t\t.src1_data          (rsp_xbar_demux_src1_data),                        \n\t\t.src1_channel       (rsp_xbar_demux_src1_channel),                     \n\t\t.src1_startofpacket (rsp_xbar_demux_src1_startofpacket),               \n\t\t.src1_endofpacket   (rsp_xbar_demux_src1_endofpacket)                  \n\t);\n\n\tDE1_SoC_QSYS_mm_interconnect_1_rsp_xbar_mux rsp_xbar_mux (\n\t\t.clk                 (pll_sys_outclk0_clk),                             \n\t\t.reset               (alt_vip_vfb_0_reset_reset_bridge_in_reset_reset), \n\t\t.src_ready           (rsp_xbar_mux_src_ready),                          \n\t\t.src_valid           (rsp_xbar_mux_src_valid),                          \n\t\t.src_data            (rsp_xbar_mux_src_data),                           \n\t\t.src_channel         (rsp_xbar_mux_src_channel),                        \n\t\t.src_startofpacket   (rsp_xbar_mux_src_startofpacket),                  \n\t\t.src_endofpacket     (rsp_xbar_mux_src_endofpacket),                    \n\t\t.sink0_ready         (rsp_xbar_demux_src0_ready),                       \n\t\t.sink0_valid         (rsp_xbar_demux_src0_valid),                       \n\t\t.sink0_channel       (rsp_xbar_demux_src0_channel),                     \n\t\t.sink0_data          (rsp_xbar_demux_src0_data),                        \n\t\t.sink0_startofpacket (rsp_xbar_demux_src0_startofpacket),               \n\t\t.sink0_endofpacket   (rsp_xbar_demux_src0_endofpacket)                  \n\t);\n\n\tDE1_SoC_QSYS_mm_interconnect_1_rsp_xbar_mux rsp_xbar_mux_001 (\n\t\t.clk                 (pll_sys_outclk0_clk),                             \n\t\t.reset               (alt_vip_vfb_0_reset_reset_bridge_in_reset_reset), \n\t\t.src_ready           (rsp_xbar_mux_001_src_ready),                      \n\t\t.src_valid           (rsp_xbar_mux_001_src_valid),                      \n\t\t.src_data            (rsp_xbar_mux_001_src_data),                       \n\t\t.src_channel         (rsp_xbar_mux_001_src_channel),                    \n\t\t.src_startofpacket   (rsp_xbar_mux_001_src_startofpacket),              \n\t\t.src_endofpacket     (rsp_xbar_mux_001_src_endofpacket),                \n\t\t.sink0_ready         (rsp_xbar_demux_src1_ready),                       \n\t\t.sink0_valid         (rsp_xbar_demux_src1_valid),                       \n\t\t.sink0_channel       (rsp_xbar_demux_src1_channel),                     \n\t\t.sink0_data          (rsp_xbar_demux_src1_data),                        \n\t\t.sink0_startofpacket (rsp_xbar_demux_src1_startofpacket),               \n\t\t.sink0_endofpacket   (rsp_xbar_demux_src1_endofpacket)                  \n\t);\n\n\taltera_merlin_width_adapter #(\n\t\t.IN_PKT_ADDR_H                 (49),\n\t\t.IN_PKT_ADDR_L                 (18),\n\t\t.IN_PKT_DATA_H                 (15),\n\t\t.IN_PKT_DATA_L                 (0),\n\t\t.IN_PKT_BYTEEN_H               (17),\n\t\t.IN_PKT_BYTEEN_L               (16),\n\t\t.IN_PKT_BYTE_CNT_H             (60),\n\t\t.IN_PKT_BYTE_CNT_L             (56),\n\t\t.IN_PKT_TRANS_COMPRESSED_READ  (50),\n\t\t.IN_PKT_BURSTWRAP_H            (61),\n\t\t.IN_PKT_BURSTWRAP_L            (61),\n\t\t.IN_PKT_BURST_SIZE_H           (64),\n\t\t.IN_PKT_BURST_SIZE_L           (62),\n\t\t.IN_PKT_RESPONSE_STATUS_H      (82),\n\t\t.IN_PKT_RESPONSE_STATUS_L      (81),\n\t\t.IN_PKT_TRANS_EXCLUSIVE        (55),\n\t\t.IN_PKT_BURST_TYPE_H           (66),\n\t\t.IN_PKT_BURST_TYPE_L           (65),\n\t\t.IN_PKT_ORI_BURST_SIZE_L       (83),\n\t\t.IN_PKT_ORI_BURST_SIZE_H       (85),\n\t\t.IN_ST_DATA_W                  (86),\n\t\t.OUT_PKT_ADDR_H                (67),\n\t\t.OUT_PKT_ADDR_L                (36),\n\t\t.OUT_PKT_DATA_H                (31),\n\t\t.OUT_PKT_DATA_L                (0),\n\t\t.OUT_PKT_BYTEEN_H              (35),\n\t\t.OUT_PKT_BYTEEN_L              (32),\n\t\t.OUT_PKT_BYTE_CNT_H            (78),\n\t\t.OUT_PKT_BYTE_CNT_L            (74),\n\t\t.OUT_PKT_TRANS_COMPRESSED_READ (68),\n\t\t.OUT_PKT_BURST_SIZE_H          (82),\n\t\t.OUT_PKT_BURST_SIZE_L          (80),\n\t\t.OUT_PKT_RESPONSE_STATUS_H     (100),\n\t\t.OUT_PKT_RESPONSE_STATUS_L     (99),\n\t\t.OUT_PKT_TRANS_EXCLUSIVE       (73),\n\t\t.OUT_PKT_BURST_TYPE_H          (84),\n\t\t.OUT_PKT_BURST_TYPE_L          (83),\n\t\t.OUT_PKT_ORI_BURST_SIZE_L      (101),\n\t\t.OUT_PKT_ORI_BURST_SIZE_H      (103),\n\t\t.OUT_ST_DATA_W                 (104),\n\t\t.ST_CHANNEL_W                  (2),\n\t\t.OPTIMIZE_FOR_RSP              (0),\n\t\t.RESPONSE_PATH                 (1),\n\t\t.CONSTANT_BURST_SIZE           (1),\n\t\t.PACKING                       (1)\n\t) width_adapter (\n\t\t.clk                  (pll_sys_outclk0_clk),                             \n\t\t.reset                (alt_vip_vfb_0_reset_reset_bridge_in_reset_reset), \n\t\t.in_valid             (id_router_src_valid),                             \n\t\t.in_channel           (id_router_src_channel),                           \n\t\t.in_startofpacket     (id_router_src_startofpacket),                     \n\t\t.in_endofpacket       (id_router_src_endofpacket),                       \n\t\t.in_ready             (id_router_src_ready),                             \n\t\t.in_data              (id_router_src_data),                              \n\t\t.out_endofpacket      (width_adapter_src_endofpacket),                   \n\t\t.out_data             (width_adapter_src_data),                          \n\t\t.out_channel          (width_adapter_src_channel),                       \n\t\t.out_valid            (width_adapter_src_valid),                         \n\t\t.out_ready            (width_adapter_src_ready),                         \n\t\t.out_startofpacket    (width_adapter_src_startofpacket),                 \n\t\t.in_command_size_data (3'b000)                                           \n\t);\n\n\taltera_merlin_width_adapter #(\n\t\t.IN_PKT_ADDR_H                 (67),\n\t\t.IN_PKT_ADDR_L                 (36),\n\t\t.IN_PKT_DATA_H                 (31),\n\t\t.IN_PKT_DATA_L                 (0),\n\t\t.IN_PKT_BYTEEN_H               (35),\n\t\t.IN_PKT_BYTEEN_L               (32),\n\t\t.IN_PKT_BYTE_CNT_H             (78),\n\t\t.IN_PKT_BYTE_CNT_L             (74),\n\t\t.IN_PKT_TRANS_COMPRESSED_READ  (68),\n\t\t.IN_PKT_BURSTWRAP_H            (79),\n\t\t.IN_PKT_BURSTWRAP_L            (79),\n\t\t.IN_PKT_BURST_SIZE_H           (82),\n\t\t.IN_PKT_BURST_SIZE_L           (80),\n\t\t.IN_PKT_RESPONSE_STATUS_H      (100),\n\t\t.IN_PKT_RESPONSE_STATUS_L      (99),\n\t\t.IN_PKT_TRANS_EXCLUSIVE        (73),\n\t\t.IN_PKT_BURST_TYPE_H           (84),\n\t\t.IN_PKT_BURST_TYPE_L           (83),\n\t\t.IN_PKT_ORI_BURST_SIZE_L       (101),\n\t\t.IN_PKT_ORI_BURST_SIZE_H       (103),\n\t\t.IN_ST_DATA_W                  (104),\n\t\t.OUT_PKT_ADDR_H                (49),\n\t\t.OUT_PKT_ADDR_L                (18),\n\t\t.OUT_PKT_DATA_H                (15),\n\t\t.OUT_PKT_DATA_L                (0),\n\t\t.OUT_PKT_BYTEEN_H              (17),\n\t\t.OUT_PKT_BYTEEN_L              (16),\n\t\t.OUT_PKT_BYTE_CNT_H            (60),\n\t\t.OUT_PKT_BYTE_CNT_L            (56),\n\t\t.OUT_PKT_TRANS_COMPRESSED_READ (50),\n\t\t.OUT_PKT_BURST_SIZE_H          (64),\n\t\t.OUT_PKT_BURST_SIZE_L          (62),\n\t\t.OUT_PKT_RESPONSE_STATUS_H     (82),\n\t\t.OUT_PKT_RESPONSE_STATUS_L     (81),\n\t\t.OUT_PKT_TRANS_EXCLUSIVE       (55),\n\t\t.OUT_PKT_BURST_TYPE_H          (66),\n\t\t.OUT_PKT_BURST_TYPE_L          (65),\n\t\t.OUT_PKT_ORI_BURST_SIZE_L      (83),\n\t\t.OUT_PKT_ORI_BURST_SIZE_H      (85),\n\t\t.OUT_ST_DATA_W                 (86),\n\t\t.ST_CHANNEL_W                  (2),\n\t\t.OPTIMIZE_FOR_RSP              (0),\n\t\t.RESPONSE_PATH                 (0),\n\t\t.CONSTANT_BURST_SIZE           (1),\n\t\t.PACKING                       (1)\n\t) width_adapter_001 (\n\t\t.clk                  (pll_sys_outclk0_clk),                             \n\t\t.reset                (alt_vip_vfb_0_reset_reset_bridge_in_reset_reset), \n\t\t.in_valid             (cmd_xbar_mux_src_valid),                          \n\t\t.in_channel           (cmd_xbar_mux_src_channel),                        \n\t\t.in_startofpacket     (cmd_xbar_mux_src_startofpacket),                  \n\t\t.in_endofpacket       (cmd_xbar_mux_src_endofpacket),                    \n\t\t.in_ready             (cmd_xbar_mux_src_ready),                          \n\t\t.in_data              (cmd_xbar_mux_src_data),                           \n\t\t.out_endofpacket      (width_adapter_001_src_endofpacket),               \n\t\t.out_data             (width_adapter_001_src_data),                      \n\t\t.out_channel          (width_adapter_001_src_channel),                   \n\t\t.out_valid            (width_adapter_001_src_valid),                     \n\t\t.out_ready            (width_adapter_001_src_ready),                     \n\t\t.out_startofpacket    (width_adapter_001_src_startofpacket),             \n\t\t.in_command_size_data (3'b000)                                           \n\t);\n\n\taltera_avalon_st_pipeline_stage #(\n\t\t.SYMBOLS_PER_BEAT (1),\n\t\t.BITS_PER_SYMBOL  (86),\n\t\t.USE_PACKETS      (1),\n\t\t.USE_EMPTY        (0),\n\t\t.EMPTY_WIDTH      (0),\n\t\t.CHANNEL_WIDTH    (2),\n\t\t.PACKET_WIDTH     (2),\n\t\t.ERROR_WIDTH      (0),\n\t\t.PIPELINE_READY   (1)\n\t) agent_pipeline (\n\t\t.clk               (pll_sys_outclk0_clk),                             \n\t\t.reset             (alt_vip_vfb_0_reset_reset_bridge_in_reset_reset), \n\t\t.in_ready          (burst_adapter_source0_ready),                     \n\t\t.in_valid          (burst_adapter_source0_valid),                     \n\t\t.in_startofpacket  (burst_adapter_source0_startofpacket),             \n\t\t.in_endofpacket    (burst_adapter_source0_endofpacket),               \n\t\t.in_data           (burst_adapter_source0_data),                      \n\t\t.in_channel        (burst_adapter_source0_channel),                   \n\t\t.out_ready         (agent_pipeline_source0_ready),                    \n\t\t.out_valid         (agent_pipeline_source0_valid),                    \n\t\t.out_startofpacket (agent_pipeline_source0_startofpacket),            \n\t\t.out_endofpacket   (agent_pipeline_source0_endofpacket),              \n\t\t.out_data          (agent_pipeline_source0_data),                     \n\t\t.out_channel       (agent_pipeline_source0_channel),                  \n\t\t.in_empty          (1'b0),                                            \n\t\t.out_empty         (),                                                \n\t\t.out_error         (),                                                \n\t\t.in_error          (1'b0)                                             \n\t);\n\n\taltera_avalon_st_pipeline_stage #(\n\t\t.SYMBOLS_PER_BEAT (1),\n\t\t.BITS_PER_SYMBOL  (86),\n\t\t.USE_PACKETS      (1),\n\t\t.USE_EMPTY        (0),\n\t\t.EMPTY_WIDTH      (0),\n\t\t.CHANNEL_WIDTH    (0),\n\t\t.PACKET_WIDTH     (2),\n\t\t.ERROR_WIDTH      (0),\n\t\t.PIPELINE_READY   (1)\n\t) agent_pipeline_001 (\n\t\t.clk               (pll_sys_outclk0_clk),                                                 \n\t\t.reset             (alt_vip_vfb_0_reset_reset_bridge_in_reset_reset),                     \n\t\t.in_ready          (sdram_s1_translator_avalon_universal_slave_0_agent_rp_ready),         \n\t\t.in_valid          (sdram_s1_translator_avalon_universal_slave_0_agent_rp_valid),         \n\t\t.in_startofpacket  (sdram_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), \n\t\t.in_endofpacket    (sdram_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   \n\t\t.in_data           (sdram_s1_translator_avalon_universal_slave_0_agent_rp_data),          \n\t\t.out_ready         (agent_pipeline_001_source0_ready),                                    \n\t\t.out_valid         (agent_pipeline_001_source0_valid),                                    \n\t\t.out_startofpacket (agent_pipeline_001_source0_startofpacket),                            \n\t\t.out_endofpacket   (agent_pipeline_001_source0_endofpacket),                              \n\t\t.out_data          (agent_pipeline_001_source0_data),                                     \n\t\t.in_empty          (1'b0),                                                                \n\t\t.out_empty         (),                                                                    \n\t\t.out_error         (),                                                                    \n\t\t.in_error          (1'b0),                                                                \n\t\t.out_channel       (),                                                                    \n\t\t.in_channel        (1'b0)                                                                 \n\t);\n\nendmodule\n</code>"
                },
                {
                    "type": "text",
                    "text": "Based on the provided original Verilog code, its comments and above answers, generate a detailed specification for the module. Include the following information in a single, concise paragraph:\n1. The name of the module.\n2. A simple explanation of the module's functionality.\n3. The input and output ports, along with a brief explanation of each.\n4. The internal signals used within the module, with a brief explanation of their purpose.\n5. An overview of the different blocks or sections in the code and their functions.\nEnsure that the specification is clear and accurately reflects the details from the code and comments.\nYour answer should be structured and well-organized, providing a comprehensive and detailed overview of the module's design and operation.\nPlease provide your answer in the following format:\nModule name: [module name]. Module specification: [module specification]."
                },
                {
                    "type": "text",
                    "text": "Module name: DE1_SoC_QSYS_mm_interconnect_1. Module specification: This module is an interconnect or bus matrix for a System-on-Chip (SoC) design, managing communication between multiple masters (ALT_VIP_VFB read and write masters) and a slave (SDRAM). It features input ports for clock, reset, and master interfaces, and output ports for slave interfaces. The module uses internal signals for address routing, command/response demultiplexing, width adaptation, and burst adaptation. Key components include Avalon Universal Master/Slave translators, address routers, command and response crossbars, width adapters, and burst adapters. These components work together to handle data transfers, arbitration, and protocol conversions between different SoC components, allowing efficient communication despite differences in bus widths, protocols, or timing requirements. The module employs various"
                }
            ]
        }
    ]
}