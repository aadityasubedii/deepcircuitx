{
    "spec": "Module name: hps_sdram. Module specification: The hps_sdram module is a DDR3 SDRAM memory controller for a Hard Processor System (HPS), interfacing with external SDRAM memory. It manages clock generation, memory initialization, calibration, data transfer, and timing control. The module has input ports for clock (pll_ref_clk), reset signals (global_reset_n, soft_reset_n), and OCT calibration (oct_rzqin); output ports for memory address (mem_a), bank address (mem_ba), clock (mem_ck, mem_ck_n), control signals (mem_cke, mem_cs_n, mem_ras_n, mem_cas_n, mem_we_n, mem_reset_n), and data mask (mem_dm); and bidirectional ports for data (mem_dq",
    "gpt-message": [
        {
            "role": "system",
            "content": "You are an expert in hardware design with a deep understanding of Verilog RTL codes. Now I want to train a large language model for code comment generation tasks specifically focused on Verilog RTL codes. And I want you to help me process the raw data, transforming it into suitable formats that can serve as inputs and outputs for the model."
        },
        {
            "role": "user",
            "content": "Name of the module and its functionality is as follows: \nModule name: hps_sdram\n\nExplanation: This module appears to be a DDR3 SDRAM memory controller for a Hard Processor System (HPS). It interfaces with external SDRAM memory and includes components for clock generation (PLL), memory initialization and calibration, data transfer, and timing control. The module contains sub-modules for PLL, memory interface (p0), memory controller (c0), on-chip termination (OCT), and delay-locked loop (DLL). It manages various aspects of SDRAM operation, including address and data signals, command signals, and timing parameters, to facilitate communication between the processor and the external memory."
        },
        {
            "role": "user",
            "content": "Input and output ports and their explanation is as follows: \nInput ports:\npll_ref_clk, global_reset_n, soft_reset_n, oct_rzqin\n\nExplanation:\npll_ref_clk: Reference clock input for the PLL.\nglobal_reset_n: Global reset signal (active low).\nsoft_reset_n: Soft reset signal (active low).\noct_rzqin: On-Chip Termination (OCT) calibration input.\n\nOutput ports:\nmem_a, mem_ba, mem_ck, mem_ck_n, mem_cke, mem_cs_n, mem_dm, mem_ras_n, mem_cas_n, mem_we_n, mem_reset_n, mem_odt\n\nExplanation:\nmem_a: Memory address bus.\nmem_ba: Memory bank address.\nmem_ck, mem_ck_n: Memory clock and its complement.\nmem_cke: Memory clock enable.\nmem_cs_n: Memory chip select (active low).\nmem_dm: Data mask for write operations.\nmem_ras_n, mem_cas_n, mem_we_n: Row Address Strobe, Column Address Strobe, and Write Enable signals (active low).\nmem_reset_n: Memory reset signal (active low).\nmem_odt: On-Die Termination control.\n\nInout ports:\nmem_dq, mem_dqs, mem_dqs_n\n\nExplanation:\nmem_dq: Bidirectional data bus for read and write operations.\nmem_dqs, mem_dqs_n: Data strobe signal and its complement for data sampling."
        },
        {
            "role": "user",
            "content": "Internal signals and their explanation is as follows: \nInternal signals:\npll_afi_clk_clk, pll_afi_half_clk_clk, p0_afi_afi_wlat, p0_afi_afi_rdata_valid, p0_afi_afi_cal_success, p0_afi_afi_rlat, p0_afi_afi_rdata, p0_afi_afi_cal_fail, p0_afi_reset_reset, c0_afi_afi_cs_n, c0_afi_afi_cke, c0_afi_afi_ras_n, c0_afi_afi_mem_clk_disable, c0_afi_afi_dm, c0_afi_afi_odt, c0_afi_afi_addr, c0_afi_afi_rdata_en_full, c0_afi_afi_we_n, c0_afi_afi_ba, c0_afi_afi_wdata, c0_afi_afi_rdata_en, c0_afi_afi_rst_n, c0_afi_afi_cas_n, c0_afi_afi_wdata_valid, c0_afi_afi_dqs_burst, c0_hard_phy_cfg_cfg_addlat, c0_hard_phy_cfg_cfg_rowaddrwidth, c0_hard_phy_cfg_cfg_csaddrwidth, c0_hard_phy_cfg_cfg_devicewidth, c0_hard_phy_cfg_cfg_interfacewidth, c0_hard_phy_cfg_cfg_tcl, c0_hard_phy_cfg_cfg_coladdrwidth, c0_hard_phy_cfg_cfg_trefi, c0_hard_phy_cfg_cfg_dramconfig, c0_hard_phy_cfg_cfg_caswrlat, c0_hard_phy_cfg_cfg_trfc, c0_hard_phy_cfg_cfg_bankaddrwidth, c0_hard_phy_cfg_cfg_twr, c0_hard_phy_cfg_cfg_tmrd, p0_ctl_clk_clk, p0_ctl_reset_reset, p0_io_int_io_intaficalsuccess, p0_io_int_io_intaficalfail, oct_oct_sharing_parallelterminationcontrol, oct_oct_sharing_seriesterminationcontrol, pll_pll_sharing_pll_mem_phy_clk, pll_pll_sharing_pll_avl_clk, pll_pll_sharing_pll_avl_phy_clk, pll_pll_sharing_afi_phy_clk, pll_pll_sharing_pll_config_clk, pll_pll_sharing_pll_addr_cmd_clk, pll_pll_sharing_pll_mem_clk, pll_pll_sharing_pll_locked, pll_pll_sharing_pll_write_clk_pre_phy_clk, pll_pll_sharing_pll_write_clk, p0_dll_clk_clk, p0_dll_sharing_dll_pll_locked, dll_dll_sharing_dll_delayctrl.\n\nExplanation:\nThese internal signals are used for various purposes within the module, including:\n1. Clock signals (e.g., pll_afi_clk_clk, pll_afi_half_clk_clk) for timing and synchronization.\n2. AFI (Altera PHY Interface) signals (e.g., p0_afi_afi_wlat, c0_afi_afi_cs_n) for communication between the controller and PHY.\n3. Configuration signals (e.g., c0_hard_phy_cfg_cfg_addlat) for setting up memory parameters.\n4. Control signals (e.g., p0_ctl_reset_reset) for managing module operations.\n5. Calibration and initialization signals (e.g., p0_io_int_io_intaficalsuccess) for memory setup.\n6. OCT (On-Chip Termination) signals (e.g., oct_oct_sharing_parallelterminationcontrol) for signal integrity.\n7. PLL (Phase-Locked Loop) signals (e.g., pll_pll_sharing_pll_mem_clk) for clock management.\n8. DLL (Delay-Locked Loop) signals (e.g., p0_dll_sharing_dll_pll_locked) for timing adjustments.\n\nThese signals facilitate the complex operations required for DDR3 SDRAM control, including memory access, timing, calibration, and data transfer."
        },
        {
            "role": "user",
            "content": "Original Verilog code is as follows: \n```verilog\n\n\n\n\n\n\n\n`timescale 1 ps / 1 ps\nmodule hps_sdram (\n\t\tinput  wire        pll_ref_clk,    \n\t\tinput  wire        global_reset_n, \n\t\tinput  wire        soft_reset_n,   \n\t\toutput wire [14:0] mem_a,          \n\t\toutput wire [2:0]  mem_ba,         \n\t\toutput wire [0:0]  mem_ck,         \n\t\toutput wire [0:0]  mem_ck_n,       \n\t\toutput wire [0:0]  mem_cke,        \n\t\toutput wire [0:0]  mem_cs_n,       \n\t\toutput wire [3:0]  mem_dm,         \n\t\toutput wire [0:0]  mem_ras_n,      \n\t\toutput wire [0:0]  mem_cas_n,      \n\t\toutput wire [0:0]  mem_we_n,       \n\t\toutput wire        mem_reset_n,    \n\t\tinout  wire [31:0] mem_dq,         \n\t\tinout  wire [3:0]  mem_dqs,        \n\t\tinout  wire [3:0]  mem_dqs_n,      \n\t\toutput wire [0:0]  mem_odt,        \n\t\tinput  wire        oct_rzqin       \n\t);\n\n\twire         pll_afi_clk_clk;                            \n\twire         pll_afi_half_clk_clk;                       \n\twire   [3:0] p0_afi_afi_wlat;                            \n\twire   [0:0] p0_afi_afi_rdata_valid;                     \n\twire         p0_afi_afi_cal_success;                     \n\twire   [4:0] p0_afi_afi_rlat;                            \n\twire  [79:0] p0_afi_afi_rdata;                           \n\twire         p0_afi_afi_cal_fail;                        \n\twire         p0_afi_reset_reset;                         \n\twire   [1:0] c0_afi_afi_cs_n;                            \n\twire   [1:0] c0_afi_afi_cke;                             \n\twire   [0:0] c0_afi_afi_ras_n;                           \n\twire   [0:0] c0_afi_afi_mem_clk_disable;                 \n\twire   [9:0] c0_afi_afi_dm;                              \n\twire   [1:0] c0_afi_afi_odt;                             \n\twire  [19:0] c0_afi_afi_addr;                            \n\twire   [4:0] c0_afi_afi_rdata_en_full;                   \n\twire   [0:0] c0_afi_afi_we_n;                            \n\twire   [2:0] c0_afi_afi_ba;                              \n\twire  [79:0] c0_afi_afi_wdata;                           \n\twire   [4:0] c0_afi_afi_rdata_en;                        \n\twire   [0:0] c0_afi_afi_rst_n;                           \n\twire   [0:0] c0_afi_afi_cas_n;                           \n\twire   [4:0] c0_afi_afi_wdata_valid;                     \n\twire   [4:0] c0_afi_afi_dqs_burst;                       \n\twire   [7:0] c0_hard_phy_cfg_cfg_addlat;                 \n\twire   [7:0] c0_hard_phy_cfg_cfg_rowaddrwidth;           \n\twire   [7:0] c0_hard_phy_cfg_cfg_csaddrwidth;            \n\twire   [7:0] c0_hard_phy_cfg_cfg_devicewidth;            \n\twire   [7:0] c0_hard_phy_cfg_cfg_interfacewidth;         \n\twire   [7:0] c0_hard_phy_cfg_cfg_tcl;                    \n\twire   [7:0] c0_hard_phy_cfg_cfg_coladdrwidth;           \n\twire  [15:0] c0_hard_phy_cfg_cfg_trefi;                  \n\twire  [23:0] c0_hard_phy_cfg_cfg_dramconfig;             \n\twire   [7:0] c0_hard_phy_cfg_cfg_caswrlat;               \n\twire   [7:0] c0_hard_phy_cfg_cfg_trfc;                   \n\twire   [7:0] c0_hard_phy_cfg_cfg_bankaddrwidth;          \n\twire   [7:0] c0_hard_phy_cfg_cfg_twr;                    \n\twire   [7:0] c0_hard_phy_cfg_cfg_tmrd;                   \n\twire         p0_ctl_clk_clk;                             \n\twire         p0_ctl_reset_reset;                         \n\twire         p0_io_int_io_intaficalsuccess;              \n\twire         p0_io_int_io_intaficalfail;                 \n\twire  [15:0] oct_oct_sharing_parallelterminationcontrol; \n\twire  [15:0] oct_oct_sharing_seriesterminationcontrol;   \n\twire         pll_pll_sharing_pll_mem_phy_clk;            \n\twire         pll_pll_sharing_pll_avl_clk;                \n\twire         pll_pll_sharing_pll_avl_phy_clk;            \n\twire         pll_pll_sharing_afi_phy_clk;                \n\twire         pll_pll_sharing_pll_config_clk;             \n\twire         pll_pll_sharing_pll_addr_cmd_clk;           \n\twire         pll_pll_sharing_pll_mem_clk;                \n\twire         pll_pll_sharing_pll_locked;                 \n\twire         pll_pll_sharing_pll_write_clk_pre_phy_clk;  \n\twire         pll_pll_sharing_pll_write_clk;              \n\twire         p0_dll_clk_clk;                             \n\twire         p0_dll_sharing_dll_pll_locked;              \n\twire   [6:0] dll_dll_sharing_dll_delayctrl;              \n\n\thps_sdram_pll pll (\n\t\t.global_reset_n            (global_reset_n),                            \n\t\t.pll_ref_clk               (pll_ref_clk),                               \n\t\t.afi_clk                   (pll_afi_clk_clk),                           \n\t\t.afi_half_clk              (pll_afi_half_clk_clk),                      \n\t\t.pll_mem_clk               (pll_pll_sharing_pll_mem_clk),               \n\t\t.pll_write_clk             (pll_pll_sharing_pll_write_clk),             \n\t\t.pll_locked                (pll_pll_sharing_pll_locked),                \n\t\t.pll_write_clk_pre_phy_clk (pll_pll_sharing_pll_write_clk_pre_phy_clk), \n\t\t.pll_addr_cmd_clk          (pll_pll_sharing_pll_addr_cmd_clk),          \n\t\t.pll_avl_clk               (pll_pll_sharing_pll_avl_clk),               \n\t\t.pll_config_clk            (pll_pll_sharing_pll_config_clk),            \n\t\t.pll_mem_phy_clk           (pll_pll_sharing_pll_mem_phy_clk),           \n\t\t.afi_phy_clk               (pll_pll_sharing_afi_phy_clk),               \n\t\t.pll_avl_phy_clk           (pll_pll_sharing_pll_avl_phy_clk)            \n\t);\n\n\thps_sdram_p0 p0 (\n\t\t.global_reset_n             (global_reset_n),                                                                                                                                                                            \n\t\t.soft_reset_n               (soft_reset_n),                                                                                                                                                                              \n\t\t.afi_reset_n                (p0_afi_reset_reset),                                                                                                                                                                        \n\t\t.afi_reset_export_n         (),                                                                                                                                                                                          \n\t\t.ctl_reset_n                (p0_ctl_reset_reset),                                                                                                                                                                        \n\t\t.afi_clk                    (pll_afi_clk_clk),                                                                                                                                                                           \n\t\t.afi_half_clk               (pll_afi_half_clk_clk),                                                                                                                                                                      \n\t\t.ctl_clk                    (p0_ctl_clk_clk),                                                                                                                                                                            \n\t\t.avl_clk                    (),                                                                                                                                                                                          \n\t\t.avl_reset_n                (),                                                                                                                                                                                          \n\t\t.scc_clk                    (),                                                                                                                                                                                          \n\t\t.scc_reset_n                (),                                                                                                                                                                                          \n\t\t.avl_address                (),                                                                                                                                                                                          \n\t\t.avl_write                  (),                                                                                                                                                                                          \n\t\t.avl_writedata              (),                                                                                                                                                                                          \n\t\t.avl_read                   (),                                                                                                                                                                                          \n\t\t.avl_readdata               (),                                                                                                                                                                                          \n\t\t.avl_waitrequest            (),                                                                                                                                                                                          \n\t\t.dll_clk                    (p0_dll_clk_clk),                                                                                                                                                                            \n\t\t.afi_addr                   (c0_afi_afi_addr),                                                                                                                                                                           \n\t\t.afi_ba                     (c0_afi_afi_ba),                                                                                                                                                                             \n\t\t.afi_cke                    (c0_afi_afi_cke),                                                                                                                                                                            \n\t\t.afi_cs_n                   (c0_afi_afi_cs_n),                                                                                                                                                                           \n\t\t.afi_ras_n                  (c0_afi_afi_ras_n),                                                                                                                                                                          \n\t\t.afi_we_n                   (c0_afi_afi_we_n),                                                                                                                                                                           \n\t\t.afi_cas_n                  (c0_afi_afi_cas_n),                                                                                                                                                                          \n\t\t.afi_rst_n                  (c0_afi_afi_rst_n),                                                                                                                                                                          \n\t\t.afi_odt                    (c0_afi_afi_odt),                                                                                                                                                                            \n\t\t.afi_dqs_burst              (c0_afi_afi_dqs_burst),                                                                                                                                                                      \n\t\t.afi_wdata_valid            (c0_afi_afi_wdata_valid),                                                                                                                                                                    \n\t\t.afi_wdata                  (c0_afi_afi_wdata),                                                                                                                                                                          \n\t\t.afi_dm                     (c0_afi_afi_dm),                                                                                                                                                                             \n\t\t.afi_rdata                  (p0_afi_afi_rdata),                                                                                                                                                                          \n\t\t.afi_rdata_en               (c0_afi_afi_rdata_en),                                                                                                                                                                       \n\t\t.afi_rdata_en_full          (c0_afi_afi_rdata_en_full),                                                                                                                                                                  \n\t\t.afi_rdata_valid            (p0_afi_afi_rdata_valid),                                                                                                                                                                    \n\t\t.afi_wlat                   (p0_afi_afi_wlat),                                                                                                                                                                           \n\t\t.afi_rlat                   (p0_afi_afi_rlat),                                                                                                                                                                           \n\t\t.afi_cal_success            (p0_afi_afi_cal_success),                                                                                                                                                                    \n\t\t.afi_cal_fail               (p0_afi_afi_cal_fail),                                                                                                                                                                       \n\t\t.scc_data                   (),                                                                                                                                                                                          \n\t\t.scc_dqs_ena                (),                                                                                                                                                                                          \n\t\t.scc_dqs_io_ena             (),                                                                                                                                                                                          \n\t\t.scc_dq_ena                 (),                                                                                                                                                                                          \n\t\t.scc_dm_ena                 (),                                                                                                                                                                                          \n\t\t.capture_strobe_tracking    (),                                                                                                                                                                                          \n\t\t.scc_upd                    (),                                                                                                                                                                                          \n\t\t.cfg_addlat                 (c0_hard_phy_cfg_cfg_addlat),                                                                                                                                                                \n\t\t.cfg_bankaddrwidth          (c0_hard_phy_cfg_cfg_bankaddrwidth),                                                                                                                                                         \n\t\t.cfg_caswrlat               (c0_hard_phy_cfg_cfg_caswrlat),                                                                                                                                                              \n\t\t.cfg_coladdrwidth           (c0_hard_phy_cfg_cfg_coladdrwidth),                                                                                                                                                          \n\t\t.cfg_csaddrwidth            (c0_hard_phy_cfg_cfg_csaddrwidth),                                                                                                                                                           \n\t\t.cfg_devicewidth            (c0_hard_phy_cfg_cfg_devicewidth),                                                                                                                                                           \n\t\t.cfg_dramconfig             (c0_hard_phy_cfg_cfg_dramconfig),                                                                                                                                                            \n\t\t.cfg_interfacewidth         (c0_hard_phy_cfg_cfg_interfacewidth),                                                                                                                                                        \n\t\t.cfg_rowaddrwidth           (c0_hard_phy_cfg_cfg_rowaddrwidth),                                                                                                                                                          \n\t\t.cfg_tcl                    (c0_hard_phy_cfg_cfg_tcl),                                                                                                                                                                   \n\t\t.cfg_tmrd                   (c0_hard_phy_cfg_cfg_tmrd),                                                                                                                                                                  \n\t\t.cfg_trefi                  (c0_hard_phy_cfg_cfg_trefi),                                                                                                                                                                 \n\t\t.cfg_trfc                   (c0_hard_phy_cfg_cfg_trfc),                                                                                                                                                                  \n\t\t.cfg_twr                    (c0_hard_phy_cfg_cfg_twr),                                                                                                                                                                   \n\t\t.afi_mem_clk_disable        (c0_afi_afi_mem_clk_disable),                                                                                                                                                                \n\t\t.pll_mem_clk                (pll_pll_sharing_pll_mem_clk),                                                                                                                                                               \n\t\t.pll_write_clk              (pll_pll_sharing_pll_write_clk),                                                                                                                                                             \n\t\t.pll_locked                 (pll_pll_sharing_pll_locked),                                                                                                                                                                \n\t\t.pll_write_clk_pre_phy_clk  (pll_pll_sharing_pll_write_clk_pre_phy_clk),                                                                                                                                                 \n\t\t.pll_addr_cmd_clk           (pll_pll_sharing_pll_addr_cmd_clk),                                                                                                                                                          \n\t\t.pll_avl_clk                (pll_pll_sharing_pll_avl_clk),                                                                                                                                                               \n\t\t.pll_config_clk             (pll_pll_sharing_pll_config_clk),                                                                                                                                                            \n\t\t.pll_mem_phy_clk            (pll_pll_sharing_pll_mem_phy_clk),                                                                                                                                                           \n\t\t.afi_phy_clk                (pll_pll_sharing_afi_phy_clk),                                                                                                                                                               \n\t\t.pll_avl_phy_clk            (pll_pll_sharing_pll_avl_phy_clk),                                                                                                                                                           \n\t\t.dll_pll_locked             (p0_dll_sharing_dll_pll_locked),                                                                                                                                                             \n\t\t.dll_delayctrl              (dll_dll_sharing_dll_delayctrl),                                                                                                                                                             \n\t\t.seriesterminationcontrol   (oct_oct_sharing_seriesterminationcontrol),                                                                                                                                                  \n\t\t.parallelterminationcontrol (oct_oct_sharing_parallelterminationcontrol),                                                                                                                                                \n\t\t.mem_a                      (mem_a),                                                                                                                                                                                     \n\t\t.mem_ba                     (mem_ba),                                                                                                                                                                                    \n\t\t.mem_ck                     (mem_ck),                                                                                                                                                                                    \n\t\t.mem_ck_n                   (mem_ck_n),                                                                                                                                                                                  \n\t\t.mem_cke                    (mem_cke),                                                                                                                                                                                   \n\t\t.mem_cs_n                   (mem_cs_n),                                                                                                                                                                                  \n\t\t.mem_dm                     (mem_dm),                                                                                                                                                                                    \n\t\t.mem_ras_n                  (mem_ras_n),                                                                                                                                                                                 \n\t\t.mem_cas_n                  (mem_cas_n),                                                                                                                                                                                 \n\t\t.mem_we_n                   (mem_we_n),                                                                                                                                                                                  \n\t\t.mem_reset_n                (mem_reset_n),                                                                                                                                                                               \n\t\t.mem_dq                     (mem_dq),                                                                                                                                                                                    \n\t\t.mem_dqs                    (mem_dqs),                                                                                                                                                                                   \n\t\t.mem_dqs_n                  (mem_dqs_n),                                                                                                                                                                                 \n\t\t.mem_odt                    (mem_odt),                                                                                                                                                                                   \n\t\t.io_intaficalfail           (p0_io_int_io_intaficalfail),                                                                                                                                                                \n\t\t.io_intaficalsuccess        (p0_io_int_io_intaficalsuccess),                                                                                                                                                             \n\t\t.csr_soft_reset_req         (1'b0),                                                                                                                                                                                      \n\t\t.io_intaddrdout             (64'b0000000000000000000000000000000000000000000000000000000000000000),                                                                                                                      \n\t\t.io_intbadout               (12'b000000000000),                                                                                                                                                                          \n\t\t.io_intcasndout             (4'b0000),                                                                                                                                                                                   \n\t\t.io_intckdout               (4'b0000),                                                                                                                                                                                   \n\t\t.io_intckedout              (8'b00000000),                                                                                                                                                                               \n\t\t.io_intckndout              (4'b0000),                                                                                                                                                                                   \n\t\t.io_intcsndout              (8'b00000000),                                                                                                                                                                               \n\t\t.io_intdmdout               (20'b00000000000000000000),                                                                                                                                                                  \n\t\t.io_intdqdin                (),                                                                                                                                                                                          \n\t\t.io_intdqdout               (180'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000), \n\t\t.io_intdqoe                 (90'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000),                                                                                            \n\t\t.io_intdqsbdout             (20'b00000000000000000000),                                                                                                                                                                  \n\t\t.io_intdqsboe               (10'b0000000000),                                                                                                                                                                            \n\t\t.io_intdqsdout              (20'b00000000000000000000),                                                                                                                                                                  \n\t\t.io_intdqslogicdqsena       (10'b0000000000),                                                                                                                                                                            \n\t\t.io_intdqslogicfiforeset    (5'b00000),                                                                                                                                                                                  \n\t\t.io_intdqslogicincrdataen   (10'b0000000000),                                                                                                                                                                            \n\t\t.io_intdqslogicincwrptr     (10'b0000000000),                                                                                                                                                                            \n\t\t.io_intdqslogicoct          (10'b0000000000),                                                                                                                                                                            \n\t\t.io_intdqslogicrdatavalid   (),                                                                                                                                                                                          \n\t\t.io_intdqslogicreadlatency  (25'b0000000000000000000000000),                                                                                                                                                             \n\t\t.io_intdqsoe                (10'b0000000000),                                                                                                                                                                            \n\t\t.io_intodtdout              (8'b00000000),                                                                                                                                                                               \n\t\t.io_intrasndout             (4'b0000),                                                                                                                                                                                   \n\t\t.io_intresetndout           (4'b0000),                                                                                                                                                                                   \n\t\t.io_intwendout              (4'b0000),                                                                                                                                                                                   \n\t\t.io_intafirlat              (),                                                                                                                                                                                          \n\t\t.io_intafiwlat              ()                                                                                                                                                                                           \n\t);\n\n\taltera_mem_if_hhp_qseq_synth_top #(\n\t\t.MEM_IF_DM_WIDTH  (4),\n\t\t.MEM_IF_DQS_WIDTH (4),\n\t\t.MEM_IF_CS_WIDTH  (1),\n\t\t.MEM_IF_DQ_WIDTH  (32)\n\t) seq (\n\t);\n\n\taltera_mem_if_hard_memory_controller_top_cyclonev #(\n\t\t.MEM_IF_DQS_WIDTH                        (4),\n\t\t.MEM_IF_CS_WIDTH                         (1),\n\t\t.MEM_IF_CHIP_BITS                        (1),\n\t\t.MEM_IF_CLK_PAIR_COUNT                   (1),\n\t\t.CSR_ADDR_WIDTH                          (10),\n\t\t.CSR_DATA_WIDTH                          (8),\n\t\t.CSR_BE_WIDTH                            (1),\n\t\t.AVL_ADDR_WIDTH                          (27),\n\t\t.AVL_DATA_WIDTH                          (64),\n\t\t.AVL_SIZE_WIDTH                          (3),\n\t\t.AVL_DATA_WIDTH_PORT_0                   (1),\n\t\t.AVL_ADDR_WIDTH_PORT_0                   (1),\n\t\t.AVL_NUM_SYMBOLS_PORT_0                  (1),\n\t\t.LSB_WFIFO_PORT_0                        (5),\n\t\t.MSB_WFIFO_PORT_0                        (5),\n\t\t.LSB_RFIFO_PORT_0                        (5),\n\t\t.MSB_RFIFO_PORT_0                        (5),\n\t\t.AVL_DATA_WIDTH_PORT_1                   (1),\n\t\t.AVL_ADDR_WIDTH_PORT_1                   (1),\n\t\t.AVL_NUM_SYMBOLS_PORT_1                  (1),\n\t\t.LSB_WFIFO_PORT_1                        (5),\n\t\t.MSB_WFIFO_PORT_1                        (5),\n\t\t.LSB_RFIFO_PORT_1                        (5),\n\t\t.MSB_RFIFO_PORT_1                        (5),\n\t\t.AVL_DATA_WIDTH_PORT_2                   (1),\n\t\t.AVL_ADDR_WIDTH_PORT_2                   (1),\n\t\t.AVL_NUM_SYMBOLS_PORT_2                  (1),\n\t\t.LSB_WFIFO_PORT_2                        (5),\n\t\t.MSB_WFIFO_PORT_2                        (5),\n\t\t.LSB_RFIFO_PORT_2                        (5),\n\t\t.MSB_RFIFO_PORT_2                        (5),\n\t\t.AVL_DATA_WIDTH_PORT_3                   (1),\n\t\t.AVL_ADDR_WIDTH_PORT_3                   (1),\n\t\t.AVL_NUM_SYMBOLS_PORT_3                  (1),\n\t\t.LSB_WFIFO_PORT_3                        (5),\n\t\t.MSB_WFIFO_PORT_3                        (5),\n\t\t.LSB_RFIFO_PORT_3                        (5),\n\t\t.MSB_RFIFO_PORT_3                        (5),\n\t\t.AVL_DATA_WIDTH_PORT_4                   (1),\n\t\t.AVL_ADDR_WIDTH_PORT_4                   (1),\n\t\t.AVL_NUM_SYMBOLS_PORT_4                  (1),\n\t\t.LSB_WFIFO_PORT_4                        (5),\n\t\t.MSB_WFIFO_PORT_4                        (5),\n\t\t.LSB_RFIFO_PORT_4                        (5),\n\t\t.MSB_RFIFO_PORT_4                        (5),\n\t\t.AVL_DATA_WIDTH_PORT_5                   (1),\n\t\t.AVL_ADDR_WIDTH_PORT_5                   (1),\n\t\t.AVL_NUM_SYMBOLS_PORT_5                  (1),\n\t\t.LSB_WFIFO_PORT_5                        (5),\n\t\t.MSB_WFIFO_PORT_5                        (5),\n\t\t.LSB_RFIFO_PORT_5                        (5),\n\t\t.MSB_RFIFO_PORT_5                        (5),\n\t\t.ENUM_ATTR_COUNTER_ONE_RESET             (\"DISABLED\"),\n\t\t.ENUM_ATTR_COUNTER_ZERO_RESET            (\"DISABLED\"),\n\t\t.ENUM_ATTR_STATIC_CONFIG_VALID           (\"DISABLED\"),\n\t\t.ENUM_AUTO_PCH_ENABLE_0                  (\"DISABLED\"),\n\t\t.ENUM_AUTO_PCH_ENABLE_1                  (\"DISABLED\"),\n\t\t.ENUM_AUTO_PCH_ENABLE_2                  (\"DISABLED\"),\n\t\t.ENUM_AUTO_PCH_ENABLE_3                  (\"DISABLED\"),\n\t\t.ENUM_AUTO_PCH_ENABLE_4                  (\"DISABLED\"),\n\t\t.ENUM_AUTO_PCH_ENABLE_5                  (\"DISABLED\"),\n\t\t.ENUM_CAL_REQ                            (\"DISABLED\"),\n\t\t.ENUM_CFG_BURST_LENGTH                   (\"BL_8\"),\n\t\t.ENUM_CFG_INTERFACE_WIDTH                (\"DWIDTH_32\"),\n\t\t.ENUM_CFG_SELF_RFSH_EXIT_CYCLES          (\"SELF_RFSH_EXIT_CYCLES_512\"),\n\t\t.ENUM_CFG_STARVE_LIMIT                   (\"STARVE_LIMIT_10\"),\n\t\t.ENUM_CFG_TYPE                           (\"DDR3\"),\n\t\t.ENUM_CLOCK_OFF_0                        (\"DISABLED\"),\n\t\t.ENUM_CLOCK_OFF_1                        (\"DISABLED\"),\n\t\t.ENUM_CLOCK_OFF_2                        (\"DISABLED\"),\n\t\t.ENUM_CLOCK_OFF_3                        (\"DISABLED\"),\n\t\t.ENUM_CLOCK_OFF_4                        (\"DISABLED\"),\n\t\t.ENUM_CLOCK_OFF_5                        (\"DISABLED\"),\n\t\t.ENUM_CLR_INTR                           (\"NO_CLR_INTR\"),\n\t\t.ENUM_CMD_PORT_IN_USE_0                  (\"FALSE\"),\n\t\t.ENUM_CMD_PORT_IN_USE_1                  (\"FALSE\"),\n\t\t.ENUM_CMD_PORT_IN_USE_2                  (\"FALSE\"),\n\t\t.ENUM_CMD_PORT_IN_USE_3                  (\"FALSE\"),\n\t\t.ENUM_CMD_PORT_IN_USE_4                  (\"FALSE\"),\n\t\t.ENUM_CMD_PORT_IN_USE_5                  (\"FALSE\"),\n\t\t.ENUM_CPORT0_RDY_ALMOST_FULL             (\"NOT_FULL\"),\n\t\t.ENUM_CPORT0_RFIFO_MAP                   (\"FIFO_0\"),\n\t\t.ENUM_CPORT0_TYPE                        (\"DISABLE\"),\n\t\t.ENUM_CPORT0_WFIFO_MAP                   (\"FIFO_0\"),\n\t\t.ENUM_CPORT1_RDY_ALMOST_FULL             (\"NOT_FULL\"),\n\t\t.ENUM_CPORT1_RFIFO_MAP                   (\"FIFO_0\"),\n\t\t.ENUM_CPORT1_TYPE                        (\"DISABLE\"),\n\t\t.ENUM_CPORT1_WFIFO_MAP                   (\"FIFO_0\"),\n\t\t.ENUM_CPORT2_RDY_ALMOST_FULL             (\"NOT_FULL\"),\n\t\t.ENUM_CPORT2_RFIFO_MAP                   (\"FIFO_0\"),\n\t\t.ENUM_CPORT2_TYPE                        (\"DISABLE\"),\n\t\t.ENUM_CPORT2_WFIFO_MAP                   (\"FIFO_0\"),\n\t\t.ENUM_CPORT3_RDY_ALMOST_FULL             (\"NOT_FULL\"),\n\t\t.ENUM_CPORT3_RFIFO_MAP                   (\"FIFO_0\"),\n\t\t.ENUM_CPORT3_TYPE                        (\"DISABLE\"),\n\t\t.ENUM_CPORT3_WFIFO_MAP                   (\"FIFO_0\"),\n\t\t.ENUM_CPORT4_RDY_ALMOST_FULL             (\"NOT_FULL\"),\n\t\t.ENUM_CPORT4_RFIFO_MAP                   (\"FIFO_0\"),\n\t\t.ENUM_CPORT4_TYPE                        (\"DISABLE\"),\n\t\t.ENUM_CPORT4_WFIFO_MAP                   (\"FIFO_0\"),\n\t\t.ENUM_CPORT5_RDY_ALMOST_FULL             (\"NOT_FULL\"),\n\t\t.ENUM_CPORT5_RFIFO_MAP                   (\"FIFO_0\"),\n\t\t.ENUM_CPORT5_TYPE                        (\"DISABLE\"),\n\t\t.ENUM_CPORT5_WFIFO_MAP                   (\"FIFO_0\"),\n\t\t.ENUM_CTL_ADDR_ORDER                     (\"CHIP_ROW_BANK_COL\"),\n\t\t.ENUM_CTL_ECC_ENABLED                    (\"CTL_ECC_DISABLED\"),\n\t\t.ENUM_CTL_ECC_RMW_ENABLED                (\"CTL_ECC_RMW_DISABLED\"),\n\t\t.ENUM_CTL_REGDIMM_ENABLED                (\"REGDIMM_DISABLED\"),\n\t\t.ENUM_CTL_USR_REFRESH                    (\"CTL_USR_REFRESH_DISABLED\"),\n\t\t.ENUM_CTRL_WIDTH                         (\"DATA_WIDTH_64_BIT\"),\n\t\t.ENUM_DELAY_BONDING                      (\"BONDING_LATENCY_0\"),\n\t\t.ENUM_DFX_BYPASS_ENABLE                  (\"DFX_BYPASS_DISABLED\"),\n\t\t.ENUM_DISABLE_MERGING                    (\"MERGING_ENABLED\"),\n\t\t.ENUM_ECC_DQ_WIDTH                       (\"ECC_DQ_WIDTH_0\"),\n\t\t.ENUM_ENABLE_ATPG                        (\"DISABLED\"),\n\t\t.ENUM_ENABLE_BONDING_0                   (\"DISABLED\"),\n\t\t.ENUM_ENABLE_BONDING_1                   (\"DISABLED\"),\n\t\t.ENUM_ENABLE_BONDING_2                   (\"DISABLED\"),\n\t\t.ENUM_ENABLE_BONDING_3                   (\"DISABLED\"),\n\t\t.ENUM_ENABLE_BONDING_4                   (\"DISABLED\"),\n\t\t.ENUM_ENABLE_BONDING_5                   (\"DISABLED\"),\n\t\t.ENUM_ENABLE_BONDING_WRAPBACK            (\"DISABLED\"),\n\t\t.ENUM_ENABLE_DQS_TRACKING                (\"ENABLED\"),\n\t\t.ENUM_ENABLE_ECC_CODE_OVERWRITES         (\"DISABLED\"),\n\t\t.ENUM_ENABLE_FAST_EXIT_PPD               (\"DISABLED\"),\n\t\t.ENUM_ENABLE_INTR                        (\"DISABLED\"),\n\t\t.ENUM_ENABLE_NO_DM                       (\"DISABLED\"),\n\t\t.ENUM_ENABLE_PIPELINEGLOBAL              (\"DISABLED\"),\n\t\t.ENUM_GANGED_ARF                         (\"DISABLED\"),\n\t\t.ENUM_GEN_DBE                            (\"GEN_DBE_DISABLED\"),\n\t\t.ENUM_GEN_SBE                            (\"GEN_SBE_DISABLED\"),\n\t\t.ENUM_INC_SYNC                           (\"FIFO_SET_2\"),\n\t\t.ENUM_LOCAL_IF_CS_WIDTH                  (\"ADDR_WIDTH_0\"),\n\t\t.ENUM_MASK_CORR_DROPPED_INTR             (\"DISABLED\"),\n\t\t.ENUM_MASK_DBE_INTR                      (\"DISABLED\"),\n\t\t.ENUM_MASK_SBE_INTR                      (\"DISABLED\"),\n\t\t.ENUM_MEM_IF_AL                          (\"AL_0\"),\n\t\t.ENUM_MEM_IF_BANKADDR_WIDTH              (\"ADDR_WIDTH_3\"),\n\t\t.ENUM_MEM_IF_BURSTLENGTH                 (\"MEM_IF_BURSTLENGTH_8\"),\n\t\t.ENUM_MEM_IF_COLADDR_WIDTH               (\"ADDR_WIDTH_10\"),\n\t\t.ENUM_MEM_IF_CS_PER_RANK                 (\"MEM_IF_CS_PER_RANK_1\"),\n\t\t.ENUM_MEM_IF_CS_WIDTH                    (\"MEM_IF_CS_WIDTH_1\"),\n\t\t.ENUM_MEM_IF_DQ_PER_CHIP                 (\"MEM_IF_DQ_PER_CHIP_8\"),\n\t\t.ENUM_MEM_IF_DQS_WIDTH                   (\"DQS_WIDTH_4\"),\n\t\t.ENUM_MEM_IF_DWIDTH                      (\"MEM_IF_DWIDTH_32\"),\n\t\t.ENUM_MEM_IF_MEMTYPE                     (\"DDR3_SDRAM\"),\n\t\t.ENUM_MEM_IF_ROWADDR_WIDTH               (\"ADDR_WIDTH_15\"),\n\t\t.ENUM_MEM_IF_SPEEDBIN                    (\"DDR3_1600_8_8_8\"),\n\t\t.ENUM_MEM_IF_TCCD                        (\"TCCD_4\"),\n\t\t.ENUM_MEM_IF_TCL                         (\"TCL_11\"),\n\t\t.ENUM_MEM_IF_TCWL                        (\"TCWL_8\"),\n\t\t.ENUM_MEM_IF_TFAW                        (\"TFAW_12\"),\n\t\t.ENUM_MEM_IF_TMRD                        (\"TMRD_4\"),\n\t\t.ENUM_MEM_IF_TRAS                        (\"TRAS_14\"),\n\t\t.ENUM_MEM_IF_TRC                         (\"TRC_20\"),\n\t\t.ENUM_MEM_IF_TRCD                        (\"TRCD_6\"),\n\t\t.ENUM_MEM_IF_TRP                         (\"TRP_6\"),\n\t\t.ENUM_MEM_IF_TRRD                        (\"TRRD_3\"),\n\t\t.ENUM_MEM_IF_TRTP                        (\"TRTP_3\"),\n\t\t.ENUM_MEM_IF_TWR                         (\"TWR_6\"),\n\t\t.ENUM_MEM_IF_TWTR                        (\"TWTR_4\"),\n\t\t.ENUM_MMR_CFG_MEM_BL                     (\"MP_BL_8\"),\n\t\t.ENUM_OUTPUT_REGD                        (\"DISABLED\"),\n\t\t.ENUM_PDN_EXIT_CYCLES                    (\"SLOW_EXIT\"),\n\t\t.ENUM_PORT0_WIDTH                        (\"PORT_32_BIT\"),\n\t\t.ENUM_PORT1_WIDTH                        (\"PORT_32_BIT\"),\n\t\t.ENUM_PORT2_WIDTH                        (\"PORT_32_BIT\"),\n\t\t.ENUM_PORT3_WIDTH                        (\"PORT_32_BIT\"),\n\t\t.ENUM_PORT4_WIDTH                        (\"PORT_32_BIT\"),\n\t\t.ENUM_PORT5_WIDTH                        (\"PORT_32_BIT\"),\n\t\t.ENUM_PRIORITY_0_0                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_0_1                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_0_2                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_0_3                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_0_4                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_0_5                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_1_0                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_1_1                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_1_2                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_1_3                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_1_4                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_1_5                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_2_0                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_2_1                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_2_2                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_2_3                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_2_4                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_2_5                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_3_0                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_3_1                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_3_2                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_3_3                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_3_4                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_3_5                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_4_0                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_4_1                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_4_2                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_4_3                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_4_4                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_4_5                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_5_0                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_5_1                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_5_2                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_5_3                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_5_4                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_5_5                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_6_0                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_6_1                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_6_2                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_6_3                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_6_4                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_6_5                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_7_0                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_7_1                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_7_2                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_7_3                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_7_4                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_7_5                       (\"WEIGHT_0\"),\n\t\t.ENUM_RCFG_STATIC_WEIGHT_0               (\"WEIGHT_0\"),\n\t\t.ENUM_RCFG_STATIC_WEIGHT_1               (\"WEIGHT_0\"),\n\t\t.ENUM_RCFG_STATIC_WEIGHT_2               (\"WEIGHT_0\"),\n\t\t.ENUM_RCFG_STATIC_WEIGHT_3               (\"WEIGHT_0\"),\n\t\t.ENUM_RCFG_STATIC_WEIGHT_4               (\"WEIGHT_0\"),\n\t\t.ENUM_RCFG_STATIC_WEIGHT_5               (\"WEIGHT_0\"),\n\t\t.ENUM_RCFG_USER_PRIORITY_0               (\"PRIORITY_1\"),\n\t\t.ENUM_RCFG_USER_PRIORITY_1               (\"PRIORITY_1\"),\n\t\t.ENUM_RCFG_USER_PRIORITY_2               (\"PRIORITY_1\"),\n\t\t.ENUM_RCFG_USER_PRIORITY_3               (\"PRIORITY_1\"),\n\t\t.ENUM_RCFG_USER_PRIORITY_4               (\"PRIORITY_1\"),\n\t\t.ENUM_RCFG_USER_PRIORITY_5               (\"PRIORITY_1\"),\n\t\t.ENUM_RD_DWIDTH_0                        (\"DWIDTH_0\"),\n\t\t.ENUM_RD_DWIDTH_1                        (\"DWIDTH_0\"),\n\t\t.ENUM_RD_DWIDTH_2                        (\"DWIDTH_0\"),\n\t\t.ENUM_RD_DWIDTH_3                        (\"DWIDTH_0\"),\n\t\t.ENUM_RD_DWIDTH_4                        (\"DWIDTH_0\"),\n\t\t.ENUM_RD_DWIDTH_5                        (\"DWIDTH_0\"),\n\t\t.ENUM_RD_FIFO_IN_USE_0                   (\"FALSE\"),\n\t\t.ENUM_RD_FIFO_IN_USE_1                   (\"FALSE\"),\n\t\t.ENUM_RD_FIFO_IN_USE_2                   (\"FALSE\"),\n\t\t.ENUM_RD_FIFO_IN_USE_3                   (\"FALSE\"),\n\t\t.ENUM_RD_PORT_INFO_0                     (\"USE_NO\"),\n\t\t.ENUM_RD_PORT_INFO_1                     (\"USE_NO\"),\n\t\t.ENUM_RD_PORT_INFO_2                     (\"USE_NO\"),\n\t\t.ENUM_RD_PORT_INFO_3                     (\"USE_NO\"),\n\t\t.ENUM_RD_PORT_INFO_4                     (\"USE_NO\"),\n\t\t.ENUM_RD_PORT_INFO_5                     (\"USE_NO\"),\n\t\t.ENUM_READ_ODT_CHIP                      (\"ODT_DISABLED\"),\n\t\t.ENUM_REORDER_DATA                       (\"DATA_REORDERING\"),\n\t\t.ENUM_RFIFO0_CPORT_MAP                   (\"CMD_PORT_0\"),\n\t\t.ENUM_RFIFO1_CPORT_MAP                   (\"CMD_PORT_0\"),\n\t\t.ENUM_RFIFO2_CPORT_MAP                   (\"CMD_PORT_0\"),\n\t\t.ENUM_RFIFO3_CPORT_MAP                   (\"CMD_PORT_0\"),\n\t\t.ENUM_SINGLE_READY_0                     (\"CONCATENATE_RDY\"),\n\t\t.ENUM_SINGLE_READY_1                     (\"CONCATENATE_RDY\"),\n\t\t.ENUM_SINGLE_READY_2                     (\"CONCATENATE_RDY\"),\n\t\t.ENUM_SINGLE_READY_3                     (\"CONCATENATE_RDY\"),\n\t\t.ENUM_STATIC_WEIGHT_0                    (\"WEIGHT_0\"),\n\t\t.ENUM_STATIC_WEIGHT_1                    (\"WEIGHT_0\"),\n\t\t.ENUM_STATIC_WEIGHT_2                    (\"WEIGHT_0\"),\n\t\t.ENUM_STATIC_WEIGHT_3                    (\"WEIGHT_0\"),\n\t\t.ENUM_STATIC_WEIGHT_4                    (\"WEIGHT_0\"),\n\t\t.ENUM_STATIC_WEIGHT_5                    (\"WEIGHT_0\"),\n\t\t.ENUM_SYNC_MODE_0                        (\"ASYNCHRONOUS\"),\n\t\t.ENUM_SYNC_MODE_1                        (\"ASYNCHRONOUS\"),\n\t\t.ENUM_SYNC_MODE_2                        (\"ASYNCHRONOUS\"),\n\t\t.ENUM_SYNC_MODE_3                        (\"ASYNCHRONOUS\"),\n\t\t.ENUM_SYNC_MODE_4                        (\"ASYNCHRONOUS\"),\n\t\t.ENUM_SYNC_MODE_5                        (\"ASYNCHRONOUS\"),\n\t\t.ENUM_TEST_MODE                          (\"NORMAL_MODE\"),\n\t\t.ENUM_THLD_JAR1_0                        (\"THRESHOLD_32\"),\n\t\t.ENUM_THLD_JAR1_1                        (\"THRESHOLD_32\"),\n\t\t.ENUM_THLD_JAR1_2                        (\"THRESHOLD_32\"),\n\t\t.ENUM_THLD_JAR1_3                        (\"THRESHOLD_32\"),\n\t\t.ENUM_THLD_JAR1_4                        (\"THRESHOLD_32\"),\n\t\t.ENUM_THLD_JAR1_5                        (\"THRESHOLD_32\"),\n\t\t.ENUM_THLD_JAR2_0                        (\"THRESHOLD_16\"),\n\t\t.ENUM_THLD_JAR2_1                        (\"THRESHOLD_16\"),\n\t\t.ENUM_THLD_JAR2_2                        (\"THRESHOLD_16\"),\n\t\t.ENUM_THLD_JAR2_3                        (\"THRESHOLD_16\"),\n\t\t.ENUM_THLD_JAR2_4                        (\"THRESHOLD_16\"),\n\t\t.ENUM_THLD_JAR2_5                        (\"THRESHOLD_16\"),\n\t\t.ENUM_USE_ALMOST_EMPTY_0                 (\"EMPTY\"),\n\t\t.ENUM_USE_ALMOST_EMPTY_1                 (\"EMPTY\"),\n\t\t.ENUM_USE_ALMOST_EMPTY_2                 (\"EMPTY\"),\n\t\t.ENUM_USE_ALMOST_EMPTY_3                 (\"EMPTY\"),\n\t\t.ENUM_USER_ECC_EN                        (\"DISABLE\"),\n\t\t.ENUM_USER_PRIORITY_0                    (\"PRIORITY_1\"),\n\t\t.ENUM_USER_PRIORITY_1                    (\"PRIORITY_1\"),\n\t\t.ENUM_USER_PRIORITY_2                    (\"PRIORITY_1\"),\n\t\t.ENUM_USER_PRIORITY_3                    (\"PRIORITY_1\"),\n\t\t.ENUM_USER_PRIORITY_4                    (\"PRIORITY_1\"),\n\t\t.ENUM_USER_PRIORITY_5                    (\"PRIORITY_1\"),\n\t\t.ENUM_WFIFO0_CPORT_MAP                   (\"CMD_PORT_0\"),\n\t\t.ENUM_WFIFO0_RDY_ALMOST_FULL             (\"NOT_FULL\"),\n\t\t.ENUM_WFIFO1_CPORT_MAP                   (\"CMD_PORT_0\"),\n\t\t.ENUM_WFIFO1_RDY_ALMOST_FULL             (\"NOT_FULL\"),\n\t\t.ENUM_WFIFO2_CPORT_MAP                   (\"CMD_PORT_0\"),\n\t\t.ENUM_WFIFO2_RDY_ALMOST_FULL             (\"NOT_FULL\"),\n\t\t.ENUM_WFIFO3_CPORT_MAP                   (\"CMD_PORT_0\"),\n\t\t.ENUM_WFIFO3_RDY_ALMOST_FULL             (\"NOT_FULL\"),\n\t\t.ENUM_WR_DWIDTH_0                        (\"DWIDTH_0\"),\n\t\t.ENUM_WR_DWIDTH_1                        (\"DWIDTH_0\"),\n\t\t.ENUM_WR_DWIDTH_2                        (\"DWIDTH_0\"),\n\t\t.ENUM_WR_DWIDTH_3                        (\"DWIDTH_0\"),\n\t\t.ENUM_WR_DWIDTH_4                        (\"DWIDTH_0\"),\n\t\t.ENUM_WR_DWIDTH_5                        (\"DWIDTH_0\"),\n\t\t.ENUM_WR_FIFO_IN_USE_0                   (\"FALSE\"),\n\t\t.ENUM_WR_FIFO_IN_USE_1                   (\"FALSE\"),\n\t\t.ENUM_WR_FIFO_IN_USE_2                   (\"FALSE\"),\n\t\t.ENUM_WR_FIFO_IN_USE_3                   (\"FALSE\"),\n\t\t.ENUM_WR_PORT_INFO_0                     (\"USE_NO\"),\n\t\t.ENUM_WR_PORT_INFO_1                     (\"USE_NO\"),\n\t\t.ENUM_WR_PORT_INFO_2                     (\"USE_NO\"),\n\t\t.ENUM_WR_PORT_INFO_3                     (\"USE_NO\"),\n\t\t.ENUM_WR_PORT_INFO_4                     (\"USE_NO\"),\n\t\t.ENUM_WR_PORT_INFO_5                     (\"USE_NO\"),\n\t\t.ENUM_WRITE_ODT_CHIP                     (\"WRITE_CHIP0_ODT0_CHIP1\"),\n\t\t.INTG_MEM_AUTO_PD_CYCLES                 (0),\n\t\t.INTG_CYC_TO_RLD_JARS_0                  (1),\n\t\t.INTG_CYC_TO_RLD_JARS_1                  (1),\n\t\t.INTG_CYC_TO_RLD_JARS_2                  (1),\n\t\t.INTG_CYC_TO_RLD_JARS_3                  (1),\n\t\t.INTG_CYC_TO_RLD_JARS_4                  (1),\n\t\t.INTG_CYC_TO_RLD_JARS_5                  (1),\n\t\t.INTG_EXTRA_CTL_CLK_ACT_TO_ACT           (0),\n\t\t.INTG_EXTRA_CTL_CLK_ACT_TO_ACT_DIFF_BANK (0),\n\t\t.INTG_EXTRA_CTL_CLK_ACT_TO_PCH           (0),\n\t\t.INTG_EXTRA_CTL_CLK_ACT_TO_RDWR          (0),\n\t\t.INTG_EXTRA_CTL_CLK_ARF_PERIOD           (0),\n\t\t.INTG_EXTRA_CTL_CLK_ARF_TO_VALID         (0),\n\t\t.INTG_EXTRA_CTL_CLK_FOUR_ACT_TO_ACT      (0),\n\t\t.INTG_EXTRA_CTL_CLK_PCH_ALL_TO_VALID     (0),\n\t\t.INTG_EXTRA_CTL_CLK_PCH_TO_VALID         (0),\n\t\t.INTG_EXTRA_CTL_CLK_PDN_PERIOD           (0),\n\t\t.INTG_EXTRA_CTL_CLK_PDN_TO_VALID         (0),\n\t\t.INTG_EXTRA_CTL_CLK_RD_AP_TO_VALID       (0),\n\t\t.INTG_EXTRA_CTL_CLK_RD_TO_PCH            (0),\n\t\t.INTG_EXTRA_CTL_CLK_RD_TO_RD             (0),\n\t\t.INTG_EXTRA_CTL_CLK_RD_TO_RD_DIFF_CHIP   (0),\n\t\t.INTG_EXTRA_CTL_CLK_RD_TO_WR             (2),\n\t\t.INTG_EXTRA_CTL_CLK_RD_TO_WR_BC          (2),\n\t\t.INTG_EXTRA_CTL_CLK_RD_TO_WR_DIFF_CHIP   (2),\n\t\t.INTG_EXTRA_CTL_CLK_SRF_TO_VALID         (0),\n\t\t.INTG_EXTRA_CTL_CLK_SRF_TO_ZQ_CAL        (0),\n\t\t.INTG_EXTRA_CTL_CLK_WR_AP_TO_VALID       (0),\n\t\t.INTG_EXTRA_CTL_CLK_WR_TO_PCH            (0),\n\t\t.INTG_EXTRA_CTL_CLK_WR_TO_RD             (3),\n\t\t.INTG_EXTRA_CTL_CLK_WR_TO_RD_BC          (3),\n\t\t.INTG_EXTRA_CTL_CLK_WR_TO_RD_DIFF_CHIP   (3),\n\t\t.INTG_EXTRA_CTL_CLK_WR_TO_WR             (0),\n\t\t.INTG_EXTRA_CTL_CLK_WR_TO_WR_DIFF_CHIP   (0),\n\t\t.INTG_MEM_IF_TREFI                       (3120),\n\t\t.INTG_MEM_IF_TRFC                        (104),\n\t\t.INTG_RCFG_SUM_WT_PRIORITY_0             (0),\n\t\t.INTG_RCFG_SUM_WT_PRIORITY_1             (0),\n\t\t.INTG_RCFG_SUM_WT_PRIORITY_2             (0),\n\t\t.INTG_RCFG_SUM_WT_PRIORITY_3             (0),\n\t\t.INTG_RCFG_SUM_WT_PRIORITY_4             (0),\n\t\t.INTG_RCFG_SUM_WT_PRIORITY_5             (0),\n\t\t.INTG_RCFG_SUM_WT_PRIORITY_6             (0),\n\t\t.INTG_RCFG_SUM_WT_PRIORITY_7             (0),\n\t\t.INTG_SUM_WT_PRIORITY_0                  (0),\n\t\t.INTG_SUM_WT_PRIORITY_1                  (0),\n\t\t.INTG_SUM_WT_PRIORITY_2                  (0),\n\t\t.INTG_SUM_WT_PRIORITY_3                  (0),\n\t\t.INTG_SUM_WT_PRIORITY_4                  (0),\n\t\t.INTG_SUM_WT_PRIORITY_5                  (0),\n\t\t.INTG_SUM_WT_PRIORITY_6                  (0),\n\t\t.INTG_SUM_WT_PRIORITY_7                  (0),\n\t\t.INTG_POWER_SAVING_EXIT_CYCLES           (5),\n\t\t.INTG_MEM_CLK_ENTRY_CYCLES               (10),\n\t\t.ENUM_ENABLE_BURST_INTERRUPT             (\"DISABLED\"),\n\t\t.ENUM_ENABLE_BURST_TERMINATE             (\"DISABLED\"),\n\t\t.AFI_RATE_RATIO                          (1),\n\t\t.AFI_ADDR_WIDTH                          (15),\n\t\t.AFI_BANKADDR_WIDTH                      (3),\n\t\t.AFI_CONTROL_WIDTH                       (1),\n\t\t.AFI_CS_WIDTH                            (1),\n\t\t.AFI_DM_WIDTH                            (8),\n\t\t.AFI_DQ_WIDTH                            (64),\n\t\t.AFI_ODT_WIDTH                           (1),\n\t\t.AFI_WRITE_DQS_WIDTH                     (4),\n\t\t.AFI_RLAT_WIDTH                          (6),\n\t\t.AFI_WLAT_WIDTH                          (6),\n\t\t.HARD_PHY                                (1)\n\t) c0 (\n\t\t.afi_clk                 (pll_afi_clk_clk),                    \n\t\t.afi_reset_n             (p0_afi_reset_reset),                 \n\t\t.ctl_reset_n             (p0_ctl_reset_reset),                 \n\t\t.afi_half_clk            (pll_afi_half_clk_clk),               \n\t\t.ctl_clk                 (p0_ctl_clk_clk),                     \n\t\t.local_init_done         (),                                   \n\t\t.local_cal_success       (),                                   \n\t\t.local_cal_fail          (),                                   \n\t\t.afi_addr                (c0_afi_afi_addr),                    \n\t\t.afi_ba                  (c0_afi_afi_ba),                      \n\t\t.afi_cke                 (c0_afi_afi_cke),                     \n\t\t.afi_cs_n                (c0_afi_afi_cs_n),                    \n\t\t.afi_ras_n               (c0_afi_afi_ras_n),                   \n\t\t.afi_we_n                (c0_afi_afi_we_n),                    \n\t\t.afi_cas_n               (c0_afi_afi_cas_n),                   \n\t\t.afi_rst_n               (c0_afi_afi_rst_n),                   \n\t\t.afi_odt                 (c0_afi_afi_odt),                     \n\t\t.afi_mem_clk_disable     (c0_afi_afi_mem_clk_disable),         \n\t\t.afi_init_req            (),                                   \n\t\t.afi_cal_req             (),                                   \n\t\t.afi_seq_busy            (),                                   \n\t\t.afi_ctl_refresh_done    (),                                   \n\t\t.afi_ctl_long_idle       (),                                   \n\t\t.afi_dqs_burst           (c0_afi_afi_dqs_burst),               \n\t\t.afi_wdata_valid         (c0_afi_afi_wdata_valid),             \n\t\t.afi_wdata               (c0_afi_afi_wdata),                   \n\t\t.afi_dm                  (c0_afi_afi_dm),                      \n\t\t.afi_rdata               (p0_afi_afi_rdata),                   \n\t\t.afi_rdata_en            (c0_afi_afi_rdata_en),                \n\t\t.afi_rdata_en_full       (c0_afi_afi_rdata_en_full),           \n\t\t.afi_rdata_valid         (p0_afi_afi_rdata_valid),             \n\t\t.afi_wlat                (p0_afi_afi_wlat),                    \n\t\t.afi_rlat                (p0_afi_afi_rlat),                    \n\t\t.afi_cal_success         (p0_afi_afi_cal_success),             \n\t\t.afi_cal_fail            (p0_afi_afi_cal_fail),                \n\t\t.cfg_addlat              (c0_hard_phy_cfg_cfg_addlat),         \n\t\t.cfg_bankaddrwidth       (c0_hard_phy_cfg_cfg_bankaddrwidth),  \n\t\t.cfg_caswrlat            (c0_hard_phy_cfg_cfg_caswrlat),       \n\t\t.cfg_coladdrwidth        (c0_hard_phy_cfg_cfg_coladdrwidth),   \n\t\t.cfg_csaddrwidth         (c0_hard_phy_cfg_cfg_csaddrwidth),    \n\t\t.cfg_devicewidth         (c0_hard_phy_cfg_cfg_devicewidth),    \n\t\t.cfg_dramconfig          (c0_hard_phy_cfg_cfg_dramconfig),     \n\t\t.cfg_interfacewidth      (c0_hard_phy_cfg_cfg_interfacewidth), \n\t\t.cfg_rowaddrwidth        (c0_hard_phy_cfg_cfg_rowaddrwidth),   \n\t\t.cfg_tcl                 (c0_hard_phy_cfg_cfg_tcl),            \n\t\t.cfg_tmrd                (c0_hard_phy_cfg_cfg_tmrd),           \n\t\t.cfg_trefi               (c0_hard_phy_cfg_cfg_trefi),          \n\t\t.cfg_trfc                (c0_hard_phy_cfg_cfg_trfc),           \n\t\t.cfg_twr                 (c0_hard_phy_cfg_cfg_twr),            \n\t\t.io_intaficalfail        (p0_io_int_io_intaficalfail),         \n\t\t.io_intaficalsuccess     (p0_io_int_io_intaficalsuccess),      \n\t\t.mp_cmd_clk_0            (1'b0),                               \n\t\t.mp_cmd_reset_n_0        (1'b1),                               \n\t\t.mp_cmd_clk_1            (1'b0),                               \n\t\t.mp_cmd_reset_n_1        (1'b1),                               \n\t\t.mp_cmd_clk_2            (1'b0),                               \n\t\t.mp_cmd_reset_n_2        (1'b1),                               \n\t\t.mp_cmd_clk_3            (1'b0),                               \n\t\t.mp_cmd_reset_n_3        (1'b1),                               \n\t\t.mp_cmd_clk_4            (1'b0),                               \n\t\t.mp_cmd_reset_n_4        (1'b1),                               \n\t\t.mp_cmd_clk_5            (1'b0),                               \n\t\t.mp_cmd_reset_n_5        (1'b1),                               \n\t\t.mp_rfifo_clk_0          (1'b0),                               \n\t\t.mp_rfifo_reset_n_0      (1'b1),                               \n\t\t.mp_wfifo_clk_0          (1'b0),                               \n\t\t.mp_wfifo_reset_n_0      (1'b1),                               \n\t\t.mp_rfifo_clk_1          (1'b0),                               \n\t\t.mp_rfifo_reset_n_1      (1'b1),                               \n\t\t.mp_wfifo_clk_1          (1'b0),                               \n\t\t.mp_wfifo_reset_n_1      (1'b1),                               \n\t\t.mp_rfifo_clk_2          (1'b0),                               \n\t\t.mp_rfifo_reset_n_2      (1'b1),                               \n\t\t.mp_wfifo_clk_2          (1'b0),                               \n\t\t.mp_wfifo_reset_n_2      (1'b1),                               \n\t\t.mp_rfifo_clk_3          (1'b0),                               \n\t\t.mp_rfifo_reset_n_3      (1'b1),                               \n\t\t.mp_wfifo_clk_3          (1'b0),                               \n\t\t.mp_wfifo_reset_n_3      (1'b1),                               \n\t\t.csr_clk                 (1'b0),                               \n\t\t.csr_reset_n             (1'b1),                               \n\t\t.avl_ready_0             (),                                   \n\t\t.avl_burstbegin_0        (1'b0),                               \n\t\t.avl_addr_0              (1'b0),                               \n\t\t.avl_rdata_valid_0       (),                                   \n\t\t.avl_rdata_0             (),                                   \n\t\t.avl_wdata_0             (1'b0),                               \n\t\t.avl_be_0                (1'b0),                               \n\t\t.avl_read_req_0          (1'b0),                               \n\t\t.avl_write_req_0         (1'b0),                               \n\t\t.avl_size_0              (3'b000),                             \n\t\t.avl_ready_1             (),                                   \n\t\t.avl_burstbegin_1        (1'b0),                               \n\t\t.avl_addr_1              (1'b0),                               \n\t\t.avl_rdata_valid_1       (),                                   \n\t\t.avl_rdata_1             (),                                   \n\t\t.avl_wdata_1             (1'b0),                               \n\t\t.avl_be_1                (1'b0),                               \n\t\t.avl_read_req_1          (1'b0),                               \n\t\t.avl_write_req_1         (1'b0),                               \n\t\t.avl_size_1              (3'b000),                             \n\t\t.avl_ready_2             (),                                   \n\t\t.avl_burstbegin_2        (1'b0),                               \n\t\t.avl_addr_2              (1'b0),                               \n\t\t.avl_rdata_valid_2       (),                                   \n\t\t.avl_rdata_2             (),                                   \n\t\t.avl_wdata_2             (1'b0),                               \n\t\t.avl_be_2                (1'b0),                               \n\t\t.avl_read_req_2          (1'b0),                               \n\t\t.avl_write_req_2         (1'b0),                               \n\t\t.avl_size_2              (3'b000),                             \n\t\t.avl_ready_3             (),                                   \n\t\t.avl_burstbegin_3        (1'b0),                               \n\t\t.avl_addr_3              (1'b0),                               \n\t\t.avl_rdata_valid_3       (),                                   \n\t\t.avl_rdata_3             (),                                   \n\t\t.avl_wdata_3             (1'b0),                               \n\t\t.avl_be_3                (1'b0),                               \n\t\t.avl_read_req_3          (1'b0),                               \n\t\t.avl_write_req_3         (1'b0),                               \n\t\t.avl_size_3              (3'b000),                             \n\t\t.avl_ready_4             (),                                   \n\t\t.avl_burstbegin_4        (1'b0),                               \n\t\t.avl_addr_4              (1'b0),                               \n\t\t.avl_rdata_valid_4       (),                                   \n\t\t.avl_rdata_4             (),                                   \n\t\t.avl_wdata_4             (1'b0),                               \n\t\t.avl_be_4                (1'b0),                               \n\t\t.avl_read_req_4          (1'b0),                               \n\t\t.avl_write_req_4         (1'b0),                               \n\t\t.avl_size_4              (3'b000),                             \n\t\t.avl_ready_5             (),                                   \n\t\t.avl_burstbegin_5        (1'b0),                               \n\t\t.avl_addr_5              (1'b0),                               \n\t\t.avl_rdata_valid_5       (),                                   \n\t\t.avl_rdata_5             (),                                   \n\t\t.avl_wdata_5             (1'b0),                               \n\t\t.avl_be_5                (1'b0),                               \n\t\t.avl_read_req_5          (1'b0),                               \n\t\t.avl_write_req_5         (1'b0),                               \n\t\t.avl_size_5              (3'b000),                             \n\t\t.csr_write_req           (1'b0),                               \n\t\t.csr_read_req            (1'b0),                               \n\t\t.csr_waitrequest         (),                                   \n\t\t.csr_addr                (10'b0000000000),                     \n\t\t.csr_be                  (1'b0),                               \n\t\t.csr_wdata               (8'b00000000),                        \n\t\t.csr_rdata               (),                                   \n\t\t.csr_rdata_valid         (),                                   \n\t\t.local_multicast         (1'b0),                               \n\t\t.local_refresh_req       (1'b0),                               \n\t\t.local_refresh_chip      (1'b0),                               \n\t\t.local_refresh_ack       (),                                   \n\t\t.local_self_rfsh_req     (1'b0),                               \n\t\t.local_self_rfsh_chip    (1'b0),                               \n\t\t.local_self_rfsh_ack     (),                                   \n\t\t.local_deep_powerdn_req  (1'b0),                               \n\t\t.local_deep_powerdn_chip (1'b0),                               \n\t\t.local_deep_powerdn_ack  (),                                   \n\t\t.local_powerdn_ack       (),                                   \n\t\t.local_priority          (1'b0),                               \n\t\t.bonding_in_1            (4'b0000),                            \n\t\t.bonding_in_2            (6'b000000),                          \n\t\t.bonding_in_3            (6'b000000),                          \n\t\t.bonding_out_1           (),                                   \n\t\t.bonding_out_2           (),                                   \n\t\t.bonding_out_3           ()                                    \n\t);\n\n\taltera_mem_if_oct_cyclonev #(\n\t\t.OCT_TERM_CONTROL_WIDTH (16)\n\t) oct (\n\t\t.oct_rzqin                  (oct_rzqin),                                  \n\t\t.seriesterminationcontrol   (oct_oct_sharing_seriesterminationcontrol),   \n\t\t.parallelterminationcontrol (oct_oct_sharing_parallelterminationcontrol)  \n\t);\n\n\taltera_mem_if_dll_cyclonev #(\n\t\t.DLL_DELAY_CTRL_WIDTH       (7),\n\t\t.DLL_OFFSET_CTRL_WIDTH      (6),\n\t\t.DELAY_BUFFER_MODE          (\"HIGH\"),\n\t\t.DELAY_CHAIN_LENGTH         (8),\n\t\t.DLL_INPUT_FREQUENCY_PS_STR (\"2500 ps\")\n\t) dll (\n\t\t.clk            (p0_dll_clk_clk),                \n\t\t.dll_pll_locked (p0_dll_sharing_dll_pll_locked), \n\t\t.dll_delayctrl  (dll_dll_sharing_dll_delayctrl)  \n\t);\n\nendmodule\n```"
        },
        {
            "role": "user",
            "content": "Based on the provided original Verilog code, its comments and above answers, generate a detailed specification for the module. Include the following information in a single, concise paragraph:\n1. The name of the module.\n2. A simple explanation of the module's functionality.\n3. The input and output ports, along with a brief explanation of each.\n4. The internal signals used within the module, with a brief explanation of their purpose.\n5. An overview of the different blocks or sections in the code and their functions.\nEnsure that the specification is clear and accurately reflects the details from the code and comments.\nYour answer should be structured and well-organized, providing a comprehensive and detailed overview of the module's design and operation.\nPlease provide your answer in the following format:\nModule name: [module name]. Module specification: [module specification]."
        },
        {
            "role": "assistant",
            "content": "Module name: hps_sdram. Module specification: The hps_sdram module is a DDR3 SDRAM memory controller for a Hard Processor System (HPS), interfacing with external SDRAM memory. It manages clock generation, memory initialization, calibration, data transfer, and timing control. The module has input ports for clock (pll_ref_clk), reset signals (global_reset_n, soft_reset_n), and OCT calibration (oct_rzqin); output ports for memory address (mem_a), bank address (mem_ba), clock (mem_ck, mem_ck_n), control signals (mem_cke, mem_cs_n, mem_ras_n, mem_cas_n, mem_we_n, mem_reset_n), and data mask (mem_dm); and bidirectional ports for data (mem_dq"
        }
    ],
    "claude-message": [
        {
            "role": "user",
            "content": [
                {
                    "type": "text",
                    "text": "You are an expert in hardware design with a deep understanding of Verilog RTL codes. Now I want to train a large language model for code comment generation tasks specifically focused on Verilog RTL codes. And I want you to help me process the raw data, transforming it into suitable formats that can serve as inputs and outputs for the model."
                },
                {
                    "type": "text",
                    "text": "Name of the module and its functionality is as follows: \nModule name: hps_sdram\n\nExplanation: This module appears to be a DDR3 SDRAM memory controller for a Hard Processor System (HPS). It interfaces with external SDRAM memory and includes components for clock generation (PLL), memory initialization and calibration, data transfer, and timing control. The module contains sub-modules for PLL, memory interface (p0), memory controller (c0), on-chip termination (OCT), and delay-locked loop (DLL). It manages various aspects of SDRAM operation, including address and data signals, command signals, and timing parameters, to facilitate communication between the processor and the external memory."
                },
                {
                    "type": "text",
                    "text": "Input and output ports and their explanation is as follows: \nInput ports:\npll_ref_clk, global_reset_n, soft_reset_n, oct_rzqin\n\nExplanation:\npll_ref_clk: Reference clock input for the PLL.\nglobal_reset_n: Global reset signal (active low).\nsoft_reset_n: Soft reset signal (active low).\noct_rzqin: On-Chip Termination (OCT) calibration input.\n\nOutput ports:\nmem_a, mem_ba, mem_ck, mem_ck_n, mem_cke, mem_cs_n, mem_dm, mem_ras_n, mem_cas_n, mem_we_n, mem_reset_n, mem_odt\n\nExplanation:\nmem_a: Memory address bus.\nmem_ba: Memory bank address.\nmem_ck, mem_ck_n: Memory clock and its complement.\nmem_cke: Memory clock enable.\nmem_cs_n: Memory chip select (active low).\nmem_dm: Data mask for write operations.\nmem_ras_n, mem_cas_n, mem_we_n: Row Address Strobe, Column Address Strobe, and Write Enable signals (active low).\nmem_reset_n: Memory reset signal (active low).\nmem_odt: On-Die Termination control.\n\nInout ports:\nmem_dq, mem_dqs, mem_dqs_n\n\nExplanation:\nmem_dq: Bidirectional data bus for read and write operations.\nmem_dqs, mem_dqs_n: Data strobe signal and its complement for data sampling."
                },
                {
                    "type": "text",
                    "text": "Internal signals and their explanation is as follows: \nInternal signals:\npll_afi_clk_clk, pll_afi_half_clk_clk, p0_afi_afi_wlat, p0_afi_afi_rdata_valid, p0_afi_afi_cal_success, p0_afi_afi_rlat, p0_afi_afi_rdata, p0_afi_afi_cal_fail, p0_afi_reset_reset, c0_afi_afi_cs_n, c0_afi_afi_cke, c0_afi_afi_ras_n, c0_afi_afi_mem_clk_disable, c0_afi_afi_dm, c0_afi_afi_odt, c0_afi_afi_addr, c0_afi_afi_rdata_en_full, c0_afi_afi_we_n, c0_afi_afi_ba, c0_afi_afi_wdata, c0_afi_afi_rdata_en, c0_afi_afi_rst_n, c0_afi_afi_cas_n, c0_afi_afi_wdata_valid, c0_afi_afi_dqs_burst, c0_hard_phy_cfg_cfg_addlat, c0_hard_phy_cfg_cfg_rowaddrwidth, c0_hard_phy_cfg_cfg_csaddrwidth, c0_hard_phy_cfg_cfg_devicewidth, c0_hard_phy_cfg_cfg_interfacewidth, c0_hard_phy_cfg_cfg_tcl, c0_hard_phy_cfg_cfg_coladdrwidth, c0_hard_phy_cfg_cfg_trefi, c0_hard_phy_cfg_cfg_dramconfig, c0_hard_phy_cfg_cfg_caswrlat, c0_hard_phy_cfg_cfg_trfc, c0_hard_phy_cfg_cfg_bankaddrwidth, c0_hard_phy_cfg_cfg_twr, c0_hard_phy_cfg_cfg_tmrd, p0_ctl_clk_clk, p0_ctl_reset_reset, p0_io_int_io_intaficalsuccess, p0_io_int_io_intaficalfail, oct_oct_sharing_parallelterminationcontrol, oct_oct_sharing_seriesterminationcontrol, pll_pll_sharing_pll_mem_phy_clk, pll_pll_sharing_pll_avl_clk, pll_pll_sharing_pll_avl_phy_clk, pll_pll_sharing_afi_phy_clk, pll_pll_sharing_pll_config_clk, pll_pll_sharing_pll_addr_cmd_clk, pll_pll_sharing_pll_mem_clk, pll_pll_sharing_pll_locked, pll_pll_sharing_pll_write_clk_pre_phy_clk, pll_pll_sharing_pll_write_clk, p0_dll_clk_clk, p0_dll_sharing_dll_pll_locked, dll_dll_sharing_dll_delayctrl.\n\nExplanation:\nThese internal signals are used for various purposes within the module, including:\n1. Clock signals (e.g., pll_afi_clk_clk, pll_afi_half_clk_clk) for timing and synchronization.\n2. AFI (Altera PHY Interface) signals (e.g., p0_afi_afi_wlat, c0_afi_afi_cs_n) for communication between the controller and PHY.\n3. Configuration signals (e.g., c0_hard_phy_cfg_cfg_addlat) for setting up memory parameters.\n4. Control signals (e.g., p0_ctl_reset_reset) for managing module operations.\n5. Calibration and initialization signals (e.g., p0_io_int_io_intaficalsuccess) for memory setup.\n6. OCT (On-Chip Termination) signals (e.g., oct_oct_sharing_parallelterminationcontrol) for signal integrity.\n7. PLL (Phase-Locked Loop) signals (e.g., pll_pll_sharing_pll_mem_clk) for clock management.\n8. DLL (Delay-Locked Loop) signals (e.g., p0_dll_sharing_dll_pll_locked) for timing adjustments.\n\nThese signals facilitate the complex operations required for DDR3 SDRAM control, including memory access, timing, calibration, and data transfer."
                },
                {
                    "type": "text",
                    "text": "Original Verilog code is as follows: \n<code>\n\n\n\n\n\n\n`timescale 1 ps / 1 ps\nmodule hps_sdram (\n\t\tinput  wire        pll_ref_clk,    \n\t\tinput  wire        global_reset_n, \n\t\tinput  wire        soft_reset_n,   \n\t\toutput wire [14:0] mem_a,          \n\t\toutput wire [2:0]  mem_ba,         \n\t\toutput wire [0:0]  mem_ck,         \n\t\toutput wire [0:0]  mem_ck_n,       \n\t\toutput wire [0:0]  mem_cke,        \n\t\toutput wire [0:0]  mem_cs_n,       \n\t\toutput wire [3:0]  mem_dm,         \n\t\toutput wire [0:0]  mem_ras_n,      \n\t\toutput wire [0:0]  mem_cas_n,      \n\t\toutput wire [0:0]  mem_we_n,       \n\t\toutput wire        mem_reset_n,    \n\t\tinout  wire [31:0] mem_dq,         \n\t\tinout  wire [3:0]  mem_dqs,        \n\t\tinout  wire [3:0]  mem_dqs_n,      \n\t\toutput wire [0:0]  mem_odt,        \n\t\tinput  wire        oct_rzqin       \n\t);\n\n\twire         pll_afi_clk_clk;                            \n\twire         pll_afi_half_clk_clk;                       \n\twire   [3:0] p0_afi_afi_wlat;                            \n\twire   [0:0] p0_afi_afi_rdata_valid;                     \n\twire         p0_afi_afi_cal_success;                     \n\twire   [4:0] p0_afi_afi_rlat;                            \n\twire  [79:0] p0_afi_afi_rdata;                           \n\twire         p0_afi_afi_cal_fail;                        \n\twire         p0_afi_reset_reset;                         \n\twire   [1:0] c0_afi_afi_cs_n;                            \n\twire   [1:0] c0_afi_afi_cke;                             \n\twire   [0:0] c0_afi_afi_ras_n;                           \n\twire   [0:0] c0_afi_afi_mem_clk_disable;                 \n\twire   [9:0] c0_afi_afi_dm;                              \n\twire   [1:0] c0_afi_afi_odt;                             \n\twire  [19:0] c0_afi_afi_addr;                            \n\twire   [4:0] c0_afi_afi_rdata_en_full;                   \n\twire   [0:0] c0_afi_afi_we_n;                            \n\twire   [2:0] c0_afi_afi_ba;                              \n\twire  [79:0] c0_afi_afi_wdata;                           \n\twire   [4:0] c0_afi_afi_rdata_en;                        \n\twire   [0:0] c0_afi_afi_rst_n;                           \n\twire   [0:0] c0_afi_afi_cas_n;                           \n\twire   [4:0] c0_afi_afi_wdata_valid;                     \n\twire   [4:0] c0_afi_afi_dqs_burst;                       \n\twire   [7:0] c0_hard_phy_cfg_cfg_addlat;                 \n\twire   [7:0] c0_hard_phy_cfg_cfg_rowaddrwidth;           \n\twire   [7:0] c0_hard_phy_cfg_cfg_csaddrwidth;            \n\twire   [7:0] c0_hard_phy_cfg_cfg_devicewidth;            \n\twire   [7:0] c0_hard_phy_cfg_cfg_interfacewidth;         \n\twire   [7:0] c0_hard_phy_cfg_cfg_tcl;                    \n\twire   [7:0] c0_hard_phy_cfg_cfg_coladdrwidth;           \n\twire  [15:0] c0_hard_phy_cfg_cfg_trefi;                  \n\twire  [23:0] c0_hard_phy_cfg_cfg_dramconfig;             \n\twire   [7:0] c0_hard_phy_cfg_cfg_caswrlat;               \n\twire   [7:0] c0_hard_phy_cfg_cfg_trfc;                   \n\twire   [7:0] c0_hard_phy_cfg_cfg_bankaddrwidth;          \n\twire   [7:0] c0_hard_phy_cfg_cfg_twr;                    \n\twire   [7:0] c0_hard_phy_cfg_cfg_tmrd;                   \n\twire         p0_ctl_clk_clk;                             \n\twire         p0_ctl_reset_reset;                         \n\twire         p0_io_int_io_intaficalsuccess;              \n\twire         p0_io_int_io_intaficalfail;                 \n\twire  [15:0] oct_oct_sharing_parallelterminationcontrol; \n\twire  [15:0] oct_oct_sharing_seriesterminationcontrol;   \n\twire         pll_pll_sharing_pll_mem_phy_clk;            \n\twire         pll_pll_sharing_pll_avl_clk;                \n\twire         pll_pll_sharing_pll_avl_phy_clk;            \n\twire         pll_pll_sharing_afi_phy_clk;                \n\twire         pll_pll_sharing_pll_config_clk;             \n\twire         pll_pll_sharing_pll_addr_cmd_clk;           \n\twire         pll_pll_sharing_pll_mem_clk;                \n\twire         pll_pll_sharing_pll_locked;                 \n\twire         pll_pll_sharing_pll_write_clk_pre_phy_clk;  \n\twire         pll_pll_sharing_pll_write_clk;              \n\twire         p0_dll_clk_clk;                             \n\twire         p0_dll_sharing_dll_pll_locked;              \n\twire   [6:0] dll_dll_sharing_dll_delayctrl;              \n\n\thps_sdram_pll pll (\n\t\t.global_reset_n            (global_reset_n),                            \n\t\t.pll_ref_clk               (pll_ref_clk),                               \n\t\t.afi_clk                   (pll_afi_clk_clk),                           \n\t\t.afi_half_clk              (pll_afi_half_clk_clk),                      \n\t\t.pll_mem_clk               (pll_pll_sharing_pll_mem_clk),               \n\t\t.pll_write_clk             (pll_pll_sharing_pll_write_clk),             \n\t\t.pll_locked                (pll_pll_sharing_pll_locked),                \n\t\t.pll_write_clk_pre_phy_clk (pll_pll_sharing_pll_write_clk_pre_phy_clk), \n\t\t.pll_addr_cmd_clk          (pll_pll_sharing_pll_addr_cmd_clk),          \n\t\t.pll_avl_clk               (pll_pll_sharing_pll_avl_clk),               \n\t\t.pll_config_clk            (pll_pll_sharing_pll_config_clk),            \n\t\t.pll_mem_phy_clk           (pll_pll_sharing_pll_mem_phy_clk),           \n\t\t.afi_phy_clk               (pll_pll_sharing_afi_phy_clk),               \n\t\t.pll_avl_phy_clk           (pll_pll_sharing_pll_avl_phy_clk)            \n\t);\n\n\thps_sdram_p0 p0 (\n\t\t.global_reset_n             (global_reset_n),                                                                                                                                                                            \n\t\t.soft_reset_n               (soft_reset_n),                                                                                                                                                                              \n\t\t.afi_reset_n                (p0_afi_reset_reset),                                                                                                                                                                        \n\t\t.afi_reset_export_n         (),                                                                                                                                                                                          \n\t\t.ctl_reset_n                (p0_ctl_reset_reset),                                                                                                                                                                        \n\t\t.afi_clk                    (pll_afi_clk_clk),                                                                                                                                                                           \n\t\t.afi_half_clk               (pll_afi_half_clk_clk),                                                                                                                                                                      \n\t\t.ctl_clk                    (p0_ctl_clk_clk),                                                                                                                                                                            \n\t\t.avl_clk                    (),                                                                                                                                                                                          \n\t\t.avl_reset_n                (),                                                                                                                                                                                          \n\t\t.scc_clk                    (),                                                                                                                                                                                          \n\t\t.scc_reset_n                (),                                                                                                                                                                                          \n\t\t.avl_address                (),                                                                                                                                                                                          \n\t\t.avl_write                  (),                                                                                                                                                                                          \n\t\t.avl_writedata              (),                                                                                                                                                                                          \n\t\t.avl_read                   (),                                                                                                                                                                                          \n\t\t.avl_readdata               (),                                                                                                                                                                                          \n\t\t.avl_waitrequest            (),                                                                                                                                                                                          \n\t\t.dll_clk                    (p0_dll_clk_clk),                                                                                                                                                                            \n\t\t.afi_addr                   (c0_afi_afi_addr),                                                                                                                                                                           \n\t\t.afi_ba                     (c0_afi_afi_ba),                                                                                                                                                                             \n\t\t.afi_cke                    (c0_afi_afi_cke),                                                                                                                                                                            \n\t\t.afi_cs_n                   (c0_afi_afi_cs_n),                                                                                                                                                                           \n\t\t.afi_ras_n                  (c0_afi_afi_ras_n),                                                                                                                                                                          \n\t\t.afi_we_n                   (c0_afi_afi_we_n),                                                                                                                                                                           \n\t\t.afi_cas_n                  (c0_afi_afi_cas_n),                                                                                                                                                                          \n\t\t.afi_rst_n                  (c0_afi_afi_rst_n),                                                                                                                                                                          \n\t\t.afi_odt                    (c0_afi_afi_odt),                                                                                                                                                                            \n\t\t.afi_dqs_burst              (c0_afi_afi_dqs_burst),                                                                                                                                                                      \n\t\t.afi_wdata_valid            (c0_afi_afi_wdata_valid),                                                                                                                                                                    \n\t\t.afi_wdata                  (c0_afi_afi_wdata),                                                                                                                                                                          \n\t\t.afi_dm                     (c0_afi_afi_dm),                                                                                                                                                                             \n\t\t.afi_rdata                  (p0_afi_afi_rdata),                                                                                                                                                                          \n\t\t.afi_rdata_en               (c0_afi_afi_rdata_en),                                                                                                                                                                       \n\t\t.afi_rdata_en_full          (c0_afi_afi_rdata_en_full),                                                                                                                                                                  \n\t\t.afi_rdata_valid            (p0_afi_afi_rdata_valid),                                                                                                                                                                    \n\t\t.afi_wlat                   (p0_afi_afi_wlat),                                                                                                                                                                           \n\t\t.afi_rlat                   (p0_afi_afi_rlat),                                                                                                                                                                           \n\t\t.afi_cal_success            (p0_afi_afi_cal_success),                                                                                                                                                                    \n\t\t.afi_cal_fail               (p0_afi_afi_cal_fail),                                                                                                                                                                       \n\t\t.scc_data                   (),                                                                                                                                                                                          \n\t\t.scc_dqs_ena                (),                                                                                                                                                                                          \n\t\t.scc_dqs_io_ena             (),                                                                                                                                                                                          \n\t\t.scc_dq_ena                 (),                                                                                                                                                                                          \n\t\t.scc_dm_ena                 (),                                                                                                                                                                                          \n\t\t.capture_strobe_tracking    (),                                                                                                                                                                                          \n\t\t.scc_upd                    (),                                                                                                                                                                                          \n\t\t.cfg_addlat                 (c0_hard_phy_cfg_cfg_addlat),                                                                                                                                                                \n\t\t.cfg_bankaddrwidth          (c0_hard_phy_cfg_cfg_bankaddrwidth),                                                                                                                                                         \n\t\t.cfg_caswrlat               (c0_hard_phy_cfg_cfg_caswrlat),                                                                                                                                                              \n\t\t.cfg_coladdrwidth           (c0_hard_phy_cfg_cfg_coladdrwidth),                                                                                                                                                          \n\t\t.cfg_csaddrwidth            (c0_hard_phy_cfg_cfg_csaddrwidth),                                                                                                                                                           \n\t\t.cfg_devicewidth            (c0_hard_phy_cfg_cfg_devicewidth),                                                                                                                                                           \n\t\t.cfg_dramconfig             (c0_hard_phy_cfg_cfg_dramconfig),                                                                                                                                                            \n\t\t.cfg_interfacewidth         (c0_hard_phy_cfg_cfg_interfacewidth),                                                                                                                                                        \n\t\t.cfg_rowaddrwidth           (c0_hard_phy_cfg_cfg_rowaddrwidth),                                                                                                                                                          \n\t\t.cfg_tcl                    (c0_hard_phy_cfg_cfg_tcl),                                                                                                                                                                   \n\t\t.cfg_tmrd                   (c0_hard_phy_cfg_cfg_tmrd),                                                                                                                                                                  \n\t\t.cfg_trefi                  (c0_hard_phy_cfg_cfg_trefi),                                                                                                                                                                 \n\t\t.cfg_trfc                   (c0_hard_phy_cfg_cfg_trfc),                                                                                                                                                                  \n\t\t.cfg_twr                    (c0_hard_phy_cfg_cfg_twr),                                                                                                                                                                   \n\t\t.afi_mem_clk_disable        (c0_afi_afi_mem_clk_disable),                                                                                                                                                                \n\t\t.pll_mem_clk                (pll_pll_sharing_pll_mem_clk),                                                                                                                                                               \n\t\t.pll_write_clk              (pll_pll_sharing_pll_write_clk),                                                                                                                                                             \n\t\t.pll_locked                 (pll_pll_sharing_pll_locked),                                                                                                                                                                \n\t\t.pll_write_clk_pre_phy_clk  (pll_pll_sharing_pll_write_clk_pre_phy_clk),                                                                                                                                                 \n\t\t.pll_addr_cmd_clk           (pll_pll_sharing_pll_addr_cmd_clk),                                                                                                                                                          \n\t\t.pll_avl_clk                (pll_pll_sharing_pll_avl_clk),                                                                                                                                                               \n\t\t.pll_config_clk             (pll_pll_sharing_pll_config_clk),                                                                                                                                                            \n\t\t.pll_mem_phy_clk            (pll_pll_sharing_pll_mem_phy_clk),                                                                                                                                                           \n\t\t.afi_phy_clk                (pll_pll_sharing_afi_phy_clk),                                                                                                                                                               \n\t\t.pll_avl_phy_clk            (pll_pll_sharing_pll_avl_phy_clk),                                                                                                                                                           \n\t\t.dll_pll_locked             (p0_dll_sharing_dll_pll_locked),                                                                                                                                                             \n\t\t.dll_delayctrl              (dll_dll_sharing_dll_delayctrl),                                                                                                                                                             \n\t\t.seriesterminationcontrol   (oct_oct_sharing_seriesterminationcontrol),                                                                                                                                                  \n\t\t.parallelterminationcontrol (oct_oct_sharing_parallelterminationcontrol),                                                                                                                                                \n\t\t.mem_a                      (mem_a),                                                                                                                                                                                     \n\t\t.mem_ba                     (mem_ba),                                                                                                                                                                                    \n\t\t.mem_ck                     (mem_ck),                                                                                                                                                                                    \n\t\t.mem_ck_n                   (mem_ck_n),                                                                                                                                                                                  \n\t\t.mem_cke                    (mem_cke),                                                                                                                                                                                   \n\t\t.mem_cs_n                   (mem_cs_n),                                                                                                                                                                                  \n\t\t.mem_dm                     (mem_dm),                                                                                                                                                                                    \n\t\t.mem_ras_n                  (mem_ras_n),                                                                                                                                                                                 \n\t\t.mem_cas_n                  (mem_cas_n),                                                                                                                                                                                 \n\t\t.mem_we_n                   (mem_we_n),                                                                                                                                                                                  \n\t\t.mem_reset_n                (mem_reset_n),                                                                                                                                                                               \n\t\t.mem_dq                     (mem_dq),                                                                                                                                                                                    \n\t\t.mem_dqs                    (mem_dqs),                                                                                                                                                                                   \n\t\t.mem_dqs_n                  (mem_dqs_n),                                                                                                                                                                                 \n\t\t.mem_odt                    (mem_odt),                                                                                                                                                                                   \n\t\t.io_intaficalfail           (p0_io_int_io_intaficalfail),                                                                                                                                                                \n\t\t.io_intaficalsuccess        (p0_io_int_io_intaficalsuccess),                                                                                                                                                             \n\t\t.csr_soft_reset_req         (1'b0),                                                                                                                                                                                      \n\t\t.io_intaddrdout             (64'b0000000000000000000000000000000000000000000000000000000000000000),                                                                                                                      \n\t\t.io_intbadout               (12'b000000000000),                                                                                                                                                                          \n\t\t.io_intcasndout             (4'b0000),                                                                                                                                                                                   \n\t\t.io_intckdout               (4'b0000),                                                                                                                                                                                   \n\t\t.io_intckedout              (8'b00000000),                                                                                                                                                                               \n\t\t.io_intckndout              (4'b0000),                                                                                                                                                                                   \n\t\t.io_intcsndout              (8'b00000000),                                                                                                                                                                               \n\t\t.io_intdmdout               (20'b00000000000000000000),                                                                                                                                                                  \n\t\t.io_intdqdin                (),                                                                                                                                                                                          \n\t\t.io_intdqdout               (180'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000), \n\t\t.io_intdqoe                 (90'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000),                                                                                            \n\t\t.io_intdqsbdout             (20'b00000000000000000000),                                                                                                                                                                  \n\t\t.io_intdqsboe               (10'b0000000000),                                                                                                                                                                            \n\t\t.io_intdqsdout              (20'b00000000000000000000),                                                                                                                                                                  \n\t\t.io_intdqslogicdqsena       (10'b0000000000),                                                                                                                                                                            \n\t\t.io_intdqslogicfiforeset    (5'b00000),                                                                                                                                                                                  \n\t\t.io_intdqslogicincrdataen   (10'b0000000000),                                                                                                                                                                            \n\t\t.io_intdqslogicincwrptr     (10'b0000000000),                                                                                                                                                                            \n\t\t.io_intdqslogicoct          (10'b0000000000),                                                                                                                                                                            \n\t\t.io_intdqslogicrdatavalid   (),                                                                                                                                                                                          \n\t\t.io_intdqslogicreadlatency  (25'b0000000000000000000000000),                                                                                                                                                             \n\t\t.io_intdqsoe                (10'b0000000000),                                                                                                                                                                            \n\t\t.io_intodtdout              (8'b00000000),                                                                                                                                                                               \n\t\t.io_intrasndout             (4'b0000),                                                                                                                                                                                   \n\t\t.io_intresetndout           (4'b0000),                                                                                                                                                                                   \n\t\t.io_intwendout              (4'b0000),                                                                                                                                                                                   \n\t\t.io_intafirlat              (),                                                                                                                                                                                          \n\t\t.io_intafiwlat              ()                                                                                                                                                                                           \n\t);\n\n\taltera_mem_if_hhp_qseq_synth_top #(\n\t\t.MEM_IF_DM_WIDTH  (4),\n\t\t.MEM_IF_DQS_WIDTH (4),\n\t\t.MEM_IF_CS_WIDTH  (1),\n\t\t.MEM_IF_DQ_WIDTH  (32)\n\t) seq (\n\t);\n\n\taltera_mem_if_hard_memory_controller_top_cyclonev #(\n\t\t.MEM_IF_DQS_WIDTH                        (4),\n\t\t.MEM_IF_CS_WIDTH                         (1),\n\t\t.MEM_IF_CHIP_BITS                        (1),\n\t\t.MEM_IF_CLK_PAIR_COUNT                   (1),\n\t\t.CSR_ADDR_WIDTH                          (10),\n\t\t.CSR_DATA_WIDTH                          (8),\n\t\t.CSR_BE_WIDTH                            (1),\n\t\t.AVL_ADDR_WIDTH                          (27),\n\t\t.AVL_DATA_WIDTH                          (64),\n\t\t.AVL_SIZE_WIDTH                          (3),\n\t\t.AVL_DATA_WIDTH_PORT_0                   (1),\n\t\t.AVL_ADDR_WIDTH_PORT_0                   (1),\n\t\t.AVL_NUM_SYMBOLS_PORT_0                  (1),\n\t\t.LSB_WFIFO_PORT_0                        (5),\n\t\t.MSB_WFIFO_PORT_0                        (5),\n\t\t.LSB_RFIFO_PORT_0                        (5),\n\t\t.MSB_RFIFO_PORT_0                        (5),\n\t\t.AVL_DATA_WIDTH_PORT_1                   (1),\n\t\t.AVL_ADDR_WIDTH_PORT_1                   (1),\n\t\t.AVL_NUM_SYMBOLS_PORT_1                  (1),\n\t\t.LSB_WFIFO_PORT_1                        (5),\n\t\t.MSB_WFIFO_PORT_1                        (5),\n\t\t.LSB_RFIFO_PORT_1                        (5),\n\t\t.MSB_RFIFO_PORT_1                        (5),\n\t\t.AVL_DATA_WIDTH_PORT_2                   (1),\n\t\t.AVL_ADDR_WIDTH_PORT_2                   (1),\n\t\t.AVL_NUM_SYMBOLS_PORT_2                  (1),\n\t\t.LSB_WFIFO_PORT_2                        (5),\n\t\t.MSB_WFIFO_PORT_2                        (5),\n\t\t.LSB_RFIFO_PORT_2                        (5),\n\t\t.MSB_RFIFO_PORT_2                        (5),\n\t\t.AVL_DATA_WIDTH_PORT_3                   (1),\n\t\t.AVL_ADDR_WIDTH_PORT_3                   (1),\n\t\t.AVL_NUM_SYMBOLS_PORT_3                  (1),\n\t\t.LSB_WFIFO_PORT_3                        (5),\n\t\t.MSB_WFIFO_PORT_3                        (5),\n\t\t.LSB_RFIFO_PORT_3                        (5),\n\t\t.MSB_RFIFO_PORT_3                        (5),\n\t\t.AVL_DATA_WIDTH_PORT_4                   (1),\n\t\t.AVL_ADDR_WIDTH_PORT_4                   (1),\n\t\t.AVL_NUM_SYMBOLS_PORT_4                  (1),\n\t\t.LSB_WFIFO_PORT_4                        (5),\n\t\t.MSB_WFIFO_PORT_4                        (5),\n\t\t.LSB_RFIFO_PORT_4                        (5),\n\t\t.MSB_RFIFO_PORT_4                        (5),\n\t\t.AVL_DATA_WIDTH_PORT_5                   (1),\n\t\t.AVL_ADDR_WIDTH_PORT_5                   (1),\n\t\t.AVL_NUM_SYMBOLS_PORT_5                  (1),\n\t\t.LSB_WFIFO_PORT_5                        (5),\n\t\t.MSB_WFIFO_PORT_5                        (5),\n\t\t.LSB_RFIFO_PORT_5                        (5),\n\t\t.MSB_RFIFO_PORT_5                        (5),\n\t\t.ENUM_ATTR_COUNTER_ONE_RESET             (\"DISABLED\"),\n\t\t.ENUM_ATTR_COUNTER_ZERO_RESET            (\"DISABLED\"),\n\t\t.ENUM_ATTR_STATIC_CONFIG_VALID           (\"DISABLED\"),\n\t\t.ENUM_AUTO_PCH_ENABLE_0                  (\"DISABLED\"),\n\t\t.ENUM_AUTO_PCH_ENABLE_1                  (\"DISABLED\"),\n\t\t.ENUM_AUTO_PCH_ENABLE_2                  (\"DISABLED\"),\n\t\t.ENUM_AUTO_PCH_ENABLE_3                  (\"DISABLED\"),\n\t\t.ENUM_AUTO_PCH_ENABLE_4                  (\"DISABLED\"),\n\t\t.ENUM_AUTO_PCH_ENABLE_5                  (\"DISABLED\"),\n\t\t.ENUM_CAL_REQ                            (\"DISABLED\"),\n\t\t.ENUM_CFG_BURST_LENGTH                   (\"BL_8\"),\n\t\t.ENUM_CFG_INTERFACE_WIDTH                (\"DWIDTH_32\"),\n\t\t.ENUM_CFG_SELF_RFSH_EXIT_CYCLES          (\"SELF_RFSH_EXIT_CYCLES_512\"),\n\t\t.ENUM_CFG_STARVE_LIMIT                   (\"STARVE_LIMIT_10\"),\n\t\t.ENUM_CFG_TYPE                           (\"DDR3\"),\n\t\t.ENUM_CLOCK_OFF_0                        (\"DISABLED\"),\n\t\t.ENUM_CLOCK_OFF_1                        (\"DISABLED\"),\n\t\t.ENUM_CLOCK_OFF_2                        (\"DISABLED\"),\n\t\t.ENUM_CLOCK_OFF_3                        (\"DISABLED\"),\n\t\t.ENUM_CLOCK_OFF_4                        (\"DISABLED\"),\n\t\t.ENUM_CLOCK_OFF_5                        (\"DISABLED\"),\n\t\t.ENUM_CLR_INTR                           (\"NO_CLR_INTR\"),\n\t\t.ENUM_CMD_PORT_IN_USE_0                  (\"FALSE\"),\n\t\t.ENUM_CMD_PORT_IN_USE_1                  (\"FALSE\"),\n\t\t.ENUM_CMD_PORT_IN_USE_2                  (\"FALSE\"),\n\t\t.ENUM_CMD_PORT_IN_USE_3                  (\"FALSE\"),\n\t\t.ENUM_CMD_PORT_IN_USE_4                  (\"FALSE\"),\n\t\t.ENUM_CMD_PORT_IN_USE_5                  (\"FALSE\"),\n\t\t.ENUM_CPORT0_RDY_ALMOST_FULL             (\"NOT_FULL\"),\n\t\t.ENUM_CPORT0_RFIFO_MAP                   (\"FIFO_0\"),\n\t\t.ENUM_CPORT0_TYPE                        (\"DISABLE\"),\n\t\t.ENUM_CPORT0_WFIFO_MAP                   (\"FIFO_0\"),\n\t\t.ENUM_CPORT1_RDY_ALMOST_FULL             (\"NOT_FULL\"),\n\t\t.ENUM_CPORT1_RFIFO_MAP                   (\"FIFO_0\"),\n\t\t.ENUM_CPORT1_TYPE                        (\"DISABLE\"),\n\t\t.ENUM_CPORT1_WFIFO_MAP                   (\"FIFO_0\"),\n\t\t.ENUM_CPORT2_RDY_ALMOST_FULL             (\"NOT_FULL\"),\n\t\t.ENUM_CPORT2_RFIFO_MAP                   (\"FIFO_0\"),\n\t\t.ENUM_CPORT2_TYPE                        (\"DISABLE\"),\n\t\t.ENUM_CPORT2_WFIFO_MAP                   (\"FIFO_0\"),\n\t\t.ENUM_CPORT3_RDY_ALMOST_FULL             (\"NOT_FULL\"),\n\t\t.ENUM_CPORT3_RFIFO_MAP                   (\"FIFO_0\"),\n\t\t.ENUM_CPORT3_TYPE                        (\"DISABLE\"),\n\t\t.ENUM_CPORT3_WFIFO_MAP                   (\"FIFO_0\"),\n\t\t.ENUM_CPORT4_RDY_ALMOST_FULL             (\"NOT_FULL\"),\n\t\t.ENUM_CPORT4_RFIFO_MAP                   (\"FIFO_0\"),\n\t\t.ENUM_CPORT4_TYPE                        (\"DISABLE\"),\n\t\t.ENUM_CPORT4_WFIFO_MAP                   (\"FIFO_0\"),\n\t\t.ENUM_CPORT5_RDY_ALMOST_FULL             (\"NOT_FULL\"),\n\t\t.ENUM_CPORT5_RFIFO_MAP                   (\"FIFO_0\"),\n\t\t.ENUM_CPORT5_TYPE                        (\"DISABLE\"),\n\t\t.ENUM_CPORT5_WFIFO_MAP                   (\"FIFO_0\"),\n\t\t.ENUM_CTL_ADDR_ORDER                     (\"CHIP_ROW_BANK_COL\"),\n\t\t.ENUM_CTL_ECC_ENABLED                    (\"CTL_ECC_DISABLED\"),\n\t\t.ENUM_CTL_ECC_RMW_ENABLED                (\"CTL_ECC_RMW_DISABLED\"),\n\t\t.ENUM_CTL_REGDIMM_ENABLED                (\"REGDIMM_DISABLED\"),\n\t\t.ENUM_CTL_USR_REFRESH                    (\"CTL_USR_REFRESH_DISABLED\"),\n\t\t.ENUM_CTRL_WIDTH                         (\"DATA_WIDTH_64_BIT\"),\n\t\t.ENUM_DELAY_BONDING                      (\"BONDING_LATENCY_0\"),\n\t\t.ENUM_DFX_BYPASS_ENABLE                  (\"DFX_BYPASS_DISABLED\"),\n\t\t.ENUM_DISABLE_MERGING                    (\"MERGING_ENABLED\"),\n\t\t.ENUM_ECC_DQ_WIDTH                       (\"ECC_DQ_WIDTH_0\"),\n\t\t.ENUM_ENABLE_ATPG                        (\"DISABLED\"),\n\t\t.ENUM_ENABLE_BONDING_0                   (\"DISABLED\"),\n\t\t.ENUM_ENABLE_BONDING_1                   (\"DISABLED\"),\n\t\t.ENUM_ENABLE_BONDING_2                   (\"DISABLED\"),\n\t\t.ENUM_ENABLE_BONDING_3                   (\"DISABLED\"),\n\t\t.ENUM_ENABLE_BONDING_4                   (\"DISABLED\"),\n\t\t.ENUM_ENABLE_BONDING_5                   (\"DISABLED\"),\n\t\t.ENUM_ENABLE_BONDING_WRAPBACK            (\"DISABLED\"),\n\t\t.ENUM_ENABLE_DQS_TRACKING                (\"ENABLED\"),\n\t\t.ENUM_ENABLE_ECC_CODE_OVERWRITES         (\"DISABLED\"),\n\t\t.ENUM_ENABLE_FAST_EXIT_PPD               (\"DISABLED\"),\n\t\t.ENUM_ENABLE_INTR                        (\"DISABLED\"),\n\t\t.ENUM_ENABLE_NO_DM                       (\"DISABLED\"),\n\t\t.ENUM_ENABLE_PIPELINEGLOBAL              (\"DISABLED\"),\n\t\t.ENUM_GANGED_ARF                         (\"DISABLED\"),\n\t\t.ENUM_GEN_DBE                            (\"GEN_DBE_DISABLED\"),\n\t\t.ENUM_GEN_SBE                            (\"GEN_SBE_DISABLED\"),\n\t\t.ENUM_INC_SYNC                           (\"FIFO_SET_2\"),\n\t\t.ENUM_LOCAL_IF_CS_WIDTH                  (\"ADDR_WIDTH_0\"),\n\t\t.ENUM_MASK_CORR_DROPPED_INTR             (\"DISABLED\"),\n\t\t.ENUM_MASK_DBE_INTR                      (\"DISABLED\"),\n\t\t.ENUM_MASK_SBE_INTR                      (\"DISABLED\"),\n\t\t.ENUM_MEM_IF_AL                          (\"AL_0\"),\n\t\t.ENUM_MEM_IF_BANKADDR_WIDTH              (\"ADDR_WIDTH_3\"),\n\t\t.ENUM_MEM_IF_BURSTLENGTH                 (\"MEM_IF_BURSTLENGTH_8\"),\n\t\t.ENUM_MEM_IF_COLADDR_WIDTH               (\"ADDR_WIDTH_10\"),\n\t\t.ENUM_MEM_IF_CS_PER_RANK                 (\"MEM_IF_CS_PER_RANK_1\"),\n\t\t.ENUM_MEM_IF_CS_WIDTH                    (\"MEM_IF_CS_WIDTH_1\"),\n\t\t.ENUM_MEM_IF_DQ_PER_CHIP                 (\"MEM_IF_DQ_PER_CHIP_8\"),\n\t\t.ENUM_MEM_IF_DQS_WIDTH                   (\"DQS_WIDTH_4\"),\n\t\t.ENUM_MEM_IF_DWIDTH                      (\"MEM_IF_DWIDTH_32\"),\n\t\t.ENUM_MEM_IF_MEMTYPE                     (\"DDR3_SDRAM\"),\n\t\t.ENUM_MEM_IF_ROWADDR_WIDTH               (\"ADDR_WIDTH_15\"),\n\t\t.ENUM_MEM_IF_SPEEDBIN                    (\"DDR3_1600_8_8_8\"),\n\t\t.ENUM_MEM_IF_TCCD                        (\"TCCD_4\"),\n\t\t.ENUM_MEM_IF_TCL                         (\"TCL_11\"),\n\t\t.ENUM_MEM_IF_TCWL                        (\"TCWL_8\"),\n\t\t.ENUM_MEM_IF_TFAW                        (\"TFAW_12\"),\n\t\t.ENUM_MEM_IF_TMRD                        (\"TMRD_4\"),\n\t\t.ENUM_MEM_IF_TRAS                        (\"TRAS_14\"),\n\t\t.ENUM_MEM_IF_TRC                         (\"TRC_20\"),\n\t\t.ENUM_MEM_IF_TRCD                        (\"TRCD_6\"),\n\t\t.ENUM_MEM_IF_TRP                         (\"TRP_6\"),\n\t\t.ENUM_MEM_IF_TRRD                        (\"TRRD_3\"),\n\t\t.ENUM_MEM_IF_TRTP                        (\"TRTP_3\"),\n\t\t.ENUM_MEM_IF_TWR                         (\"TWR_6\"),\n\t\t.ENUM_MEM_IF_TWTR                        (\"TWTR_4\"),\n\t\t.ENUM_MMR_CFG_MEM_BL                     (\"MP_BL_8\"),\n\t\t.ENUM_OUTPUT_REGD                        (\"DISABLED\"),\n\t\t.ENUM_PDN_EXIT_CYCLES                    (\"SLOW_EXIT\"),\n\t\t.ENUM_PORT0_WIDTH                        (\"PORT_32_BIT\"),\n\t\t.ENUM_PORT1_WIDTH                        (\"PORT_32_BIT\"),\n\t\t.ENUM_PORT2_WIDTH                        (\"PORT_32_BIT\"),\n\t\t.ENUM_PORT3_WIDTH                        (\"PORT_32_BIT\"),\n\t\t.ENUM_PORT4_WIDTH                        (\"PORT_32_BIT\"),\n\t\t.ENUM_PORT5_WIDTH                        (\"PORT_32_BIT\"),\n\t\t.ENUM_PRIORITY_0_0                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_0_1                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_0_2                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_0_3                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_0_4                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_0_5                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_1_0                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_1_1                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_1_2                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_1_3                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_1_4                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_1_5                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_2_0                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_2_1                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_2_2                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_2_3                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_2_4                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_2_5                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_3_0                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_3_1                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_3_2                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_3_3                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_3_4                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_3_5                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_4_0                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_4_1                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_4_2                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_4_3                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_4_4                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_4_5                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_5_0                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_5_1                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_5_2                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_5_3                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_5_4                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_5_5                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_6_0                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_6_1                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_6_2                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_6_3                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_6_4                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_6_5                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_7_0                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_7_1                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_7_2                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_7_3                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_7_4                       (\"WEIGHT_0\"),\n\t\t.ENUM_PRIORITY_7_5                       (\"WEIGHT_0\"),\n\t\t.ENUM_RCFG_STATIC_WEIGHT_0               (\"WEIGHT_0\"),\n\t\t.ENUM_RCFG_STATIC_WEIGHT_1               (\"WEIGHT_0\"),\n\t\t.ENUM_RCFG_STATIC_WEIGHT_2               (\"WEIGHT_0\"),\n\t\t.ENUM_RCFG_STATIC_WEIGHT_3               (\"WEIGHT_0\"),\n\t\t.ENUM_RCFG_STATIC_WEIGHT_4               (\"WEIGHT_0\"),\n\t\t.ENUM_RCFG_STATIC_WEIGHT_5               (\"WEIGHT_0\"),\n\t\t.ENUM_RCFG_USER_PRIORITY_0               (\"PRIORITY_1\"),\n\t\t.ENUM_RCFG_USER_PRIORITY_1               (\"PRIORITY_1\"),\n\t\t.ENUM_RCFG_USER_PRIORITY_2               (\"PRIORITY_1\"),\n\t\t.ENUM_RCFG_USER_PRIORITY_3               (\"PRIORITY_1\"),\n\t\t.ENUM_RCFG_USER_PRIORITY_4               (\"PRIORITY_1\"),\n\t\t.ENUM_RCFG_USER_PRIORITY_5               (\"PRIORITY_1\"),\n\t\t.ENUM_RD_DWIDTH_0                        (\"DWIDTH_0\"),\n\t\t.ENUM_RD_DWIDTH_1                        (\"DWIDTH_0\"),\n\t\t.ENUM_RD_DWIDTH_2                        (\"DWIDTH_0\"),\n\t\t.ENUM_RD_DWIDTH_3                        (\"DWIDTH_0\"),\n\t\t.ENUM_RD_DWIDTH_4                        (\"DWIDTH_0\"),\n\t\t.ENUM_RD_DWIDTH_5                        (\"DWIDTH_0\"),\n\t\t.ENUM_RD_FIFO_IN_USE_0                   (\"FALSE\"),\n\t\t.ENUM_RD_FIFO_IN_USE_1                   (\"FALSE\"),\n\t\t.ENUM_RD_FIFO_IN_USE_2                   (\"FALSE\"),\n\t\t.ENUM_RD_FIFO_IN_USE_3                   (\"FALSE\"),\n\t\t.ENUM_RD_PORT_INFO_0                     (\"USE_NO\"),\n\t\t.ENUM_RD_PORT_INFO_1                     (\"USE_NO\"),\n\t\t.ENUM_RD_PORT_INFO_2                     (\"USE_NO\"),\n\t\t.ENUM_RD_PORT_INFO_3                     (\"USE_NO\"),\n\t\t.ENUM_RD_PORT_INFO_4                     (\"USE_NO\"),\n\t\t.ENUM_RD_PORT_INFO_5                     (\"USE_NO\"),\n\t\t.ENUM_READ_ODT_CHIP                      (\"ODT_DISABLED\"),\n\t\t.ENUM_REORDER_DATA                       (\"DATA_REORDERING\"),\n\t\t.ENUM_RFIFO0_CPORT_MAP                   (\"CMD_PORT_0\"),\n\t\t.ENUM_RFIFO1_CPORT_MAP                   (\"CMD_PORT_0\"),\n\t\t.ENUM_RFIFO2_CPORT_MAP                   (\"CMD_PORT_0\"),\n\t\t.ENUM_RFIFO3_CPORT_MAP                   (\"CMD_PORT_0\"),\n\t\t.ENUM_SINGLE_READY_0                     (\"CONCATENATE_RDY\"),\n\t\t.ENUM_SINGLE_READY_1                     (\"CONCATENATE_RDY\"),\n\t\t.ENUM_SINGLE_READY_2                     (\"CONCATENATE_RDY\"),\n\t\t.ENUM_SINGLE_READY_3                     (\"CONCATENATE_RDY\"),\n\t\t.ENUM_STATIC_WEIGHT_0                    (\"WEIGHT_0\"),\n\t\t.ENUM_STATIC_WEIGHT_1                    (\"WEIGHT_0\"),\n\t\t.ENUM_STATIC_WEIGHT_2                    (\"WEIGHT_0\"),\n\t\t.ENUM_STATIC_WEIGHT_3                    (\"WEIGHT_0\"),\n\t\t.ENUM_STATIC_WEIGHT_4                    (\"WEIGHT_0\"),\n\t\t.ENUM_STATIC_WEIGHT_5                    (\"WEIGHT_0\"),\n\t\t.ENUM_SYNC_MODE_0                        (\"ASYNCHRONOUS\"),\n\t\t.ENUM_SYNC_MODE_1                        (\"ASYNCHRONOUS\"),\n\t\t.ENUM_SYNC_MODE_2                        (\"ASYNCHRONOUS\"),\n\t\t.ENUM_SYNC_MODE_3                        (\"ASYNCHRONOUS\"),\n\t\t.ENUM_SYNC_MODE_4                        (\"ASYNCHRONOUS\"),\n\t\t.ENUM_SYNC_MODE_5                        (\"ASYNCHRONOUS\"),\n\t\t.ENUM_TEST_MODE                          (\"NORMAL_MODE\"),\n\t\t.ENUM_THLD_JAR1_0                        (\"THRESHOLD_32\"),\n\t\t.ENUM_THLD_JAR1_1                        (\"THRESHOLD_32\"),\n\t\t.ENUM_THLD_JAR1_2                        (\"THRESHOLD_32\"),\n\t\t.ENUM_THLD_JAR1_3                        (\"THRESHOLD_32\"),\n\t\t.ENUM_THLD_JAR1_4                        (\"THRESHOLD_32\"),\n\t\t.ENUM_THLD_JAR1_5                        (\"THRESHOLD_32\"),\n\t\t.ENUM_THLD_JAR2_0                        (\"THRESHOLD_16\"),\n\t\t.ENUM_THLD_JAR2_1                        (\"THRESHOLD_16\"),\n\t\t.ENUM_THLD_JAR2_2                        (\"THRESHOLD_16\"),\n\t\t.ENUM_THLD_JAR2_3                        (\"THRESHOLD_16\"),\n\t\t.ENUM_THLD_JAR2_4                        (\"THRESHOLD_16\"),\n\t\t.ENUM_THLD_JAR2_5                        (\"THRESHOLD_16\"),\n\t\t.ENUM_USE_ALMOST_EMPTY_0                 (\"EMPTY\"),\n\t\t.ENUM_USE_ALMOST_EMPTY_1                 (\"EMPTY\"),\n\t\t.ENUM_USE_ALMOST_EMPTY_2                 (\"EMPTY\"),\n\t\t.ENUM_USE_ALMOST_EMPTY_3                 (\"EMPTY\"),\n\t\t.ENUM_USER_ECC_EN                        (\"DISABLE\"),\n\t\t.ENUM_USER_PRIORITY_0                    (\"PRIORITY_1\"),\n\t\t.ENUM_USER_PRIORITY_1                    (\"PRIORITY_1\"),\n\t\t.ENUM_USER_PRIORITY_2                    (\"PRIORITY_1\"),\n\t\t.ENUM_USER_PRIORITY_3                    (\"PRIORITY_1\"),\n\t\t.ENUM_USER_PRIORITY_4                    (\"PRIORITY_1\"),\n\t\t.ENUM_USER_PRIORITY_5                    (\"PRIORITY_1\"),\n\t\t.ENUM_WFIFO0_CPORT_MAP                   (\"CMD_PORT_0\"),\n\t\t.ENUM_WFIFO0_RDY_ALMOST_FULL             (\"NOT_FULL\"),\n\t\t.ENUM_WFIFO1_CPORT_MAP                   (\"CMD_PORT_0\"),\n\t\t.ENUM_WFIFO1_RDY_ALMOST_FULL             (\"NOT_FULL\"),\n\t\t.ENUM_WFIFO2_CPORT_MAP                   (\"CMD_PORT_0\"),\n\t\t.ENUM_WFIFO2_RDY_ALMOST_FULL             (\"NOT_FULL\"),\n\t\t.ENUM_WFIFO3_CPORT_MAP                   (\"CMD_PORT_0\"),\n\t\t.ENUM_WFIFO3_RDY_ALMOST_FULL             (\"NOT_FULL\"),\n\t\t.ENUM_WR_DWIDTH_0                        (\"DWIDTH_0\"),\n\t\t.ENUM_WR_DWIDTH_1                        (\"DWIDTH_0\"),\n\t\t.ENUM_WR_DWIDTH_2                        (\"DWIDTH_0\"),\n\t\t.ENUM_WR_DWIDTH_3                        (\"DWIDTH_0\"),\n\t\t.ENUM_WR_DWIDTH_4                        (\"DWIDTH_0\"),\n\t\t.ENUM_WR_DWIDTH_5                        (\"DWIDTH_0\"),\n\t\t.ENUM_WR_FIFO_IN_USE_0                   (\"FALSE\"),\n\t\t.ENUM_WR_FIFO_IN_USE_1                   (\"FALSE\"),\n\t\t.ENUM_WR_FIFO_IN_USE_2                   (\"FALSE\"),\n\t\t.ENUM_WR_FIFO_IN_USE_3                   (\"FALSE\"),\n\t\t.ENUM_WR_PORT_INFO_0                     (\"USE_NO\"),\n\t\t.ENUM_WR_PORT_INFO_1                     (\"USE_NO\"),\n\t\t.ENUM_WR_PORT_INFO_2                     (\"USE_NO\"),\n\t\t.ENUM_WR_PORT_INFO_3                     (\"USE_NO\"),\n\t\t.ENUM_WR_PORT_INFO_4                     (\"USE_NO\"),\n\t\t.ENUM_WR_PORT_INFO_5                     (\"USE_NO\"),\n\t\t.ENUM_WRITE_ODT_CHIP                     (\"WRITE_CHIP0_ODT0_CHIP1\"),\n\t\t.INTG_MEM_AUTO_PD_CYCLES                 (0),\n\t\t.INTG_CYC_TO_RLD_JARS_0                  (1),\n\t\t.INTG_CYC_TO_RLD_JARS_1                  (1),\n\t\t.INTG_CYC_TO_RLD_JARS_2                  (1),\n\t\t.INTG_CYC_TO_RLD_JARS_3                  (1),\n\t\t.INTG_CYC_TO_RLD_JARS_4                  (1),\n\t\t.INTG_CYC_TO_RLD_JARS_5                  (1),\n\t\t.INTG_EXTRA_CTL_CLK_ACT_TO_ACT           (0),\n\t\t.INTG_EXTRA_CTL_CLK_ACT_TO_ACT_DIFF_BANK (0),\n\t\t.INTG_EXTRA_CTL_CLK_ACT_TO_PCH           (0),\n\t\t.INTG_EXTRA_CTL_CLK_ACT_TO_RDWR          (0),\n\t\t.INTG_EXTRA_CTL_CLK_ARF_PERIOD           (0),\n\t\t.INTG_EXTRA_CTL_CLK_ARF_TO_VALID         (0),\n\t\t.INTG_EXTRA_CTL_CLK_FOUR_ACT_TO_ACT      (0),\n\t\t.INTG_EXTRA_CTL_CLK_PCH_ALL_TO_VALID     (0),\n\t\t.INTG_EXTRA_CTL_CLK_PCH_TO_VALID         (0),\n\t\t.INTG_EXTRA_CTL_CLK_PDN_PERIOD           (0),\n\t\t.INTG_EXTRA_CTL_CLK_PDN_TO_VALID         (0),\n\t\t.INTG_EXTRA_CTL_CLK_RD_AP_TO_VALID       (0),\n\t\t.INTG_EXTRA_CTL_CLK_RD_TO_PCH            (0),\n\t\t.INTG_EXTRA_CTL_CLK_RD_TO_RD             (0),\n\t\t.INTG_EXTRA_CTL_CLK_RD_TO_RD_DIFF_CHIP   (0),\n\t\t.INTG_EXTRA_CTL_CLK_RD_TO_WR             (2),\n\t\t.INTG_EXTRA_CTL_CLK_RD_TO_WR_BC          (2),\n\t\t.INTG_EXTRA_CTL_CLK_RD_TO_WR_DIFF_CHIP   (2),\n\t\t.INTG_EXTRA_CTL_CLK_SRF_TO_VALID         (0),\n\t\t.INTG_EXTRA_CTL_CLK_SRF_TO_ZQ_CAL        (0),\n\t\t.INTG_EXTRA_CTL_CLK_WR_AP_TO_VALID       (0),\n\t\t.INTG_EXTRA_CTL_CLK_WR_TO_PCH            (0),\n\t\t.INTG_EXTRA_CTL_CLK_WR_TO_RD             (3),\n\t\t.INTG_EXTRA_CTL_CLK_WR_TO_RD_BC          (3),\n\t\t.INTG_EXTRA_CTL_CLK_WR_TO_RD_DIFF_CHIP   (3),\n\t\t.INTG_EXTRA_CTL_CLK_WR_TO_WR             (0),\n\t\t.INTG_EXTRA_CTL_CLK_WR_TO_WR_DIFF_CHIP   (0),\n\t\t.INTG_MEM_IF_TREFI                       (3120),\n\t\t.INTG_MEM_IF_TRFC                        (104),\n\t\t.INTG_RCFG_SUM_WT_PRIORITY_0             (0),\n\t\t.INTG_RCFG_SUM_WT_PRIORITY_1             (0),\n\t\t.INTG_RCFG_SUM_WT_PRIORITY_2             (0),\n\t\t.INTG_RCFG_SUM_WT_PRIORITY_3             (0),\n\t\t.INTG_RCFG_SUM_WT_PRIORITY_4             (0),\n\t\t.INTG_RCFG_SUM_WT_PRIORITY_5             (0),\n\t\t.INTG_RCFG_SUM_WT_PRIORITY_6             (0),\n\t\t.INTG_RCFG_SUM_WT_PRIORITY_7             (0),\n\t\t.INTG_SUM_WT_PRIORITY_0                  (0),\n\t\t.INTG_SUM_WT_PRIORITY_1                  (0),\n\t\t.INTG_SUM_WT_PRIORITY_2                  (0),\n\t\t.INTG_SUM_WT_PRIORITY_3                  (0),\n\t\t.INTG_SUM_WT_PRIORITY_4                  (0),\n\t\t.INTG_SUM_WT_PRIORITY_5                  (0),\n\t\t.INTG_SUM_WT_PRIORITY_6                  (0),\n\t\t.INTG_SUM_WT_PRIORITY_7                  (0),\n\t\t.INTG_POWER_SAVING_EXIT_CYCLES           (5),\n\t\t.INTG_MEM_CLK_ENTRY_CYCLES               (10),\n\t\t.ENUM_ENABLE_BURST_INTERRUPT             (\"DISABLED\"),\n\t\t.ENUM_ENABLE_BURST_TERMINATE             (\"DISABLED\"),\n\t\t.AFI_RATE_RATIO                          (1),\n\t\t.AFI_ADDR_WIDTH                          (15),\n\t\t.AFI_BANKADDR_WIDTH                      (3),\n\t\t.AFI_CONTROL_WIDTH                       (1),\n\t\t.AFI_CS_WIDTH                            (1),\n\t\t.AFI_DM_WIDTH                            (8),\n\t\t.AFI_DQ_WIDTH                            (64),\n\t\t.AFI_ODT_WIDTH                           (1),\n\t\t.AFI_WRITE_DQS_WIDTH                     (4),\n\t\t.AFI_RLAT_WIDTH                          (6),\n\t\t.AFI_WLAT_WIDTH                          (6),\n\t\t.HARD_PHY                                (1)\n\t) c0 (\n\t\t.afi_clk                 (pll_afi_clk_clk),                    \n\t\t.afi_reset_n             (p0_afi_reset_reset),                 \n\t\t.ctl_reset_n             (p0_ctl_reset_reset),                 \n\t\t.afi_half_clk            (pll_afi_half_clk_clk),               \n\t\t.ctl_clk                 (p0_ctl_clk_clk),                     \n\t\t.local_init_done         (),                                   \n\t\t.local_cal_success       (),                                   \n\t\t.local_cal_fail          (),                                   \n\t\t.afi_addr                (c0_afi_afi_addr),                    \n\t\t.afi_ba                  (c0_afi_afi_ba),                      \n\t\t.afi_cke                 (c0_afi_afi_cke),                     \n\t\t.afi_cs_n                (c0_afi_afi_cs_n),                    \n\t\t.afi_ras_n               (c0_afi_afi_ras_n),                   \n\t\t.afi_we_n                (c0_afi_afi_we_n),                    \n\t\t.afi_cas_n               (c0_afi_afi_cas_n),                   \n\t\t.afi_rst_n               (c0_afi_afi_rst_n),                   \n\t\t.afi_odt                 (c0_afi_afi_odt),                     \n\t\t.afi_mem_clk_disable     (c0_afi_afi_mem_clk_disable),         \n\t\t.afi_init_req            (),                                   \n\t\t.afi_cal_req             (),                                   \n\t\t.afi_seq_busy            (),                                   \n\t\t.afi_ctl_refresh_done    (),                                   \n\t\t.afi_ctl_long_idle       (),                                   \n\t\t.afi_dqs_burst           (c0_afi_afi_dqs_burst),               \n\t\t.afi_wdata_valid         (c0_afi_afi_wdata_valid),             \n\t\t.afi_wdata               (c0_afi_afi_wdata),                   \n\t\t.afi_dm                  (c0_afi_afi_dm),                      \n\t\t.afi_rdata               (p0_afi_afi_rdata),                   \n\t\t.afi_rdata_en            (c0_afi_afi_rdata_en),                \n\t\t.afi_rdata_en_full       (c0_afi_afi_rdata_en_full),           \n\t\t.afi_rdata_valid         (p0_afi_afi_rdata_valid),             \n\t\t.afi_wlat                (p0_afi_afi_wlat),                    \n\t\t.afi_rlat                (p0_afi_afi_rlat),                    \n\t\t.afi_cal_success         (p0_afi_afi_cal_success),             \n\t\t.afi_cal_fail            (p0_afi_afi_cal_fail),                \n\t\t.cfg_addlat              (c0_hard_phy_cfg_cfg_addlat),         \n\t\t.cfg_bankaddrwidth       (c0_hard_phy_cfg_cfg_bankaddrwidth),  \n\t\t.cfg_caswrlat            (c0_hard_phy_cfg_cfg_caswrlat),       \n\t\t.cfg_coladdrwidth        (c0_hard_phy_cfg_cfg_coladdrwidth),   \n\t\t.cfg_csaddrwidth         (c0_hard_phy_cfg_cfg_csaddrwidth),    \n\t\t.cfg_devicewidth         (c0_hard_phy_cfg_cfg_devicewidth),    \n\t\t.cfg_dramconfig          (c0_hard_phy_cfg_cfg_dramconfig),     \n\t\t.cfg_interfacewidth      (c0_hard_phy_cfg_cfg_interfacewidth), \n\t\t.cfg_rowaddrwidth        (c0_hard_phy_cfg_cfg_rowaddrwidth),   \n\t\t.cfg_tcl                 (c0_hard_phy_cfg_cfg_tcl),            \n\t\t.cfg_tmrd                (c0_hard_phy_cfg_cfg_tmrd),           \n\t\t.cfg_trefi               (c0_hard_phy_cfg_cfg_trefi),          \n\t\t.cfg_trfc                (c0_hard_phy_cfg_cfg_trfc),           \n\t\t.cfg_twr                 (c0_hard_phy_cfg_cfg_twr),            \n\t\t.io_intaficalfail        (p0_io_int_io_intaficalfail),         \n\t\t.io_intaficalsuccess     (p0_io_int_io_intaficalsuccess),      \n\t\t.mp_cmd_clk_0            (1'b0),                               \n\t\t.mp_cmd_reset_n_0        (1'b1),                               \n\t\t.mp_cmd_clk_1            (1'b0),                               \n\t\t.mp_cmd_reset_n_1        (1'b1),                               \n\t\t.mp_cmd_clk_2            (1'b0),                               \n\t\t.mp_cmd_reset_n_2        (1'b1),                               \n\t\t.mp_cmd_clk_3            (1'b0),                               \n\t\t.mp_cmd_reset_n_3        (1'b1),                               \n\t\t.mp_cmd_clk_4            (1'b0),                               \n\t\t.mp_cmd_reset_n_4        (1'b1),                               \n\t\t.mp_cmd_clk_5            (1'b0),                               \n\t\t.mp_cmd_reset_n_5        (1'b1),                               \n\t\t.mp_rfifo_clk_0          (1'b0),                               \n\t\t.mp_rfifo_reset_n_0      (1'b1),                               \n\t\t.mp_wfifo_clk_0          (1'b0),                               \n\t\t.mp_wfifo_reset_n_0      (1'b1),                               \n\t\t.mp_rfifo_clk_1          (1'b0),                               \n\t\t.mp_rfifo_reset_n_1      (1'b1),                               \n\t\t.mp_wfifo_clk_1          (1'b0),                               \n\t\t.mp_wfifo_reset_n_1      (1'b1),                               \n\t\t.mp_rfifo_clk_2          (1'b0),                               \n\t\t.mp_rfifo_reset_n_2      (1'b1),                               \n\t\t.mp_wfifo_clk_2          (1'b0),                               \n\t\t.mp_wfifo_reset_n_2      (1'b1),                               \n\t\t.mp_rfifo_clk_3          (1'b0),                               \n\t\t.mp_rfifo_reset_n_3      (1'b1),                               \n\t\t.mp_wfifo_clk_3          (1'b0),                               \n\t\t.mp_wfifo_reset_n_3      (1'b1),                               \n\t\t.csr_clk                 (1'b0),                               \n\t\t.csr_reset_n             (1'b1),                               \n\t\t.avl_ready_0             (),                                   \n\t\t.avl_burstbegin_0        (1'b0),                               \n\t\t.avl_addr_0              (1'b0),                               \n\t\t.avl_rdata_valid_0       (),                                   \n\t\t.avl_rdata_0             (),                                   \n\t\t.avl_wdata_0             (1'b0),                               \n\t\t.avl_be_0                (1'b0),                               \n\t\t.avl_read_req_0          (1'b0),                               \n\t\t.avl_write_req_0         (1'b0),                               \n\t\t.avl_size_0              (3'b000),                             \n\t\t.avl_ready_1             (),                                   \n\t\t.avl_burstbegin_1        (1'b0),                               \n\t\t.avl_addr_1              (1'b0),                               \n\t\t.avl_rdata_valid_1       (),                                   \n\t\t.avl_rdata_1             (),                                   \n\t\t.avl_wdata_1             (1'b0),                               \n\t\t.avl_be_1                (1'b0),                               \n\t\t.avl_read_req_1          (1'b0),                               \n\t\t.avl_write_req_1         (1'b0),                               \n\t\t.avl_size_1              (3'b000),                             \n\t\t.avl_ready_2             (),                                   \n\t\t.avl_burstbegin_2        (1'b0),                               \n\t\t.avl_addr_2              (1'b0),                               \n\t\t.avl_rdata_valid_2       (),                                   \n\t\t.avl_rdata_2             (),                                   \n\t\t.avl_wdata_2             (1'b0),                               \n\t\t.avl_be_2                (1'b0),                               \n\t\t.avl_read_req_2          (1'b0),                               \n\t\t.avl_write_req_2         (1'b0),                               \n\t\t.avl_size_2              (3'b000),                             \n\t\t.avl_ready_3             (),                                   \n\t\t.avl_burstbegin_3        (1'b0),                               \n\t\t.avl_addr_3              (1'b0),                               \n\t\t.avl_rdata_valid_3       (),                                   \n\t\t.avl_rdata_3             (),                                   \n\t\t.avl_wdata_3             (1'b0),                               \n\t\t.avl_be_3                (1'b0),                               \n\t\t.avl_read_req_3          (1'b0),                               \n\t\t.avl_write_req_3         (1'b0),                               \n\t\t.avl_size_3              (3'b000),                             \n\t\t.avl_ready_4             (),                                   \n\t\t.avl_burstbegin_4        (1'b0),                               \n\t\t.avl_addr_4              (1'b0),                               \n\t\t.avl_rdata_valid_4       (),                                   \n\t\t.avl_rdata_4             (),                                   \n\t\t.avl_wdata_4             (1'b0),                               \n\t\t.avl_be_4                (1'b0),                               \n\t\t.avl_read_req_4          (1'b0),                               \n\t\t.avl_write_req_4         (1'b0),                               \n\t\t.avl_size_4              (3'b000),                             \n\t\t.avl_ready_5             (),                                   \n\t\t.avl_burstbegin_5        (1'b0),                               \n\t\t.avl_addr_5              (1'b0),                               \n\t\t.avl_rdata_valid_5       (),                                   \n\t\t.avl_rdata_5             (),                                   \n\t\t.avl_wdata_5             (1'b0),                               \n\t\t.avl_be_5                (1'b0),                               \n\t\t.avl_read_req_5          (1'b0),                               \n\t\t.avl_write_req_5         (1'b0),                               \n\t\t.avl_size_5              (3'b000),                             \n\t\t.csr_write_req           (1'b0),                               \n\t\t.csr_read_req            (1'b0),                               \n\t\t.csr_waitrequest         (),                                   \n\t\t.csr_addr                (10'b0000000000),                     \n\t\t.csr_be                  (1'b0),                               \n\t\t.csr_wdata               (8'b00000000),                        \n\t\t.csr_rdata               (),                                   \n\t\t.csr_rdata_valid         (),                                   \n\t\t.local_multicast         (1'b0),                               \n\t\t.local_refresh_req       (1'b0),                               \n\t\t.local_refresh_chip      (1'b0),                               \n\t\t.local_refresh_ack       (),                                   \n\t\t.local_self_rfsh_req     (1'b0),                               \n\t\t.local_self_rfsh_chip    (1'b0),                               \n\t\t.local_self_rfsh_ack     (),                                   \n\t\t.local_deep_powerdn_req  (1'b0),                               \n\t\t.local_deep_powerdn_chip (1'b0),                               \n\t\t.local_deep_powerdn_ack  (),                                   \n\t\t.local_powerdn_ack       (),                                   \n\t\t.local_priority          (1'b0),                               \n\t\t.bonding_in_1            (4'b0000),                            \n\t\t.bonding_in_2            (6'b000000),                          \n\t\t.bonding_in_3            (6'b000000),                          \n\t\t.bonding_out_1           (),                                   \n\t\t.bonding_out_2           (),                                   \n\t\t.bonding_out_3           ()                                    \n\t);\n\n\taltera_mem_if_oct_cyclonev #(\n\t\t.OCT_TERM_CONTROL_WIDTH (16)\n\t) oct (\n\t\t.oct_rzqin                  (oct_rzqin),                                  \n\t\t.seriesterminationcontrol   (oct_oct_sharing_seriesterminationcontrol),   \n\t\t.parallelterminationcontrol (oct_oct_sharing_parallelterminationcontrol)  \n\t);\n\n\taltera_mem_if_dll_cyclonev #(\n\t\t.DLL_DELAY_CTRL_WIDTH       (7),\n\t\t.DLL_OFFSET_CTRL_WIDTH      (6),\n\t\t.DELAY_BUFFER_MODE          (\"HIGH\"),\n\t\t.DELAY_CHAIN_LENGTH         (8),\n\t\t.DLL_INPUT_FREQUENCY_PS_STR (\"2500 ps\")\n\t) dll (\n\t\t.clk            (p0_dll_clk_clk),                \n\t\t.dll_pll_locked (p0_dll_sharing_dll_pll_locked), \n\t\t.dll_delayctrl  (dll_dll_sharing_dll_delayctrl)  \n\t);\n\nendmodule\n</code>"
                },
                {
                    "type": "text",
                    "text": "Based on the provided original Verilog code, its comments and above answers, generate a detailed specification for the module. Include the following information in a single, concise paragraph:\n1. The name of the module.\n2. A simple explanation of the module's functionality.\n3. The input and output ports, along with a brief explanation of each.\n4. The internal signals used within the module, with a brief explanation of their purpose.\n5. An overview of the different blocks or sections in the code and their functions.\nEnsure that the specification is clear and accurately reflects the details from the code and comments.\nYour answer should be structured and well-organized, providing a comprehensive and detailed overview of the module's design and operation.\nPlease provide your answer in the following format:\nModule name: [module name]. Module specification: [module specification]."
                },
                {
                    "type": "text",
                    "text": "Module name: hps_sdram. Module specification: The hps_sdram module is a DDR3 SDRAM memory controller for a Hard Processor System (HPS), interfacing with external SDRAM memory. It manages clock generation, memory initialization, calibration, data transfer, and timing control. The module has input ports for clock (pll_ref_clk), reset signals (global_reset_n, soft_reset_n), and OCT calibration (oct_rzqin); output ports for memory address (mem_a), bank address (mem_ba), clock (mem_ck, mem_ck_n), control signals (mem_cke, mem_cs_n, mem_ras_n, mem_cas_n, mem_we_n, mem_reset_n), and data mask (mem_dm); and bidirectional ports for data (mem_dq"
                }
            ]
        }
    ]
}