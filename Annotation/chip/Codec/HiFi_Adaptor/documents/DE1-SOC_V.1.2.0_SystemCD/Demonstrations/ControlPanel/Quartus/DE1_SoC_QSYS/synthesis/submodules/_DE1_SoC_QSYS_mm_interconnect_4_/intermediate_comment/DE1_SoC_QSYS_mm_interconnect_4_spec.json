{
    "spec": "Module name: DE1_SoC_QSYS_mm_interconnect_4. Module specification: This module serves as an interconnect component for a System-on-Chip (SoC) design, managing communication between an Avalon master interface (likely from a video frame reader) and an AXI slave interface (connected to a Hard Processor System). It features input ports for clock signals, reset signals, and various control and data signals from both interfaces. Output ports include control and data signals for the AXI slave interface and response signals for the Avalon master interface. Internally, the module utilizes numerous wire signals for translators, routers, arbiters, multiplexers, demultiplexers, burst adapters, and clock crossers. The module is structured into several functional blocks, including address translation, burst adaptation, arbitration, and clock domain crossing. It implements components such as Avalon-to",
    "gpt-message": [
        {
            "role": "system",
            "content": "You are an expert in hardware design with a deep understanding of Verilog RTL codes. Now I want to train a large language model for code comment generation tasks specifically focused on Verilog RTL codes. And I want you to help me process the raw data, transforming it into suitable formats that can serve as inputs and outputs for the model."
        },
        {
            "role": "user",
            "content": "Name of the module and its functionality is as follows: \nModule name: DE1_SoC_QSYS_mm_interconnect_4\n\nExplanation: This module appears to be an interconnect component for a System-on-Chip (SoC) design. It handles communication between different parts of the system, specifically managing data transfers between an Avalon master interface (likely from a video frame reader) and an AXI slave interface (connected to an HPS - Hard Processor System). The module implements various components for clock domain crossing, address translation, burst adaptation, and arbitration to facilitate proper data routing and protocol conversion between the different interfaces. It includes elements like routers, multiplexers, demultiplexers, burst adapters, and clock crossers to manage the complexity of interfacing between different bus protocols and clock domains in the SoC design."
        },
        {
            "role": "user",
            "content": "Input and output ports and their explanation is as follows: \nBased on the provided Verilog code, here are the input and output ports of the DE1_SoC_QSYS_mm_interconnect_4 module:\n\nInput ports:\n- clk_50_clk_clk\n- pll_sys_outclk0_clk\n- alt_vip_vfr_0_clock_master_reset_reset_bridge_in_reset_reset\n- hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset\n- alt_vip_vfr_0_avalon_master_address\n- alt_vip_vfr_0_avalon_master_burstcount\n- alt_vip_vfr_0_avalon_master_read\n- hps_0_f2h_axi_slave_awready\n- hps_0_f2h_axi_slave_wready\n- hps_0_f2h_axi_slave_bid\n- hps_0_f2h_axi_slave_bresp\n- hps_0_f2h_axi_slave_bvalid\n- hps_0_f2h_axi_slave_arready\n- hps_0_f2h_axi_slave_rid\n- hps_0_f2h_axi_slave_rdata\n- hps_0_f2h_axi_slave_rresp\n- hps_0_f2h_axi_slave_rlast\n- hps_0_f2h_axi_slave_rvalid\n\nExplanation: These input ports include clock signals, reset signals, and various control and data signals from the Avalon master interface and AXI slave interface.\n\nOutput ports:\n- hps_0_f2h_axi_slave_awid\n- hps_0_f2h_axi_slave_awaddr\n- hps_0_f2h_axi_slave_awlen\n- hps_0_f2h_axi_slave_awsize\n- hps_0_f2h_axi_slave_awburst\n- hps_0_f2h_axi_slave_awlock\n- hps_0_f2h_axi_slave_awcache\n- hps_0_f2h_axi_slave_awprot\n- hps_0_f2h_axi_slave_awuser\n- hps_0_f2h_axi_slave_awvalid\n- hps_0_f2h_axi_slave_wid\n- hps_0_f2h_axi_slave_wdata\n- hps_0_f2h_axi_slave_wstrb\n- hps_0_f2h_axi_slave_wlast\n- hps_0_f2h_axi_slave_wvalid\n- hps_0_f2h_axi_slave_bready\n- hps_0_f2h_axi_slave_arid\n- hps_0_f2h_axi_slave_araddr\n- hps_0_f2h_axi_slave_arlen\n- hps_0_f2h_axi_slave_arsize\n- hps_0_f2h_axi_slave_arburst\n- hps_0_f2h_axi_slave_arlock\n- hps_0_f2h_axi_slave_arcache\n- hps_0_f2h_axi_slave_arprot\n- hps_0_f2h_axi_slave_aruser\n- hps_0_f2h_axi_slave_arvalid\n- hps_0_f2h_axi_slave_rready\n- alt_vip_vfr_0_avalon_master_waitrequest\n- alt_vip_vfr_0_avalon_master_readdata\n- alt_vip_vfr_0_avalon_master_readdatavalid\n\nExplanation: These output ports include various control and data signals for the AXI slave interface, as well as response signals for the Avalon master interface. They are used to manage data transfer, addressing, and handshaking between the interconnected components."
        },
        {
            "role": "user",
            "content": "Internal signals and their explanation is as follows: \nInternal signals:\nwire signals for translators, routers, arbiters, multiplexers, demultiplexers, burst adapters, and clock crossers.\n\nExplanation:\n- Translator signals (e.g., alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_*): Convert between Avalon and universal interfaces.\n- Router signals (e.g., addr_router_src_*, id_router_src_*): Direct packets between components based on address.\n- Arbiter signals (e.g., cmd_xbar_*): Manage access to shared resources.\n- Multiplexer/demultiplexer signals (e.g., cmd_xbar_mux_*, rsp_xbar_demux_*): Combine or separate data streams.\n- Burst adapter signals (e.g., burst_adapter_source0_*): Modify burst transactions for different interfaces.\n- Clock crosser signals (e.g., crosser_out_*): Manage data transfer between different clock domains.\n- Pipeline signals (e.g., limiter_pipeline_source0_*): Add pipeline stages for timing improvement.\n- Agent signals (e.g., hps_0_f2h_axi_slave_agent_*): Interface with AXI slave component.\n\nThese internal signals facilitate communication, arbitration, and data management between the Avalon master and AXI slave interfaces, handling protocol conversions and timing requirements."
        },
        {
            "role": "user",
            "content": "Original Verilog code is as follows: \n```verilog\n\n\n\n\n\n\n\n`timescale 1 ps / 1 ps\nmodule DE1_SoC_QSYS_mm_interconnect_4 (\n\t\toutput wire [7:0]   hps_0_f2h_axi_slave_awid,                                         \n\t\toutput wire [31:0]  hps_0_f2h_axi_slave_awaddr,                                       \n\t\toutput wire [3:0]   hps_0_f2h_axi_slave_awlen,                                        \n\t\toutput wire [2:0]   hps_0_f2h_axi_slave_awsize,                                       \n\t\toutput wire [1:0]   hps_0_f2h_axi_slave_awburst,                                      \n\t\toutput wire [1:0]   hps_0_f2h_axi_slave_awlock,                                       \n\t\toutput wire [3:0]   hps_0_f2h_axi_slave_awcache,                                      \n\t\toutput wire [2:0]   hps_0_f2h_axi_slave_awprot,                                       \n\t\toutput wire [4:0]   hps_0_f2h_axi_slave_awuser,                                       \n\t\toutput wire         hps_0_f2h_axi_slave_awvalid,                                      \n\t\tinput  wire         hps_0_f2h_axi_slave_awready,                                      \n\t\toutput wire [7:0]   hps_0_f2h_axi_slave_wid,                                          \n\t\toutput wire [127:0] hps_0_f2h_axi_slave_wdata,                                        \n\t\toutput wire [15:0]  hps_0_f2h_axi_slave_wstrb,                                        \n\t\toutput wire         hps_0_f2h_axi_slave_wlast,                                        \n\t\toutput wire         hps_0_f2h_axi_slave_wvalid,                                       \n\t\tinput  wire         hps_0_f2h_axi_slave_wready,                                       \n\t\tinput  wire [7:0]   hps_0_f2h_axi_slave_bid,                                          \n\t\tinput  wire [1:0]   hps_0_f2h_axi_slave_bresp,                                        \n\t\tinput  wire         hps_0_f2h_axi_slave_bvalid,                                       \n\t\toutput wire         hps_0_f2h_axi_slave_bready,                                       \n\t\toutput wire [7:0]   hps_0_f2h_axi_slave_arid,                                         \n\t\toutput wire [31:0]  hps_0_f2h_axi_slave_araddr,                                       \n\t\toutput wire [3:0]   hps_0_f2h_axi_slave_arlen,                                        \n\t\toutput wire [2:0]   hps_0_f2h_axi_slave_arsize,                                       \n\t\toutput wire [1:0]   hps_0_f2h_axi_slave_arburst,                                      \n\t\toutput wire [1:0]   hps_0_f2h_axi_slave_arlock,                                       \n\t\toutput wire [3:0]   hps_0_f2h_axi_slave_arcache,                                      \n\t\toutput wire [2:0]   hps_0_f2h_axi_slave_arprot,                                       \n\t\toutput wire [4:0]   hps_0_f2h_axi_slave_aruser,                                       \n\t\toutput wire         hps_0_f2h_axi_slave_arvalid,                                      \n\t\tinput  wire         hps_0_f2h_axi_slave_arready,                                      \n\t\tinput  wire [7:0]   hps_0_f2h_axi_slave_rid,                                          \n\t\tinput  wire [127:0] hps_0_f2h_axi_slave_rdata,                                        \n\t\tinput  wire [1:0]   hps_0_f2h_axi_slave_rresp,                                        \n\t\tinput  wire         hps_0_f2h_axi_slave_rlast,                                        \n\t\tinput  wire         hps_0_f2h_axi_slave_rvalid,                                       \n\t\toutput wire         hps_0_f2h_axi_slave_rready,                                       \n\t\tinput  wire         clk_50_clk_clk,                                                   \n\t\tinput  wire         pll_sys_outclk0_clk,                                              \n\t\tinput  wire         alt_vip_vfr_0_clock_master_reset_reset_bridge_in_reset_reset,     \n\t\tinput  wire         hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset, \n\t\tinput  wire [31:0]  alt_vip_vfr_0_avalon_master_address,                              \n\t\toutput wire         alt_vip_vfr_0_avalon_master_waitrequest,                          \n\t\tinput  wire [5:0]   alt_vip_vfr_0_avalon_master_burstcount,                           \n\t\tinput  wire         alt_vip_vfr_0_avalon_master_read,                                 \n\t\toutput wire [127:0] alt_vip_vfr_0_avalon_master_readdata,                             \n\t\toutput wire         alt_vip_vfr_0_avalon_master_readdatavalid                         \n\t);\n\n\twire          alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_waitrequest;            \n\twire    [9:0] alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_burstcount;             \n\twire  [127:0] alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_writedata;              \n\twire   [31:0] alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_address;                \n\twire          alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_lock;                   \n\twire          alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_write;                  \n\twire          alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_read;                   \n\twire  [127:0] alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_readdata;               \n\twire          alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_debugaccess;            \n\twire   [15:0] alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_byteenable;             \n\twire          alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_readdatavalid;          \n\twire          alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_agent_cp_endofpacket;   \n\twire          alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_agent_cp_valid;         \n\twire          alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_agent_cp_startofpacket; \n\twire  [228:0] alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_agent_cp_data;          \n\twire          alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_agent_cp_ready;         \n\twire          id_router_src_endofpacket;                                                               \n\twire          id_router_src_valid;                                                                     \n\twire          id_router_src_startofpacket;                                                             \n\twire  [228:0] id_router_src_data;                                                                      \n\twire    [1:0] id_router_src_channel;                                                                   \n\twire          id_router_src_ready;                                                                     \n\twire          id_router_001_src_endofpacket;                                                           \n\twire          id_router_001_src_valid;                                                                 \n\twire          id_router_001_src_startofpacket;                                                         \n\twire  [228:0] id_router_001_src_data;                                                                  \n\twire    [1:0] id_router_001_src_channel;                                                               \n\twire          id_router_001_src_ready;                                                                 \n\twire          addr_router_src_endofpacket;                                                             \n\twire          addr_router_src_valid;                                                                   \n\twire          addr_router_src_startofpacket;                                                           \n\twire  [228:0] addr_router_src_data;                                                                    \n\twire    [1:0] addr_router_src_channel;                                                                 \n\twire          addr_router_src_ready;                                                                   \n\twire          limiter_rsp_src_endofpacket;                                                             \n\twire          limiter_rsp_src_valid;                                                                   \n\twire          limiter_rsp_src_startofpacket;                                                           \n\twire  [228:0] limiter_rsp_src_data;                                                                    \n\twire    [1:0] limiter_rsp_src_channel;                                                                 \n\twire          limiter_rsp_src_ready;                                                                   \n\twire          cmd_xbar_mux_src_endofpacket;                                                            \n\twire          cmd_xbar_mux_src_valid;                                                                  \n\twire          cmd_xbar_mux_src_startofpacket;                                                          \n\twire  [228:0] cmd_xbar_mux_src_data;                                                                   \n\twire    [1:0] cmd_xbar_mux_src_channel;                                                                \n\twire          cmd_xbar_mux_src_ready;                                                                  \n\twire          cmd_xbar_mux_001_src_endofpacket;                                                        \n\twire          cmd_xbar_mux_001_src_valid;                                                              \n\twire          cmd_xbar_mux_001_src_startofpacket;                                                      \n\twire  [228:0] cmd_xbar_mux_001_src_data;                                                               \n\twire    [1:0] cmd_xbar_mux_001_src_channel;                                                            \n\twire          cmd_xbar_mux_001_src_ready;                                                              \n\twire          cmd_xbar_demux_src0_endofpacket;                                                         \n\twire          cmd_xbar_demux_src0_valid;                                                               \n\twire          cmd_xbar_demux_src0_startofpacket;                                                       \n\twire  [228:0] cmd_xbar_demux_src0_data;                                                                \n\twire    [1:0] cmd_xbar_demux_src0_channel;                                                             \n\twire          cmd_xbar_demux_src0_ready;                                                               \n\twire          crosser_out_endofpacket;                                                                 \n\twire          crosser_out_valid;                                                                       \n\twire          crosser_out_startofpacket;                                                               \n\twire  [228:0] crosser_out_data;                                                                        \n\twire    [1:0] crosser_out_channel;                                                                     \n\twire          crosser_out_ready;                                                                       \n\twire          cmd_xbar_demux_src1_endofpacket;                                                         \n\twire          cmd_xbar_demux_src1_valid;                                                               \n\twire          cmd_xbar_demux_src1_startofpacket;                                                       \n\twire  [228:0] cmd_xbar_demux_src1_data;                                                                \n\twire    [1:0] cmd_xbar_demux_src1_channel;                                                             \n\twire          cmd_xbar_demux_src1_ready;                                                               \n\twire          crosser_001_out_endofpacket;                                                             \n\twire          crosser_001_out_valid;                                                                   \n\twire          crosser_001_out_startofpacket;                                                           \n\twire  [228:0] crosser_001_out_data;                                                                    \n\twire    [1:0] crosser_001_out_channel;                                                                 \n\twire          crosser_001_out_ready;                                                                   \n\twire          rsp_xbar_demux_src0_endofpacket;                                                         \n\twire          rsp_xbar_demux_src0_valid;                                                               \n\twire          rsp_xbar_demux_src0_startofpacket;                                                       \n\twire  [228:0] rsp_xbar_demux_src0_data;                                                                \n\twire    [1:0] rsp_xbar_demux_src0_channel;                                                             \n\twire          rsp_xbar_demux_src0_ready;                                                               \n\twire          crosser_002_out_endofpacket;                                                             \n\twire          crosser_002_out_valid;                                                                   \n\twire          crosser_002_out_startofpacket;                                                           \n\twire  [228:0] crosser_002_out_data;                                                                    \n\twire    [1:0] crosser_002_out_channel;                                                                 \n\twire          crosser_002_out_ready;                                                                   \n\twire          rsp_xbar_demux_001_src0_endofpacket;                                                     \n\twire          rsp_xbar_demux_001_src0_valid;                                                           \n\twire          rsp_xbar_demux_001_src0_startofpacket;                                                   \n\twire  [228:0] rsp_xbar_demux_001_src0_data;                                                            \n\twire    [1:0] rsp_xbar_demux_001_src0_channel;                                                         \n\twire          rsp_xbar_demux_001_src0_ready;                                                           \n\twire          crosser_003_out_endofpacket;                                                             \n\twire          crosser_003_out_valid;                                                                   \n\twire          crosser_003_out_startofpacket;                                                           \n\twire  [228:0] crosser_003_out_data;                                                                    \n\twire    [1:0] crosser_003_out_channel;                                                                 \n\twire          crosser_003_out_ready;                                                                   \n\twire          limiter_cmd_src_endofpacket;                                                             \n\twire    [0:0] limiter_cmd_src_valid;                                                                   \n\twire          limiter_cmd_src_startofpacket;                                                           \n\twire  [228:0] limiter_cmd_src_data;                                                                    \n\twire    [1:0] limiter_cmd_src_channel;                                                                 \n\twire          limiter_cmd_src_ready;                                                                   \n\twire          limiter_pipeline_source0_endofpacket;                                                    \n\twire          limiter_pipeline_source0_valid;                                                          \n\twire          limiter_pipeline_source0_startofpacket;                                                  \n\twire  [228:0] limiter_pipeline_source0_data;                                                           \n\twire    [1:0] limiter_pipeline_source0_channel;                                                        \n\twire          limiter_pipeline_source0_ready;                                                          \n\twire          rsp_xbar_mux_src_endofpacket;                                                            \n\twire          rsp_xbar_mux_src_valid;                                                                  \n\twire          rsp_xbar_mux_src_startofpacket;                                                          \n\twire  [228:0] rsp_xbar_mux_src_data;                                                                   \n\twire    [1:0] rsp_xbar_mux_src_channel;                                                                \n\twire          rsp_xbar_mux_src_ready;                                                                  \n\twire          limiter_pipeline_001_source0_endofpacket;                                                \n\twire          limiter_pipeline_001_source0_valid;                                                      \n\twire          limiter_pipeline_001_source0_startofpacket;                                              \n\twire  [228:0] limiter_pipeline_001_source0_data;                                                       \n\twire    [1:0] limiter_pipeline_001_source0_channel;                                                    \n\twire          limiter_pipeline_001_source0_ready;                                                      \n\twire          burst_adapter_source0_endofpacket;                                                       \n\twire          burst_adapter_source0_valid;                                                             \n\twire          burst_adapter_source0_startofpacket;                                                     \n\twire  [228:0] burst_adapter_source0_data;                                                              \n\twire          burst_adapter_source0_ready;                                                             \n\twire    [1:0] burst_adapter_source0_channel;                                                           \n\twire          agent_pipeline_source0_endofpacket;                                                      \n\twire          agent_pipeline_source0_valid;                                                            \n\twire          agent_pipeline_source0_startofpacket;                                                    \n\twire  [228:0] agent_pipeline_source0_data;                                                             \n\twire    [1:0] agent_pipeline_source0_channel;                                                          \n\twire          agent_pipeline_source0_ready;                                                            \n\twire          burst_adapter_001_source0_endofpacket;                                                   \n\twire          burst_adapter_001_source0_valid;                                                         \n\twire          burst_adapter_001_source0_startofpacket;                                                 \n\twire  [228:0] burst_adapter_001_source0_data;                                                          \n\twire          burst_adapter_001_source0_ready;                                                         \n\twire    [1:0] burst_adapter_001_source0_channel;                                                       \n\twire          agent_pipeline_001_source0_endofpacket;                                                  \n\twire          agent_pipeline_001_source0_valid;                                                        \n\twire          agent_pipeline_001_source0_startofpacket;                                                \n\twire  [228:0] agent_pipeline_001_source0_data;                                                         \n\twire    [1:0] agent_pipeline_001_source0_channel;                                                      \n\twire          agent_pipeline_001_source0_ready;                                                        \n\twire          hps_0_f2h_axi_slave_agent_write_rp_endofpacket;                                          \n\twire          hps_0_f2h_axi_slave_agent_write_rp_valid;                                                \n\twire          hps_0_f2h_axi_slave_agent_write_rp_startofpacket;                                        \n\twire  [228:0] hps_0_f2h_axi_slave_agent_write_rp_data;                                                 \n\twire          hps_0_f2h_axi_slave_agent_write_rp_ready;                                                \n\twire          agent_pipeline_002_source0_endofpacket;                                                  \n\twire          agent_pipeline_002_source0_valid;                                                        \n\twire          agent_pipeline_002_source0_startofpacket;                                                \n\twire  [228:0] agent_pipeline_002_source0_data;                                                         \n\twire          agent_pipeline_002_source0_ready;                                                        \n\twire          hps_0_f2h_axi_slave_agent_read_rp_endofpacket;                                           \n\twire          hps_0_f2h_axi_slave_agent_read_rp_valid;                                                 \n\twire          hps_0_f2h_axi_slave_agent_read_rp_startofpacket;                                         \n\twire  [228:0] hps_0_f2h_axi_slave_agent_read_rp_data;                                                  \n\twire          hps_0_f2h_axi_slave_agent_read_rp_ready;                                                 \n\twire          agent_pipeline_003_source0_endofpacket;                                                  \n\twire          agent_pipeline_003_source0_valid;                                                        \n\twire          agent_pipeline_003_source0_startofpacket;                                                \n\twire  [228:0] agent_pipeline_003_source0_data;                                                         \n\twire          agent_pipeline_003_source0_ready;                                                        \n\n\taltera_merlin_master_translator #(\n\t\t.AV_ADDRESS_W                (32),\n\t\t.AV_DATA_W                   (128),\n\t\t.AV_BURSTCOUNT_W             (6),\n\t\t.AV_BYTEENABLE_W             (16),\n\t\t.UAV_ADDRESS_W               (32),\n\t\t.UAV_BURSTCOUNT_W            (10),\n\t\t.USE_READ                    (1),\n\t\t.USE_WRITE                   (0),\n\t\t.USE_BEGINBURSTTRANSFER      (0),\n\t\t.USE_BEGINTRANSFER           (0),\n\t\t.USE_CHIPSELECT              (0),\n\t\t.USE_BURSTCOUNT              (1),\n\t\t.USE_READDATAVALID           (1),\n\t\t.USE_WAITREQUEST             (1),\n\t\t.USE_READRESPONSE            (0),\n\t\t.USE_WRITERESPONSE           (0),\n\t\t.AV_SYMBOLS_PER_WORD         (16),\n\t\t.AV_ADDRESS_SYMBOLS          (1),\n\t\t.AV_BURSTCOUNT_SYMBOLS       (0),\n\t\t.AV_CONSTANT_BURST_BEHAVIOR  (1),\n\t\t.UAV_CONSTANT_BURST_BEHAVIOR (0),\n\t\t.AV_LINEWRAPBURSTS           (0),\n\t\t.AV_REGISTERINCOMINGSIGNALS  (0)\n\t) alt_vip_vfr_0_avalon_master_translator (\n\t\t.clk                      (pll_sys_outclk0_clk),                                                                                                                   \n\t\t.reset                    (alt_vip_vfr_0_clock_master_reset_reset_bridge_in_reset_reset),                                                                          \n\t\t.uav_address              (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_address),                                                              \n\t\t.uav_burstcount           (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_burstcount),                                                           \n\t\t.uav_read                 (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_read),                                                                 \n\t\t.uav_write                (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_write),                                                                \n\t\t.uav_waitrequest          (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_waitrequest),                                                          \n\t\t.uav_readdatavalid        (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_readdatavalid),                                                        \n\t\t.uav_byteenable           (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_byteenable),                                                           \n\t\t.uav_readdata             (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_readdata),                                                             \n\t\t.uav_writedata            (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_writedata),                                                            \n\t\t.uav_lock                 (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_lock),                                                                 \n\t\t.uav_debugaccess          (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_debugaccess),                                                          \n\t\t.av_address               (alt_vip_vfr_0_avalon_master_address),                                                                                                   \n\t\t.av_waitrequest           (alt_vip_vfr_0_avalon_master_waitrequest),                                                                                               \n\t\t.av_burstcount            (alt_vip_vfr_0_avalon_master_burstcount),                                                                                                \n\t\t.av_read                  (alt_vip_vfr_0_avalon_master_read),                                                                                                      \n\t\t.av_readdata              (alt_vip_vfr_0_avalon_master_readdata),                                                                                                  \n\t\t.av_readdatavalid         (alt_vip_vfr_0_avalon_master_readdatavalid),                                                                                             \n\t\t.av_byteenable            (16'b1111111111111111),                                                                                                                  \n\t\t.av_beginbursttransfer    (1'b0),                                                                                                                                  \n\t\t.av_begintransfer         (1'b0),                                                                                                                                  \n\t\t.av_chipselect            (1'b0),                                                                                                                                  \n\t\t.av_write                 (1'b0),                                                                                                                                  \n\t\t.av_writedata             (128'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000), \n\t\t.av_lock                  (1'b0),                                                                                                                                  \n\t\t.av_debugaccess           (1'b0),                                                                                                                                  \n\t\t.uav_clken                (),                                                                                                                                      \n\t\t.av_clken                 (1'b1),                                                                                                                                  \n\t\t.uav_response             (2'b00),                                                                                                                                 \n\t\t.av_response              (),                                                                                                                                      \n\t\t.uav_writeresponserequest (),                                                                                                                                      \n\t\t.uav_writeresponsevalid   (1'b0),                                                                                                                                  \n\t\t.av_writeresponserequest  (1'b0),                                                                                                                                  \n\t\t.av_writeresponsevalid    ()                                                                                                                                       \n\t);\n\n\taltera_merlin_master_agent #(\n\t\t.PKT_PROTECTION_H          (219),\n\t\t.PKT_PROTECTION_L          (217),\n\t\t.PKT_BEGIN_BURST           (212),\n\t\t.PKT_BURSTWRAP_H           (200),\n\t\t.PKT_BURSTWRAP_L           (192),\n\t\t.PKT_BURST_SIZE_H          (203),\n\t\t.PKT_BURST_SIZE_L          (201),\n\t\t.PKT_BURST_TYPE_H          (205),\n\t\t.PKT_BURST_TYPE_L          (204),\n\t\t.PKT_BYTE_CNT_H            (191),\n\t\t.PKT_BYTE_CNT_L            (182),\n\t\t.PKT_ADDR_H                (175),\n\t\t.PKT_ADDR_L                (144),\n\t\t.PKT_TRANS_COMPRESSED_READ (176),\n\t\t.PKT_TRANS_POSTED          (177),\n\t\t.PKT_TRANS_WRITE           (178),\n\t\t.PKT_TRANS_READ            (179),\n\t\t.PKT_TRANS_LOCK            (180),\n\t\t.PKT_TRANS_EXCLUSIVE       (181),\n\t\t.PKT_DATA_H                (127),\n\t\t.PKT_DATA_L                (0),\n\t\t.PKT_BYTEEN_H              (143),\n\t\t.PKT_BYTEEN_L              (128),\n\t\t.PKT_SRC_ID_H              (214),\n\t\t.PKT_SRC_ID_L              (214),\n\t\t.PKT_DEST_ID_H             (215),\n\t\t.PKT_DEST_ID_L             (215),\n\t\t.PKT_THREAD_ID_H           (216),\n\t\t.PKT_THREAD_ID_L           (216),\n\t\t.PKT_CACHE_H               (223),\n\t\t.PKT_CACHE_L               (220),\n\t\t.PKT_DATA_SIDEBAND_H       (211),\n\t\t.PKT_DATA_SIDEBAND_L       (211),\n\t\t.PKT_QOS_H                 (213),\n\t\t.PKT_QOS_L                 (213),\n\t\t.PKT_ADDR_SIDEBAND_H       (210),\n\t\t.PKT_ADDR_SIDEBAND_L       (206),\n\t\t.PKT_RESPONSE_STATUS_H     (225),\n\t\t.PKT_RESPONSE_STATUS_L     (224),\n\t\t.PKT_ORI_BURST_SIZE_L      (226),\n\t\t.PKT_ORI_BURST_SIZE_H      (228),\n\t\t.ST_DATA_W                 (229),\n\t\t.ST_CHANNEL_W              (2),\n\t\t.AV_BURSTCOUNT_W           (10),\n\t\t.SUPPRESS_0_BYTEEN_RSP     (0),\n\t\t.ID                        (0),\n\t\t.BURSTWRAP_VALUE           (511),\n\t\t.CACHE_VALUE               (0),\n\t\t.SECURE_ACCESS_BIT         (1),\n\t\t.USE_READRESPONSE          (0),\n\t\t.USE_WRITERESPONSE         (0)\n\t) alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_agent (\n\t\t.clk                     (pll_sys_outclk0_clk),                                                                     \n\t\t.reset                   (alt_vip_vfr_0_clock_master_reset_reset_bridge_in_reset_reset),                            \n\t\t.av_address              (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_address),                \n\t\t.av_write                (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_write),                  \n\t\t.av_read                 (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_read),                   \n\t\t.av_writedata            (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_writedata),              \n\t\t.av_readdata             (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_readdata),               \n\t\t.av_waitrequest          (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_waitrequest),            \n\t\t.av_readdatavalid        (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_readdatavalid),          \n\t\t.av_byteenable           (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_byteenable),             \n\t\t.av_burstcount           (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_burstcount),             \n\t\t.av_debugaccess          (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_debugaccess),            \n\t\t.av_lock                 (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_lock),                   \n\t\t.cp_valid                (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_agent_cp_valid),         \n\t\t.cp_data                 (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_agent_cp_data),          \n\t\t.cp_startofpacket        (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_agent_cp_startofpacket), \n\t\t.cp_endofpacket          (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_agent_cp_endofpacket),   \n\t\t.cp_ready                (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_agent_cp_ready),         \n\t\t.rp_valid                (limiter_rsp_src_valid),                                                                   \n\t\t.rp_data                 (limiter_rsp_src_data),                                                                    \n\t\t.rp_channel              (limiter_rsp_src_channel),                                                                 \n\t\t.rp_startofpacket        (limiter_rsp_src_startofpacket),                                                           \n\t\t.rp_endofpacket          (limiter_rsp_src_endofpacket),                                                             \n\t\t.rp_ready                (limiter_rsp_src_ready),                                                                   \n\t\t.av_response             (),                                                                                        \n\t\t.av_writeresponserequest (1'b0),                                                                                    \n\t\t.av_writeresponsevalid   ()                                                                                         \n\t);\n\n\taltera_merlin_axi_slave_ni #(\n\t\t.PKT_QOS_H                   (213),\n\t\t.PKT_QOS_L                   (213),\n\t\t.PKT_THREAD_ID_H             (216),\n\t\t.PKT_THREAD_ID_L             (216),\n\t\t.PKT_RESPONSE_STATUS_H       (225),\n\t\t.PKT_RESPONSE_STATUS_L       (224),\n\t\t.PKT_BEGIN_BURST             (212),\n\t\t.PKT_CACHE_H                 (223),\n\t\t.PKT_CACHE_L                 (220),\n\t\t.PKT_DATA_SIDEBAND_H         (211),\n\t\t.PKT_DATA_SIDEBAND_L         (211),\n\t\t.PKT_ADDR_SIDEBAND_H         (210),\n\t\t.PKT_ADDR_SIDEBAND_L         (206),\n\t\t.PKT_BURST_TYPE_H            (205),\n\t\t.PKT_BURST_TYPE_L            (204),\n\t\t.PKT_PROTECTION_H            (219),\n\t\t.PKT_PROTECTION_L            (217),\n\t\t.PKT_BURST_SIZE_H            (203),\n\t\t.PKT_BURST_SIZE_L            (201),\n\t\t.PKT_BURSTWRAP_H             (200),\n\t\t.PKT_BURSTWRAP_L             (192),\n\t\t.PKT_BYTE_CNT_H              (191),\n\t\t.PKT_BYTE_CNT_L              (182),\n\t\t.PKT_ADDR_H                  (175),\n\t\t.PKT_ADDR_L                  (144),\n\t\t.PKT_TRANS_EXCLUSIVE         (181),\n\t\t.PKT_TRANS_LOCK              (180),\n\t\t.PKT_TRANS_COMPRESSED_READ   (176),\n\t\t.PKT_TRANS_POSTED            (177),\n\t\t.PKT_TRANS_WRITE             (178),\n\t\t.PKT_TRANS_READ              (179),\n\t\t.PKT_DATA_H                  (127),\n\t\t.PKT_DATA_L                  (0),\n\t\t.PKT_BYTEEN_H                (143),\n\t\t.PKT_BYTEEN_L                (128),\n\t\t.PKT_SRC_ID_H                (214),\n\t\t.PKT_SRC_ID_L                (214),\n\t\t.PKT_DEST_ID_H               (215),\n\t\t.PKT_DEST_ID_L               (215),\n\t\t.PKT_ORI_BURST_SIZE_L        (226),\n\t\t.PKT_ORI_BURST_SIZE_H        (228),\n\t\t.ADDR_USER_WIDTH             (5),\n\t\t.DATA_USER_WIDTH             (1),\n\t\t.ST_DATA_W                   (229),\n\t\t.ADDR_WIDTH                  (32),\n\t\t.RDATA_WIDTH                 (128),\n\t\t.WDATA_WIDTH                 (128),\n\t\t.ST_CHANNEL_W                (2),\n\t\t.AXI_SLAVE_ID_W              (8),\n\t\t.PASS_ID_TO_SLAVE            (1),\n\t\t.AXI_VERSION                 (\"AXI3\"),\n\t\t.WRITE_ACCEPTANCE_CAPABILITY (8),\n\t\t.READ_ACCEPTANCE_CAPABILITY  (8)\n\t) hps_0_f2h_axi_slave_agent (\n\t\t.aclk                   (clk_50_clk_clk),                                                    \n\t\t.aresetn                (~hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset), \n\t\t.read_cp_valid          (agent_pipeline_001_source0_valid),                                  \n\t\t.read_cp_ready          (agent_pipeline_001_source0_ready),                                  \n\t\t.read_cp_data           (agent_pipeline_001_source0_data),                                   \n\t\t.read_cp_channel        (agent_pipeline_001_source0_channel),                                \n\t\t.read_cp_startofpacket  (agent_pipeline_001_source0_startofpacket),                          \n\t\t.read_cp_endofpacket    (agent_pipeline_001_source0_endofpacket),                            \n\t\t.write_cp_ready         (agent_pipeline_source0_ready),                                      \n\t\t.write_cp_valid         (agent_pipeline_source0_valid),                                      \n\t\t.write_cp_data          (agent_pipeline_source0_data),                                       \n\t\t.write_cp_channel       (agent_pipeline_source0_channel),                                    \n\t\t.write_cp_startofpacket (agent_pipeline_source0_startofpacket),                              \n\t\t.write_cp_endofpacket   (agent_pipeline_source0_endofpacket),                                \n\t\t.read_rp_ready          (hps_0_f2h_axi_slave_agent_read_rp_ready),                           \n\t\t.read_rp_valid          (hps_0_f2h_axi_slave_agent_read_rp_valid),                           \n\t\t.read_rp_data           (hps_0_f2h_axi_slave_agent_read_rp_data),                            \n\t\t.read_rp_startofpacket  (hps_0_f2h_axi_slave_agent_read_rp_startofpacket),                   \n\t\t.read_rp_endofpacket    (hps_0_f2h_axi_slave_agent_read_rp_endofpacket),                     \n\t\t.write_rp_ready         (hps_0_f2h_axi_slave_agent_write_rp_ready),                          \n\t\t.write_rp_valid         (hps_0_f2h_axi_slave_agent_write_rp_valid),                          \n\t\t.write_rp_data          (hps_0_f2h_axi_slave_agent_write_rp_data),                           \n\t\t.write_rp_startofpacket (hps_0_f2h_axi_slave_agent_write_rp_startofpacket),                  \n\t\t.write_rp_endofpacket   (hps_0_f2h_axi_slave_agent_write_rp_endofpacket),                    \n\t\t.awid                   (hps_0_f2h_axi_slave_awid),                                          \n\t\t.awaddr                 (hps_0_f2h_axi_slave_awaddr),                                        \n\t\t.awlen                  (hps_0_f2h_axi_slave_awlen),                                         \n\t\t.awsize                 (hps_0_f2h_axi_slave_awsize),                                        \n\t\t.awburst                (hps_0_f2h_axi_slave_awburst),                                       \n\t\t.awlock                 (hps_0_f2h_axi_slave_awlock),                                        \n\t\t.awcache                (hps_0_f2h_axi_slave_awcache),                                       \n\t\t.awprot                 (hps_0_f2h_axi_slave_awprot),                                        \n\t\t.awuser                 (hps_0_f2h_axi_slave_awuser),                                        \n\t\t.awvalid                (hps_0_f2h_axi_slave_awvalid),                                       \n\t\t.awready                (hps_0_f2h_axi_slave_awready),                                       \n\t\t.wid                    (hps_0_f2h_axi_slave_wid),                                           \n\t\t.wdata                  (hps_0_f2h_axi_slave_wdata),                                         \n\t\t.wstrb                  (hps_0_f2h_axi_slave_wstrb),                                         \n\t\t.wlast                  (hps_0_f2h_axi_slave_wlast),                                         \n\t\t.wvalid                 (hps_0_f2h_axi_slave_wvalid),                                        \n\t\t.wready                 (hps_0_f2h_axi_slave_wready),                                        \n\t\t.bid                    (hps_0_f2h_axi_slave_bid),                                           \n\t\t.bresp                  (hps_0_f2h_axi_slave_bresp),                                         \n\t\t.bvalid                 (hps_0_f2h_axi_slave_bvalid),                                        \n\t\t.bready                 (hps_0_f2h_axi_slave_bready),                                        \n\t\t.arid                   (hps_0_f2h_axi_slave_arid),                                          \n\t\t.araddr                 (hps_0_f2h_axi_slave_araddr),                                        \n\t\t.arlen                  (hps_0_f2h_axi_slave_arlen),                                         \n\t\t.arsize                 (hps_0_f2h_axi_slave_arsize),                                        \n\t\t.arburst                (hps_0_f2h_axi_slave_arburst),                                       \n\t\t.arlock                 (hps_0_f2h_axi_slave_arlock),                                        \n\t\t.arcache                (hps_0_f2h_axi_slave_arcache),                                       \n\t\t.arprot                 (hps_0_f2h_axi_slave_arprot),                                        \n\t\t.aruser                 (hps_0_f2h_axi_slave_aruser),                                        \n\t\t.arvalid                (hps_0_f2h_axi_slave_arvalid),                                       \n\t\t.arready                (hps_0_f2h_axi_slave_arready),                                       \n\t\t.rid                    (hps_0_f2h_axi_slave_rid),                                           \n\t\t.rdata                  (hps_0_f2h_axi_slave_rdata),                                         \n\t\t.rresp                  (hps_0_f2h_axi_slave_rresp),                                         \n\t\t.rlast                  (hps_0_f2h_axi_slave_rlast),                                         \n\t\t.rvalid                 (hps_0_f2h_axi_slave_rvalid),                                        \n\t\t.rready                 (hps_0_f2h_axi_slave_rready)                                         \n\t);\n\n\tDE1_SoC_QSYS_mm_interconnect_4_addr_router addr_router (\n\t\t.sink_ready         (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_agent_cp_ready),         \n\t\t.sink_valid         (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_agent_cp_valid),         \n\t\t.sink_data          (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_agent_cp_data),          \n\t\t.sink_startofpacket (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_agent_cp_startofpacket), \n\t\t.sink_endofpacket   (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_agent_cp_endofpacket),   \n\t\t.clk                (pll_sys_outclk0_clk),                                                                     \n\t\t.reset              (alt_vip_vfr_0_clock_master_reset_reset_bridge_in_reset_reset),                            \n\t\t.src_ready          (addr_router_src_ready),                                                                   \n\t\t.src_valid          (addr_router_src_valid),                                                                   \n\t\t.src_data           (addr_router_src_data),                                                                    \n\t\t.src_channel        (addr_router_src_channel),                                                                 \n\t\t.src_startofpacket  (addr_router_src_startofpacket),                                                           \n\t\t.src_endofpacket    (addr_router_src_endofpacket)                                                              \n\t);\n\n\tDE1_SoC_QSYS_mm_interconnect_4_id_router id_router (\n\t\t.sink_ready         (agent_pipeline_002_source0_ready),                                 \n\t\t.sink_valid         (agent_pipeline_002_source0_valid),                                 \n\t\t.sink_data          (agent_pipeline_002_source0_data),                                  \n\t\t.sink_startofpacket (agent_pipeline_002_source0_startofpacket),                         \n\t\t.sink_endofpacket   (agent_pipeline_002_source0_endofpacket),                           \n\t\t.clk                (clk_50_clk_clk),                                                   \n\t\t.reset              (hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset), \n\t\t.src_ready          (id_router_src_ready),                                              \n\t\t.src_valid          (id_router_src_valid),                                              \n\t\t.src_data           (id_router_src_data),                                               \n\t\t.src_channel        (id_router_src_channel),                                            \n\t\t.src_startofpacket  (id_router_src_startofpacket),                                      \n\t\t.src_endofpacket    (id_router_src_endofpacket)                                         \n\t);\n\n\tDE1_SoC_QSYS_mm_interconnect_4_id_router id_router_001 (\n\t\t.sink_ready         (agent_pipeline_003_source0_ready),                                 \n\t\t.sink_valid         (agent_pipeline_003_source0_valid),                                 \n\t\t.sink_data          (agent_pipeline_003_source0_data),                                  \n\t\t.sink_startofpacket (agent_pipeline_003_source0_startofpacket),                         \n\t\t.sink_endofpacket   (agent_pipeline_003_source0_endofpacket),                           \n\t\t.clk                (clk_50_clk_clk),                                                   \n\t\t.reset              (hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset), \n\t\t.src_ready          (id_router_001_src_ready),                                          \n\t\t.src_valid          (id_router_001_src_valid),                                          \n\t\t.src_data           (id_router_001_src_data),                                           \n\t\t.src_channel        (id_router_001_src_channel),                                        \n\t\t.src_startofpacket  (id_router_001_src_startofpacket),                                  \n\t\t.src_endofpacket    (id_router_001_src_endofpacket)                                     \n\t);\n\n\taltera_merlin_traffic_limiter #(\n\t\t.PKT_DEST_ID_H             (215),\n\t\t.PKT_DEST_ID_L             (215),\n\t\t.PKT_SRC_ID_H              (214),\n\t\t.PKT_SRC_ID_L              (214),\n\t\t.PKT_TRANS_POSTED          (177),\n\t\t.PKT_TRANS_WRITE           (178),\n\t\t.MAX_OUTSTANDING_RESPONSES (30),\n\t\t.PIPELINED                 (0),\n\t\t.ST_DATA_W                 (229),\n\t\t.ST_CHANNEL_W              (2),\n\t\t.VALID_WIDTH               (1),\n\t\t.ENFORCE_ORDER             (1),\n\t\t.PREVENT_HAZARDS           (1),\n\t\t.PKT_BYTE_CNT_H            (191),\n\t\t.PKT_BYTE_CNT_L            (182),\n\t\t.PKT_BYTEEN_H              (143),\n\t\t.PKT_BYTEEN_L              (128),\n\t\t.REORDER                   (0)\n\t) limiter (\n\t\t.clk                    (pll_sys_outclk0_clk),                                          \n\t\t.reset                  (alt_vip_vfr_0_clock_master_reset_reset_bridge_in_reset_reset), \n\t\t.cmd_sink_ready         (addr_router_src_ready),                                        \n\t\t.cmd_sink_valid         (addr_router_src_valid),                                        \n\t\t.cmd_sink_data          (addr_router_src_data),                                         \n\t\t.cmd_sink_channel       (addr_router_src_channel),                                      \n\t\t.cmd_sink_startofpacket (addr_router_src_startofpacket),                                \n\t\t.cmd_sink_endofpacket   (addr_router_src_endofpacket),                                  \n\t\t.cmd_src_ready          (limiter_cmd_src_ready),                                        \n\t\t.cmd_src_data           (limiter_cmd_src_data),                                         \n\t\t.cmd_src_channel        (limiter_cmd_src_channel),                                      \n\t\t.cmd_src_startofpacket  (limiter_cmd_src_startofpacket),                                \n\t\t.cmd_src_endofpacket    (limiter_cmd_src_endofpacket),                                  \n\t\t.cmd_src_valid          (limiter_cmd_src_valid),                                        \n\t\t.rsp_sink_ready         (limiter_pipeline_001_source0_ready),                           \n\t\t.rsp_sink_valid         (limiter_pipeline_001_source0_valid),                           \n\t\t.rsp_sink_channel       (limiter_pipeline_001_source0_channel),                         \n\t\t.rsp_sink_data          (limiter_pipeline_001_source0_data),                            \n\t\t.rsp_sink_startofpacket (limiter_pipeline_001_source0_startofpacket),                   \n\t\t.rsp_sink_endofpacket   (limiter_pipeline_001_source0_endofpacket),                     \n\t\t.rsp_src_ready          (limiter_rsp_src_ready),                                        \n\t\t.rsp_src_valid          (limiter_rsp_src_valid),                                        \n\t\t.rsp_src_data           (limiter_rsp_src_data),                                         \n\t\t.rsp_src_channel        (limiter_rsp_src_channel),                                      \n\t\t.rsp_src_startofpacket  (limiter_rsp_src_startofpacket),                                \n\t\t.rsp_src_endofpacket    (limiter_rsp_src_endofpacket)                                   \n\t);\n\n\taltera_merlin_burst_adapter #(\n\t\t.PKT_ADDR_H                (175),\n\t\t.PKT_ADDR_L                (144),\n\t\t.PKT_BEGIN_BURST           (212),\n\t\t.PKT_BYTE_CNT_H            (191),\n\t\t.PKT_BYTE_CNT_L            (182),\n\t\t.PKT_BYTEEN_H              (143),\n\t\t.PKT_BYTEEN_L              (128),\n\t\t.PKT_BURST_SIZE_H          (203),\n\t\t.PKT_BURST_SIZE_L          (201),\n\t\t.PKT_BURST_TYPE_H          (205),\n\t\t.PKT_BURST_TYPE_L          (204),\n\t\t.PKT_BURSTWRAP_H           (200),\n\t\t.PKT_BURSTWRAP_L           (192),\n\t\t.PKT_TRANS_COMPRESSED_READ (176),\n\t\t.PKT_TRANS_WRITE           (178),\n\t\t.PKT_TRANS_READ            (179),\n\t\t.OUT_NARROW_SIZE           (1),\n\t\t.IN_NARROW_SIZE            (0),\n\t\t.OUT_FIXED                 (1),\n\t\t.OUT_COMPLETE_WRAP         (1),\n\t\t.ST_DATA_W                 (229),\n\t\t.ST_CHANNEL_W              (2),\n\t\t.OUT_BYTE_CNT_H            (190),\n\t\t.OUT_BURSTWRAP_H           (200),\n\t\t.COMPRESSED_READ_SUPPORT   (1),\n\t\t.BYTEENABLE_SYNTHESIS      (0),\n\t\t.PIPE_INPUTS               (0),\n\t\t.NO_WRAP_SUPPORT           (0),\n\t\t.BURSTWRAP_CONST_MASK      (511),\n\t\t.BURSTWRAP_CONST_VALUE     (511)\n\t) burst_adapter (\n\t\t.clk                   (clk_50_clk_clk),                                                   \n\t\t.reset                 (hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset), \n\t\t.sink0_valid           (cmd_xbar_mux_src_valid),                                           \n\t\t.sink0_data            (cmd_xbar_mux_src_data),                                            \n\t\t.sink0_channel         (cmd_xbar_mux_src_channel),                                         \n\t\t.sink0_startofpacket   (cmd_xbar_mux_src_startofpacket),                                   \n\t\t.sink0_endofpacket     (cmd_xbar_mux_src_endofpacket),                                     \n\t\t.sink0_ready           (cmd_xbar_mux_src_ready),                                           \n\t\t.source0_valid         (burst_adapter_source0_valid),                                      \n\t\t.source0_data          (burst_adapter_source0_data),                                       \n\t\t.source0_channel       (burst_adapter_source0_channel),                                    \n\t\t.source0_startofpacket (burst_adapter_source0_startofpacket),                              \n\t\t.source0_endofpacket   (burst_adapter_source0_endofpacket),                                \n\t\t.source0_ready         (burst_adapter_source0_ready)                                       \n\t);\n\n\taltera_merlin_burst_adapter #(\n\t\t.PKT_ADDR_H                (175),\n\t\t.PKT_ADDR_L                (144),\n\t\t.PKT_BEGIN_BURST           (212),\n\t\t.PKT_BYTE_CNT_H            (191),\n\t\t.PKT_BYTE_CNT_L            (182),\n\t\t.PKT_BYTEEN_H              (143),\n\t\t.PKT_BYTEEN_L              (128),\n\t\t.PKT_BURST_SIZE_H          (203),\n\t\t.PKT_BURST_SIZE_L          (201),\n\t\t.PKT_BURST_TYPE_H          (205),\n\t\t.PKT_BURST_TYPE_L          (204),\n\t\t.PKT_BURSTWRAP_H           (200),\n\t\t.PKT_BURSTWRAP_L           (192),\n\t\t.PKT_TRANS_COMPRESSED_READ (176),\n\t\t.PKT_TRANS_WRITE           (178),\n\t\t.PKT_TRANS_READ            (179),\n\t\t.OUT_NARROW_SIZE           (1),\n\t\t.IN_NARROW_SIZE            (0),\n\t\t.OUT_FIXED                 (1),\n\t\t.OUT_COMPLETE_WRAP         (1),\n\t\t.ST_DATA_W                 (229),\n\t\t.ST_CHANNEL_W              (2),\n\t\t.OUT_BYTE_CNT_H            (190),\n\t\t.OUT_BURSTWRAP_H           (200),\n\t\t.COMPRESSED_READ_SUPPORT   (1),\n\t\t.BYTEENABLE_SYNTHESIS      (0),\n\t\t.PIPE_INPUTS               (0),\n\t\t.NO_WRAP_SUPPORT           (0),\n\t\t.BURSTWRAP_CONST_MASK      (511),\n\t\t.BURSTWRAP_CONST_VALUE     (511)\n\t) burst_adapter_001 (\n\t\t.clk                   (clk_50_clk_clk),                                                   \n\t\t.reset                 (hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset), \n\t\t.sink0_valid           (cmd_xbar_mux_001_src_valid),                                       \n\t\t.sink0_data            (cmd_xbar_mux_001_src_data),                                        \n\t\t.sink0_channel         (cmd_xbar_mux_001_src_channel),                                     \n\t\t.sink0_startofpacket   (cmd_xbar_mux_001_src_startofpacket),                               \n\t\t.sink0_endofpacket     (cmd_xbar_mux_001_src_endofpacket),                                 \n\t\t.sink0_ready           (cmd_xbar_mux_001_src_ready),                                       \n\t\t.source0_valid         (burst_adapter_001_source0_valid),                                  \n\t\t.source0_data          (burst_adapter_001_source0_data),                                   \n\t\t.source0_channel       (burst_adapter_001_source0_channel),                                \n\t\t.source0_startofpacket (burst_adapter_001_source0_startofpacket),                          \n\t\t.source0_endofpacket   (burst_adapter_001_source0_endofpacket),                            \n\t\t.source0_ready         (burst_adapter_001_source0_ready)                                   \n\t);\n\n\tDE1_SoC_QSYS_mm_interconnect_4_cmd_xbar_demux cmd_xbar_demux (\n\t\t.clk                (pll_sys_outclk0_clk),                                          \n\t\t.reset              (alt_vip_vfr_0_clock_master_reset_reset_bridge_in_reset_reset), \n\t\t.sink_ready         (limiter_pipeline_source0_ready),                               \n\t\t.sink_channel       (limiter_pipeline_source0_channel),                             \n\t\t.sink_data          (limiter_pipeline_source0_data),                                \n\t\t.sink_startofpacket (limiter_pipeline_source0_startofpacket),                       \n\t\t.sink_endofpacket   (limiter_pipeline_source0_endofpacket),                         \n\t\t.sink_valid         (limiter_pipeline_source0_valid),                               \n\t\t.src0_ready         (cmd_xbar_demux_src0_ready),                                    \n\t\t.src0_valid         (cmd_xbar_demux_src0_valid),                                    \n\t\t.src0_data          (cmd_xbar_demux_src0_data),                                     \n\t\t.src0_channel       (cmd_xbar_demux_src0_channel),                                  \n\t\t.src0_startofpacket (cmd_xbar_demux_src0_startofpacket),                            \n\t\t.src0_endofpacket   (cmd_xbar_demux_src0_endofpacket),                              \n\t\t.src1_ready         (cmd_xbar_demux_src1_ready),                                    \n\t\t.src1_valid         (cmd_xbar_demux_src1_valid),                                    \n\t\t.src1_data          (cmd_xbar_demux_src1_data),                                     \n\t\t.src1_channel       (cmd_xbar_demux_src1_channel),                                  \n\t\t.src1_startofpacket (cmd_xbar_demux_src1_startofpacket),                            \n\t\t.src1_endofpacket   (cmd_xbar_demux_src1_endofpacket)                               \n\t);\n\n\tDE1_SoC_QSYS_mm_interconnect_4_cmd_xbar_mux cmd_xbar_mux (\n\t\t.clk                 (clk_50_clk_clk),                                                   \n\t\t.reset               (hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset), \n\t\t.src_ready           (cmd_xbar_mux_src_ready),                                           \n\t\t.src_valid           (cmd_xbar_mux_src_valid),                                           \n\t\t.src_data            (cmd_xbar_mux_src_data),                                            \n\t\t.src_channel         (cmd_xbar_mux_src_channel),                                         \n\t\t.src_startofpacket   (cmd_xbar_mux_src_startofpacket),                                   \n\t\t.src_endofpacket     (cmd_xbar_mux_src_endofpacket),                                     \n\t\t.sink0_ready         (crosser_out_ready),                                                \n\t\t.sink0_valid         (crosser_out_valid),                                                \n\t\t.sink0_channel       (crosser_out_channel),                                              \n\t\t.sink0_data          (crosser_out_data),                                                 \n\t\t.sink0_startofpacket (crosser_out_startofpacket),                                        \n\t\t.sink0_endofpacket   (crosser_out_endofpacket)                                           \n\t);\n\n\tDE1_SoC_QSYS_mm_interconnect_4_cmd_xbar_mux cmd_xbar_mux_001 (\n\t\t.clk                 (clk_50_clk_clk),                                                   \n\t\t.reset               (hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset), \n\t\t.src_ready           (cmd_xbar_mux_001_src_ready),                                       \n\t\t.src_valid           (cmd_xbar_mux_001_src_valid),                                       \n\t\t.src_data            (cmd_xbar_mux_001_src_data),                                        \n\t\t.src_channel         (cmd_xbar_mux_001_src_channel),                                     \n\t\t.src_startofpacket   (cmd_xbar_mux_001_src_startofpacket),                               \n\t\t.src_endofpacket     (cmd_xbar_mux_001_src_endofpacket),                                 \n\t\t.sink0_ready         (crosser_001_out_ready),                                            \n\t\t.sink0_valid         (crosser_001_out_valid),                                            \n\t\t.sink0_channel       (crosser_001_out_channel),                                          \n\t\t.sink0_data          (crosser_001_out_data),                                             \n\t\t.sink0_startofpacket (crosser_001_out_startofpacket),                                    \n\t\t.sink0_endofpacket   (crosser_001_out_endofpacket)                                       \n\t);\n\n\tDE1_SoC_QSYS_mm_interconnect_4_rsp_xbar_demux rsp_xbar_demux (\n\t\t.clk                (clk_50_clk_clk),                                                   \n\t\t.reset              (hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset), \n\t\t.sink_ready         (id_router_src_ready),                                              \n\t\t.sink_channel       (id_router_src_channel),                                            \n\t\t.sink_data          (id_router_src_data),                                               \n\t\t.sink_startofpacket (id_router_src_startofpacket),                                      \n\t\t.sink_endofpacket   (id_router_src_endofpacket),                                        \n\t\t.sink_valid         (id_router_src_valid),                                              \n\t\t.src0_ready         (rsp_xbar_demux_src0_ready),                                        \n\t\t.src0_valid         (rsp_xbar_demux_src0_valid),                                        \n\t\t.src0_data          (rsp_xbar_demux_src0_data),                                         \n\t\t.src0_channel       (rsp_xbar_demux_src0_channel),                                      \n\t\t.src0_startofpacket (rsp_xbar_demux_src0_startofpacket),                                \n\t\t.src0_endofpacket   (rsp_xbar_demux_src0_endofpacket)                                   \n\t);\n\n\tDE1_SoC_QSYS_mm_interconnect_4_rsp_xbar_demux rsp_xbar_demux_001 (\n\t\t.clk                (clk_50_clk_clk),                                                   \n\t\t.reset              (hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset), \n\t\t.sink_ready         (id_router_001_src_ready),                                          \n\t\t.sink_channel       (id_router_001_src_channel),                                        \n\t\t.sink_data          (id_router_001_src_data),                                           \n\t\t.sink_startofpacket (id_router_001_src_startofpacket),                                  \n\t\t.sink_endofpacket   (id_router_001_src_endofpacket),                                    \n\t\t.sink_valid         (id_router_001_src_valid),                                          \n\t\t.src0_ready         (rsp_xbar_demux_001_src0_ready),                                    \n\t\t.src0_valid         (rsp_xbar_demux_001_src0_valid),                                    \n\t\t.src0_data          (rsp_xbar_demux_001_src0_data),                                     \n\t\t.src0_channel       (rsp_xbar_demux_001_src0_channel),                                  \n\t\t.src0_startofpacket (rsp_xbar_demux_001_src0_startofpacket),                            \n\t\t.src0_endofpacket   (rsp_xbar_demux_001_src0_endofpacket)                               \n\t);\n\n\tDE1_SoC_QSYS_mm_interconnect_4_rsp_xbar_mux rsp_xbar_mux (\n\t\t.clk                 (pll_sys_outclk0_clk),                                          \n\t\t.reset               (alt_vip_vfr_0_clock_master_reset_reset_bridge_in_reset_reset), \n\t\t.src_ready           (rsp_xbar_mux_src_ready),                                       \n\t\t.src_valid           (rsp_xbar_mux_src_valid),                                       \n\t\t.src_data            (rsp_xbar_mux_src_data),                                        \n\t\t.src_channel         (rsp_xbar_mux_src_channel),                                     \n\t\t.src_startofpacket   (rsp_xbar_mux_src_startofpacket),                               \n\t\t.src_endofpacket     (rsp_xbar_mux_src_endofpacket),                                 \n\t\t.sink0_ready         (crosser_002_out_ready),                                        \n\t\t.sink0_valid         (crosser_002_out_valid),                                        \n\t\t.sink0_channel       (crosser_002_out_channel),                                      \n\t\t.sink0_data          (crosser_002_out_data),                                         \n\t\t.sink0_startofpacket (crosser_002_out_startofpacket),                                \n\t\t.sink0_endofpacket   (crosser_002_out_endofpacket),                                  \n\t\t.sink1_ready         (crosser_003_out_ready),                                        \n\t\t.sink1_valid         (crosser_003_out_valid),                                        \n\t\t.sink1_channel       (crosser_003_out_channel),                                      \n\t\t.sink1_data          (crosser_003_out_data),                                         \n\t\t.sink1_startofpacket (crosser_003_out_startofpacket),                                \n\t\t.sink1_endofpacket   (crosser_003_out_endofpacket)                                   \n\t);\n\n\taltera_avalon_st_handshake_clock_crosser #(\n\t\t.DATA_WIDTH          (229),\n\t\t.BITS_PER_SYMBOL     (229),\n\t\t.USE_PACKETS         (1),\n\t\t.USE_CHANNEL         (1),\n\t\t.CHANNEL_WIDTH       (2),\n\t\t.USE_ERROR           (0),\n\t\t.ERROR_WIDTH         (1),\n\t\t.VALID_SYNC_DEPTH    (2),\n\t\t.READY_SYNC_DEPTH    (2),\n\t\t.USE_OUTPUT_PIPELINE (0)\n\t) crosser (\n\t\t.in_clk            (pll_sys_outclk0_clk),                                              \n\t\t.in_reset          (alt_vip_vfr_0_clock_master_reset_reset_bridge_in_reset_reset),     \n\t\t.out_clk           (clk_50_clk_clk),                                                   \n\t\t.out_reset         (hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset), \n\t\t.in_ready          (cmd_xbar_demux_src0_ready),                                        \n\t\t.in_valid          (cmd_xbar_demux_src0_valid),                                        \n\t\t.in_startofpacket  (cmd_xbar_demux_src0_startofpacket),                                \n\t\t.in_endofpacket    (cmd_xbar_demux_src0_endofpacket),                                  \n\t\t.in_channel        (cmd_xbar_demux_src0_channel),                                      \n\t\t.in_data           (cmd_xbar_demux_src0_data),                                         \n\t\t.out_ready         (crosser_out_ready),                                                \n\t\t.out_valid         (crosser_out_valid),                                                \n\t\t.out_startofpacket (crosser_out_startofpacket),                                        \n\t\t.out_endofpacket   (crosser_out_endofpacket),                                          \n\t\t.out_channel       (crosser_out_channel),                                              \n\t\t.out_data          (crosser_out_data),                                                 \n\t\t.in_empty          (1'b0),                                                             \n\t\t.in_error          (1'b0),                                                             \n\t\t.out_empty         (),                                                                 \n\t\t.out_error         ()                                                                  \n\t);\n\n\taltera_avalon_st_handshake_clock_crosser #(\n\t\t.DATA_WIDTH          (229),\n\t\t.BITS_PER_SYMBOL     (229),\n\t\t.USE_PACKETS         (1),\n\t\t.USE_CHANNEL         (1),\n\t\t.CHANNEL_WIDTH       (2),\n\t\t.USE_ERROR           (0),\n\t\t.ERROR_WIDTH         (1),\n\t\t.VALID_SYNC_DEPTH    (2),\n\t\t.READY_SYNC_DEPTH    (2),\n\t\t.USE_OUTPUT_PIPELINE (0)\n\t) crosser_001 (\n\t\t.in_clk            (pll_sys_outclk0_clk),                                              \n\t\t.in_reset          (alt_vip_vfr_0_clock_master_reset_reset_bridge_in_reset_reset),     \n\t\t.out_clk           (clk_50_clk_clk),                                                   \n\t\t.out_reset         (hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset), \n\t\t.in_ready          (cmd_xbar_demux_src1_ready),                                        \n\t\t.in_valid          (cmd_xbar_demux_src1_valid),                                        \n\t\t.in_startofpacket  (cmd_xbar_demux_src1_startofpacket),                                \n\t\t.in_endofpacket    (cmd_xbar_demux_src1_endofpacket),                                  \n\t\t.in_channel        (cmd_xbar_demux_src1_channel),                                      \n\t\t.in_data           (cmd_xbar_demux_src1_data),                                         \n\t\t.out_ready         (crosser_001_out_ready),                                            \n\t\t.out_valid         (crosser_001_out_valid),                                            \n\t\t.out_startofpacket (crosser_001_out_startofpacket),                                    \n\t\t.out_endofpacket   (crosser_001_out_endofpacket),                                      \n\t\t.out_channel       (crosser_001_out_channel),                                          \n\t\t.out_data          (crosser_001_out_data),                                             \n\t\t.in_empty          (1'b0),                                                             \n\t\t.in_error          (1'b0),                                                             \n\t\t.out_empty         (),                                                                 \n\t\t.out_error         ()                                                                  \n\t);\n\n\taltera_avalon_st_handshake_clock_crosser #(\n\t\t.DATA_WIDTH          (229),\n\t\t.BITS_PER_SYMBOL     (229),\n\t\t.USE_PACKETS         (1),\n\t\t.USE_CHANNEL         (1),\n\t\t.CHANNEL_WIDTH       (2),\n\t\t.USE_ERROR           (0),\n\t\t.ERROR_WIDTH         (1),\n\t\t.VALID_SYNC_DEPTH    (2),\n\t\t.READY_SYNC_DEPTH    (2),\n\t\t.USE_OUTPUT_PIPELINE (0)\n\t) crosser_002 (\n\t\t.in_clk            (clk_50_clk_clk),                                                   \n\t\t.in_reset          (hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset), \n\t\t.out_clk           (pll_sys_outclk0_clk),                                              \n\t\t.out_reset         (alt_vip_vfr_0_clock_master_reset_reset_bridge_in_reset_reset),     \n\t\t.in_ready          (rsp_xbar_demux_src0_ready),                                        \n\t\t.in_valid          (rsp_xbar_demux_src0_valid),                                        \n\t\t.in_startofpacket  (rsp_xbar_demux_src0_startofpacket),                                \n\t\t.in_endofpacket    (rsp_xbar_demux_src0_endofpacket),                                  \n\t\t.in_channel        (rsp_xbar_demux_src0_channel),                                      \n\t\t.in_data           (rsp_xbar_demux_src0_data),                                         \n\t\t.out_ready         (crosser_002_out_ready),                                            \n\t\t.out_valid         (crosser_002_out_valid),                                            \n\t\t.out_startofpacket (crosser_002_out_startofpacket),                                    \n\t\t.out_endofpacket   (crosser_002_out_endofpacket),                                      \n\t\t.out_channel       (crosser_002_out_channel),                                          \n\t\t.out_data          (crosser_002_out_data),                                             \n\t\t.in_empty          (1'b0),                                                             \n\t\t.in_error          (1'b0),                                                             \n\t\t.out_empty         (),                                                                 \n\t\t.out_error         ()                                                                  \n\t);\n\n\taltera_avalon_st_handshake_clock_crosser #(\n\t\t.DATA_WIDTH          (229),\n\t\t.BITS_PER_SYMBOL     (229),\n\t\t.USE_PACKETS         (1),\n\t\t.USE_CHANNEL         (1),\n\t\t.CHANNEL_WIDTH       (2),\n\t\t.USE_ERROR           (0),\n\t\t.ERROR_WIDTH         (1),\n\t\t.VALID_SYNC_DEPTH    (2),\n\t\t.READY_SYNC_DEPTH    (2),\n\t\t.USE_OUTPUT_PIPELINE (0)\n\t) crosser_003 (\n\t\t.in_clk            (clk_50_clk_clk),                                                   \n\t\t.in_reset          (hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset), \n\t\t.out_clk           (pll_sys_outclk0_clk),                                              \n\t\t.out_reset         (alt_vip_vfr_0_clock_master_reset_reset_bridge_in_reset_reset),     \n\t\t.in_ready          (rsp_xbar_demux_001_src0_ready),                                    \n\t\t.in_valid          (rsp_xbar_demux_001_src0_valid),                                    \n\t\t.in_startofpacket  (rsp_xbar_demux_001_src0_startofpacket),                            \n\t\t.in_endofpacket    (rsp_xbar_demux_001_src0_endofpacket),                              \n\t\t.in_channel        (rsp_xbar_demux_001_src0_channel),                                  \n\t\t.in_data           (rsp_xbar_demux_001_src0_data),                                     \n\t\t.out_ready         (crosser_003_out_ready),                                            \n\t\t.out_valid         (crosser_003_out_valid),                                            \n\t\t.out_startofpacket (crosser_003_out_startofpacket),                                    \n\t\t.out_endofpacket   (crosser_003_out_endofpacket),                                      \n\t\t.out_channel       (crosser_003_out_channel),                                          \n\t\t.out_data          (crosser_003_out_data),                                             \n\t\t.in_empty          (1'b0),                                                             \n\t\t.in_error          (1'b0),                                                             \n\t\t.out_empty         (),                                                                 \n\t\t.out_error         ()                                                                  \n\t);\n\n\taltera_avalon_st_pipeline_stage #(\n\t\t.SYMBOLS_PER_BEAT (1),\n\t\t.BITS_PER_SYMBOL  (229),\n\t\t.USE_PACKETS      (1),\n\t\t.USE_EMPTY        (0),\n\t\t.EMPTY_WIDTH      (0),\n\t\t.CHANNEL_WIDTH    (2),\n\t\t.PACKET_WIDTH     (2),\n\t\t.ERROR_WIDTH      (0),\n\t\t.PIPELINE_READY   (1)\n\t) limiter_pipeline (\n\t\t.clk               (pll_sys_outclk0_clk),                                          \n\t\t.reset             (alt_vip_vfr_0_clock_master_reset_reset_bridge_in_reset_reset), \n\t\t.in_ready          (limiter_cmd_src_ready),                                        \n\t\t.in_valid          (limiter_cmd_src_valid),                                        \n\t\t.in_startofpacket  (limiter_cmd_src_startofpacket),                                \n\t\t.in_endofpacket    (limiter_cmd_src_endofpacket),                                  \n\t\t.in_data           (limiter_cmd_src_data),                                         \n\t\t.in_channel        (limiter_cmd_src_channel),                                      \n\t\t.out_ready         (limiter_pipeline_source0_ready),                               \n\t\t.out_valid         (limiter_pipeline_source0_valid),                               \n\t\t.out_startofpacket (limiter_pipeline_source0_startofpacket),                       \n\t\t.out_endofpacket   (limiter_pipeline_source0_endofpacket),                         \n\t\t.out_data          (limiter_pipeline_source0_data),                                \n\t\t.out_channel       (limiter_pipeline_source0_channel),                             \n\t\t.in_empty          (1'b0),                                                         \n\t\t.out_empty         (),                                                             \n\t\t.out_error         (),                                                             \n\t\t.in_error          (1'b0)                                                          \n\t);\n\n\taltera_avalon_st_pipeline_stage #(\n\t\t.SYMBOLS_PER_BEAT (1),\n\t\t.BITS_PER_SYMBOL  (229),\n\t\t.USE_PACKETS      (1),\n\t\t.USE_EMPTY        (0),\n\t\t.EMPTY_WIDTH      (0),\n\t\t.CHANNEL_WIDTH    (2),\n\t\t.PACKET_WIDTH     (2),\n\t\t.ERROR_WIDTH      (0),\n\t\t.PIPELINE_READY   (1)\n\t) limiter_pipeline_001 (\n\t\t.clk               (pll_sys_outclk0_clk),                                          \n\t\t.reset             (alt_vip_vfr_0_clock_master_reset_reset_bridge_in_reset_reset), \n\t\t.in_ready          (rsp_xbar_mux_src_ready),                                       \n\t\t.in_valid          (rsp_xbar_mux_src_valid),                                       \n\t\t.in_startofpacket  (rsp_xbar_mux_src_startofpacket),                               \n\t\t.in_endofpacket    (rsp_xbar_mux_src_endofpacket),                                 \n\t\t.in_data           (rsp_xbar_mux_src_data),                                        \n\t\t.in_channel        (rsp_xbar_mux_src_channel),                                     \n\t\t.out_ready         (limiter_pipeline_001_source0_ready),                           \n\t\t.out_valid         (limiter_pipeline_001_source0_valid),                           \n\t\t.out_startofpacket (limiter_pipeline_001_source0_startofpacket),                   \n\t\t.out_endofpacket   (limiter_pipeline_001_source0_endofpacket),                     \n\t\t.out_data          (limiter_pipeline_001_source0_data),                            \n\t\t.out_channel       (limiter_pipeline_001_source0_channel),                         \n\t\t.in_empty          (1'b0),                                                         \n\t\t.out_empty         (),                                                             \n\t\t.out_error         (),                                                             \n\t\t.in_error          (1'b0)                                                          \n\t);\n\n\taltera_avalon_st_pipeline_stage #(\n\t\t.SYMBOLS_PER_BEAT (1),\n\t\t.BITS_PER_SYMBOL  (229),\n\t\t.USE_PACKETS      (1),\n\t\t.USE_EMPTY        (0),\n\t\t.EMPTY_WIDTH      (0),\n\t\t.CHANNEL_WIDTH    (2),\n\t\t.PACKET_WIDTH     (2),\n\t\t.ERROR_WIDTH      (0),\n\t\t.PIPELINE_READY   (1)\n\t) agent_pipeline (\n\t\t.clk               (clk_50_clk_clk),                                                   \n\t\t.reset             (hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset), \n\t\t.in_ready          (burst_adapter_source0_ready),                                      \n\t\t.in_valid          (burst_adapter_source0_valid),                                      \n\t\t.in_startofpacket  (burst_adapter_source0_startofpacket),                              \n\t\t.in_endofpacket    (burst_adapter_source0_endofpacket),                                \n\t\t.in_data           (burst_adapter_source0_data),                                       \n\t\t.in_channel        (burst_adapter_source0_channel),                                    \n\t\t.out_ready         (agent_pipeline_source0_ready),                                     \n\t\t.out_valid         (agent_pipeline_source0_valid),                                     \n\t\t.out_startofpacket (agent_pipeline_source0_startofpacket),                             \n\t\t.out_endofpacket   (agent_pipeline_source0_endofpacket),                               \n\t\t.out_data          (agent_pipeline_source0_data),                                      \n\t\t.out_channel       (agent_pipeline_source0_channel),                                   \n\t\t.in_empty          (1'b0),                                                             \n\t\t.out_empty         (),                                                                 \n\t\t.out_error         (),                                                                 \n\t\t.in_error          (1'b0)                                                              \n\t);\n\n\taltera_avalon_st_pipeline_stage #(\n\t\t.SYMBOLS_PER_BEAT (1),\n\t\t.BITS_PER_SYMBOL  (229),\n\t\t.USE_PACKETS      (1),\n\t\t.USE_EMPTY        (0),\n\t\t.EMPTY_WIDTH      (0),\n\t\t.CHANNEL_WIDTH    (2),\n\t\t.PACKET_WIDTH     (2),\n\t\t.ERROR_WIDTH      (0),\n\t\t.PIPELINE_READY   (1)\n\t) agent_pipeline_001 (\n\t\t.clk               (clk_50_clk_clk),                                                   \n\t\t.reset             (hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset), \n\t\t.in_ready          (burst_adapter_001_source0_ready),                                  \n\t\t.in_valid          (burst_adapter_001_source0_valid),                                  \n\t\t.in_startofpacket  (burst_adapter_001_source0_startofpacket),                          \n\t\t.in_endofpacket    (burst_adapter_001_source0_endofpacket),                            \n\t\t.in_data           (burst_adapter_001_source0_data),                                   \n\t\t.in_channel        (burst_adapter_001_source0_channel),                                \n\t\t.out_ready         (agent_pipeline_001_source0_ready),                                 \n\t\t.out_valid         (agent_pipeline_001_source0_valid),                                 \n\t\t.out_startofpacket (agent_pipeline_001_source0_startofpacket),                         \n\t\t.out_endofpacket   (agent_pipeline_001_source0_endofpacket),                           \n\t\t.out_data          (agent_pipeline_001_source0_data),                                  \n\t\t.out_channel       (agent_pipeline_001_source0_channel),                               \n\t\t.in_empty          (1'b0),                                                             \n\t\t.out_empty         (),                                                                 \n\t\t.out_error         (),                                                                 \n\t\t.in_error          (1'b0)                                                              \n\t);\n\n\taltera_avalon_st_pipeline_stage #(\n\t\t.SYMBOLS_PER_BEAT (1),\n\t\t.BITS_PER_SYMBOL  (229),\n\t\t.USE_PACKETS      (1),\n\t\t.USE_EMPTY        (0),\n\t\t.EMPTY_WIDTH      (0),\n\t\t.CHANNEL_WIDTH    (0),\n\t\t.PACKET_WIDTH     (2),\n\t\t.ERROR_WIDTH      (0),\n\t\t.PIPELINE_READY   (1)\n\t) agent_pipeline_002 (\n\t\t.clk               (clk_50_clk_clk),                                                   \n\t\t.reset             (hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset), \n\t\t.in_ready          (hps_0_f2h_axi_slave_agent_write_rp_ready),                         \n\t\t.in_valid          (hps_0_f2h_axi_slave_agent_write_rp_valid),                         \n\t\t.in_startofpacket  (hps_0_f2h_axi_slave_agent_write_rp_startofpacket),                 \n\t\t.in_endofpacket    (hps_0_f2h_axi_slave_agent_write_rp_endofpacket),                   \n\t\t.in_data           (hps_0_f2h_axi_slave_agent_write_rp_data),                          \n\t\t.out_ready         (agent_pipeline_002_source0_ready),                                 \n\t\t.out_valid         (agent_pipeline_002_source0_valid),                                 \n\t\t.out_startofpacket (agent_pipeline_002_source0_startofpacket),                         \n\t\t.out_endofpacket   (agent_pipeline_002_source0_endofpacket),                           \n\t\t.out_data          (agent_pipeline_002_source0_data),                                  \n\t\t.in_empty          (1'b0),                                                             \n\t\t.out_empty         (),                                                                 \n\t\t.out_error         (),                                                                 \n\t\t.in_error          (1'b0),                                                             \n\t\t.out_channel       (),                                                                 \n\t\t.in_channel        (1'b0)                                                              \n\t);\n\n\taltera_avalon_st_pipeline_stage #(\n\t\t.SYMBOLS_PER_BEAT (1),\n\t\t.BITS_PER_SYMBOL  (229),\n\t\t.USE_PACKETS      (1),\n\t\t.USE_EMPTY        (0),\n\t\t.EMPTY_WIDTH      (0),\n\t\t.CHANNEL_WIDTH    (0),\n\t\t.PACKET_WIDTH     (2),\n\t\t.ERROR_WIDTH      (0),\n\t\t.PIPELINE_READY   (1)\n\t) agent_pipeline_003 (\n\t\t.clk               (clk_50_clk_clk),                                                   \n\t\t.reset             (hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset), \n\t\t.in_ready          (hps_0_f2h_axi_slave_agent_read_rp_ready),                          \n\t\t.in_valid          (hps_0_f2h_axi_slave_agent_read_rp_valid),                          \n\t\t.in_startofpacket  (hps_0_f2h_axi_slave_agent_read_rp_startofpacket),                  \n\t\t.in_endofpacket    (hps_0_f2h_axi_slave_agent_read_rp_endofpacket),                    \n\t\t.in_data           (hps_0_f2h_axi_slave_agent_read_rp_data),                           \n\t\t.out_ready         (agent_pipeline_003_source0_ready),                                 \n\t\t.out_valid         (agent_pipeline_003_source0_valid),                                 \n\t\t.out_startofpacket (agent_pipeline_003_source0_startofpacket),                         \n\t\t.out_endofpacket   (agent_pipeline_003_source0_endofpacket),                           \n\t\t.out_data          (agent_pipeline_003_source0_data),                                  \n\t\t.in_empty          (1'b0),                                                             \n\t\t.out_empty         (),                                                                 \n\t\t.out_error         (),                                                                 \n\t\t.in_error          (1'b0),                                                             \n\t\t.out_channel       (),                                                                 \n\t\t.in_channel        (1'b0)                                                              \n\t);\n\nendmodule\n```"
        },
        {
            "role": "user",
            "content": "Based on the provided original Verilog code, its comments and above answers, generate a detailed specification for the module. Include the following information in a single, concise paragraph:\n1. The name of the module.\n2. A simple explanation of the module's functionality.\n3. The input and output ports, along with a brief explanation of each.\n4. The internal signals used within the module, with a brief explanation of their purpose.\n5. An overview of the different blocks or sections in the code and their functions.\nEnsure that the specification is clear and accurately reflects the details from the code and comments.\nYour answer should be structured and well-organized, providing a comprehensive and detailed overview of the module's design and operation.\nPlease provide your answer in the following format:\nModule name: [module name]. Module specification: [module specification]."
        },
        {
            "role": "assistant",
            "content": "Module name: DE1_SoC_QSYS_mm_interconnect_4. Module specification: This module serves as an interconnect component for a System-on-Chip (SoC) design, managing communication between an Avalon master interface (likely from a video frame reader) and an AXI slave interface (connected to a Hard Processor System). It features input ports for clock signals, reset signals, and various control and data signals from both interfaces. Output ports include control and data signals for the AXI slave interface and response signals for the Avalon master interface. Internally, the module utilizes numerous wire signals for translators, routers, arbiters, multiplexers, demultiplexers, burst adapters, and clock crossers. The module is structured into several functional blocks, including address translation, burst adaptation, arbitration, and clock domain crossing. It implements components such as Avalon-to"
        }
    ],
    "claude-message": [
        {
            "role": "user",
            "content": [
                {
                    "type": "text",
                    "text": "You are an expert in hardware design with a deep understanding of Verilog RTL codes. Now I want to train a large language model for code comment generation tasks specifically focused on Verilog RTL codes. And I want you to help me process the raw data, transforming it into suitable formats that can serve as inputs and outputs for the model."
                },
                {
                    "type": "text",
                    "text": "Name of the module and its functionality is as follows: \nModule name: DE1_SoC_QSYS_mm_interconnect_4\n\nExplanation: This module appears to be an interconnect component for a System-on-Chip (SoC) design. It handles communication between different parts of the system, specifically managing data transfers between an Avalon master interface (likely from a video frame reader) and an AXI slave interface (connected to an HPS - Hard Processor System). The module implements various components for clock domain crossing, address translation, burst adaptation, and arbitration to facilitate proper data routing and protocol conversion between the different interfaces. It includes elements like routers, multiplexers, demultiplexers, burst adapters, and clock crossers to manage the complexity of interfacing between different bus protocols and clock domains in the SoC design."
                },
                {
                    "type": "text",
                    "text": "Input and output ports and their explanation is as follows: \nBased on the provided Verilog code, here are the input and output ports of the DE1_SoC_QSYS_mm_interconnect_4 module:\n\nInput ports:\n- clk_50_clk_clk\n- pll_sys_outclk0_clk\n- alt_vip_vfr_0_clock_master_reset_reset_bridge_in_reset_reset\n- hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset\n- alt_vip_vfr_0_avalon_master_address\n- alt_vip_vfr_0_avalon_master_burstcount\n- alt_vip_vfr_0_avalon_master_read\n- hps_0_f2h_axi_slave_awready\n- hps_0_f2h_axi_slave_wready\n- hps_0_f2h_axi_slave_bid\n- hps_0_f2h_axi_slave_bresp\n- hps_0_f2h_axi_slave_bvalid\n- hps_0_f2h_axi_slave_arready\n- hps_0_f2h_axi_slave_rid\n- hps_0_f2h_axi_slave_rdata\n- hps_0_f2h_axi_slave_rresp\n- hps_0_f2h_axi_slave_rlast\n- hps_0_f2h_axi_slave_rvalid\n\nExplanation: These input ports include clock signals, reset signals, and various control and data signals from the Avalon master interface and AXI slave interface.\n\nOutput ports:\n- hps_0_f2h_axi_slave_awid\n- hps_0_f2h_axi_slave_awaddr\n- hps_0_f2h_axi_slave_awlen\n- hps_0_f2h_axi_slave_awsize\n- hps_0_f2h_axi_slave_awburst\n- hps_0_f2h_axi_slave_awlock\n- hps_0_f2h_axi_slave_awcache\n- hps_0_f2h_axi_slave_awprot\n- hps_0_f2h_axi_slave_awuser\n- hps_0_f2h_axi_slave_awvalid\n- hps_0_f2h_axi_slave_wid\n- hps_0_f2h_axi_slave_wdata\n- hps_0_f2h_axi_slave_wstrb\n- hps_0_f2h_axi_slave_wlast\n- hps_0_f2h_axi_slave_wvalid\n- hps_0_f2h_axi_slave_bready\n- hps_0_f2h_axi_slave_arid\n- hps_0_f2h_axi_slave_araddr\n- hps_0_f2h_axi_slave_arlen\n- hps_0_f2h_axi_slave_arsize\n- hps_0_f2h_axi_slave_arburst\n- hps_0_f2h_axi_slave_arlock\n- hps_0_f2h_axi_slave_arcache\n- hps_0_f2h_axi_slave_arprot\n- hps_0_f2h_axi_slave_aruser\n- hps_0_f2h_axi_slave_arvalid\n- hps_0_f2h_axi_slave_rready\n- alt_vip_vfr_0_avalon_master_waitrequest\n- alt_vip_vfr_0_avalon_master_readdata\n- alt_vip_vfr_0_avalon_master_readdatavalid\n\nExplanation: These output ports include various control and data signals for the AXI slave interface, as well as response signals for the Avalon master interface. They are used to manage data transfer, addressing, and handshaking between the interconnected components."
                },
                {
                    "type": "text",
                    "text": "Internal signals and their explanation is as follows: \nInternal signals:\nwire signals for translators, routers, arbiters, multiplexers, demultiplexers, burst adapters, and clock crossers.\n\nExplanation:\n- Translator signals (e.g., alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_*): Convert between Avalon and universal interfaces.\n- Router signals (e.g., addr_router_src_*, id_router_src_*): Direct packets between components based on address.\n- Arbiter signals (e.g., cmd_xbar_*): Manage access to shared resources.\n- Multiplexer/demultiplexer signals (e.g., cmd_xbar_mux_*, rsp_xbar_demux_*): Combine or separate data streams.\n- Burst adapter signals (e.g., burst_adapter_source0_*): Modify burst transactions for different interfaces.\n- Clock crosser signals (e.g., crosser_out_*): Manage data transfer between different clock domains.\n- Pipeline signals (e.g., limiter_pipeline_source0_*): Add pipeline stages for timing improvement.\n- Agent signals (e.g., hps_0_f2h_axi_slave_agent_*): Interface with AXI slave component.\n\nThese internal signals facilitate communication, arbitration, and data management between the Avalon master and AXI slave interfaces, handling protocol conversions and timing requirements."
                },
                {
                    "type": "text",
                    "text": "Original Verilog code is as follows: \n<code>\n\n\n\n\n\n\n`timescale 1 ps / 1 ps\nmodule DE1_SoC_QSYS_mm_interconnect_4 (\n\t\toutput wire [7:0]   hps_0_f2h_axi_slave_awid,                                         \n\t\toutput wire [31:0]  hps_0_f2h_axi_slave_awaddr,                                       \n\t\toutput wire [3:0]   hps_0_f2h_axi_slave_awlen,                                        \n\t\toutput wire [2:0]   hps_0_f2h_axi_slave_awsize,                                       \n\t\toutput wire [1:0]   hps_0_f2h_axi_slave_awburst,                                      \n\t\toutput wire [1:0]   hps_0_f2h_axi_slave_awlock,                                       \n\t\toutput wire [3:0]   hps_0_f2h_axi_slave_awcache,                                      \n\t\toutput wire [2:0]   hps_0_f2h_axi_slave_awprot,                                       \n\t\toutput wire [4:0]   hps_0_f2h_axi_slave_awuser,                                       \n\t\toutput wire         hps_0_f2h_axi_slave_awvalid,                                      \n\t\tinput  wire         hps_0_f2h_axi_slave_awready,                                      \n\t\toutput wire [7:0]   hps_0_f2h_axi_slave_wid,                                          \n\t\toutput wire [127:0] hps_0_f2h_axi_slave_wdata,                                        \n\t\toutput wire [15:0]  hps_0_f2h_axi_slave_wstrb,                                        \n\t\toutput wire         hps_0_f2h_axi_slave_wlast,                                        \n\t\toutput wire         hps_0_f2h_axi_slave_wvalid,                                       \n\t\tinput  wire         hps_0_f2h_axi_slave_wready,                                       \n\t\tinput  wire [7:0]   hps_0_f2h_axi_slave_bid,                                          \n\t\tinput  wire [1:0]   hps_0_f2h_axi_slave_bresp,                                        \n\t\tinput  wire         hps_0_f2h_axi_slave_bvalid,                                       \n\t\toutput wire         hps_0_f2h_axi_slave_bready,                                       \n\t\toutput wire [7:0]   hps_0_f2h_axi_slave_arid,                                         \n\t\toutput wire [31:0]  hps_0_f2h_axi_slave_araddr,                                       \n\t\toutput wire [3:0]   hps_0_f2h_axi_slave_arlen,                                        \n\t\toutput wire [2:0]   hps_0_f2h_axi_slave_arsize,                                       \n\t\toutput wire [1:0]   hps_0_f2h_axi_slave_arburst,                                      \n\t\toutput wire [1:0]   hps_0_f2h_axi_slave_arlock,                                       \n\t\toutput wire [3:0]   hps_0_f2h_axi_slave_arcache,                                      \n\t\toutput wire [2:0]   hps_0_f2h_axi_slave_arprot,                                       \n\t\toutput wire [4:0]   hps_0_f2h_axi_slave_aruser,                                       \n\t\toutput wire         hps_0_f2h_axi_slave_arvalid,                                      \n\t\tinput  wire         hps_0_f2h_axi_slave_arready,                                      \n\t\tinput  wire [7:0]   hps_0_f2h_axi_slave_rid,                                          \n\t\tinput  wire [127:0] hps_0_f2h_axi_slave_rdata,                                        \n\t\tinput  wire [1:0]   hps_0_f2h_axi_slave_rresp,                                        \n\t\tinput  wire         hps_0_f2h_axi_slave_rlast,                                        \n\t\tinput  wire         hps_0_f2h_axi_slave_rvalid,                                       \n\t\toutput wire         hps_0_f2h_axi_slave_rready,                                       \n\t\tinput  wire         clk_50_clk_clk,                                                   \n\t\tinput  wire         pll_sys_outclk0_clk,                                              \n\t\tinput  wire         alt_vip_vfr_0_clock_master_reset_reset_bridge_in_reset_reset,     \n\t\tinput  wire         hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset, \n\t\tinput  wire [31:0]  alt_vip_vfr_0_avalon_master_address,                              \n\t\toutput wire         alt_vip_vfr_0_avalon_master_waitrequest,                          \n\t\tinput  wire [5:0]   alt_vip_vfr_0_avalon_master_burstcount,                           \n\t\tinput  wire         alt_vip_vfr_0_avalon_master_read,                                 \n\t\toutput wire [127:0] alt_vip_vfr_0_avalon_master_readdata,                             \n\t\toutput wire         alt_vip_vfr_0_avalon_master_readdatavalid                         \n\t);\n\n\twire          alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_waitrequest;            \n\twire    [9:0] alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_burstcount;             \n\twire  [127:0] alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_writedata;              \n\twire   [31:0] alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_address;                \n\twire          alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_lock;                   \n\twire          alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_write;                  \n\twire          alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_read;                   \n\twire  [127:0] alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_readdata;               \n\twire          alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_debugaccess;            \n\twire   [15:0] alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_byteenable;             \n\twire          alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_readdatavalid;          \n\twire          alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_agent_cp_endofpacket;   \n\twire          alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_agent_cp_valid;         \n\twire          alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_agent_cp_startofpacket; \n\twire  [228:0] alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_agent_cp_data;          \n\twire          alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_agent_cp_ready;         \n\twire          id_router_src_endofpacket;                                                               \n\twire          id_router_src_valid;                                                                     \n\twire          id_router_src_startofpacket;                                                             \n\twire  [228:0] id_router_src_data;                                                                      \n\twire    [1:0] id_router_src_channel;                                                                   \n\twire          id_router_src_ready;                                                                     \n\twire          id_router_001_src_endofpacket;                                                           \n\twire          id_router_001_src_valid;                                                                 \n\twire          id_router_001_src_startofpacket;                                                         \n\twire  [228:0] id_router_001_src_data;                                                                  \n\twire    [1:0] id_router_001_src_channel;                                                               \n\twire          id_router_001_src_ready;                                                                 \n\twire          addr_router_src_endofpacket;                                                             \n\twire          addr_router_src_valid;                                                                   \n\twire          addr_router_src_startofpacket;                                                           \n\twire  [228:0] addr_router_src_data;                                                                    \n\twire    [1:0] addr_router_src_channel;                                                                 \n\twire          addr_router_src_ready;                                                                   \n\twire          limiter_rsp_src_endofpacket;                                                             \n\twire          limiter_rsp_src_valid;                                                                   \n\twire          limiter_rsp_src_startofpacket;                                                           \n\twire  [228:0] limiter_rsp_src_data;                                                                    \n\twire    [1:0] limiter_rsp_src_channel;                                                                 \n\twire          limiter_rsp_src_ready;                                                                   \n\twire          cmd_xbar_mux_src_endofpacket;                                                            \n\twire          cmd_xbar_mux_src_valid;                                                                  \n\twire          cmd_xbar_mux_src_startofpacket;                                                          \n\twire  [228:0] cmd_xbar_mux_src_data;                                                                   \n\twire    [1:0] cmd_xbar_mux_src_channel;                                                                \n\twire          cmd_xbar_mux_src_ready;                                                                  \n\twire          cmd_xbar_mux_001_src_endofpacket;                                                        \n\twire          cmd_xbar_mux_001_src_valid;                                                              \n\twire          cmd_xbar_mux_001_src_startofpacket;                                                      \n\twire  [228:0] cmd_xbar_mux_001_src_data;                                                               \n\twire    [1:0] cmd_xbar_mux_001_src_channel;                                                            \n\twire          cmd_xbar_mux_001_src_ready;                                                              \n\twire          cmd_xbar_demux_src0_endofpacket;                                                         \n\twire          cmd_xbar_demux_src0_valid;                                                               \n\twire          cmd_xbar_demux_src0_startofpacket;                                                       \n\twire  [228:0] cmd_xbar_demux_src0_data;                                                                \n\twire    [1:0] cmd_xbar_demux_src0_channel;                                                             \n\twire          cmd_xbar_demux_src0_ready;                                                               \n\twire          crosser_out_endofpacket;                                                                 \n\twire          crosser_out_valid;                                                                       \n\twire          crosser_out_startofpacket;                                                               \n\twire  [228:0] crosser_out_data;                                                                        \n\twire    [1:0] crosser_out_channel;                                                                     \n\twire          crosser_out_ready;                                                                       \n\twire          cmd_xbar_demux_src1_endofpacket;                                                         \n\twire          cmd_xbar_demux_src1_valid;                                                               \n\twire          cmd_xbar_demux_src1_startofpacket;                                                       \n\twire  [228:0] cmd_xbar_demux_src1_data;                                                                \n\twire    [1:0] cmd_xbar_demux_src1_channel;                                                             \n\twire          cmd_xbar_demux_src1_ready;                                                               \n\twire          crosser_001_out_endofpacket;                                                             \n\twire          crosser_001_out_valid;                                                                   \n\twire          crosser_001_out_startofpacket;                                                           \n\twire  [228:0] crosser_001_out_data;                                                                    \n\twire    [1:0] crosser_001_out_channel;                                                                 \n\twire          crosser_001_out_ready;                                                                   \n\twire          rsp_xbar_demux_src0_endofpacket;                                                         \n\twire          rsp_xbar_demux_src0_valid;                                                               \n\twire          rsp_xbar_demux_src0_startofpacket;                                                       \n\twire  [228:0] rsp_xbar_demux_src0_data;                                                                \n\twire    [1:0] rsp_xbar_demux_src0_channel;                                                             \n\twire          rsp_xbar_demux_src0_ready;                                                               \n\twire          crosser_002_out_endofpacket;                                                             \n\twire          crosser_002_out_valid;                                                                   \n\twire          crosser_002_out_startofpacket;                                                           \n\twire  [228:0] crosser_002_out_data;                                                                    \n\twire    [1:0] crosser_002_out_channel;                                                                 \n\twire          crosser_002_out_ready;                                                                   \n\twire          rsp_xbar_demux_001_src0_endofpacket;                                                     \n\twire          rsp_xbar_demux_001_src0_valid;                                                           \n\twire          rsp_xbar_demux_001_src0_startofpacket;                                                   \n\twire  [228:0] rsp_xbar_demux_001_src0_data;                                                            \n\twire    [1:0] rsp_xbar_demux_001_src0_channel;                                                         \n\twire          rsp_xbar_demux_001_src0_ready;                                                           \n\twire          crosser_003_out_endofpacket;                                                             \n\twire          crosser_003_out_valid;                                                                   \n\twire          crosser_003_out_startofpacket;                                                           \n\twire  [228:0] crosser_003_out_data;                                                                    \n\twire    [1:0] crosser_003_out_channel;                                                                 \n\twire          crosser_003_out_ready;                                                                   \n\twire          limiter_cmd_src_endofpacket;                                                             \n\twire    [0:0] limiter_cmd_src_valid;                                                                   \n\twire          limiter_cmd_src_startofpacket;                                                           \n\twire  [228:0] limiter_cmd_src_data;                                                                    \n\twire    [1:0] limiter_cmd_src_channel;                                                                 \n\twire          limiter_cmd_src_ready;                                                                   \n\twire          limiter_pipeline_source0_endofpacket;                                                    \n\twire          limiter_pipeline_source0_valid;                                                          \n\twire          limiter_pipeline_source0_startofpacket;                                                  \n\twire  [228:0] limiter_pipeline_source0_data;                                                           \n\twire    [1:0] limiter_pipeline_source0_channel;                                                        \n\twire          limiter_pipeline_source0_ready;                                                          \n\twire          rsp_xbar_mux_src_endofpacket;                                                            \n\twire          rsp_xbar_mux_src_valid;                                                                  \n\twire          rsp_xbar_mux_src_startofpacket;                                                          \n\twire  [228:0] rsp_xbar_mux_src_data;                                                                   \n\twire    [1:0] rsp_xbar_mux_src_channel;                                                                \n\twire          rsp_xbar_mux_src_ready;                                                                  \n\twire          limiter_pipeline_001_source0_endofpacket;                                                \n\twire          limiter_pipeline_001_source0_valid;                                                      \n\twire          limiter_pipeline_001_source0_startofpacket;                                              \n\twire  [228:0] limiter_pipeline_001_source0_data;                                                       \n\twire    [1:0] limiter_pipeline_001_source0_channel;                                                    \n\twire          limiter_pipeline_001_source0_ready;                                                      \n\twire          burst_adapter_source0_endofpacket;                                                       \n\twire          burst_adapter_source0_valid;                                                             \n\twire          burst_adapter_source0_startofpacket;                                                     \n\twire  [228:0] burst_adapter_source0_data;                                                              \n\twire          burst_adapter_source0_ready;                                                             \n\twire    [1:0] burst_adapter_source0_channel;                                                           \n\twire          agent_pipeline_source0_endofpacket;                                                      \n\twire          agent_pipeline_source0_valid;                                                            \n\twire          agent_pipeline_source0_startofpacket;                                                    \n\twire  [228:0] agent_pipeline_source0_data;                                                             \n\twire    [1:0] agent_pipeline_source0_channel;                                                          \n\twire          agent_pipeline_source0_ready;                                                            \n\twire          burst_adapter_001_source0_endofpacket;                                                   \n\twire          burst_adapter_001_source0_valid;                                                         \n\twire          burst_adapter_001_source0_startofpacket;                                                 \n\twire  [228:0] burst_adapter_001_source0_data;                                                          \n\twire          burst_adapter_001_source0_ready;                                                         \n\twire    [1:0] burst_adapter_001_source0_channel;                                                       \n\twire          agent_pipeline_001_source0_endofpacket;                                                  \n\twire          agent_pipeline_001_source0_valid;                                                        \n\twire          agent_pipeline_001_source0_startofpacket;                                                \n\twire  [228:0] agent_pipeline_001_source0_data;                                                         \n\twire    [1:0] agent_pipeline_001_source0_channel;                                                      \n\twire          agent_pipeline_001_source0_ready;                                                        \n\twire          hps_0_f2h_axi_slave_agent_write_rp_endofpacket;                                          \n\twire          hps_0_f2h_axi_slave_agent_write_rp_valid;                                                \n\twire          hps_0_f2h_axi_slave_agent_write_rp_startofpacket;                                        \n\twire  [228:0] hps_0_f2h_axi_slave_agent_write_rp_data;                                                 \n\twire          hps_0_f2h_axi_slave_agent_write_rp_ready;                                                \n\twire          agent_pipeline_002_source0_endofpacket;                                                  \n\twire          agent_pipeline_002_source0_valid;                                                        \n\twire          agent_pipeline_002_source0_startofpacket;                                                \n\twire  [228:0] agent_pipeline_002_source0_data;                                                         \n\twire          agent_pipeline_002_source0_ready;                                                        \n\twire          hps_0_f2h_axi_slave_agent_read_rp_endofpacket;                                           \n\twire          hps_0_f2h_axi_slave_agent_read_rp_valid;                                                 \n\twire          hps_0_f2h_axi_slave_agent_read_rp_startofpacket;                                         \n\twire  [228:0] hps_0_f2h_axi_slave_agent_read_rp_data;                                                  \n\twire          hps_0_f2h_axi_slave_agent_read_rp_ready;                                                 \n\twire          agent_pipeline_003_source0_endofpacket;                                                  \n\twire          agent_pipeline_003_source0_valid;                                                        \n\twire          agent_pipeline_003_source0_startofpacket;                                                \n\twire  [228:0] agent_pipeline_003_source0_data;                                                         \n\twire          agent_pipeline_003_source0_ready;                                                        \n\n\taltera_merlin_master_translator #(\n\t\t.AV_ADDRESS_W                (32),\n\t\t.AV_DATA_W                   (128),\n\t\t.AV_BURSTCOUNT_W             (6),\n\t\t.AV_BYTEENABLE_W             (16),\n\t\t.UAV_ADDRESS_W               (32),\n\t\t.UAV_BURSTCOUNT_W            (10),\n\t\t.USE_READ                    (1),\n\t\t.USE_WRITE                   (0),\n\t\t.USE_BEGINBURSTTRANSFER      (0),\n\t\t.USE_BEGINTRANSFER           (0),\n\t\t.USE_CHIPSELECT              (0),\n\t\t.USE_BURSTCOUNT              (1),\n\t\t.USE_READDATAVALID           (1),\n\t\t.USE_WAITREQUEST             (1),\n\t\t.USE_READRESPONSE            (0),\n\t\t.USE_WRITERESPONSE           (0),\n\t\t.AV_SYMBOLS_PER_WORD         (16),\n\t\t.AV_ADDRESS_SYMBOLS          (1),\n\t\t.AV_BURSTCOUNT_SYMBOLS       (0),\n\t\t.AV_CONSTANT_BURST_BEHAVIOR  (1),\n\t\t.UAV_CONSTANT_BURST_BEHAVIOR (0),\n\t\t.AV_LINEWRAPBURSTS           (0),\n\t\t.AV_REGISTERINCOMINGSIGNALS  (0)\n\t) alt_vip_vfr_0_avalon_master_translator (\n\t\t.clk                      (pll_sys_outclk0_clk),                                                                                                                   \n\t\t.reset                    (alt_vip_vfr_0_clock_master_reset_reset_bridge_in_reset_reset),                                                                          \n\t\t.uav_address              (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_address),                                                              \n\t\t.uav_burstcount           (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_burstcount),                                                           \n\t\t.uav_read                 (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_read),                                                                 \n\t\t.uav_write                (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_write),                                                                \n\t\t.uav_waitrequest          (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_waitrequest),                                                          \n\t\t.uav_readdatavalid        (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_readdatavalid),                                                        \n\t\t.uav_byteenable           (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_byteenable),                                                           \n\t\t.uav_readdata             (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_readdata),                                                             \n\t\t.uav_writedata            (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_writedata),                                                            \n\t\t.uav_lock                 (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_lock),                                                                 \n\t\t.uav_debugaccess          (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_debugaccess),                                                          \n\t\t.av_address               (alt_vip_vfr_0_avalon_master_address),                                                                                                   \n\t\t.av_waitrequest           (alt_vip_vfr_0_avalon_master_waitrequest),                                                                                               \n\t\t.av_burstcount            (alt_vip_vfr_0_avalon_master_burstcount),                                                                                                \n\t\t.av_read                  (alt_vip_vfr_0_avalon_master_read),                                                                                                      \n\t\t.av_readdata              (alt_vip_vfr_0_avalon_master_readdata),                                                                                                  \n\t\t.av_readdatavalid         (alt_vip_vfr_0_avalon_master_readdatavalid),                                                                                             \n\t\t.av_byteenable            (16'b1111111111111111),                                                                                                                  \n\t\t.av_beginbursttransfer    (1'b0),                                                                                                                                  \n\t\t.av_begintransfer         (1'b0),                                                                                                                                  \n\t\t.av_chipselect            (1'b0),                                                                                                                                  \n\t\t.av_write                 (1'b0),                                                                                                                                  \n\t\t.av_writedata             (128'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000), \n\t\t.av_lock                  (1'b0),                                                                                                                                  \n\t\t.av_debugaccess           (1'b0),                                                                                                                                  \n\t\t.uav_clken                (),                                                                                                                                      \n\t\t.av_clken                 (1'b1),                                                                                                                                  \n\t\t.uav_response             (2'b00),                                                                                                                                 \n\t\t.av_response              (),                                                                                                                                      \n\t\t.uav_writeresponserequest (),                                                                                                                                      \n\t\t.uav_writeresponsevalid   (1'b0),                                                                                                                                  \n\t\t.av_writeresponserequest  (1'b0),                                                                                                                                  \n\t\t.av_writeresponsevalid    ()                                                                                                                                       \n\t);\n\n\taltera_merlin_master_agent #(\n\t\t.PKT_PROTECTION_H          (219),\n\t\t.PKT_PROTECTION_L          (217),\n\t\t.PKT_BEGIN_BURST           (212),\n\t\t.PKT_BURSTWRAP_H           (200),\n\t\t.PKT_BURSTWRAP_L           (192),\n\t\t.PKT_BURST_SIZE_H          (203),\n\t\t.PKT_BURST_SIZE_L          (201),\n\t\t.PKT_BURST_TYPE_H          (205),\n\t\t.PKT_BURST_TYPE_L          (204),\n\t\t.PKT_BYTE_CNT_H            (191),\n\t\t.PKT_BYTE_CNT_L            (182),\n\t\t.PKT_ADDR_H                (175),\n\t\t.PKT_ADDR_L                (144),\n\t\t.PKT_TRANS_COMPRESSED_READ (176),\n\t\t.PKT_TRANS_POSTED          (177),\n\t\t.PKT_TRANS_WRITE           (178),\n\t\t.PKT_TRANS_READ            (179),\n\t\t.PKT_TRANS_LOCK            (180),\n\t\t.PKT_TRANS_EXCLUSIVE       (181),\n\t\t.PKT_DATA_H                (127),\n\t\t.PKT_DATA_L                (0),\n\t\t.PKT_BYTEEN_H              (143),\n\t\t.PKT_BYTEEN_L              (128),\n\t\t.PKT_SRC_ID_H              (214),\n\t\t.PKT_SRC_ID_L              (214),\n\t\t.PKT_DEST_ID_H             (215),\n\t\t.PKT_DEST_ID_L             (215),\n\t\t.PKT_THREAD_ID_H           (216),\n\t\t.PKT_THREAD_ID_L           (216),\n\t\t.PKT_CACHE_H               (223),\n\t\t.PKT_CACHE_L               (220),\n\t\t.PKT_DATA_SIDEBAND_H       (211),\n\t\t.PKT_DATA_SIDEBAND_L       (211),\n\t\t.PKT_QOS_H                 (213),\n\t\t.PKT_QOS_L                 (213),\n\t\t.PKT_ADDR_SIDEBAND_H       (210),\n\t\t.PKT_ADDR_SIDEBAND_L       (206),\n\t\t.PKT_RESPONSE_STATUS_H     (225),\n\t\t.PKT_RESPONSE_STATUS_L     (224),\n\t\t.PKT_ORI_BURST_SIZE_L      (226),\n\t\t.PKT_ORI_BURST_SIZE_H      (228),\n\t\t.ST_DATA_W                 (229),\n\t\t.ST_CHANNEL_W              (2),\n\t\t.AV_BURSTCOUNT_W           (10),\n\t\t.SUPPRESS_0_BYTEEN_RSP     (0),\n\t\t.ID                        (0),\n\t\t.BURSTWRAP_VALUE           (511),\n\t\t.CACHE_VALUE               (0),\n\t\t.SECURE_ACCESS_BIT         (1),\n\t\t.USE_READRESPONSE          (0),\n\t\t.USE_WRITERESPONSE         (0)\n\t) alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_agent (\n\t\t.clk                     (pll_sys_outclk0_clk),                                                                     \n\t\t.reset                   (alt_vip_vfr_0_clock_master_reset_reset_bridge_in_reset_reset),                            \n\t\t.av_address              (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_address),                \n\t\t.av_write                (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_write),                  \n\t\t.av_read                 (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_read),                   \n\t\t.av_writedata            (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_writedata),              \n\t\t.av_readdata             (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_readdata),               \n\t\t.av_waitrequest          (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_waitrequest),            \n\t\t.av_readdatavalid        (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_readdatavalid),          \n\t\t.av_byteenable           (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_byteenable),             \n\t\t.av_burstcount           (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_burstcount),             \n\t\t.av_debugaccess          (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_debugaccess),            \n\t\t.av_lock                 (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_lock),                   \n\t\t.cp_valid                (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_agent_cp_valid),         \n\t\t.cp_data                 (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_agent_cp_data),          \n\t\t.cp_startofpacket        (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_agent_cp_startofpacket), \n\t\t.cp_endofpacket          (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_agent_cp_endofpacket),   \n\t\t.cp_ready                (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_agent_cp_ready),         \n\t\t.rp_valid                (limiter_rsp_src_valid),                                                                   \n\t\t.rp_data                 (limiter_rsp_src_data),                                                                    \n\t\t.rp_channel              (limiter_rsp_src_channel),                                                                 \n\t\t.rp_startofpacket        (limiter_rsp_src_startofpacket),                                                           \n\t\t.rp_endofpacket          (limiter_rsp_src_endofpacket),                                                             \n\t\t.rp_ready                (limiter_rsp_src_ready),                                                                   \n\t\t.av_response             (),                                                                                        \n\t\t.av_writeresponserequest (1'b0),                                                                                    \n\t\t.av_writeresponsevalid   ()                                                                                         \n\t);\n\n\taltera_merlin_axi_slave_ni #(\n\t\t.PKT_QOS_H                   (213),\n\t\t.PKT_QOS_L                   (213),\n\t\t.PKT_THREAD_ID_H             (216),\n\t\t.PKT_THREAD_ID_L             (216),\n\t\t.PKT_RESPONSE_STATUS_H       (225),\n\t\t.PKT_RESPONSE_STATUS_L       (224),\n\t\t.PKT_BEGIN_BURST             (212),\n\t\t.PKT_CACHE_H                 (223),\n\t\t.PKT_CACHE_L                 (220),\n\t\t.PKT_DATA_SIDEBAND_H         (211),\n\t\t.PKT_DATA_SIDEBAND_L         (211),\n\t\t.PKT_ADDR_SIDEBAND_H         (210),\n\t\t.PKT_ADDR_SIDEBAND_L         (206),\n\t\t.PKT_BURST_TYPE_H            (205),\n\t\t.PKT_BURST_TYPE_L            (204),\n\t\t.PKT_PROTECTION_H            (219),\n\t\t.PKT_PROTECTION_L            (217),\n\t\t.PKT_BURST_SIZE_H            (203),\n\t\t.PKT_BURST_SIZE_L            (201),\n\t\t.PKT_BURSTWRAP_H             (200),\n\t\t.PKT_BURSTWRAP_L             (192),\n\t\t.PKT_BYTE_CNT_H              (191),\n\t\t.PKT_BYTE_CNT_L              (182),\n\t\t.PKT_ADDR_H                  (175),\n\t\t.PKT_ADDR_L                  (144),\n\t\t.PKT_TRANS_EXCLUSIVE         (181),\n\t\t.PKT_TRANS_LOCK              (180),\n\t\t.PKT_TRANS_COMPRESSED_READ   (176),\n\t\t.PKT_TRANS_POSTED            (177),\n\t\t.PKT_TRANS_WRITE             (178),\n\t\t.PKT_TRANS_READ              (179),\n\t\t.PKT_DATA_H                  (127),\n\t\t.PKT_DATA_L                  (0),\n\t\t.PKT_BYTEEN_H                (143),\n\t\t.PKT_BYTEEN_L                (128),\n\t\t.PKT_SRC_ID_H                (214),\n\t\t.PKT_SRC_ID_L                (214),\n\t\t.PKT_DEST_ID_H               (215),\n\t\t.PKT_DEST_ID_L               (215),\n\t\t.PKT_ORI_BURST_SIZE_L        (226),\n\t\t.PKT_ORI_BURST_SIZE_H        (228),\n\t\t.ADDR_USER_WIDTH             (5),\n\t\t.DATA_USER_WIDTH             (1),\n\t\t.ST_DATA_W                   (229),\n\t\t.ADDR_WIDTH                  (32),\n\t\t.RDATA_WIDTH                 (128),\n\t\t.WDATA_WIDTH                 (128),\n\t\t.ST_CHANNEL_W                (2),\n\t\t.AXI_SLAVE_ID_W              (8),\n\t\t.PASS_ID_TO_SLAVE            (1),\n\t\t.AXI_VERSION                 (\"AXI3\"),\n\t\t.WRITE_ACCEPTANCE_CAPABILITY (8),\n\t\t.READ_ACCEPTANCE_CAPABILITY  (8)\n\t) hps_0_f2h_axi_slave_agent (\n\t\t.aclk                   (clk_50_clk_clk),                                                    \n\t\t.aresetn                (~hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset), \n\t\t.read_cp_valid          (agent_pipeline_001_source0_valid),                                  \n\t\t.read_cp_ready          (agent_pipeline_001_source0_ready),                                  \n\t\t.read_cp_data           (agent_pipeline_001_source0_data),                                   \n\t\t.read_cp_channel        (agent_pipeline_001_source0_channel),                                \n\t\t.read_cp_startofpacket  (agent_pipeline_001_source0_startofpacket),                          \n\t\t.read_cp_endofpacket    (agent_pipeline_001_source0_endofpacket),                            \n\t\t.write_cp_ready         (agent_pipeline_source0_ready),                                      \n\t\t.write_cp_valid         (agent_pipeline_source0_valid),                                      \n\t\t.write_cp_data          (agent_pipeline_source0_data),                                       \n\t\t.write_cp_channel       (agent_pipeline_source0_channel),                                    \n\t\t.write_cp_startofpacket (agent_pipeline_source0_startofpacket),                              \n\t\t.write_cp_endofpacket   (agent_pipeline_source0_endofpacket),                                \n\t\t.read_rp_ready          (hps_0_f2h_axi_slave_agent_read_rp_ready),                           \n\t\t.read_rp_valid          (hps_0_f2h_axi_slave_agent_read_rp_valid),                           \n\t\t.read_rp_data           (hps_0_f2h_axi_slave_agent_read_rp_data),                            \n\t\t.read_rp_startofpacket  (hps_0_f2h_axi_slave_agent_read_rp_startofpacket),                   \n\t\t.read_rp_endofpacket    (hps_0_f2h_axi_slave_agent_read_rp_endofpacket),                     \n\t\t.write_rp_ready         (hps_0_f2h_axi_slave_agent_write_rp_ready),                          \n\t\t.write_rp_valid         (hps_0_f2h_axi_slave_agent_write_rp_valid),                          \n\t\t.write_rp_data          (hps_0_f2h_axi_slave_agent_write_rp_data),                           \n\t\t.write_rp_startofpacket (hps_0_f2h_axi_slave_agent_write_rp_startofpacket),                  \n\t\t.write_rp_endofpacket   (hps_0_f2h_axi_slave_agent_write_rp_endofpacket),                    \n\t\t.awid                   (hps_0_f2h_axi_slave_awid),                                          \n\t\t.awaddr                 (hps_0_f2h_axi_slave_awaddr),                                        \n\t\t.awlen                  (hps_0_f2h_axi_slave_awlen),                                         \n\t\t.awsize                 (hps_0_f2h_axi_slave_awsize),                                        \n\t\t.awburst                (hps_0_f2h_axi_slave_awburst),                                       \n\t\t.awlock                 (hps_0_f2h_axi_slave_awlock),                                        \n\t\t.awcache                (hps_0_f2h_axi_slave_awcache),                                       \n\t\t.awprot                 (hps_0_f2h_axi_slave_awprot),                                        \n\t\t.awuser                 (hps_0_f2h_axi_slave_awuser),                                        \n\t\t.awvalid                (hps_0_f2h_axi_slave_awvalid),                                       \n\t\t.awready                (hps_0_f2h_axi_slave_awready),                                       \n\t\t.wid                    (hps_0_f2h_axi_slave_wid),                                           \n\t\t.wdata                  (hps_0_f2h_axi_slave_wdata),                                         \n\t\t.wstrb                  (hps_0_f2h_axi_slave_wstrb),                                         \n\t\t.wlast                  (hps_0_f2h_axi_slave_wlast),                                         \n\t\t.wvalid                 (hps_0_f2h_axi_slave_wvalid),                                        \n\t\t.wready                 (hps_0_f2h_axi_slave_wready),                                        \n\t\t.bid                    (hps_0_f2h_axi_slave_bid),                                           \n\t\t.bresp                  (hps_0_f2h_axi_slave_bresp),                                         \n\t\t.bvalid                 (hps_0_f2h_axi_slave_bvalid),                                        \n\t\t.bready                 (hps_0_f2h_axi_slave_bready),                                        \n\t\t.arid                   (hps_0_f2h_axi_slave_arid),                                          \n\t\t.araddr                 (hps_0_f2h_axi_slave_araddr),                                        \n\t\t.arlen                  (hps_0_f2h_axi_slave_arlen),                                         \n\t\t.arsize                 (hps_0_f2h_axi_slave_arsize),                                        \n\t\t.arburst                (hps_0_f2h_axi_slave_arburst),                                       \n\t\t.arlock                 (hps_0_f2h_axi_slave_arlock),                                        \n\t\t.arcache                (hps_0_f2h_axi_slave_arcache),                                       \n\t\t.arprot                 (hps_0_f2h_axi_slave_arprot),                                        \n\t\t.aruser                 (hps_0_f2h_axi_slave_aruser),                                        \n\t\t.arvalid                (hps_0_f2h_axi_slave_arvalid),                                       \n\t\t.arready                (hps_0_f2h_axi_slave_arready),                                       \n\t\t.rid                    (hps_0_f2h_axi_slave_rid),                                           \n\t\t.rdata                  (hps_0_f2h_axi_slave_rdata),                                         \n\t\t.rresp                  (hps_0_f2h_axi_slave_rresp),                                         \n\t\t.rlast                  (hps_0_f2h_axi_slave_rlast),                                         \n\t\t.rvalid                 (hps_0_f2h_axi_slave_rvalid),                                        \n\t\t.rready                 (hps_0_f2h_axi_slave_rready)                                         \n\t);\n\n\tDE1_SoC_QSYS_mm_interconnect_4_addr_router addr_router (\n\t\t.sink_ready         (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_agent_cp_ready),         \n\t\t.sink_valid         (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_agent_cp_valid),         \n\t\t.sink_data          (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_agent_cp_data),          \n\t\t.sink_startofpacket (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_agent_cp_startofpacket), \n\t\t.sink_endofpacket   (alt_vip_vfr_0_avalon_master_translator_avalon_universal_master_0_agent_cp_endofpacket),   \n\t\t.clk                (pll_sys_outclk0_clk),                                                                     \n\t\t.reset              (alt_vip_vfr_0_clock_master_reset_reset_bridge_in_reset_reset),                            \n\t\t.src_ready          (addr_router_src_ready),                                                                   \n\t\t.src_valid          (addr_router_src_valid),                                                                   \n\t\t.src_data           (addr_router_src_data),                                                                    \n\t\t.src_channel        (addr_router_src_channel),                                                                 \n\t\t.src_startofpacket  (addr_router_src_startofpacket),                                                           \n\t\t.src_endofpacket    (addr_router_src_endofpacket)                                                              \n\t);\n\n\tDE1_SoC_QSYS_mm_interconnect_4_id_router id_router (\n\t\t.sink_ready         (agent_pipeline_002_source0_ready),                                 \n\t\t.sink_valid         (agent_pipeline_002_source0_valid),                                 \n\t\t.sink_data          (agent_pipeline_002_source0_data),                                  \n\t\t.sink_startofpacket (agent_pipeline_002_source0_startofpacket),                         \n\t\t.sink_endofpacket   (agent_pipeline_002_source0_endofpacket),                           \n\t\t.clk                (clk_50_clk_clk),                                                   \n\t\t.reset              (hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset), \n\t\t.src_ready          (id_router_src_ready),                                              \n\t\t.src_valid          (id_router_src_valid),                                              \n\t\t.src_data           (id_router_src_data),                                               \n\t\t.src_channel        (id_router_src_channel),                                            \n\t\t.src_startofpacket  (id_router_src_startofpacket),                                      \n\t\t.src_endofpacket    (id_router_src_endofpacket)                                         \n\t);\n\n\tDE1_SoC_QSYS_mm_interconnect_4_id_router id_router_001 (\n\t\t.sink_ready         (agent_pipeline_003_source0_ready),                                 \n\t\t.sink_valid         (agent_pipeline_003_source0_valid),                                 \n\t\t.sink_data          (agent_pipeline_003_source0_data),                                  \n\t\t.sink_startofpacket (agent_pipeline_003_source0_startofpacket),                         \n\t\t.sink_endofpacket   (agent_pipeline_003_source0_endofpacket),                           \n\t\t.clk                (clk_50_clk_clk),                                                   \n\t\t.reset              (hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset), \n\t\t.src_ready          (id_router_001_src_ready),                                          \n\t\t.src_valid          (id_router_001_src_valid),                                          \n\t\t.src_data           (id_router_001_src_data),                                           \n\t\t.src_channel        (id_router_001_src_channel),                                        \n\t\t.src_startofpacket  (id_router_001_src_startofpacket),                                  \n\t\t.src_endofpacket    (id_router_001_src_endofpacket)                                     \n\t);\n\n\taltera_merlin_traffic_limiter #(\n\t\t.PKT_DEST_ID_H             (215),\n\t\t.PKT_DEST_ID_L             (215),\n\t\t.PKT_SRC_ID_H              (214),\n\t\t.PKT_SRC_ID_L              (214),\n\t\t.PKT_TRANS_POSTED          (177),\n\t\t.PKT_TRANS_WRITE           (178),\n\t\t.MAX_OUTSTANDING_RESPONSES (30),\n\t\t.PIPELINED                 (0),\n\t\t.ST_DATA_W                 (229),\n\t\t.ST_CHANNEL_W              (2),\n\t\t.VALID_WIDTH               (1),\n\t\t.ENFORCE_ORDER             (1),\n\t\t.PREVENT_HAZARDS           (1),\n\t\t.PKT_BYTE_CNT_H            (191),\n\t\t.PKT_BYTE_CNT_L            (182),\n\t\t.PKT_BYTEEN_H              (143),\n\t\t.PKT_BYTEEN_L              (128),\n\t\t.REORDER                   (0)\n\t) limiter (\n\t\t.clk                    (pll_sys_outclk0_clk),                                          \n\t\t.reset                  (alt_vip_vfr_0_clock_master_reset_reset_bridge_in_reset_reset), \n\t\t.cmd_sink_ready         (addr_router_src_ready),                                        \n\t\t.cmd_sink_valid         (addr_router_src_valid),                                        \n\t\t.cmd_sink_data          (addr_router_src_data),                                         \n\t\t.cmd_sink_channel       (addr_router_src_channel),                                      \n\t\t.cmd_sink_startofpacket (addr_router_src_startofpacket),                                \n\t\t.cmd_sink_endofpacket   (addr_router_src_endofpacket),                                  \n\t\t.cmd_src_ready          (limiter_cmd_src_ready),                                        \n\t\t.cmd_src_data           (limiter_cmd_src_data),                                         \n\t\t.cmd_src_channel        (limiter_cmd_src_channel),                                      \n\t\t.cmd_src_startofpacket  (limiter_cmd_src_startofpacket),                                \n\t\t.cmd_src_endofpacket    (limiter_cmd_src_endofpacket),                                  \n\t\t.cmd_src_valid          (limiter_cmd_src_valid),                                        \n\t\t.rsp_sink_ready         (limiter_pipeline_001_source0_ready),                           \n\t\t.rsp_sink_valid         (limiter_pipeline_001_source0_valid),                           \n\t\t.rsp_sink_channel       (limiter_pipeline_001_source0_channel),                         \n\t\t.rsp_sink_data          (limiter_pipeline_001_source0_data),                            \n\t\t.rsp_sink_startofpacket (limiter_pipeline_001_source0_startofpacket),                   \n\t\t.rsp_sink_endofpacket   (limiter_pipeline_001_source0_endofpacket),                     \n\t\t.rsp_src_ready          (limiter_rsp_src_ready),                                        \n\t\t.rsp_src_valid          (limiter_rsp_src_valid),                                        \n\t\t.rsp_src_data           (limiter_rsp_src_data),                                         \n\t\t.rsp_src_channel        (limiter_rsp_src_channel),                                      \n\t\t.rsp_src_startofpacket  (limiter_rsp_src_startofpacket),                                \n\t\t.rsp_src_endofpacket    (limiter_rsp_src_endofpacket)                                   \n\t);\n\n\taltera_merlin_burst_adapter #(\n\t\t.PKT_ADDR_H                (175),\n\t\t.PKT_ADDR_L                (144),\n\t\t.PKT_BEGIN_BURST           (212),\n\t\t.PKT_BYTE_CNT_H            (191),\n\t\t.PKT_BYTE_CNT_L            (182),\n\t\t.PKT_BYTEEN_H              (143),\n\t\t.PKT_BYTEEN_L              (128),\n\t\t.PKT_BURST_SIZE_H          (203),\n\t\t.PKT_BURST_SIZE_L          (201),\n\t\t.PKT_BURST_TYPE_H          (205),\n\t\t.PKT_BURST_TYPE_L          (204),\n\t\t.PKT_BURSTWRAP_H           (200),\n\t\t.PKT_BURSTWRAP_L           (192),\n\t\t.PKT_TRANS_COMPRESSED_READ (176),\n\t\t.PKT_TRANS_WRITE           (178),\n\t\t.PKT_TRANS_READ            (179),\n\t\t.OUT_NARROW_SIZE           (1),\n\t\t.IN_NARROW_SIZE            (0),\n\t\t.OUT_FIXED                 (1),\n\t\t.OUT_COMPLETE_WRAP         (1),\n\t\t.ST_DATA_W                 (229),\n\t\t.ST_CHANNEL_W              (2),\n\t\t.OUT_BYTE_CNT_H            (190),\n\t\t.OUT_BURSTWRAP_H           (200),\n\t\t.COMPRESSED_READ_SUPPORT   (1),\n\t\t.BYTEENABLE_SYNTHESIS      (0),\n\t\t.PIPE_INPUTS               (0),\n\t\t.NO_WRAP_SUPPORT           (0),\n\t\t.BURSTWRAP_CONST_MASK      (511),\n\t\t.BURSTWRAP_CONST_VALUE     (511)\n\t) burst_adapter (\n\t\t.clk                   (clk_50_clk_clk),                                                   \n\t\t.reset                 (hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset), \n\t\t.sink0_valid           (cmd_xbar_mux_src_valid),                                           \n\t\t.sink0_data            (cmd_xbar_mux_src_data),                                            \n\t\t.sink0_channel         (cmd_xbar_mux_src_channel),                                         \n\t\t.sink0_startofpacket   (cmd_xbar_mux_src_startofpacket),                                   \n\t\t.sink0_endofpacket     (cmd_xbar_mux_src_endofpacket),                                     \n\t\t.sink0_ready           (cmd_xbar_mux_src_ready),                                           \n\t\t.source0_valid         (burst_adapter_source0_valid),                                      \n\t\t.source0_data          (burst_adapter_source0_data),                                       \n\t\t.source0_channel       (burst_adapter_source0_channel),                                    \n\t\t.source0_startofpacket (burst_adapter_source0_startofpacket),                              \n\t\t.source0_endofpacket   (burst_adapter_source0_endofpacket),                                \n\t\t.source0_ready         (burst_adapter_source0_ready)                                       \n\t);\n\n\taltera_merlin_burst_adapter #(\n\t\t.PKT_ADDR_H                (175),\n\t\t.PKT_ADDR_L                (144),\n\t\t.PKT_BEGIN_BURST           (212),\n\t\t.PKT_BYTE_CNT_H            (191),\n\t\t.PKT_BYTE_CNT_L            (182),\n\t\t.PKT_BYTEEN_H              (143),\n\t\t.PKT_BYTEEN_L              (128),\n\t\t.PKT_BURST_SIZE_H          (203),\n\t\t.PKT_BURST_SIZE_L          (201),\n\t\t.PKT_BURST_TYPE_H          (205),\n\t\t.PKT_BURST_TYPE_L          (204),\n\t\t.PKT_BURSTWRAP_H           (200),\n\t\t.PKT_BURSTWRAP_L           (192),\n\t\t.PKT_TRANS_COMPRESSED_READ (176),\n\t\t.PKT_TRANS_WRITE           (178),\n\t\t.PKT_TRANS_READ            (179),\n\t\t.OUT_NARROW_SIZE           (1),\n\t\t.IN_NARROW_SIZE            (0),\n\t\t.OUT_FIXED                 (1),\n\t\t.OUT_COMPLETE_WRAP         (1),\n\t\t.ST_DATA_W                 (229),\n\t\t.ST_CHANNEL_W              (2),\n\t\t.OUT_BYTE_CNT_H            (190),\n\t\t.OUT_BURSTWRAP_H           (200),\n\t\t.COMPRESSED_READ_SUPPORT   (1),\n\t\t.BYTEENABLE_SYNTHESIS      (0),\n\t\t.PIPE_INPUTS               (0),\n\t\t.NO_WRAP_SUPPORT           (0),\n\t\t.BURSTWRAP_CONST_MASK      (511),\n\t\t.BURSTWRAP_CONST_VALUE     (511)\n\t) burst_adapter_001 (\n\t\t.clk                   (clk_50_clk_clk),                                                   \n\t\t.reset                 (hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset), \n\t\t.sink0_valid           (cmd_xbar_mux_001_src_valid),                                       \n\t\t.sink0_data            (cmd_xbar_mux_001_src_data),                                        \n\t\t.sink0_channel         (cmd_xbar_mux_001_src_channel),                                     \n\t\t.sink0_startofpacket   (cmd_xbar_mux_001_src_startofpacket),                               \n\t\t.sink0_endofpacket     (cmd_xbar_mux_001_src_endofpacket),                                 \n\t\t.sink0_ready           (cmd_xbar_mux_001_src_ready),                                       \n\t\t.source0_valid         (burst_adapter_001_source0_valid),                                  \n\t\t.source0_data          (burst_adapter_001_source0_data),                                   \n\t\t.source0_channel       (burst_adapter_001_source0_channel),                                \n\t\t.source0_startofpacket (burst_adapter_001_source0_startofpacket),                          \n\t\t.source0_endofpacket   (burst_adapter_001_source0_endofpacket),                            \n\t\t.source0_ready         (burst_adapter_001_source0_ready)                                   \n\t);\n\n\tDE1_SoC_QSYS_mm_interconnect_4_cmd_xbar_demux cmd_xbar_demux (\n\t\t.clk                (pll_sys_outclk0_clk),                                          \n\t\t.reset              (alt_vip_vfr_0_clock_master_reset_reset_bridge_in_reset_reset), \n\t\t.sink_ready         (limiter_pipeline_source0_ready),                               \n\t\t.sink_channel       (limiter_pipeline_source0_channel),                             \n\t\t.sink_data          (limiter_pipeline_source0_data),                                \n\t\t.sink_startofpacket (limiter_pipeline_source0_startofpacket),                       \n\t\t.sink_endofpacket   (limiter_pipeline_source0_endofpacket),                         \n\t\t.sink_valid         (limiter_pipeline_source0_valid),                               \n\t\t.src0_ready         (cmd_xbar_demux_src0_ready),                                    \n\t\t.src0_valid         (cmd_xbar_demux_src0_valid),                                    \n\t\t.src0_data          (cmd_xbar_demux_src0_data),                                     \n\t\t.src0_channel       (cmd_xbar_demux_src0_channel),                                  \n\t\t.src0_startofpacket (cmd_xbar_demux_src0_startofpacket),                            \n\t\t.src0_endofpacket   (cmd_xbar_demux_src0_endofpacket),                              \n\t\t.src1_ready         (cmd_xbar_demux_src1_ready),                                    \n\t\t.src1_valid         (cmd_xbar_demux_src1_valid),                                    \n\t\t.src1_data          (cmd_xbar_demux_src1_data),                                     \n\t\t.src1_channel       (cmd_xbar_demux_src1_channel),                                  \n\t\t.src1_startofpacket (cmd_xbar_demux_src1_startofpacket),                            \n\t\t.src1_endofpacket   (cmd_xbar_demux_src1_endofpacket)                               \n\t);\n\n\tDE1_SoC_QSYS_mm_interconnect_4_cmd_xbar_mux cmd_xbar_mux (\n\t\t.clk                 (clk_50_clk_clk),                                                   \n\t\t.reset               (hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset), \n\t\t.src_ready           (cmd_xbar_mux_src_ready),                                           \n\t\t.src_valid           (cmd_xbar_mux_src_valid),                                           \n\t\t.src_data            (cmd_xbar_mux_src_data),                                            \n\t\t.src_channel         (cmd_xbar_mux_src_channel),                                         \n\t\t.src_startofpacket   (cmd_xbar_mux_src_startofpacket),                                   \n\t\t.src_endofpacket     (cmd_xbar_mux_src_endofpacket),                                     \n\t\t.sink0_ready         (crosser_out_ready),                                                \n\t\t.sink0_valid         (crosser_out_valid),                                                \n\t\t.sink0_channel       (crosser_out_channel),                                              \n\t\t.sink0_data          (crosser_out_data),                                                 \n\t\t.sink0_startofpacket (crosser_out_startofpacket),                                        \n\t\t.sink0_endofpacket   (crosser_out_endofpacket)                                           \n\t);\n\n\tDE1_SoC_QSYS_mm_interconnect_4_cmd_xbar_mux cmd_xbar_mux_001 (\n\t\t.clk                 (clk_50_clk_clk),                                                   \n\t\t.reset               (hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset), \n\t\t.src_ready           (cmd_xbar_mux_001_src_ready),                                       \n\t\t.src_valid           (cmd_xbar_mux_001_src_valid),                                       \n\t\t.src_data            (cmd_xbar_mux_001_src_data),                                        \n\t\t.src_channel         (cmd_xbar_mux_001_src_channel),                                     \n\t\t.src_startofpacket   (cmd_xbar_mux_001_src_startofpacket),                               \n\t\t.src_endofpacket     (cmd_xbar_mux_001_src_endofpacket),                                 \n\t\t.sink0_ready         (crosser_001_out_ready),                                            \n\t\t.sink0_valid         (crosser_001_out_valid),                                            \n\t\t.sink0_channel       (crosser_001_out_channel),                                          \n\t\t.sink0_data          (crosser_001_out_data),                                             \n\t\t.sink0_startofpacket (crosser_001_out_startofpacket),                                    \n\t\t.sink0_endofpacket   (crosser_001_out_endofpacket)                                       \n\t);\n\n\tDE1_SoC_QSYS_mm_interconnect_4_rsp_xbar_demux rsp_xbar_demux (\n\t\t.clk                (clk_50_clk_clk),                                                   \n\t\t.reset              (hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset), \n\t\t.sink_ready         (id_router_src_ready),                                              \n\t\t.sink_channel       (id_router_src_channel),                                            \n\t\t.sink_data          (id_router_src_data),                                               \n\t\t.sink_startofpacket (id_router_src_startofpacket),                                      \n\t\t.sink_endofpacket   (id_router_src_endofpacket),                                        \n\t\t.sink_valid         (id_router_src_valid),                                              \n\t\t.src0_ready         (rsp_xbar_demux_src0_ready),                                        \n\t\t.src0_valid         (rsp_xbar_demux_src0_valid),                                        \n\t\t.src0_data          (rsp_xbar_demux_src0_data),                                         \n\t\t.src0_channel       (rsp_xbar_demux_src0_channel),                                      \n\t\t.src0_startofpacket (rsp_xbar_demux_src0_startofpacket),                                \n\t\t.src0_endofpacket   (rsp_xbar_demux_src0_endofpacket)                                   \n\t);\n\n\tDE1_SoC_QSYS_mm_interconnect_4_rsp_xbar_demux rsp_xbar_demux_001 (\n\t\t.clk                (clk_50_clk_clk),                                                   \n\t\t.reset              (hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset), \n\t\t.sink_ready         (id_router_001_src_ready),                                          \n\t\t.sink_channel       (id_router_001_src_channel),                                        \n\t\t.sink_data          (id_router_001_src_data),                                           \n\t\t.sink_startofpacket (id_router_001_src_startofpacket),                                  \n\t\t.sink_endofpacket   (id_router_001_src_endofpacket),                                    \n\t\t.sink_valid         (id_router_001_src_valid),                                          \n\t\t.src0_ready         (rsp_xbar_demux_001_src0_ready),                                    \n\t\t.src0_valid         (rsp_xbar_demux_001_src0_valid),                                    \n\t\t.src0_data          (rsp_xbar_demux_001_src0_data),                                     \n\t\t.src0_channel       (rsp_xbar_demux_001_src0_channel),                                  \n\t\t.src0_startofpacket (rsp_xbar_demux_001_src0_startofpacket),                            \n\t\t.src0_endofpacket   (rsp_xbar_demux_001_src0_endofpacket)                               \n\t);\n\n\tDE1_SoC_QSYS_mm_interconnect_4_rsp_xbar_mux rsp_xbar_mux (\n\t\t.clk                 (pll_sys_outclk0_clk),                                          \n\t\t.reset               (alt_vip_vfr_0_clock_master_reset_reset_bridge_in_reset_reset), \n\t\t.src_ready           (rsp_xbar_mux_src_ready),                                       \n\t\t.src_valid           (rsp_xbar_mux_src_valid),                                       \n\t\t.src_data            (rsp_xbar_mux_src_data),                                        \n\t\t.src_channel         (rsp_xbar_mux_src_channel),                                     \n\t\t.src_startofpacket   (rsp_xbar_mux_src_startofpacket),                               \n\t\t.src_endofpacket     (rsp_xbar_mux_src_endofpacket),                                 \n\t\t.sink0_ready         (crosser_002_out_ready),                                        \n\t\t.sink0_valid         (crosser_002_out_valid),                                        \n\t\t.sink0_channel       (crosser_002_out_channel),                                      \n\t\t.sink0_data          (crosser_002_out_data),                                         \n\t\t.sink0_startofpacket (crosser_002_out_startofpacket),                                \n\t\t.sink0_endofpacket   (crosser_002_out_endofpacket),                                  \n\t\t.sink1_ready         (crosser_003_out_ready),                                        \n\t\t.sink1_valid         (crosser_003_out_valid),                                        \n\t\t.sink1_channel       (crosser_003_out_channel),                                      \n\t\t.sink1_data          (crosser_003_out_data),                                         \n\t\t.sink1_startofpacket (crosser_003_out_startofpacket),                                \n\t\t.sink1_endofpacket   (crosser_003_out_endofpacket)                                   \n\t);\n\n\taltera_avalon_st_handshake_clock_crosser #(\n\t\t.DATA_WIDTH          (229),\n\t\t.BITS_PER_SYMBOL     (229),\n\t\t.USE_PACKETS         (1),\n\t\t.USE_CHANNEL         (1),\n\t\t.CHANNEL_WIDTH       (2),\n\t\t.USE_ERROR           (0),\n\t\t.ERROR_WIDTH         (1),\n\t\t.VALID_SYNC_DEPTH    (2),\n\t\t.READY_SYNC_DEPTH    (2),\n\t\t.USE_OUTPUT_PIPELINE (0)\n\t) crosser (\n\t\t.in_clk            (pll_sys_outclk0_clk),                                              \n\t\t.in_reset          (alt_vip_vfr_0_clock_master_reset_reset_bridge_in_reset_reset),     \n\t\t.out_clk           (clk_50_clk_clk),                                                   \n\t\t.out_reset         (hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset), \n\t\t.in_ready          (cmd_xbar_demux_src0_ready),                                        \n\t\t.in_valid          (cmd_xbar_demux_src0_valid),                                        \n\t\t.in_startofpacket  (cmd_xbar_demux_src0_startofpacket),                                \n\t\t.in_endofpacket    (cmd_xbar_demux_src0_endofpacket),                                  \n\t\t.in_channel        (cmd_xbar_demux_src0_channel),                                      \n\t\t.in_data           (cmd_xbar_demux_src0_data),                                         \n\t\t.out_ready         (crosser_out_ready),                                                \n\t\t.out_valid         (crosser_out_valid),                                                \n\t\t.out_startofpacket (crosser_out_startofpacket),                                        \n\t\t.out_endofpacket   (crosser_out_endofpacket),                                          \n\t\t.out_channel       (crosser_out_channel),                                              \n\t\t.out_data          (crosser_out_data),                                                 \n\t\t.in_empty          (1'b0),                                                             \n\t\t.in_error          (1'b0),                                                             \n\t\t.out_empty         (),                                                                 \n\t\t.out_error         ()                                                                  \n\t);\n\n\taltera_avalon_st_handshake_clock_crosser #(\n\t\t.DATA_WIDTH          (229),\n\t\t.BITS_PER_SYMBOL     (229),\n\t\t.USE_PACKETS         (1),\n\t\t.USE_CHANNEL         (1),\n\t\t.CHANNEL_WIDTH       (2),\n\t\t.USE_ERROR           (0),\n\t\t.ERROR_WIDTH         (1),\n\t\t.VALID_SYNC_DEPTH    (2),\n\t\t.READY_SYNC_DEPTH    (2),\n\t\t.USE_OUTPUT_PIPELINE (0)\n\t) crosser_001 (\n\t\t.in_clk            (pll_sys_outclk0_clk),                                              \n\t\t.in_reset          (alt_vip_vfr_0_clock_master_reset_reset_bridge_in_reset_reset),     \n\t\t.out_clk           (clk_50_clk_clk),                                                   \n\t\t.out_reset         (hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset), \n\t\t.in_ready          (cmd_xbar_demux_src1_ready),                                        \n\t\t.in_valid          (cmd_xbar_demux_src1_valid),                                        \n\t\t.in_startofpacket  (cmd_xbar_demux_src1_startofpacket),                                \n\t\t.in_endofpacket    (cmd_xbar_demux_src1_endofpacket),                                  \n\t\t.in_channel        (cmd_xbar_demux_src1_channel),                                      \n\t\t.in_data           (cmd_xbar_demux_src1_data),                                         \n\t\t.out_ready         (crosser_001_out_ready),                                            \n\t\t.out_valid         (crosser_001_out_valid),                                            \n\t\t.out_startofpacket (crosser_001_out_startofpacket),                                    \n\t\t.out_endofpacket   (crosser_001_out_endofpacket),                                      \n\t\t.out_channel       (crosser_001_out_channel),                                          \n\t\t.out_data          (crosser_001_out_data),                                             \n\t\t.in_empty          (1'b0),                                                             \n\t\t.in_error          (1'b0),                                                             \n\t\t.out_empty         (),                                                                 \n\t\t.out_error         ()                                                                  \n\t);\n\n\taltera_avalon_st_handshake_clock_crosser #(\n\t\t.DATA_WIDTH          (229),\n\t\t.BITS_PER_SYMBOL     (229),\n\t\t.USE_PACKETS         (1),\n\t\t.USE_CHANNEL         (1),\n\t\t.CHANNEL_WIDTH       (2),\n\t\t.USE_ERROR           (0),\n\t\t.ERROR_WIDTH         (1),\n\t\t.VALID_SYNC_DEPTH    (2),\n\t\t.READY_SYNC_DEPTH    (2),\n\t\t.USE_OUTPUT_PIPELINE (0)\n\t) crosser_002 (\n\t\t.in_clk            (clk_50_clk_clk),                                                   \n\t\t.in_reset          (hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset), \n\t\t.out_clk           (pll_sys_outclk0_clk),                                              \n\t\t.out_reset         (alt_vip_vfr_0_clock_master_reset_reset_bridge_in_reset_reset),     \n\t\t.in_ready          (rsp_xbar_demux_src0_ready),                                        \n\t\t.in_valid          (rsp_xbar_demux_src0_valid),                                        \n\t\t.in_startofpacket  (rsp_xbar_demux_src0_startofpacket),                                \n\t\t.in_endofpacket    (rsp_xbar_demux_src0_endofpacket),                                  \n\t\t.in_channel        (rsp_xbar_demux_src0_channel),                                      \n\t\t.in_data           (rsp_xbar_demux_src0_data),                                         \n\t\t.out_ready         (crosser_002_out_ready),                                            \n\t\t.out_valid         (crosser_002_out_valid),                                            \n\t\t.out_startofpacket (crosser_002_out_startofpacket),                                    \n\t\t.out_endofpacket   (crosser_002_out_endofpacket),                                      \n\t\t.out_channel       (crosser_002_out_channel),                                          \n\t\t.out_data          (crosser_002_out_data),                                             \n\t\t.in_empty          (1'b0),                                                             \n\t\t.in_error          (1'b0),                                                             \n\t\t.out_empty         (),                                                                 \n\t\t.out_error         ()                                                                  \n\t);\n\n\taltera_avalon_st_handshake_clock_crosser #(\n\t\t.DATA_WIDTH          (229),\n\t\t.BITS_PER_SYMBOL     (229),\n\t\t.USE_PACKETS         (1),\n\t\t.USE_CHANNEL         (1),\n\t\t.CHANNEL_WIDTH       (2),\n\t\t.USE_ERROR           (0),\n\t\t.ERROR_WIDTH         (1),\n\t\t.VALID_SYNC_DEPTH    (2),\n\t\t.READY_SYNC_DEPTH    (2),\n\t\t.USE_OUTPUT_PIPELINE (0)\n\t) crosser_003 (\n\t\t.in_clk            (clk_50_clk_clk),                                                   \n\t\t.in_reset          (hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset), \n\t\t.out_clk           (pll_sys_outclk0_clk),                                              \n\t\t.out_reset         (alt_vip_vfr_0_clock_master_reset_reset_bridge_in_reset_reset),     \n\t\t.in_ready          (rsp_xbar_demux_001_src0_ready),                                    \n\t\t.in_valid          (rsp_xbar_demux_001_src0_valid),                                    \n\t\t.in_startofpacket  (rsp_xbar_demux_001_src0_startofpacket),                            \n\t\t.in_endofpacket    (rsp_xbar_demux_001_src0_endofpacket),                              \n\t\t.in_channel        (rsp_xbar_demux_001_src0_channel),                                  \n\t\t.in_data           (rsp_xbar_demux_001_src0_data),                                     \n\t\t.out_ready         (crosser_003_out_ready),                                            \n\t\t.out_valid         (crosser_003_out_valid),                                            \n\t\t.out_startofpacket (crosser_003_out_startofpacket),                                    \n\t\t.out_endofpacket   (crosser_003_out_endofpacket),                                      \n\t\t.out_channel       (crosser_003_out_channel),                                          \n\t\t.out_data          (crosser_003_out_data),                                             \n\t\t.in_empty          (1'b0),                                                             \n\t\t.in_error          (1'b0),                                                             \n\t\t.out_empty         (),                                                                 \n\t\t.out_error         ()                                                                  \n\t);\n\n\taltera_avalon_st_pipeline_stage #(\n\t\t.SYMBOLS_PER_BEAT (1),\n\t\t.BITS_PER_SYMBOL  (229),\n\t\t.USE_PACKETS      (1),\n\t\t.USE_EMPTY        (0),\n\t\t.EMPTY_WIDTH      (0),\n\t\t.CHANNEL_WIDTH    (2),\n\t\t.PACKET_WIDTH     (2),\n\t\t.ERROR_WIDTH      (0),\n\t\t.PIPELINE_READY   (1)\n\t) limiter_pipeline (\n\t\t.clk               (pll_sys_outclk0_clk),                                          \n\t\t.reset             (alt_vip_vfr_0_clock_master_reset_reset_bridge_in_reset_reset), \n\t\t.in_ready          (limiter_cmd_src_ready),                                        \n\t\t.in_valid          (limiter_cmd_src_valid),                                        \n\t\t.in_startofpacket  (limiter_cmd_src_startofpacket),                                \n\t\t.in_endofpacket    (limiter_cmd_src_endofpacket),                                  \n\t\t.in_data           (limiter_cmd_src_data),                                         \n\t\t.in_channel        (limiter_cmd_src_channel),                                      \n\t\t.out_ready         (limiter_pipeline_source0_ready),                               \n\t\t.out_valid         (limiter_pipeline_source0_valid),                               \n\t\t.out_startofpacket (limiter_pipeline_source0_startofpacket),                       \n\t\t.out_endofpacket   (limiter_pipeline_source0_endofpacket),                         \n\t\t.out_data          (limiter_pipeline_source0_data),                                \n\t\t.out_channel       (limiter_pipeline_source0_channel),                             \n\t\t.in_empty          (1'b0),                                                         \n\t\t.out_empty         (),                                                             \n\t\t.out_error         (),                                                             \n\t\t.in_error          (1'b0)                                                          \n\t);\n\n\taltera_avalon_st_pipeline_stage #(\n\t\t.SYMBOLS_PER_BEAT (1),\n\t\t.BITS_PER_SYMBOL  (229),\n\t\t.USE_PACKETS      (1),\n\t\t.USE_EMPTY        (0),\n\t\t.EMPTY_WIDTH      (0),\n\t\t.CHANNEL_WIDTH    (2),\n\t\t.PACKET_WIDTH     (2),\n\t\t.ERROR_WIDTH      (0),\n\t\t.PIPELINE_READY   (1)\n\t) limiter_pipeline_001 (\n\t\t.clk               (pll_sys_outclk0_clk),                                          \n\t\t.reset             (alt_vip_vfr_0_clock_master_reset_reset_bridge_in_reset_reset), \n\t\t.in_ready          (rsp_xbar_mux_src_ready),                                       \n\t\t.in_valid          (rsp_xbar_mux_src_valid),                                       \n\t\t.in_startofpacket  (rsp_xbar_mux_src_startofpacket),                               \n\t\t.in_endofpacket    (rsp_xbar_mux_src_endofpacket),                                 \n\t\t.in_data           (rsp_xbar_mux_src_data),                                        \n\t\t.in_channel        (rsp_xbar_mux_src_channel),                                     \n\t\t.out_ready         (limiter_pipeline_001_source0_ready),                           \n\t\t.out_valid         (limiter_pipeline_001_source0_valid),                           \n\t\t.out_startofpacket (limiter_pipeline_001_source0_startofpacket),                   \n\t\t.out_endofpacket   (limiter_pipeline_001_source0_endofpacket),                     \n\t\t.out_data          (limiter_pipeline_001_source0_data),                            \n\t\t.out_channel       (limiter_pipeline_001_source0_channel),                         \n\t\t.in_empty          (1'b0),                                                         \n\t\t.out_empty         (),                                                             \n\t\t.out_error         (),                                                             \n\t\t.in_error          (1'b0)                                                          \n\t);\n\n\taltera_avalon_st_pipeline_stage #(\n\t\t.SYMBOLS_PER_BEAT (1),\n\t\t.BITS_PER_SYMBOL  (229),\n\t\t.USE_PACKETS      (1),\n\t\t.USE_EMPTY        (0),\n\t\t.EMPTY_WIDTH      (0),\n\t\t.CHANNEL_WIDTH    (2),\n\t\t.PACKET_WIDTH     (2),\n\t\t.ERROR_WIDTH      (0),\n\t\t.PIPELINE_READY   (1)\n\t) agent_pipeline (\n\t\t.clk               (clk_50_clk_clk),                                                   \n\t\t.reset             (hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset), \n\t\t.in_ready          (burst_adapter_source0_ready),                                      \n\t\t.in_valid          (burst_adapter_source0_valid),                                      \n\t\t.in_startofpacket  (burst_adapter_source0_startofpacket),                              \n\t\t.in_endofpacket    (burst_adapter_source0_endofpacket),                                \n\t\t.in_data           (burst_adapter_source0_data),                                       \n\t\t.in_channel        (burst_adapter_source0_channel),                                    \n\t\t.out_ready         (agent_pipeline_source0_ready),                                     \n\t\t.out_valid         (agent_pipeline_source0_valid),                                     \n\t\t.out_startofpacket (agent_pipeline_source0_startofpacket),                             \n\t\t.out_endofpacket   (agent_pipeline_source0_endofpacket),                               \n\t\t.out_data          (agent_pipeline_source0_data),                                      \n\t\t.out_channel       (agent_pipeline_source0_channel),                                   \n\t\t.in_empty          (1'b0),                                                             \n\t\t.out_empty         (),                                                                 \n\t\t.out_error         (),                                                                 \n\t\t.in_error          (1'b0)                                                              \n\t);\n\n\taltera_avalon_st_pipeline_stage #(\n\t\t.SYMBOLS_PER_BEAT (1),\n\t\t.BITS_PER_SYMBOL  (229),\n\t\t.USE_PACKETS      (1),\n\t\t.USE_EMPTY        (0),\n\t\t.EMPTY_WIDTH      (0),\n\t\t.CHANNEL_WIDTH    (2),\n\t\t.PACKET_WIDTH     (2),\n\t\t.ERROR_WIDTH      (0),\n\t\t.PIPELINE_READY   (1)\n\t) agent_pipeline_001 (\n\t\t.clk               (clk_50_clk_clk),                                                   \n\t\t.reset             (hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset), \n\t\t.in_ready          (burst_adapter_001_source0_ready),                                  \n\t\t.in_valid          (burst_adapter_001_source0_valid),                                  \n\t\t.in_startofpacket  (burst_adapter_001_source0_startofpacket),                          \n\t\t.in_endofpacket    (burst_adapter_001_source0_endofpacket),                            \n\t\t.in_data           (burst_adapter_001_source0_data),                                   \n\t\t.in_channel        (burst_adapter_001_source0_channel),                                \n\t\t.out_ready         (agent_pipeline_001_source0_ready),                                 \n\t\t.out_valid         (agent_pipeline_001_source0_valid),                                 \n\t\t.out_startofpacket (agent_pipeline_001_source0_startofpacket),                         \n\t\t.out_endofpacket   (agent_pipeline_001_source0_endofpacket),                           \n\t\t.out_data          (agent_pipeline_001_source0_data),                                  \n\t\t.out_channel       (agent_pipeline_001_source0_channel),                               \n\t\t.in_empty          (1'b0),                                                             \n\t\t.out_empty         (),                                                                 \n\t\t.out_error         (),                                                                 \n\t\t.in_error          (1'b0)                                                              \n\t);\n\n\taltera_avalon_st_pipeline_stage #(\n\t\t.SYMBOLS_PER_BEAT (1),\n\t\t.BITS_PER_SYMBOL  (229),\n\t\t.USE_PACKETS      (1),\n\t\t.USE_EMPTY        (0),\n\t\t.EMPTY_WIDTH      (0),\n\t\t.CHANNEL_WIDTH    (0),\n\t\t.PACKET_WIDTH     (2),\n\t\t.ERROR_WIDTH      (0),\n\t\t.PIPELINE_READY   (1)\n\t) agent_pipeline_002 (\n\t\t.clk               (clk_50_clk_clk),                                                   \n\t\t.reset             (hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset), \n\t\t.in_ready          (hps_0_f2h_axi_slave_agent_write_rp_ready),                         \n\t\t.in_valid          (hps_0_f2h_axi_slave_agent_write_rp_valid),                         \n\t\t.in_startofpacket  (hps_0_f2h_axi_slave_agent_write_rp_startofpacket),                 \n\t\t.in_endofpacket    (hps_0_f2h_axi_slave_agent_write_rp_endofpacket),                   \n\t\t.in_data           (hps_0_f2h_axi_slave_agent_write_rp_data),                          \n\t\t.out_ready         (agent_pipeline_002_source0_ready),                                 \n\t\t.out_valid         (agent_pipeline_002_source0_valid),                                 \n\t\t.out_startofpacket (agent_pipeline_002_source0_startofpacket),                         \n\t\t.out_endofpacket   (agent_pipeline_002_source0_endofpacket),                           \n\t\t.out_data          (agent_pipeline_002_source0_data),                                  \n\t\t.in_empty          (1'b0),                                                             \n\t\t.out_empty         (),                                                                 \n\t\t.out_error         (),                                                                 \n\t\t.in_error          (1'b0),                                                             \n\t\t.out_channel       (),                                                                 \n\t\t.in_channel        (1'b0)                                                              \n\t);\n\n\taltera_avalon_st_pipeline_stage #(\n\t\t.SYMBOLS_PER_BEAT (1),\n\t\t.BITS_PER_SYMBOL  (229),\n\t\t.USE_PACKETS      (1),\n\t\t.USE_EMPTY        (0),\n\t\t.EMPTY_WIDTH      (0),\n\t\t.CHANNEL_WIDTH    (0),\n\t\t.PACKET_WIDTH     (2),\n\t\t.ERROR_WIDTH      (0),\n\t\t.PIPELINE_READY   (1)\n\t) agent_pipeline_003 (\n\t\t.clk               (clk_50_clk_clk),                                                   \n\t\t.reset             (hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset), \n\t\t.in_ready          (hps_0_f2h_axi_slave_agent_read_rp_ready),                          \n\t\t.in_valid          (hps_0_f2h_axi_slave_agent_read_rp_valid),                          \n\t\t.in_startofpacket  (hps_0_f2h_axi_slave_agent_read_rp_startofpacket),                  \n\t\t.in_endofpacket    (hps_0_f2h_axi_slave_agent_read_rp_endofpacket),                    \n\t\t.in_data           (hps_0_f2h_axi_slave_agent_read_rp_data),                           \n\t\t.out_ready         (agent_pipeline_003_source0_ready),                                 \n\t\t.out_valid         (agent_pipeline_003_source0_valid),                                 \n\t\t.out_startofpacket (agent_pipeline_003_source0_startofpacket),                         \n\t\t.out_endofpacket   (agent_pipeline_003_source0_endofpacket),                           \n\t\t.out_data          (agent_pipeline_003_source0_data),                                  \n\t\t.in_empty          (1'b0),                                                             \n\t\t.out_empty         (),                                                                 \n\t\t.out_error         (),                                                                 \n\t\t.in_error          (1'b0),                                                             \n\t\t.out_channel       (),                                                                 \n\t\t.in_channel        (1'b0)                                                              \n\t);\n\nendmodule\n</code>"
                },
                {
                    "type": "text",
                    "text": "Based on the provided original Verilog code, its comments and above answers, generate a detailed specification for the module. Include the following information in a single, concise paragraph:\n1. The name of the module.\n2. A simple explanation of the module's functionality.\n3. The input and output ports, along with a brief explanation of each.\n4. The internal signals used within the module, with a brief explanation of their purpose.\n5. An overview of the different blocks or sections in the code and their functions.\nEnsure that the specification is clear and accurately reflects the details from the code and comments.\nYour answer should be structured and well-organized, providing a comprehensive and detailed overview of the module's design and operation.\nPlease provide your answer in the following format:\nModule name: [module name]. Module specification: [module specification]."
                },
                {
                    "type": "text",
                    "text": "Module name: DE1_SoC_QSYS_mm_interconnect_4. Module specification: This module serves as an interconnect component for a System-on-Chip (SoC) design, managing communication between an Avalon master interface (likely from a video frame reader) and an AXI slave interface (connected to a Hard Processor System). It features input ports for clock signals, reset signals, and various control and data signals from both interfaces. Output ports include control and data signals for the AXI slave interface and response signals for the Avalon master interface. Internally, the module utilizes numerous wire signals for translators, routers, arbiters, multiplexers, demultiplexers, burst adapters, and clock crossers. The module is structured into several functional blocks, including address translation, burst adaptation, arbitration, and clock domain crossing. It implements components such as Avalon-to"
                }
            ]
        }
    ]
}