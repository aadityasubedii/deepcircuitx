{
    "line_num": [
        [
            298,
            298
        ],
        [
            297,
            297
        ],
        [
            296,
            296
        ],
        [
            295,
            295
        ],
        [
            294,
            294
        ],
        [
            293,
            293
        ],
        [
            291,
            291
        ],
        [
            290,
            290
        ],
        [
            289,
            289
        ],
        [
            288,
            288
        ],
        [
            287,
            287
        ],
        [
            286,
            286
        ],
        [
            282,
            282
        ],
        [
            237,
            237
        ],
        [
            235,
            235
        ],
        [
            233,
            233
        ],
        [
            228,
            228
        ],
        [
            153,
            153
        ],
        [
            152,
            152
        ],
        [
            103,
            103
        ],
        [
            102,
            102
        ],
        [
            62,
            62
        ],
        [
            61,
            61
        ],
        [
            60,
            60
        ],
        [
            59,
            59
        ],
        [
            58,
            58
        ],
        [
            46,
            56
        ]
    ],
    "blocks": [
        "assign ctrl_packet_interlaced_bank1_bits_FROM_slave_TO_controller =  registers[(SLAVE_DATA_REQUIREDWIDTH*14)+CONTROL_PACKET_INTERLACED_REQUIREDWIDTH-1:SLAVE_DATA_REQUIREDWIDTH*14];",
        "assign ctrl_packet_height_bank1_bits_FROM_slave_TO_controller =     registers[(SLAVE_DATA_REQUIREDWIDTH*13)+CONTROL_PACKET_RESOLUTION_REQUIREDWIDTH-1:SLAVE_DATA_REQUIREDWIDTH*13];",
        "assign ctrl_packet_width_bank1_bits_FROM_slave_TO_controller =       registers[(SLAVE_DATA_REQUIREDWIDTH*12)+CONTROL_PACKET_RESOLUTION_REQUIREDWIDTH-1:SLAVE_DATA_REQUIREDWIDTH*12];",
        "assign vid_packet_samples_bank1_bits_FROM_slave_TO_controller =      registers[(SLAVE_DATA_REQUIREDWIDTH*10)+SLAVE_DATA_REQUIREDWIDTH-1:SLAVE_DATA_REQUIREDWIDTH*10];",
        "assign vid_packet_words_bank1_bits_FROM_slave_TO_controller =        registers[(SLAVE_DATA_REQUIREDWIDTH*9)+SLAVE_DATA_REQUIREDWIDTH-1:SLAVE_DATA_REQUIREDWIDTH*9];",
        "assign vid_packet_base_address_bank1_bits_FROM_slave_TO_controller=  registers[(SLAVE_DATA_REQUIREDWIDTH*8)+SLAVE_DATA_REQUIREDWIDTH-1:SLAVE_DATA_REQUIREDWIDTH*8];",
        "assign ctrl_packet_interlaced_bank0_bits_FROM_slave_TO_controller =  registers[(SLAVE_DATA_REQUIREDWIDTH*7)+CONTROL_PACKET_INTERLACED_REQUIREDWIDTH-1:SLAVE_DATA_REQUIREDWIDTH*7];",
        "assign ctrl_packet_height_bank0_bits_FROM_slave_TO_controller =     registers[(SLAVE_DATA_REQUIREDWIDTH*6)+CONTROL_PACKET_RESOLUTION_REQUIREDWIDTH-1:SLAVE_DATA_REQUIREDWIDTH*6];",
        "assign ctrl_packet_width_bank0_bits_FROM_slave_TO_controller =       registers[(SLAVE_DATA_REQUIREDWIDTH*5)+CONTROL_PACKET_RESOLUTION_REQUIREDWIDTH-1:SLAVE_DATA_REQUIREDWIDTH*5];",
        "assign vid_packet_samples_bank0_bits_FROM_slave_TO_controller =      registers[(SLAVE_DATA_REQUIREDWIDTH*3)+SLAVE_DATA_REQUIREDWIDTH-1:SLAVE_DATA_REQUIREDWIDTH*3];",
        "assign vid_packet_words_bank0_bits_FROM_slave_TO_controller =        registers[(SLAVE_DATA_REQUIREDWIDTH*2)+SLAVE_DATA_REQUIREDWIDTH-1:SLAVE_DATA_REQUIREDWIDTH*2];",
        "assign vid_packet_base_address_bank0_bits_FROM_slave_TO_controller=  registers[(SLAVE_DATA_REQUIREDWIDTH*1)+SLAVE_DATA_REQUIREDWIDTH-1:SLAVE_DATA_REQUIREDWIDTH*1];",
        "assign next_bank_FROM_slave_TO_controller = registers[0];",
        "assign registers_write = {NO_REGISTERS{1'b0}};",
        "assign registers_in = {(SLAVE_DATA_REQUIREDWIDTH * NO_REGISTERS){1'b0}};",
        "wire [(SLAVE_DATA_REQUIREDWIDTH * NO_REGISTERS)-1:0] registers;",
        "localparam NO_REGISTERS = 18;",
        "localparam CONTROL_PACKET_INTERLACED_REQUIREDWIDTH = 4;",
        "localparam CONTROL_PACKET_RESOLUTION_REQUIREDWIDTH = 16;",
        "localparam INTERNAL_MASTER_ADDRESS_REQUIREDWIDTH = 32;",
        "localparam INTERNAL_MASTER_DATA_REQUIREDWIDTH = 32;",
        "localparam SLAVE_DATA_REQUIREDWIDTH = 32; ",
        "localparam SLAVE_ADDRESS_REQUIREDWIDTH = 5; ",
        "localparam MM_MASTER_BURST_REQUIREDWIDTH = alt_vipfunc_required_width(RMASTER_BURST_TARGET);",
        "localparam MM_ADDR_REQUIREDWIDTH = 32; ",
        "localparam DATA_WIDTH = BITS_PER_PIXEL_PER_COLOR_PLANE * NUMBER_OF_CHANNELS_IN_PARALLEL;",
        "function integer alt_vipfunc_required_width;\n  input [511:0] value;\n  integer i;\n  begin\n    alt_vipfunc_required_width = 512;\n    for (i=512; i>0; i=i-1) begin\n      if (2**i>value)\n        alt_vipfunc_required_width = i;\n    end\n  end\nendfunction"
    ]
}