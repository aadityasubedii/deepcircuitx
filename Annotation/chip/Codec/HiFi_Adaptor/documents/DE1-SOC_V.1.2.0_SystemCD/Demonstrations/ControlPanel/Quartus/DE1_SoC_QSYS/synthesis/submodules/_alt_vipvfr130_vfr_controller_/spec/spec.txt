Module name: alt_vipvfr130_vfr_controller.
Module specification: The alt_vipvfr130_vfr_controller is a Verilog module designed to manage video frame reading operations. It handles data flow between a master interface and video processing hardware, specifically managing video packets settings in two banks. Input ports include `clock` (system clock signal), `reset` (resets module's state to IDLE state), `master_interrupt_receive` (signal from the master for end-of-frame processing), `go_bit` (starts video frame processing), `next_bank` (selects control settings bank), `ctrl_packet_width_bankX`, `ctrl_packet_height_bankX`, `ctrl_packet_interlaced_bankX` (control settings for width, height, and interlacing for video packets in bank X), and `vid_packet_base_address_bankX`, `vid_packet_samples_bankX`, `vid_packet_words_bankX` (video data configurations in bank X). Output ports include `master_address`, `master_write`, `master_writedata` (master interface for data writing), `running` (indicates active processing), `frame_complete` (signals completion of video frame processing), and outputs for the width, height, and interlaced status of the next video packet to be processed. Internal signals consist of a `state` register representing the current state of the FSM, and `bank_to_read`, which selects video packet configurations based on the input from `next_bank`. The code implements various FSM states like IDLE, SENDING_ADDRESS, SENDING_SAMPLES, SENDING_WORDS, SENDING_TYPE, SENDING_GO_AND_ENABLE_INTERRUPT, and WAITING_END_FRAME to coordinate the initialization, data transport, and completion signaling in video frame processing.