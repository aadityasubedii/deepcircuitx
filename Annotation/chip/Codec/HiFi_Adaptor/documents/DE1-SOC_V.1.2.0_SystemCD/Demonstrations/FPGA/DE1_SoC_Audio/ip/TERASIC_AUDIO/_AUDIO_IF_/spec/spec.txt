Module name: AUDIO_IF. Module specification: The AUDIO_IF module serves as an interface between a system and audio peripherals, mainly handling data transfer between the system and audio codec devices such as ADC (Audio Data Converter) and DAC (Digital to Analog Converter). It uses input ports such as `avs_s1_clk` for synchronization, `avs_s1_reset` for initialization, `avs_s1_address`, `avs_s1_read`, and `avs_s1_write` for memory access control, `avs_s1_writedata` for input data, alongside `avs_s1_export_BCLK`, `avs_s1_export_DACLRC`, and `avs_s1_export_ADCLRC` for clock and channel control of the audio signals. The output ports include `avs_s1_readdata` which transports read data externally, `avs_s1_export_DACDAT` for sending processed audio data to the DAC, and `avs_s1_export_XCK` which exports the system clock for synchronization with external devices. Internal signals such as `reg_readdata`, `fifo_clear`, `dacfifo_full`, `dacfifo_write`, `dacfifo_writedata`, `adcfifo_empty`, `adcfifo_read`, and `adcfifo_readdata` handle data storage, data flow control, and status indication associated with FIFO operations. The module is split into different functional blocks: handling resets and command operations for clearing FIFOs, managing write operations into the DAC FIFOs, and command-driven data reads from the ADC FIFOs which utilize internal states to manage incoming and outgoing audio data streams effectively. Additional blocks instantiate and configure the components `AUDIO_DAC` and `AUDIO_ADC` with appropriate FIFO controls for audio data IO operations, configured to handle 32-bit data for both ADC and DAC components.