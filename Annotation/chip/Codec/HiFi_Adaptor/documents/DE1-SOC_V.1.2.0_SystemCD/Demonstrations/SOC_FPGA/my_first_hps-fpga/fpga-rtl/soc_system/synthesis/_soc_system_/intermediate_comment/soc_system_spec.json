{
    "spec": "Module name: soc_system. Module specification: This module implements a System-on-Chip (SoC) design integrating a Hard Processor System (HPS) with FPGA fabric. It features various interfaces including memory, Ethernet, USB, UART, SPI, I2C, and GPIO. The module has numerous input and output ports for clock, reset, memory interfacing, HPS I/O, and LED control. Key inputs include clk_clk, reset_reset_n, and memory_oct_rzqin, while outputs cover memory signals, HPS I/O, and LED control. Internal signals facilitate communication between submodules, handling memory-mapped interconnects, AXI interfaces, and various peripheral controls. The design incorporates several functional blocks: an HPS core, on-chip memory, master interfaces for FPGA and HPS, a JTAG UART, interrupt handling",
    "gpt-message": [
        {
            "role": "system",
            "content": "You are an expert in hardware design with a deep understanding of Verilog RTL codes. Now I want to train a large language model for code comment generation tasks specifically focused on Verilog RTL codes. And I want you to help me process the raw data, transforming it into suitable formats that can serve as inputs and outputs for the model."
        },
        {
            "role": "user",
            "content": "Name of the module and its functionality is as follows: \nModule name: soc_system\n\nExplanation: This module appears to be a top-level system-on-chip (SoC) design that integrates various components including a Hard Processor System (HPS), memory interfaces, interconnects, and peripherals. It likely represents a complete FPGA-based system with both hardware and software capabilities. The module defines numerous input/output ports and internal wires/registers to connect different submodules and components. It includes AXI interfaces for communication between the HPS and FPGA fabric, memory controllers, interrupt handlers, reset controllers, and various peripheral interfaces like UART, I2C, and GPIO. The overall purpose seems to be creating a flexible and customizable SoC platform that combines the processing power of an ARM-based HPS with custom FPGA logic."
        },
        {
            "role": "user",
            "content": "Input and output ports and their explanation is as follows: \nHere's a concise summary of the input and output ports for the soc_system module:\n\nInput ports:\nclk_clk, reset_reset_n, memory_oct_rzqin, hps_0_f2h_cold_reset_req_reset_n, hps_0_f2h_debug_reset_req_reset_n, hps_0_f2h_warm_reset_req_reset_n, hps_0_f2h_stm_hw_events_stm_hwevents, hps_0_hps_io_hps_io_emac1_inst_RXD0, hps_0_hps_io_hps_io_emac1_inst_RX_CTL, hps_0_hps_io_hps_io_emac1_inst_RX_CLK, hps_0_hps_io_hps_io_emac1_inst_RXD1, hps_0_hps_io_hps_io_emac1_inst_RXD2, hps_0_hps_io_hps_io_emac1_inst_RXD3, hps_0_hps_io_hps_io_spim1_inst_MISO, hps_0_hps_io_hps_io_uart0_inst_RX, hps_0_hps_io_hps_io_usb1_inst_CLK, hps_0_hps_io_hps_io_usb1_inst_DIR, hps_0_hps_io_hps_io_usb1_inst_NXT\n\nExplanation: These ports include clock and reset inputs, memory-related signals, HPS-related reset and event inputs, and various interface signals for Ethernet, SPI, UART, and USB.\n\nOutput ports:\nmemory_mem_a, memory_mem_ba, memory_mem_ck, memory_mem_ck_n, memory_mem_cke, memory_mem_cs_n, memory_mem_ras_n, memory_mem_cas_n, memory_mem_we_n, memory_mem_reset_n, memory_mem_odt, memory_mem_dm, hps_0_hps_io_hps_io_emac1_inst_TX_CLK, hps_0_hps_io_hps_io_emac1_inst_TXD0, hps_0_hps_io_hps_io_emac1_inst_TXD1, hps_0_hps_io_hps_io_emac1_inst_TXD2, hps_0_hps_io_hps_io_emac1_inst_TXD3, hps_0_hps_io_hps_io_emac1_inst_MDC, hps_0_hps_io_hps_io_emac1_inst_TX_CTL, hps_0_hps_io_hps_io_qspi_inst_SS0, hps_0_hps_io_hps_io_qspi_inst_CLK, hps_0_hps_io_hps_io_sdio_inst_CLK, hps_0_hps_io_hps_io_usb1_inst_STP, hps_0_hps_io_hps_io_spim1_inst_CLK, hps_0_hps_io_hps_io_spim1_inst_MOSI, hps_0_hps_io_hps_io_spim1_inst_SS0, hps_0_hps_io_hps_io_uart0_inst_TX, hps_0_h2f_reset_reset_n, pio_led_external_connection_export\n\nExplanation: These ports include memory interface signals, Ethernet transmission signals, and various interface signals for QSPI, SDIO, USB, SPI, and UART. They also include reset and LED control outputs.\n\nNote: There are also several inout ports for bidirectional signals, which I haven't listed separately to keep the response concise."
        },
        {
            "role": "user",
            "content": "Internal signals and their explanation is as follows: \nBased on the given code, here are the internal signals and their explanations:\n\nInternal signals: mm_interconnect_0_pio_led_s1_writedata, mm_interconnect_0_pio_led_s1_address, mm_interconnect_0_pio_led_s1_chipselect, mm_interconnect_0_pio_led_s1_write, mm_interconnect_0_pio_led_s1_readdata, mm_interconnect_0_onchip_memory2_0_s1_writedata, mm_interconnect_0_onchip_memory2_0_s1_address, mm_interconnect_0_onchip_memory2_0_s1_chipselect, mm_interconnect_0_onchip_memory2_0_s1_clken, mm_interconnect_0_onchip_memory2_0_s1_write, mm_interconnect_0_onchip_memory2_0_s1_readdata, mm_interconnect_0_onchip_memory2_0_s1_byteenable, fpga_only_master_master_waitrequest, fpga_only_master_master_writedata, fpga_only_master_master_address, fpga_only_master_master_write, fpga_only_master_master_read, fpga_only_master_master_readdata, fpga_only_master_master_byteenable, fpga_only_master_master_readdatavalid.\n\nExplanation: These signals are used for interconnecting various components within the SoC system. The \"mm_interconnect\" signals are part of the memory-mapped interconnect, facilitating communication between the LED PIO and on-chip memory. The \"fpga_only_master\" signals are related to an FPGA master interface, enabling read and write operations to other components in the system. These internal signals handle data transfer, addressing, and control between different modules in the SoC design."
        },
        {
            "role": "user",
            "content": "Original Verilog code is as follows: \n```verilog\n\n\n\n\n`timescale 1 ps / 1 ps\nmodule soc_system (\n\t\tinput  wire        clk_clk,                               \n\t\tinput  wire        reset_reset_n,                         \n\t\toutput wire [14:0] memory_mem_a,                          \n\t\toutput wire [2:0]  memory_mem_ba,                         \n\t\toutput wire        memory_mem_ck,                         \n\t\toutput wire        memory_mem_ck_n,                       \n\t\toutput wire        memory_mem_cke,                        \n\t\toutput wire        memory_mem_cs_n,                       \n\t\toutput wire        memory_mem_ras_n,                      \n\t\toutput wire        memory_mem_cas_n,                      \n\t\toutput wire        memory_mem_we_n,                       \n\t\toutput wire        memory_mem_reset_n,                    \n\t\tinout  wire [31:0] memory_mem_dq,                         \n\t\tinout  wire [3:0]  memory_mem_dqs,                        \n\t\tinout  wire [3:0]  memory_mem_dqs_n,                      \n\t\toutput wire        memory_mem_odt,                        \n\t\toutput wire [3:0]  memory_mem_dm,                         \n\t\tinput  wire        memory_oct_rzqin,                      \n\t\toutput wire        hps_0_hps_io_hps_io_emac1_inst_TX_CLK, \n\t\toutput wire        hps_0_hps_io_hps_io_emac1_inst_TXD0,   \n\t\toutput wire        hps_0_hps_io_hps_io_emac1_inst_TXD1,   \n\t\toutput wire        hps_0_hps_io_hps_io_emac1_inst_TXD2,   \n\t\toutput wire        hps_0_hps_io_hps_io_emac1_inst_TXD3,   \n\t\tinput  wire        hps_0_hps_io_hps_io_emac1_inst_RXD0,   \n\t\tinout  wire        hps_0_hps_io_hps_io_emac1_inst_MDIO,   \n\t\toutput wire        hps_0_hps_io_hps_io_emac1_inst_MDC,    \n\t\tinput  wire        hps_0_hps_io_hps_io_emac1_inst_RX_CTL, \n\t\toutput wire        hps_0_hps_io_hps_io_emac1_inst_TX_CTL, \n\t\tinput  wire        hps_0_hps_io_hps_io_emac1_inst_RX_CLK, \n\t\tinput  wire        hps_0_hps_io_hps_io_emac1_inst_RXD1,   \n\t\tinput  wire        hps_0_hps_io_hps_io_emac1_inst_RXD2,   \n\t\tinput  wire        hps_0_hps_io_hps_io_emac1_inst_RXD3,   \n\t\tinout  wire        hps_0_hps_io_hps_io_qspi_inst_IO0,     \n\t\tinout  wire        hps_0_hps_io_hps_io_qspi_inst_IO1,     \n\t\tinout  wire        hps_0_hps_io_hps_io_qspi_inst_IO2,     \n\t\tinout  wire        hps_0_hps_io_hps_io_qspi_inst_IO3,     \n\t\toutput wire        hps_0_hps_io_hps_io_qspi_inst_SS0,     \n\t\toutput wire        hps_0_hps_io_hps_io_qspi_inst_CLK,     \n\t\tinout  wire        hps_0_hps_io_hps_io_sdio_inst_CMD,     \n\t\tinout  wire        hps_0_hps_io_hps_io_sdio_inst_D0,      \n\t\tinout  wire        hps_0_hps_io_hps_io_sdio_inst_D1,      \n\t\toutput wire        hps_0_hps_io_hps_io_sdio_inst_CLK,     \n\t\tinout  wire        hps_0_hps_io_hps_io_sdio_inst_D2,      \n\t\tinout  wire        hps_0_hps_io_hps_io_sdio_inst_D3,      \n\t\tinout  wire        hps_0_hps_io_hps_io_usb1_inst_D0,      \n\t\tinout  wire        hps_0_hps_io_hps_io_usb1_inst_D1,      \n\t\tinout  wire        hps_0_hps_io_hps_io_usb1_inst_D2,      \n\t\tinout  wire        hps_0_hps_io_hps_io_usb1_inst_D3,      \n\t\tinout  wire        hps_0_hps_io_hps_io_usb1_inst_D4,      \n\t\tinout  wire        hps_0_hps_io_hps_io_usb1_inst_D5,      \n\t\tinout  wire        hps_0_hps_io_hps_io_usb1_inst_D6,      \n\t\tinout  wire        hps_0_hps_io_hps_io_usb1_inst_D7,      \n\t\tinput  wire        hps_0_hps_io_hps_io_usb1_inst_CLK,     \n\t\toutput wire        hps_0_hps_io_hps_io_usb1_inst_STP,     \n\t\tinput  wire        hps_0_hps_io_hps_io_usb1_inst_DIR,     \n\t\tinput  wire        hps_0_hps_io_hps_io_usb1_inst_NXT,     \n\t\toutput wire        hps_0_hps_io_hps_io_spim1_inst_CLK,    \n\t\toutput wire        hps_0_hps_io_hps_io_spim1_inst_MOSI,   \n\t\tinput  wire        hps_0_hps_io_hps_io_spim1_inst_MISO,   \n\t\toutput wire        hps_0_hps_io_hps_io_spim1_inst_SS0,    \n\t\tinput  wire        hps_0_hps_io_hps_io_uart0_inst_RX,     \n\t\toutput wire        hps_0_hps_io_hps_io_uart0_inst_TX,     \n\t\tinout  wire        hps_0_hps_io_hps_io_i2c0_inst_SDA,     \n\t\tinout  wire        hps_0_hps_io_hps_io_i2c0_inst_SCL,     \n\t\tinout  wire        hps_0_hps_io_hps_io_i2c1_inst_SDA,     \n\t\tinout  wire        hps_0_hps_io_hps_io_i2c1_inst_SCL,     \n\t\tinout  wire        hps_0_hps_io_hps_io_gpio_inst_GPIO09,  \n\t\tinout  wire        hps_0_hps_io_hps_io_gpio_inst_GPIO35,  \n\t\tinout  wire        hps_0_hps_io_hps_io_gpio_inst_GPIO40,  \n\t\tinout  wire        hps_0_hps_io_hps_io_gpio_inst_GPIO41,  \n\t\tinout  wire        hps_0_hps_io_hps_io_gpio_inst_GPIO48,  \n\t\tinout  wire        hps_0_hps_io_hps_io_gpio_inst_GPIO53,  \n\t\tinout  wire        hps_0_hps_io_hps_io_gpio_inst_GPIO54,  \n\t\tinout  wire        hps_0_hps_io_hps_io_gpio_inst_GPIO61,  \n\t\toutput wire        hps_0_h2f_reset_reset_n,               \n\t\tinput  wire [27:0] hps_0_f2h_stm_hw_events_stm_hwevents,  \n\t\tinput  wire        hps_0_f2h_warm_reset_req_reset_n,      \n\t\tinput  wire        hps_0_f2h_debug_reset_req_reset_n,     \n\t\tinput  wire        hps_0_f2h_cold_reset_req_reset_n,      \n\t\toutput wire [9:0]  pio_led_external_connection_export     \n\t);\n\n\twire  [31:0] mm_interconnect_0_pio_led_s1_writedata;                    \n\twire   [1:0] mm_interconnect_0_pio_led_s1_address;                      \n\twire         mm_interconnect_0_pio_led_s1_chipselect;                   \n\twire         mm_interconnect_0_pio_led_s1_write;                        \n\twire  [31:0] mm_interconnect_0_pio_led_s1_readdata;                     \n\twire  [63:0] mm_interconnect_0_onchip_memory2_0_s1_writedata;           \n\twire  [12:0] mm_interconnect_0_onchip_memory2_0_s1_address;             \n\twire         mm_interconnect_0_onchip_memory2_0_s1_chipselect;          \n\twire         mm_interconnect_0_onchip_memory2_0_s1_clken;               \n\twire         mm_interconnect_0_onchip_memory2_0_s1_write;               \n\twire  [63:0] mm_interconnect_0_onchip_memory2_0_s1_readdata;            \n\twire   [7:0] mm_interconnect_0_onchip_memory2_0_s1_byteenable;          \n\twire         fpga_only_master_master_waitrequest;                       \n\twire  [31:0] fpga_only_master_master_writedata;                         \n\twire  [31:0] fpga_only_master_master_address;                           \n\twire         fpga_only_master_master_write;                             \n\twire         fpga_only_master_master_read;                              \n\twire  [31:0] fpga_only_master_master_readdata;                          \n\twire   [3:0] fpga_only_master_master_byteenable;                        \n\twire         fpga_only_master_master_readdatavalid;                     \n\twire         mm_interconnect_0_jtag_uart_avalon_jtag_slave_waitrequest; \n\twire  [31:0] mm_interconnect_0_jtag_uart_avalon_jtag_slave_writedata;   \n\twire   [0:0] mm_interconnect_0_jtag_uart_avalon_jtag_slave_address;     \n\twire         mm_interconnect_0_jtag_uart_avalon_jtag_slave_chipselect;  \n\twire         mm_interconnect_0_jtag_uart_avalon_jtag_slave_write;       \n\twire         mm_interconnect_0_jtag_uart_avalon_jtag_slave_read;        \n\twire  [31:0] mm_interconnect_0_jtag_uart_avalon_jtag_slave_readdata;    \n\twire         hps_0_h2f_axi_master_awvalid;                              \n\twire   [2:0] hps_0_h2f_axi_master_arsize;                               \n\twire   [1:0] hps_0_h2f_axi_master_arlock;                               \n\twire   [3:0] hps_0_h2f_axi_master_awcache;                              \n\twire         hps_0_h2f_axi_master_arready;                              \n\twire  [11:0] hps_0_h2f_axi_master_arid;                                 \n\twire         hps_0_h2f_axi_master_rready;                               \n\twire         hps_0_h2f_axi_master_bready;                               \n\twire   [2:0] hps_0_h2f_axi_master_awsize;                               \n\twire   [2:0] hps_0_h2f_axi_master_awprot;                               \n\twire         hps_0_h2f_axi_master_arvalid;                              \n\twire   [2:0] hps_0_h2f_axi_master_arprot;                               \n\twire  [11:0] hps_0_h2f_axi_master_bid;                                  \n\twire   [3:0] hps_0_h2f_axi_master_arlen;                                \n\twire         hps_0_h2f_axi_master_awready;                              \n\twire  [11:0] hps_0_h2f_axi_master_awid;                                 \n\twire         hps_0_h2f_axi_master_bvalid;                               \n\twire  [11:0] hps_0_h2f_axi_master_wid;                                  \n\twire   [1:0] hps_0_h2f_axi_master_awlock;                               \n\twire   [1:0] hps_0_h2f_axi_master_awburst;                              \n\twire   [1:0] hps_0_h2f_axi_master_bresp;                                \n\twire   [7:0] hps_0_h2f_axi_master_wstrb;                                \n\twire         hps_0_h2f_axi_master_rvalid;                               \n\twire  [63:0] hps_0_h2f_axi_master_wdata;                                \n\twire         hps_0_h2f_axi_master_wready;                               \n\twire   [1:0] hps_0_h2f_axi_master_arburst;                              \n\twire  [63:0] hps_0_h2f_axi_master_rdata;                                \n\twire  [29:0] hps_0_h2f_axi_master_araddr;                               \n\twire   [3:0] hps_0_h2f_axi_master_arcache;                              \n\twire   [3:0] hps_0_h2f_axi_master_awlen;                                \n\twire  [29:0] hps_0_h2f_axi_master_awaddr;                               \n\twire  [11:0] hps_0_h2f_axi_master_rid;                                  \n\twire         hps_0_h2f_axi_master_wvalid;                               \n\twire   [1:0] hps_0_h2f_axi_master_rresp;                                \n\twire         hps_0_h2f_axi_master_wlast;                                \n\twire         hps_0_h2f_axi_master_rlast;                                \n\twire         hps_0_h2f_lw_axi_master_awvalid;                           \n\twire   [2:0] hps_0_h2f_lw_axi_master_arsize;                            \n\twire   [1:0] hps_0_h2f_lw_axi_master_arlock;                            \n\twire   [3:0] hps_0_h2f_lw_axi_master_awcache;                           \n\twire         hps_0_h2f_lw_axi_master_arready;                           \n\twire  [11:0] hps_0_h2f_lw_axi_master_arid;                              \n\twire         hps_0_h2f_lw_axi_master_rready;                            \n\twire         hps_0_h2f_lw_axi_master_bready;                            \n\twire   [2:0] hps_0_h2f_lw_axi_master_awsize;                            \n\twire   [2:0] hps_0_h2f_lw_axi_master_awprot;                            \n\twire         hps_0_h2f_lw_axi_master_arvalid;                           \n\twire   [2:0] hps_0_h2f_lw_axi_master_arprot;                            \n\twire  [11:0] hps_0_h2f_lw_axi_master_bid;                               \n\twire   [3:0] hps_0_h2f_lw_axi_master_arlen;                             \n\twire         hps_0_h2f_lw_axi_master_awready;                           \n\twire  [11:0] hps_0_h2f_lw_axi_master_awid;                              \n\twire         hps_0_h2f_lw_axi_master_bvalid;                            \n\twire  [11:0] hps_0_h2f_lw_axi_master_wid;                               \n\twire   [1:0] hps_0_h2f_lw_axi_master_awlock;                            \n\twire   [1:0] hps_0_h2f_lw_axi_master_awburst;                           \n\twire   [1:0] hps_0_h2f_lw_axi_master_bresp;                             \n\twire   [3:0] hps_0_h2f_lw_axi_master_wstrb;                             \n\twire         hps_0_h2f_lw_axi_master_rvalid;                            \n\twire  [31:0] hps_0_h2f_lw_axi_master_wdata;                             \n\twire         hps_0_h2f_lw_axi_master_wready;                            \n\twire   [1:0] hps_0_h2f_lw_axi_master_arburst;                           \n\twire  [31:0] hps_0_h2f_lw_axi_master_rdata;                             \n\twire  [20:0] hps_0_h2f_lw_axi_master_araddr;                            \n\twire   [3:0] hps_0_h2f_lw_axi_master_arcache;                           \n\twire   [3:0] hps_0_h2f_lw_axi_master_awlen;                             \n\twire  [20:0] hps_0_h2f_lw_axi_master_awaddr;                            \n\twire  [11:0] hps_0_h2f_lw_axi_master_rid;                               \n\twire         hps_0_h2f_lw_axi_master_wvalid;                            \n\twire   [1:0] hps_0_h2f_lw_axi_master_rresp;                             \n\twire         hps_0_h2f_lw_axi_master_wlast;                             \n\twire         hps_0_h2f_lw_axi_master_rlast;                             \n\twire   [0:0] mm_interconnect_0_sysid_qsys_control_slave_address;        \n\twire  [31:0] mm_interconnect_0_sysid_qsys_control_slave_readdata;       \n\twire   [0:0] mm_interconnect_0_intr_capturer_0_avalon_slave_0_address;  \n\twire         mm_interconnect_0_intr_capturer_0_avalon_slave_0_read;     \n\twire  [31:0] mm_interconnect_0_intr_capturer_0_avalon_slave_0_readdata; \n\twire         mm_interconnect_1_hps_0_f2h_axi_slave_awvalid;             \n\twire   [2:0] mm_interconnect_1_hps_0_f2h_axi_slave_arsize;              \n\twire   [1:0] mm_interconnect_1_hps_0_f2h_axi_slave_arlock;              \n\twire   [3:0] mm_interconnect_1_hps_0_f2h_axi_slave_awcache;             \n\twire         mm_interconnect_1_hps_0_f2h_axi_slave_arready;             \n\twire   [7:0] mm_interconnect_1_hps_0_f2h_axi_slave_arid;                \n\twire         mm_interconnect_1_hps_0_f2h_axi_slave_rready;              \n\twire         mm_interconnect_1_hps_0_f2h_axi_slave_bready;              \n\twire   [2:0] mm_interconnect_1_hps_0_f2h_axi_slave_awsize;              \n\twire   [2:0] mm_interconnect_1_hps_0_f2h_axi_slave_awprot;              \n\twire         mm_interconnect_1_hps_0_f2h_axi_slave_arvalid;             \n\twire   [2:0] mm_interconnect_1_hps_0_f2h_axi_slave_arprot;              \n\twire   [7:0] mm_interconnect_1_hps_0_f2h_axi_slave_bid;                 \n\twire   [3:0] mm_interconnect_1_hps_0_f2h_axi_slave_arlen;               \n\twire         mm_interconnect_1_hps_0_f2h_axi_slave_awready;             \n\twire   [7:0] mm_interconnect_1_hps_0_f2h_axi_slave_awid;                \n\twire         mm_interconnect_1_hps_0_f2h_axi_slave_bvalid;              \n\twire   [7:0] mm_interconnect_1_hps_0_f2h_axi_slave_wid;                 \n\twire   [1:0] mm_interconnect_1_hps_0_f2h_axi_slave_awlock;              \n\twire   [1:0] mm_interconnect_1_hps_0_f2h_axi_slave_awburst;             \n\twire   [1:0] mm_interconnect_1_hps_0_f2h_axi_slave_bresp;               \n\twire   [4:0] mm_interconnect_1_hps_0_f2h_axi_slave_aruser;              \n\twire   [4:0] mm_interconnect_1_hps_0_f2h_axi_slave_awuser;              \n\twire   [7:0] mm_interconnect_1_hps_0_f2h_axi_slave_wstrb;               \n\twire         mm_interconnect_1_hps_0_f2h_axi_slave_rvalid;              \n\twire   [1:0] mm_interconnect_1_hps_0_f2h_axi_slave_arburst;             \n\twire  [63:0] mm_interconnect_1_hps_0_f2h_axi_slave_wdata;               \n\twire         mm_interconnect_1_hps_0_f2h_axi_slave_wready;              \n\twire  [63:0] mm_interconnect_1_hps_0_f2h_axi_slave_rdata;               \n\twire  [31:0] mm_interconnect_1_hps_0_f2h_axi_slave_araddr;              \n\twire   [3:0] mm_interconnect_1_hps_0_f2h_axi_slave_arcache;             \n\twire   [3:0] mm_interconnect_1_hps_0_f2h_axi_slave_awlen;               \n\twire  [31:0] mm_interconnect_1_hps_0_f2h_axi_slave_awaddr;              \n\twire   [7:0] mm_interconnect_1_hps_0_f2h_axi_slave_rid;                 \n\twire         mm_interconnect_1_hps_0_f2h_axi_slave_wvalid;              \n\twire   [1:0] mm_interconnect_1_hps_0_f2h_axi_slave_rresp;               \n\twire         mm_interconnect_1_hps_0_f2h_axi_slave_wlast;               \n\twire         mm_interconnect_1_hps_0_f2h_axi_slave_rlast;               \n\twire         hps_only_master_master_waitrequest;                        \n\twire  [31:0] hps_only_master_master_writedata;                          \n\twire  [31:0] hps_only_master_master_address;                            \n\twire         hps_only_master_master_write;                              \n\twire         hps_only_master_master_read;                               \n\twire  [31:0] hps_only_master_master_readdata;                           \n\twire   [3:0] hps_only_master_master_byteenable;                         \n\twire         hps_only_master_master_readdatavalid;                      \n\twire  [31:0] hps_0_f2h_irq0_irq;                                        \n\twire  [31:0] hps_0_f2h_irq1_irq;                                        \n\twire  [31:0] intr_capturer_0_interrupt_receiver_irq;                    \n\twire         irq_mapper_receiver0_irq;                                  \n\twire         rst_controller_reset_out_reset;                            \n\twire         rst_controller_reset_out_reset_req;                        \n\twire         rst_controller_001_reset_out_reset;                        \n\n\tsoc_system_hps_0 #(\n\t\t.F2S_Width (2),\n\t\t.S2F_Width (2)\n\t) hps_0 (\n\t\t.f2h_cold_rst_req_n       (hps_0_f2h_cold_reset_req_reset_n),              \n\t\t.f2h_dbg_rst_req_n        (hps_0_f2h_debug_reset_req_reset_n),             \n\t\t.f2h_warm_rst_req_n       (hps_0_f2h_warm_reset_req_reset_n),              \n\t\t.f2h_stm_hwevents         (hps_0_f2h_stm_hw_events_stm_hwevents),          \n\t\t.mem_a                    (memory_mem_a),                                  \n\t\t.mem_ba                   (memory_mem_ba),                                 \n\t\t.mem_ck                   (memory_mem_ck),                                 \n\t\t.mem_ck_n                 (memory_mem_ck_n),                               \n\t\t.mem_cke                  (memory_mem_cke),                                \n\t\t.mem_cs_n                 (memory_mem_cs_n),                               \n\t\t.mem_ras_n                (memory_mem_ras_n),                              \n\t\t.mem_cas_n                (memory_mem_cas_n),                              \n\t\t.mem_we_n                 (memory_mem_we_n),                               \n\t\t.mem_reset_n              (memory_mem_reset_n),                            \n\t\t.mem_dq                   (memory_mem_dq),                                 \n\t\t.mem_dqs                  (memory_mem_dqs),                                \n\t\t.mem_dqs_n                (memory_mem_dqs_n),                              \n\t\t.mem_odt                  (memory_mem_odt),                                \n\t\t.mem_dm                   (memory_mem_dm),                                 \n\t\t.oct_rzqin                (memory_oct_rzqin),                              \n\t\t.hps_io_emac1_inst_TX_CLK (hps_0_hps_io_hps_io_emac1_inst_TX_CLK),         \n\t\t.hps_io_emac1_inst_TXD0   (hps_0_hps_io_hps_io_emac1_inst_TXD0),           \n\t\t.hps_io_emac1_inst_TXD1   (hps_0_hps_io_hps_io_emac1_inst_TXD1),           \n\t\t.hps_io_emac1_inst_TXD2   (hps_0_hps_io_hps_io_emac1_inst_TXD2),           \n\t\t.hps_io_emac1_inst_TXD3   (hps_0_hps_io_hps_io_emac1_inst_TXD3),           \n\t\t.hps_io_emac1_inst_RXD0   (hps_0_hps_io_hps_io_emac1_inst_RXD0),           \n\t\t.hps_io_emac1_inst_MDIO   (hps_0_hps_io_hps_io_emac1_inst_MDIO),           \n\t\t.hps_io_emac1_inst_MDC    (hps_0_hps_io_hps_io_emac1_inst_MDC),            \n\t\t.hps_io_emac1_inst_RX_CTL (hps_0_hps_io_hps_io_emac1_inst_RX_CTL),         \n\t\t.hps_io_emac1_inst_TX_CTL (hps_0_hps_io_hps_io_emac1_inst_TX_CTL),         \n\t\t.hps_io_emac1_inst_RX_CLK (hps_0_hps_io_hps_io_emac1_inst_RX_CLK),         \n\t\t.hps_io_emac1_inst_RXD1   (hps_0_hps_io_hps_io_emac1_inst_RXD1),           \n\t\t.hps_io_emac1_inst_RXD2   (hps_0_hps_io_hps_io_emac1_inst_RXD2),           \n\t\t.hps_io_emac1_inst_RXD3   (hps_0_hps_io_hps_io_emac1_inst_RXD3),           \n\t\t.hps_io_qspi_inst_IO0     (hps_0_hps_io_hps_io_qspi_inst_IO0),             \n\t\t.hps_io_qspi_inst_IO1     (hps_0_hps_io_hps_io_qspi_inst_IO1),             \n\t\t.hps_io_qspi_inst_IO2     (hps_0_hps_io_hps_io_qspi_inst_IO2),             \n\t\t.hps_io_qspi_inst_IO3     (hps_0_hps_io_hps_io_qspi_inst_IO3),             \n\t\t.hps_io_qspi_inst_SS0     (hps_0_hps_io_hps_io_qspi_inst_SS0),             \n\t\t.hps_io_qspi_inst_CLK     (hps_0_hps_io_hps_io_qspi_inst_CLK),             \n\t\t.hps_io_sdio_inst_CMD     (hps_0_hps_io_hps_io_sdio_inst_CMD),             \n\t\t.hps_io_sdio_inst_D0      (hps_0_hps_io_hps_io_sdio_inst_D0),              \n\t\t.hps_io_sdio_inst_D1      (hps_0_hps_io_hps_io_sdio_inst_D1),              \n\t\t.hps_io_sdio_inst_CLK     (hps_0_hps_io_hps_io_sdio_inst_CLK),             \n\t\t.hps_io_sdio_inst_D2      (hps_0_hps_io_hps_io_sdio_inst_D2),              \n\t\t.hps_io_sdio_inst_D3      (hps_0_hps_io_hps_io_sdio_inst_D3),              \n\t\t.hps_io_usb1_inst_D0      (hps_0_hps_io_hps_io_usb1_inst_D0),              \n\t\t.hps_io_usb1_inst_D1      (hps_0_hps_io_hps_io_usb1_inst_D1),              \n\t\t.hps_io_usb1_inst_D2      (hps_0_hps_io_hps_io_usb1_inst_D2),              \n\t\t.hps_io_usb1_inst_D3      (hps_0_hps_io_hps_io_usb1_inst_D3),              \n\t\t.hps_io_usb1_inst_D4      (hps_0_hps_io_hps_io_usb1_inst_D4),              \n\t\t.hps_io_usb1_inst_D5      (hps_0_hps_io_hps_io_usb1_inst_D5),              \n\t\t.hps_io_usb1_inst_D6      (hps_0_hps_io_hps_io_usb1_inst_D6),              \n\t\t.hps_io_usb1_inst_D7      (hps_0_hps_io_hps_io_usb1_inst_D7),              \n\t\t.hps_io_usb1_inst_CLK     (hps_0_hps_io_hps_io_usb1_inst_CLK),             \n\t\t.hps_io_usb1_inst_STP     (hps_0_hps_io_hps_io_usb1_inst_STP),             \n\t\t.hps_io_usb1_inst_DIR     (hps_0_hps_io_hps_io_usb1_inst_DIR),             \n\t\t.hps_io_usb1_inst_NXT     (hps_0_hps_io_hps_io_usb1_inst_NXT),             \n\t\t.hps_io_spim1_inst_CLK    (hps_0_hps_io_hps_io_spim1_inst_CLK),            \n\t\t.hps_io_spim1_inst_MOSI   (hps_0_hps_io_hps_io_spim1_inst_MOSI),           \n\t\t.hps_io_spim1_inst_MISO   (hps_0_hps_io_hps_io_spim1_inst_MISO),           \n\t\t.hps_io_spim1_inst_SS0    (hps_0_hps_io_hps_io_spim1_inst_SS0),            \n\t\t.hps_io_uart0_inst_RX     (hps_0_hps_io_hps_io_uart0_inst_RX),             \n\t\t.hps_io_uart0_inst_TX     (hps_0_hps_io_hps_io_uart0_inst_TX),             \n\t\t.hps_io_i2c0_inst_SDA     (hps_0_hps_io_hps_io_i2c0_inst_SDA),             \n\t\t.hps_io_i2c0_inst_SCL     (hps_0_hps_io_hps_io_i2c0_inst_SCL),             \n\t\t.hps_io_i2c1_inst_SDA     (hps_0_hps_io_hps_io_i2c1_inst_SDA),             \n\t\t.hps_io_i2c1_inst_SCL     (hps_0_hps_io_hps_io_i2c1_inst_SCL),             \n\t\t.hps_io_gpio_inst_GPIO09  (hps_0_hps_io_hps_io_gpio_inst_GPIO09),          \n\t\t.hps_io_gpio_inst_GPIO35  (hps_0_hps_io_hps_io_gpio_inst_GPIO35),          \n\t\t.hps_io_gpio_inst_GPIO40  (hps_0_hps_io_hps_io_gpio_inst_GPIO40),          \n\t\t.hps_io_gpio_inst_GPIO41  (hps_0_hps_io_hps_io_gpio_inst_GPIO41),          \n\t\t.hps_io_gpio_inst_GPIO48  (hps_0_hps_io_hps_io_gpio_inst_GPIO48),          \n\t\t.hps_io_gpio_inst_GPIO53  (hps_0_hps_io_hps_io_gpio_inst_GPIO53),          \n\t\t.hps_io_gpio_inst_GPIO54  (hps_0_hps_io_hps_io_gpio_inst_GPIO54),          \n\t\t.hps_io_gpio_inst_GPIO61  (hps_0_hps_io_hps_io_gpio_inst_GPIO61),          \n\t\t.h2f_rst_n                (hps_0_h2f_reset_reset_n),                       \n\t\t.h2f_axi_clk              (clk_clk),                                       \n\t\t.h2f_AWID                 (hps_0_h2f_axi_master_awid),                     \n\t\t.h2f_AWADDR               (hps_0_h2f_axi_master_awaddr),                   \n\t\t.h2f_AWLEN                (hps_0_h2f_axi_master_awlen),                    \n\t\t.h2f_AWSIZE               (hps_0_h2f_axi_master_awsize),                   \n\t\t.h2f_AWBURST              (hps_0_h2f_axi_master_awburst),                  \n\t\t.h2f_AWLOCK               (hps_0_h2f_axi_master_awlock),                   \n\t\t.h2f_AWCACHE              (hps_0_h2f_axi_master_awcache),                  \n\t\t.h2f_AWPROT               (hps_0_h2f_axi_master_awprot),                   \n\t\t.h2f_AWVALID              (hps_0_h2f_axi_master_awvalid),                  \n\t\t.h2f_AWREADY              (hps_0_h2f_axi_master_awready),                  \n\t\t.h2f_WID                  (hps_0_h2f_axi_master_wid),                      \n\t\t.h2f_WDATA                (hps_0_h2f_axi_master_wdata),                    \n\t\t.h2f_WSTRB                (hps_0_h2f_axi_master_wstrb),                    \n\t\t.h2f_WLAST                (hps_0_h2f_axi_master_wlast),                    \n\t\t.h2f_WVALID               (hps_0_h2f_axi_master_wvalid),                   \n\t\t.h2f_WREADY               (hps_0_h2f_axi_master_wready),                   \n\t\t.h2f_BID                  (hps_0_h2f_axi_master_bid),                      \n\t\t.h2f_BRESP                (hps_0_h2f_axi_master_bresp),                    \n\t\t.h2f_BVALID               (hps_0_h2f_axi_master_bvalid),                   \n\t\t.h2f_BREADY               (hps_0_h2f_axi_master_bready),                   \n\t\t.h2f_ARID                 (hps_0_h2f_axi_master_arid),                     \n\t\t.h2f_ARADDR               (hps_0_h2f_axi_master_araddr),                   \n\t\t.h2f_ARLEN                (hps_0_h2f_axi_master_arlen),                    \n\t\t.h2f_ARSIZE               (hps_0_h2f_axi_master_arsize),                   \n\t\t.h2f_ARBURST              (hps_0_h2f_axi_master_arburst),                  \n\t\t.h2f_ARLOCK               (hps_0_h2f_axi_master_arlock),                   \n\t\t.h2f_ARCACHE              (hps_0_h2f_axi_master_arcache),                  \n\t\t.h2f_ARPROT               (hps_0_h2f_axi_master_arprot),                   \n\t\t.h2f_ARVALID              (hps_0_h2f_axi_master_arvalid),                  \n\t\t.h2f_ARREADY              (hps_0_h2f_axi_master_arready),                  \n\t\t.h2f_RID                  (hps_0_h2f_axi_master_rid),                      \n\t\t.h2f_RDATA                (hps_0_h2f_axi_master_rdata),                    \n\t\t.h2f_RRESP                (hps_0_h2f_axi_master_rresp),                    \n\t\t.h2f_RLAST                (hps_0_h2f_axi_master_rlast),                    \n\t\t.h2f_RVALID               (hps_0_h2f_axi_master_rvalid),                   \n\t\t.h2f_RREADY               (hps_0_h2f_axi_master_rready),                   \n\t\t.f2h_axi_clk              (clk_clk),                                       \n\t\t.f2h_AWID                 (mm_interconnect_1_hps_0_f2h_axi_slave_awid),    \n\t\t.f2h_AWADDR               (mm_interconnect_1_hps_0_f2h_axi_slave_awaddr),  \n\t\t.f2h_AWLEN                (mm_interconnect_1_hps_0_f2h_axi_slave_awlen),   \n\t\t.f2h_AWSIZE               (mm_interconnect_1_hps_0_f2h_axi_slave_awsize),  \n\t\t.f2h_AWBURST              (mm_interconnect_1_hps_0_f2h_axi_slave_awburst), \n\t\t.f2h_AWLOCK               (mm_interconnect_1_hps_0_f2h_axi_slave_awlock),  \n\t\t.f2h_AWCACHE              (mm_interconnect_1_hps_0_f2h_axi_slave_awcache), \n\t\t.f2h_AWPROT               (mm_interconnect_1_hps_0_f2h_axi_slave_awprot),  \n\t\t.f2h_AWVALID              (mm_interconnect_1_hps_0_f2h_axi_slave_awvalid), \n\t\t.f2h_AWREADY              (mm_interconnect_1_hps_0_f2h_axi_slave_awready), \n\t\t.f2h_AWUSER               (mm_interconnect_1_hps_0_f2h_axi_slave_awuser),  \n\t\t.f2h_WID                  (mm_interconnect_1_hps_0_f2h_axi_slave_wid),     \n\t\t.f2h_WDATA                (mm_interconnect_1_hps_0_f2h_axi_slave_wdata),   \n\t\t.f2h_WSTRB                (mm_interconnect_1_hps_0_f2h_axi_slave_wstrb),   \n\t\t.f2h_WLAST                (mm_interconnect_1_hps_0_f2h_axi_slave_wlast),   \n\t\t.f2h_WVALID               (mm_interconnect_1_hps_0_f2h_axi_slave_wvalid),  \n\t\t.f2h_WREADY               (mm_interconnect_1_hps_0_f2h_axi_slave_wready),  \n\t\t.f2h_BID                  (mm_interconnect_1_hps_0_f2h_axi_slave_bid),     \n\t\t.f2h_BRESP                (mm_interconnect_1_hps_0_f2h_axi_slave_bresp),   \n\t\t.f2h_BVALID               (mm_interconnect_1_hps_0_f2h_axi_slave_bvalid),  \n\t\t.f2h_BREADY               (mm_interconnect_1_hps_0_f2h_axi_slave_bready),  \n\t\t.f2h_ARID                 (mm_interconnect_1_hps_0_f2h_axi_slave_arid),    \n\t\t.f2h_ARADDR               (mm_interconnect_1_hps_0_f2h_axi_slave_araddr),  \n\t\t.f2h_ARLEN                (mm_interconnect_1_hps_0_f2h_axi_slave_arlen),   \n\t\t.f2h_ARSIZE               (mm_interconnect_1_hps_0_f2h_axi_slave_arsize),  \n\t\t.f2h_ARBURST              (mm_interconnect_1_hps_0_f2h_axi_slave_arburst), \n\t\t.f2h_ARLOCK               (mm_interconnect_1_hps_0_f2h_axi_slave_arlock),  \n\t\t.f2h_ARCACHE              (mm_interconnect_1_hps_0_f2h_axi_slave_arcache), \n\t\t.f2h_ARPROT               (mm_interconnect_1_hps_0_f2h_axi_slave_arprot),  \n\t\t.f2h_ARVALID              (mm_interconnect_1_hps_0_f2h_axi_slave_arvalid), \n\t\t.f2h_ARREADY              (mm_interconnect_1_hps_0_f2h_axi_slave_arready), \n\t\t.f2h_ARUSER               (mm_interconnect_1_hps_0_f2h_axi_slave_aruser),  \n\t\t.f2h_RID                  (mm_interconnect_1_hps_0_f2h_axi_slave_rid),     \n\t\t.f2h_RDATA                (mm_interconnect_1_hps_0_f2h_axi_slave_rdata),   \n\t\t.f2h_RRESP                (mm_interconnect_1_hps_0_f2h_axi_slave_rresp),   \n\t\t.f2h_RLAST                (mm_interconnect_1_hps_0_f2h_axi_slave_rlast),   \n\t\t.f2h_RVALID               (mm_interconnect_1_hps_0_f2h_axi_slave_rvalid),  \n\t\t.f2h_RREADY               (mm_interconnect_1_hps_0_f2h_axi_slave_rready),  \n\t\t.h2f_lw_axi_clk           (clk_clk),                                       \n\t\t.h2f_lw_AWID              (hps_0_h2f_lw_axi_master_awid),                  \n\t\t.h2f_lw_AWADDR            (hps_0_h2f_lw_axi_master_awaddr),                \n\t\t.h2f_lw_AWLEN             (hps_0_h2f_lw_axi_master_awlen),                 \n\t\t.h2f_lw_AWSIZE            (hps_0_h2f_lw_axi_master_awsize),                \n\t\t.h2f_lw_AWBURST           (hps_0_h2f_lw_axi_master_awburst),               \n\t\t.h2f_lw_AWLOCK            (hps_0_h2f_lw_axi_master_awlock),                \n\t\t.h2f_lw_AWCACHE           (hps_0_h2f_lw_axi_master_awcache),               \n\t\t.h2f_lw_AWPROT            (hps_0_h2f_lw_axi_master_awprot),                \n\t\t.h2f_lw_AWVALID           (hps_0_h2f_lw_axi_master_awvalid),               \n\t\t.h2f_lw_AWREADY           (hps_0_h2f_lw_axi_master_awready),               \n\t\t.h2f_lw_WID               (hps_0_h2f_lw_axi_master_wid),                   \n\t\t.h2f_lw_WDATA             (hps_0_h2f_lw_axi_master_wdata),                 \n\t\t.h2f_lw_WSTRB             (hps_0_h2f_lw_axi_master_wstrb),                 \n\t\t.h2f_lw_WLAST             (hps_0_h2f_lw_axi_master_wlast),                 \n\t\t.h2f_lw_WVALID            (hps_0_h2f_lw_axi_master_wvalid),                \n\t\t.h2f_lw_WREADY            (hps_0_h2f_lw_axi_master_wready),                \n\t\t.h2f_lw_BID               (hps_0_h2f_lw_axi_master_bid),                   \n\t\t.h2f_lw_BRESP             (hps_0_h2f_lw_axi_master_bresp),                 \n\t\t.h2f_lw_BVALID            (hps_0_h2f_lw_axi_master_bvalid),                \n\t\t.h2f_lw_BREADY            (hps_0_h2f_lw_axi_master_bready),                \n\t\t.h2f_lw_ARID              (hps_0_h2f_lw_axi_master_arid),                  \n\t\t.h2f_lw_ARADDR            (hps_0_h2f_lw_axi_master_araddr),                \n\t\t.h2f_lw_ARLEN             (hps_0_h2f_lw_axi_master_arlen),                 \n\t\t.h2f_lw_ARSIZE            (hps_0_h2f_lw_axi_master_arsize),                \n\t\t.h2f_lw_ARBURST           (hps_0_h2f_lw_axi_master_arburst),               \n\t\t.h2f_lw_ARLOCK            (hps_0_h2f_lw_axi_master_arlock),                \n\t\t.h2f_lw_ARCACHE           (hps_0_h2f_lw_axi_master_arcache),               \n\t\t.h2f_lw_ARPROT            (hps_0_h2f_lw_axi_master_arprot),                \n\t\t.h2f_lw_ARVALID           (hps_0_h2f_lw_axi_master_arvalid),               \n\t\t.h2f_lw_ARREADY           (hps_0_h2f_lw_axi_master_arready),               \n\t\t.h2f_lw_RID               (hps_0_h2f_lw_axi_master_rid),                   \n\t\t.h2f_lw_RDATA             (hps_0_h2f_lw_axi_master_rdata),                 \n\t\t.h2f_lw_RRESP             (hps_0_h2f_lw_axi_master_rresp),                 \n\t\t.h2f_lw_RLAST             (hps_0_h2f_lw_axi_master_rlast),                 \n\t\t.h2f_lw_RVALID            (hps_0_h2f_lw_axi_master_rvalid),                \n\t\t.h2f_lw_RREADY            (hps_0_h2f_lw_axi_master_rready),                \n\t\t.f2h_irq_p0               (hps_0_f2h_irq0_irq),                            \n\t\t.f2h_irq_p1               (hps_0_f2h_irq1_irq)                             \n\t);\n\n\tsoc_system_onchip_memory2_0 onchip_memory2_0 (\n\t\t.clk        (clk_clk),                                          \n\t\t.address    (mm_interconnect_0_onchip_memory2_0_s1_address),    \n\t\t.clken      (mm_interconnect_0_onchip_memory2_0_s1_clken),      \n\t\t.chipselect (mm_interconnect_0_onchip_memory2_0_s1_chipselect), \n\t\t.write      (mm_interconnect_0_onchip_memory2_0_s1_write),      \n\t\t.readdata   (mm_interconnect_0_onchip_memory2_0_s1_readdata),   \n\t\t.writedata  (mm_interconnect_0_onchip_memory2_0_s1_writedata),  \n\t\t.byteenable (mm_interconnect_0_onchip_memory2_0_s1_byteenable), \n\t\t.reset      (rst_controller_reset_out_reset),                   \n\t\t.reset_req  (rst_controller_reset_out_reset_req)                \n\t);\n\n\tsoc_system_hps_only_master #(\n\t\t.USE_PLI     (0),\n\t\t.PLI_PORT    (50000),\n\t\t.FIFO_DEPTHS (2)\n\t) hps_only_master (\n\t\t.clk_clk              (clk_clk),                              \n\t\t.clk_reset_reset      (~reset_reset_n),                       \n\t\t.master_address       (hps_only_master_master_address),       \n\t\t.master_readdata      (hps_only_master_master_readdata),      \n\t\t.master_read          (hps_only_master_master_read),          \n\t\t.master_write         (hps_only_master_master_write),         \n\t\t.master_writedata     (hps_only_master_master_writedata),     \n\t\t.master_waitrequest   (hps_only_master_master_waitrequest),   \n\t\t.master_readdatavalid (hps_only_master_master_readdatavalid), \n\t\t.master_byteenable    (hps_only_master_master_byteenable),    \n\t\t.master_reset_reset   ()                                      \n\t);\n\n\tsoc_system_sysid_qsys sysid_qsys (\n\t\t.clock    (clk_clk),                                             \n\t\t.reset_n  (~rst_controller_reset_out_reset),                     \n\t\t.readdata (mm_interconnect_0_sysid_qsys_control_slave_readdata), \n\t\t.address  (mm_interconnect_0_sysid_qsys_control_slave_address)   \n\t);\n\n\tsoc_system_hps_only_master #(\n\t\t.USE_PLI     (0),\n\t\t.PLI_PORT    (50000),\n\t\t.FIFO_DEPTHS (2)\n\t) fpga_only_master (\n\t\t.clk_clk              (clk_clk),                               \n\t\t.clk_reset_reset      (~reset_reset_n),                        \n\t\t.master_address       (fpga_only_master_master_address),       \n\t\t.master_readdata      (fpga_only_master_master_readdata),      \n\t\t.master_read          (fpga_only_master_master_read),          \n\t\t.master_write         (fpga_only_master_master_write),         \n\t\t.master_writedata     (fpga_only_master_master_writedata),     \n\t\t.master_waitrequest   (fpga_only_master_master_waitrequest),   \n\t\t.master_readdatavalid (fpga_only_master_master_readdatavalid), \n\t\t.master_byteenable    (fpga_only_master_master_byteenable),    \n\t\t.master_reset_reset   ()                                       \n\t);\n\n\tsoc_system_jtag_uart jtag_uart (\n\t\t.clk            (clk_clk),                                                   \n\t\t.rst_n          (~rst_controller_reset_out_reset),                           \n\t\t.av_chipselect  (mm_interconnect_0_jtag_uart_avalon_jtag_slave_chipselect),  \n\t\t.av_address     (mm_interconnect_0_jtag_uart_avalon_jtag_slave_address),     \n\t\t.av_read_n      (~mm_interconnect_0_jtag_uart_avalon_jtag_slave_read),       \n\t\t.av_readdata    (mm_interconnect_0_jtag_uart_avalon_jtag_slave_readdata),    \n\t\t.av_write_n     (~mm_interconnect_0_jtag_uart_avalon_jtag_slave_write),      \n\t\t.av_writedata   (mm_interconnect_0_jtag_uart_avalon_jtag_slave_writedata),   \n\t\t.av_waitrequest (mm_interconnect_0_jtag_uart_avalon_jtag_slave_waitrequest), \n\t\t.av_irq         (irq_mapper_receiver0_irq)                                   \n\t);\n\n\tintr_capturer #(\n\t\t.NUM_INTR (32)\n\t) intr_capturer_0 (\n\t\t.clk          (clk_clk),                                                   \n\t\t.rst_n        (~rst_controller_reset_out_reset),                           \n\t\t.addr         (mm_interconnect_0_intr_capturer_0_avalon_slave_0_address),  \n\t\t.read         (mm_interconnect_0_intr_capturer_0_avalon_slave_0_read),     \n\t\t.rddata       (mm_interconnect_0_intr_capturer_0_avalon_slave_0_readdata), \n\t\t.interrupt_in (intr_capturer_0_interrupt_receiver_irq)                     \n\t);\n\n\tsoc_system_pio_led pio_led (\n\t\t.clk        (clk_clk),                                 \n\t\t.reset_n    (~rst_controller_reset_out_reset),         \n\t\t.address    (mm_interconnect_0_pio_led_s1_address),    \n\t\t.write_n    (~mm_interconnect_0_pio_led_s1_write),     \n\t\t.writedata  (mm_interconnect_0_pio_led_s1_writedata),  \n\t\t.chipselect (mm_interconnect_0_pio_led_s1_chipselect), \n\t\t.readdata   (mm_interconnect_0_pio_led_s1_readdata),   \n\t\t.out_port   (pio_led_external_connection_export)       \n\t);\n\n\tsoc_system_mm_interconnect_0 mm_interconnect_0 (\n\t\t.hps_0_h2f_axi_master_awid                                        (hps_0_h2f_axi_master_awid),                                 \n\t\t.hps_0_h2f_axi_master_awaddr                                      (hps_0_h2f_axi_master_awaddr),                               \n\t\t.hps_0_h2f_axi_master_awlen                                       (hps_0_h2f_axi_master_awlen),                                \n\t\t.hps_0_h2f_axi_master_awsize                                      (hps_0_h2f_axi_master_awsize),                               \n\t\t.hps_0_h2f_axi_master_awburst                                     (hps_0_h2f_axi_master_awburst),                              \n\t\t.hps_0_h2f_axi_master_awlock                                      (hps_0_h2f_axi_master_awlock),                               \n\t\t.hps_0_h2f_axi_master_awcache                                     (hps_0_h2f_axi_master_awcache),                              \n\t\t.hps_0_h2f_axi_master_awprot                                      (hps_0_h2f_axi_master_awprot),                               \n\t\t.hps_0_h2f_axi_master_awvalid                                     (hps_0_h2f_axi_master_awvalid),                              \n\t\t.hps_0_h2f_axi_master_awready                                     (hps_0_h2f_axi_master_awready),                              \n\t\t.hps_0_h2f_axi_master_wid                                         (hps_0_h2f_axi_master_wid),                                  \n\t\t.hps_0_h2f_axi_master_wdata                                       (hps_0_h2f_axi_master_wdata),                                \n\t\t.hps_0_h2f_axi_master_wstrb                                       (hps_0_h2f_axi_master_wstrb),                                \n\t\t.hps_0_h2f_axi_master_wlast                                       (hps_0_h2f_axi_master_wlast),                                \n\t\t.hps_0_h2f_axi_master_wvalid                                      (hps_0_h2f_axi_master_wvalid),                               \n\t\t.hps_0_h2f_axi_master_wready                                      (hps_0_h2f_axi_master_wready),                               \n\t\t.hps_0_h2f_axi_master_bid                                         (hps_0_h2f_axi_master_bid),                                  \n\t\t.hps_0_h2f_axi_master_bresp                                       (hps_0_h2f_axi_master_bresp),                                \n\t\t.hps_0_h2f_axi_master_bvalid                                      (hps_0_h2f_axi_master_bvalid),                               \n\t\t.hps_0_h2f_axi_master_bready                                      (hps_0_h2f_axi_master_bready),                               \n\t\t.hps_0_h2f_axi_master_arid                                        (hps_0_h2f_axi_master_arid),                                 \n\t\t.hps_0_h2f_axi_master_araddr                                      (hps_0_h2f_axi_master_araddr),                               \n\t\t.hps_0_h2f_axi_master_arlen                                       (hps_0_h2f_axi_master_arlen),                                \n\t\t.hps_0_h2f_axi_master_arsize                                      (hps_0_h2f_axi_master_arsize),                               \n\t\t.hps_0_h2f_axi_master_arburst                                     (hps_0_h2f_axi_master_arburst),                              \n\t\t.hps_0_h2f_axi_master_arlock                                      (hps_0_h2f_axi_master_arlock),                               \n\t\t.hps_0_h2f_axi_master_arcache                                     (hps_0_h2f_axi_master_arcache),                              \n\t\t.hps_0_h2f_axi_master_arprot                                      (hps_0_h2f_axi_master_arprot),                               \n\t\t.hps_0_h2f_axi_master_arvalid                                     (hps_0_h2f_axi_master_arvalid),                              \n\t\t.hps_0_h2f_axi_master_arready                                     (hps_0_h2f_axi_master_arready),                              \n\t\t.hps_0_h2f_axi_master_rid                                         (hps_0_h2f_axi_master_rid),                                  \n\t\t.hps_0_h2f_axi_master_rdata                                       (hps_0_h2f_axi_master_rdata),                                \n\t\t.hps_0_h2f_axi_master_rresp                                       (hps_0_h2f_axi_master_rresp),                                \n\t\t.hps_0_h2f_axi_master_rlast                                       (hps_0_h2f_axi_master_rlast),                                \n\t\t.hps_0_h2f_axi_master_rvalid                                      (hps_0_h2f_axi_master_rvalid),                               \n\t\t.hps_0_h2f_axi_master_rready                                      (hps_0_h2f_axi_master_rready),                               \n\t\t.hps_0_h2f_lw_axi_master_awid                                     (hps_0_h2f_lw_axi_master_awid),                              \n\t\t.hps_0_h2f_lw_axi_master_awaddr                                   (hps_0_h2f_lw_axi_master_awaddr),                            \n\t\t.hps_0_h2f_lw_axi_master_awlen                                    (hps_0_h2f_lw_axi_master_awlen),                             \n\t\t.hps_0_h2f_lw_axi_master_awsize                                   (hps_0_h2f_lw_axi_master_awsize),                            \n\t\t.hps_0_h2f_lw_axi_master_awburst                                  (hps_0_h2f_lw_axi_master_awburst),                           \n\t\t.hps_0_h2f_lw_axi_master_awlock                                   (hps_0_h2f_lw_axi_master_awlock),                            \n\t\t.hps_0_h2f_lw_axi_master_awcache                                  (hps_0_h2f_lw_axi_master_awcache),                           \n\t\t.hps_0_h2f_lw_axi_master_awprot                                   (hps_0_h2f_lw_axi_master_awprot),                            \n\t\t.hps_0_h2f_lw_axi_master_awvalid                                  (hps_0_h2f_lw_axi_master_awvalid),                           \n\t\t.hps_0_h2f_lw_axi_master_awready                                  (hps_0_h2f_lw_axi_master_awready),                           \n\t\t.hps_0_h2f_lw_axi_master_wid                                      (hps_0_h2f_lw_axi_master_wid),                               \n\t\t.hps_0_h2f_lw_axi_master_wdata                                    (hps_0_h2f_lw_axi_master_wdata),                             \n\t\t.hps_0_h2f_lw_axi_master_wstrb                                    (hps_0_h2f_lw_axi_master_wstrb),                             \n\t\t.hps_0_h2f_lw_axi_master_wlast                                    (hps_0_h2f_lw_axi_master_wlast),                             \n\t\t.hps_0_h2f_lw_axi_master_wvalid                                   (hps_0_h2f_lw_axi_master_wvalid),                            \n\t\t.hps_0_h2f_lw_axi_master_wready                                   (hps_0_h2f_lw_axi_master_wready),                            \n\t\t.hps_0_h2f_lw_axi_master_bid                                      (hps_0_h2f_lw_axi_master_bid),                               \n\t\t.hps_0_h2f_lw_axi_master_bresp                                    (hps_0_h2f_lw_axi_master_bresp),                             \n\t\t.hps_0_h2f_lw_axi_master_bvalid                                   (hps_0_h2f_lw_axi_master_bvalid),                            \n\t\t.hps_0_h2f_lw_axi_master_bready                                   (hps_0_h2f_lw_axi_master_bready),                            \n\t\t.hps_0_h2f_lw_axi_master_arid                                     (hps_0_h2f_lw_axi_master_arid),                              \n\t\t.hps_0_h2f_lw_axi_master_araddr                                   (hps_0_h2f_lw_axi_master_araddr),                            \n\t\t.hps_0_h2f_lw_axi_master_arlen                                    (hps_0_h2f_lw_axi_master_arlen),                             \n\t\t.hps_0_h2f_lw_axi_master_arsize                                   (hps_0_h2f_lw_axi_master_arsize),                            \n\t\t.hps_0_h2f_lw_axi_master_arburst                                  (hps_0_h2f_lw_axi_master_arburst),                           \n\t\t.hps_0_h2f_lw_axi_master_arlock                                   (hps_0_h2f_lw_axi_master_arlock),                            \n\t\t.hps_0_h2f_lw_axi_master_arcache                                  (hps_0_h2f_lw_axi_master_arcache),                           \n\t\t.hps_0_h2f_lw_axi_master_arprot                                   (hps_0_h2f_lw_axi_master_arprot),                            \n\t\t.hps_0_h2f_lw_axi_master_arvalid                                  (hps_0_h2f_lw_axi_master_arvalid),                           \n\t\t.hps_0_h2f_lw_axi_master_arready                                  (hps_0_h2f_lw_axi_master_arready),                           \n\t\t.hps_0_h2f_lw_axi_master_rid                                      (hps_0_h2f_lw_axi_master_rid),                               \n\t\t.hps_0_h2f_lw_axi_master_rdata                                    (hps_0_h2f_lw_axi_master_rdata),                             \n\t\t.hps_0_h2f_lw_axi_master_rresp                                    (hps_0_h2f_lw_axi_master_rresp),                             \n\t\t.hps_0_h2f_lw_axi_master_rlast                                    (hps_0_h2f_lw_axi_master_rlast),                             \n\t\t.hps_0_h2f_lw_axi_master_rvalid                                   (hps_0_h2f_lw_axi_master_rvalid),                            \n\t\t.hps_0_h2f_lw_axi_master_rready                                   (hps_0_h2f_lw_axi_master_rready),                            \n\t\t.clk_0_clk_clk                                                    (clk_clk),                                                   \n\t\t.fpga_only_master_clk_reset_reset_bridge_in_reset_reset           (rst_controller_reset_out_reset),                            \n\t\t.hps_0_h2f_axi_master_agent_clk_reset_reset_bridge_in_reset_reset (rst_controller_001_reset_out_reset),                        \n\t\t.onchip_memory2_0_reset1_reset_bridge_in_reset_reset              (rst_controller_reset_out_reset),                            \n\t\t.fpga_only_master_master_address                                  (fpga_only_master_master_address),                           \n\t\t.fpga_only_master_master_waitrequest                              (fpga_only_master_master_waitrequest),                       \n\t\t.fpga_only_master_master_byteenable                               (fpga_only_master_master_byteenable),                        \n\t\t.fpga_only_master_master_read                                     (fpga_only_master_master_read),                              \n\t\t.fpga_only_master_master_readdata                                 (fpga_only_master_master_readdata),                          \n\t\t.fpga_only_master_master_readdatavalid                            (fpga_only_master_master_readdatavalid),                     \n\t\t.fpga_only_master_master_write                                    (fpga_only_master_master_write),                             \n\t\t.fpga_only_master_master_writedata                                (fpga_only_master_master_writedata),                         \n\t\t.intr_capturer_0_avalon_slave_0_address                           (mm_interconnect_0_intr_capturer_0_avalon_slave_0_address),  \n\t\t.intr_capturer_0_avalon_slave_0_read                              (mm_interconnect_0_intr_capturer_0_avalon_slave_0_read),     \n\t\t.intr_capturer_0_avalon_slave_0_readdata                          (mm_interconnect_0_intr_capturer_0_avalon_slave_0_readdata), \n\t\t.jtag_uart_avalon_jtag_slave_address                              (mm_interconnect_0_jtag_uart_avalon_jtag_slave_address),     \n\t\t.jtag_uart_avalon_jtag_slave_write                                (mm_interconnect_0_jtag_uart_avalon_jtag_slave_write),       \n\t\t.jtag_uart_avalon_jtag_slave_read                                 (mm_interconnect_0_jtag_uart_avalon_jtag_slave_read),        \n\t\t.jtag_uart_avalon_jtag_slave_readdata                             (mm_interconnect_0_jtag_uart_avalon_jtag_slave_readdata),    \n\t\t.jtag_uart_avalon_jtag_slave_writedata                            (mm_interconnect_0_jtag_uart_avalon_jtag_slave_writedata),   \n\t\t.jtag_uart_avalon_jtag_slave_waitrequest                          (mm_interconnect_0_jtag_uart_avalon_jtag_slave_waitrequest), \n\t\t.jtag_uart_avalon_jtag_slave_chipselect                           (mm_interconnect_0_jtag_uart_avalon_jtag_slave_chipselect),  \n\t\t.onchip_memory2_0_s1_address                                      (mm_interconnect_0_onchip_memory2_0_s1_address),             \n\t\t.onchip_memory2_0_s1_write                                        (mm_interconnect_0_onchip_memory2_0_s1_write),               \n\t\t.onchip_memory2_0_s1_readdata                                     (mm_interconnect_0_onchip_memory2_0_s1_readdata),            \n\t\t.onchip_memory2_0_s1_writedata                                    (mm_interconnect_0_onchip_memory2_0_s1_writedata),           \n\t\t.onchip_memory2_0_s1_byteenable                                   (mm_interconnect_0_onchip_memory2_0_s1_byteenable),          \n\t\t.onchip_memory2_0_s1_chipselect                                   (mm_interconnect_0_onchip_memory2_0_s1_chipselect),          \n\t\t.onchip_memory2_0_s1_clken                                        (mm_interconnect_0_onchip_memory2_0_s1_clken),               \n\t\t.pio_led_s1_address                                               (mm_interconnect_0_pio_led_s1_address),                      \n\t\t.pio_led_s1_write                                                 (mm_interconnect_0_pio_led_s1_write),                        \n\t\t.pio_led_s1_readdata                                              (mm_interconnect_0_pio_led_s1_readdata),                     \n\t\t.pio_led_s1_writedata                                             (mm_interconnect_0_pio_led_s1_writedata),                    \n\t\t.pio_led_s1_chipselect                                            (mm_interconnect_0_pio_led_s1_chipselect),                   \n\t\t.sysid_qsys_control_slave_address                                 (mm_interconnect_0_sysid_qsys_control_slave_address),        \n\t\t.sysid_qsys_control_slave_readdata                                (mm_interconnect_0_sysid_qsys_control_slave_readdata)        \n\t);\n\n\tsoc_system_mm_interconnect_1 mm_interconnect_1 (\n\t\t.hps_0_f2h_axi_slave_awid                                            (mm_interconnect_1_hps_0_f2h_axi_slave_awid),    \n\t\t.hps_0_f2h_axi_slave_awaddr                                          (mm_interconnect_1_hps_0_f2h_axi_slave_awaddr),  \n\t\t.hps_0_f2h_axi_slave_awlen                                           (mm_interconnect_1_hps_0_f2h_axi_slave_awlen),   \n\t\t.hps_0_f2h_axi_slave_awsize                                          (mm_interconnect_1_hps_0_f2h_axi_slave_awsize),  \n\t\t.hps_0_f2h_axi_slave_awburst                                         (mm_interconnect_1_hps_0_f2h_axi_slave_awburst), \n\t\t.hps_0_f2h_axi_slave_awlock                                          (mm_interconnect_1_hps_0_f2h_axi_slave_awlock),  \n\t\t.hps_0_f2h_axi_slave_awcache                                         (mm_interconnect_1_hps_0_f2h_axi_slave_awcache), \n\t\t.hps_0_f2h_axi_slave_awprot                                          (mm_interconnect_1_hps_0_f2h_axi_slave_awprot),  \n\t\t.hps_0_f2h_axi_slave_awuser                                          (mm_interconnect_1_hps_0_f2h_axi_slave_awuser),  \n\t\t.hps_0_f2h_axi_slave_awvalid                                         (mm_interconnect_1_hps_0_f2h_axi_slave_awvalid), \n\t\t.hps_0_f2h_axi_slave_awready                                         (mm_interconnect_1_hps_0_f2h_axi_slave_awready), \n\t\t.hps_0_f2h_axi_slave_wid                                             (mm_interconnect_1_hps_0_f2h_axi_slave_wid),     \n\t\t.hps_0_f2h_axi_slave_wdata                                           (mm_interconnect_1_hps_0_f2h_axi_slave_wdata),   \n\t\t.hps_0_f2h_axi_slave_wstrb                                           (mm_interconnect_1_hps_0_f2h_axi_slave_wstrb),   \n\t\t.hps_0_f2h_axi_slave_wlast                                           (mm_interconnect_1_hps_0_f2h_axi_slave_wlast),   \n\t\t.hps_0_f2h_axi_slave_wvalid                                          (mm_interconnect_1_hps_0_f2h_axi_slave_wvalid),  \n\t\t.hps_0_f2h_axi_slave_wready                                          (mm_interconnect_1_hps_0_f2h_axi_slave_wready),  \n\t\t.hps_0_f2h_axi_slave_bid                                             (mm_interconnect_1_hps_0_f2h_axi_slave_bid),     \n\t\t.hps_0_f2h_axi_slave_bresp                                           (mm_interconnect_1_hps_0_f2h_axi_slave_bresp),   \n\t\t.hps_0_f2h_axi_slave_bvalid                                          (mm_interconnect_1_hps_0_f2h_axi_slave_bvalid),  \n\t\t.hps_0_f2h_axi_slave_bready                                          (mm_interconnect_1_hps_0_f2h_axi_slave_bready),  \n\t\t.hps_0_f2h_axi_slave_arid                                            (mm_interconnect_1_hps_0_f2h_axi_slave_arid),    \n\t\t.hps_0_f2h_axi_slave_araddr                                          (mm_interconnect_1_hps_0_f2h_axi_slave_araddr),  \n\t\t.hps_0_f2h_axi_slave_arlen                                           (mm_interconnect_1_hps_0_f2h_axi_slave_arlen),   \n\t\t.hps_0_f2h_axi_slave_arsize                                          (mm_interconnect_1_hps_0_f2h_axi_slave_arsize),  \n\t\t.hps_0_f2h_axi_slave_arburst                                         (mm_interconnect_1_hps_0_f2h_axi_slave_arburst), \n\t\t.hps_0_f2h_axi_slave_arlock                                          (mm_interconnect_1_hps_0_f2h_axi_slave_arlock),  \n\t\t.hps_0_f2h_axi_slave_arcache                                         (mm_interconnect_1_hps_0_f2h_axi_slave_arcache), \n\t\t.hps_0_f2h_axi_slave_arprot                                          (mm_interconnect_1_hps_0_f2h_axi_slave_arprot),  \n\t\t.hps_0_f2h_axi_slave_aruser                                          (mm_interconnect_1_hps_0_f2h_axi_slave_aruser),  \n\t\t.hps_0_f2h_axi_slave_arvalid                                         (mm_interconnect_1_hps_0_f2h_axi_slave_arvalid), \n\t\t.hps_0_f2h_axi_slave_arready                                         (mm_interconnect_1_hps_0_f2h_axi_slave_arready), \n\t\t.hps_0_f2h_axi_slave_rid                                             (mm_interconnect_1_hps_0_f2h_axi_slave_rid),     \n\t\t.hps_0_f2h_axi_slave_rdata                                           (mm_interconnect_1_hps_0_f2h_axi_slave_rdata),   \n\t\t.hps_0_f2h_axi_slave_rresp                                           (mm_interconnect_1_hps_0_f2h_axi_slave_rresp),   \n\t\t.hps_0_f2h_axi_slave_rlast                                           (mm_interconnect_1_hps_0_f2h_axi_slave_rlast),   \n\t\t.hps_0_f2h_axi_slave_rvalid                                          (mm_interconnect_1_hps_0_f2h_axi_slave_rvalid),  \n\t\t.hps_0_f2h_axi_slave_rready                                          (mm_interconnect_1_hps_0_f2h_axi_slave_rready),  \n\t\t.clk_0_clk_clk                                                       (clk_clk),                                       \n\t\t.hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset    (rst_controller_001_reset_out_reset),            \n\t\t.hps_only_master_clk_reset_reset_bridge_in_reset_reset               (rst_controller_reset_out_reset),                \n\t\t.hps_only_master_master_translator_reset_reset_bridge_in_reset_reset (rst_controller_reset_out_reset),                \n\t\t.hps_only_master_master_address                                      (hps_only_master_master_address),                \n\t\t.hps_only_master_master_waitrequest                                  (hps_only_master_master_waitrequest),            \n\t\t.hps_only_master_master_byteenable                                   (hps_only_master_master_byteenable),             \n\t\t.hps_only_master_master_read                                         (hps_only_master_master_read),                   \n\t\t.hps_only_master_master_readdata                                     (hps_only_master_master_readdata),               \n\t\t.hps_only_master_master_readdatavalid                                (hps_only_master_master_readdatavalid),          \n\t\t.hps_only_master_master_write                                        (hps_only_master_master_write),                  \n\t\t.hps_only_master_master_writedata                                    (hps_only_master_master_writedata)               \n\t);\n\n\tsoc_system_irq_mapper irq_mapper (\n\t\t.clk           (),                         \n\t\t.reset         (),                         \n\t\t.receiver0_irq (irq_mapper_receiver0_irq), \n\t\t.sender_irq    (hps_0_f2h_irq0_irq)        \n\t);\n\n\tsoc_system_irq_mapper_001 irq_mapper_001 (\n\t\t.clk        (),                   \n\t\t.reset      (),                   \n\t\t.sender_irq (hps_0_f2h_irq1_irq)  \n\t);\n\n\tsoc_system_irq_mapper irq_mapper_002 (\n\t\t.clk           (clk_clk),                                \n\t\t.reset         (rst_controller_reset_out_reset),         \n\t\t.receiver0_irq (irq_mapper_receiver0_irq),               \n\t\t.sender_irq    (intr_capturer_0_interrupt_receiver_irq)  \n\t);\n\n\taltera_reset_controller #(\n\t\t.NUM_RESET_INPUTS          (1),\n\t\t.OUTPUT_RESET_SYNC_EDGES   (\"deassert\"),\n\t\t.SYNC_DEPTH                (2),\n\t\t.RESET_REQUEST_PRESENT     (1),\n\t\t.RESET_REQ_WAIT_TIME       (1),\n\t\t.MIN_RST_ASSERTION_TIME    (3),\n\t\t.RESET_REQ_EARLY_DSRT_TIME (1),\n\t\t.USE_RESET_REQUEST_IN0     (0),\n\t\t.USE_RESET_REQUEST_IN1     (0),\n\t\t.USE_RESET_REQUEST_IN2     (0),\n\t\t.USE_RESET_REQUEST_IN3     (0),\n\t\t.USE_RESET_REQUEST_IN4     (0),\n\t\t.USE_RESET_REQUEST_IN5     (0),\n\t\t.USE_RESET_REQUEST_IN6     (0),\n\t\t.USE_RESET_REQUEST_IN7     (0),\n\t\t.USE_RESET_REQUEST_IN8     (0),\n\t\t.USE_RESET_REQUEST_IN9     (0),\n\t\t.USE_RESET_REQUEST_IN10    (0),\n\t\t.USE_RESET_REQUEST_IN11    (0),\n\t\t.USE_RESET_REQUEST_IN12    (0),\n\t\t.USE_RESET_REQUEST_IN13    (0),\n\t\t.USE_RESET_REQUEST_IN14    (0),\n\t\t.USE_RESET_REQUEST_IN15    (0),\n\t\t.ADAPT_RESET_REQUEST       (0)\n\t) rst_controller (\n\t\t.reset_in0      (~reset_reset_n),                     \n\t\t.clk            (clk_clk),                            \n\t\t.reset_out      (rst_controller_reset_out_reset),     \n\t\t.reset_req      (rst_controller_reset_out_reset_req), \n\t\t.reset_req_in0  (1'b0),                               \n\t\t.reset_in1      (1'b0),                               \n\t\t.reset_req_in1  (1'b0),                               \n\t\t.reset_in2      (1'b0),                               \n\t\t.reset_req_in2  (1'b0),                               \n\t\t.reset_in3      (1'b0),                               \n\t\t.reset_req_in3  (1'b0),                               \n\t\t.reset_in4      (1'b0),                               \n\t\t.reset_req_in4  (1'b0),                               \n\t\t.reset_in5      (1'b0),                               \n\t\t.reset_req_in5  (1'b0),                               \n\t\t.reset_in6      (1'b0),                               \n\t\t.reset_req_in6  (1'b0),                               \n\t\t.reset_in7      (1'b0),                               \n\t\t.reset_req_in7  (1'b0),                               \n\t\t.reset_in8      (1'b0),                               \n\t\t.reset_req_in8  (1'b0),                               \n\t\t.reset_in9      (1'b0),                               \n\t\t.reset_req_in9  (1'b0),                               \n\t\t.reset_in10     (1'b0),                               \n\t\t.reset_req_in10 (1'b0),                               \n\t\t.reset_in11     (1'b0),                               \n\t\t.reset_req_in11 (1'b0),                               \n\t\t.reset_in12     (1'b0),                               \n\t\t.reset_req_in12 (1'b0),                               \n\t\t.reset_in13     (1'b0),                               \n\t\t.reset_req_in13 (1'b0),                               \n\t\t.reset_in14     (1'b0),                               \n\t\t.reset_req_in14 (1'b0),                               \n\t\t.reset_in15     (1'b0),                               \n\t\t.reset_req_in15 (1'b0)                                \n\t);\n\n\taltera_reset_controller #(\n\t\t.NUM_RESET_INPUTS          (1),\n\t\t.OUTPUT_RESET_SYNC_EDGES   (\"deassert\"),\n\t\t.SYNC_DEPTH                (2),\n\t\t.RESET_REQUEST_PRESENT     (0),\n\t\t.RESET_REQ_WAIT_TIME       (1),\n\t\t.MIN_RST_ASSERTION_TIME    (3),\n\t\t.RESET_REQ_EARLY_DSRT_TIME (1),\n\t\t.USE_RESET_REQUEST_IN0     (0),\n\t\t.USE_RESET_REQUEST_IN1     (0),\n\t\t.USE_RESET_REQUEST_IN2     (0),\n\t\t.USE_RESET_REQUEST_IN3     (0),\n\t\t.USE_RESET_REQUEST_IN4     (0),\n\t\t.USE_RESET_REQUEST_IN5     (0),\n\t\t.USE_RESET_REQUEST_IN6     (0),\n\t\t.USE_RESET_REQUEST_IN7     (0),\n\t\t.USE_RESET_REQUEST_IN8     (0),\n\t\t.USE_RESET_REQUEST_IN9     (0),\n\t\t.USE_RESET_REQUEST_IN10    (0),\n\t\t.USE_RESET_REQUEST_IN11    (0),\n\t\t.USE_RESET_REQUEST_IN12    (0),\n\t\t.USE_RESET_REQUEST_IN13    (0),\n\t\t.USE_RESET_REQUEST_IN14    (0),\n\t\t.USE_RESET_REQUEST_IN15    (0),\n\t\t.ADAPT_RESET_REQUEST       (0)\n\t) rst_controller_001 (\n\t\t.reset_in0      (~hps_0_h2f_reset_reset_n),           \n\t\t.clk            (clk_clk),                            \n\t\t.reset_out      (rst_controller_001_reset_out_reset), \n\t\t.reset_req      (),                                   \n\t\t.reset_req_in0  (1'b0),                               \n\t\t.reset_in1      (1'b0),                               \n\t\t.reset_req_in1  (1'b0),                               \n\t\t.reset_in2      (1'b0),                               \n\t\t.reset_req_in2  (1'b0),                               \n\t\t.reset_in3      (1'b0),                               \n\t\t.reset_req_in3  (1'b0),                               \n\t\t.reset_in4      (1'b0),                               \n\t\t.reset_req_in4  (1'b0),                               \n\t\t.reset_in5      (1'b0),                               \n\t\t.reset_req_in5  (1'b0),                               \n\t\t.reset_in6      (1'b0),                               \n\t\t.reset_req_in6  (1'b0),                               \n\t\t.reset_in7      (1'b0),                               \n\t\t.reset_req_in7  (1'b0),                               \n\t\t.reset_in8      (1'b0),                               \n\t\t.reset_req_in8  (1'b0),                               \n\t\t.reset_in9      (1'b0),                               \n\t\t.reset_req_in9  (1'b0),                               \n\t\t.reset_in10     (1'b0),                               \n\t\t.reset_req_in10 (1'b0),                               \n\t\t.reset_in11     (1'b0),                               \n\t\t.reset_req_in11 (1'b0),                               \n\t\t.reset_in12     (1'b0),                               \n\t\t.reset_req_in12 (1'b0),                               \n\t\t.reset_in13     (1'b0),                               \n\t\t.reset_req_in13 (1'b0),                               \n\t\t.reset_in14     (1'b0),                               \n\t\t.reset_req_in14 (1'b0),                               \n\t\t.reset_in15     (1'b0),                               \n\t\t.reset_req_in15 (1'b0)                                \n\t);\n\nendmodule\n```"
        },
        {
            "role": "user",
            "content": "Based on the provided original Verilog code, its comments and above answers, generate a detailed specification for the module. Include the following information in a single, concise paragraph:\n1. The name of the module.\n2. A simple explanation of the module's functionality.\n3. The input and output ports, along with a brief explanation of each.\n4. The internal signals used within the module, with a brief explanation of their purpose.\n5. An overview of the different blocks or sections in the code and their functions.\nEnsure that the specification is clear and accurately reflects the details from the code and comments.\nYour answer should be structured and well-organized, providing a comprehensive and detailed overview of the module's design and operation.\nPlease provide your answer in the following format:\nModule name: [module name]. Module specification: [module specification]."
        },
        {
            "role": "assistant",
            "content": "Module name: soc_system. Module specification: This module implements a System-on-Chip (SoC) design integrating a Hard Processor System (HPS) with FPGA fabric. It features various interfaces including memory, Ethernet, USB, UART, SPI, I2C, and GPIO. The module has numerous input and output ports for clock, reset, memory interfacing, HPS I/O, and LED control. Key inputs include clk_clk, reset_reset_n, and memory_oct_rzqin, while outputs cover memory signals, HPS I/O, and LED control. Internal signals facilitate communication between submodules, handling memory-mapped interconnects, AXI interfaces, and various peripheral controls. The design incorporates several functional blocks: an HPS core, on-chip memory, master interfaces for FPGA and HPS, a JTAG UART, interrupt handling"
        }
    ],
    "claude-message": [
        {
            "role": "user",
            "content": [
                {
                    "type": "text",
                    "text": "You are an expert in hardware design with a deep understanding of Verilog RTL codes. Now I want to train a large language model for code comment generation tasks specifically focused on Verilog RTL codes. And I want you to help me process the raw data, transforming it into suitable formats that can serve as inputs and outputs for the model."
                },
                {
                    "type": "text",
                    "text": "Name of the module and its functionality is as follows: \nModule name: soc_system\n\nExplanation: This module appears to be a top-level system-on-chip (SoC) design that integrates various components including a Hard Processor System (HPS), memory interfaces, interconnects, and peripherals. It likely represents a complete FPGA-based system with both hardware and software capabilities. The module defines numerous input/output ports and internal wires/registers to connect different submodules and components. It includes AXI interfaces for communication between the HPS and FPGA fabric, memory controllers, interrupt handlers, reset controllers, and various peripheral interfaces like UART, I2C, and GPIO. The overall purpose seems to be creating a flexible and customizable SoC platform that combines the processing power of an ARM-based HPS with custom FPGA logic."
                },
                {
                    "type": "text",
                    "text": "Input and output ports and their explanation is as follows: \nHere's a concise summary of the input and output ports for the soc_system module:\n\nInput ports:\nclk_clk, reset_reset_n, memory_oct_rzqin, hps_0_f2h_cold_reset_req_reset_n, hps_0_f2h_debug_reset_req_reset_n, hps_0_f2h_warm_reset_req_reset_n, hps_0_f2h_stm_hw_events_stm_hwevents, hps_0_hps_io_hps_io_emac1_inst_RXD0, hps_0_hps_io_hps_io_emac1_inst_RX_CTL, hps_0_hps_io_hps_io_emac1_inst_RX_CLK, hps_0_hps_io_hps_io_emac1_inst_RXD1, hps_0_hps_io_hps_io_emac1_inst_RXD2, hps_0_hps_io_hps_io_emac1_inst_RXD3, hps_0_hps_io_hps_io_spim1_inst_MISO, hps_0_hps_io_hps_io_uart0_inst_RX, hps_0_hps_io_hps_io_usb1_inst_CLK, hps_0_hps_io_hps_io_usb1_inst_DIR, hps_0_hps_io_hps_io_usb1_inst_NXT\n\nExplanation: These ports include clock and reset inputs, memory-related signals, HPS-related reset and event inputs, and various interface signals for Ethernet, SPI, UART, and USB.\n\nOutput ports:\nmemory_mem_a, memory_mem_ba, memory_mem_ck, memory_mem_ck_n, memory_mem_cke, memory_mem_cs_n, memory_mem_ras_n, memory_mem_cas_n, memory_mem_we_n, memory_mem_reset_n, memory_mem_odt, memory_mem_dm, hps_0_hps_io_hps_io_emac1_inst_TX_CLK, hps_0_hps_io_hps_io_emac1_inst_TXD0, hps_0_hps_io_hps_io_emac1_inst_TXD1, hps_0_hps_io_hps_io_emac1_inst_TXD2, hps_0_hps_io_hps_io_emac1_inst_TXD3, hps_0_hps_io_hps_io_emac1_inst_MDC, hps_0_hps_io_hps_io_emac1_inst_TX_CTL, hps_0_hps_io_hps_io_qspi_inst_SS0, hps_0_hps_io_hps_io_qspi_inst_CLK, hps_0_hps_io_hps_io_sdio_inst_CLK, hps_0_hps_io_hps_io_usb1_inst_STP, hps_0_hps_io_hps_io_spim1_inst_CLK, hps_0_hps_io_hps_io_spim1_inst_MOSI, hps_0_hps_io_hps_io_spim1_inst_SS0, hps_0_hps_io_hps_io_uart0_inst_TX, hps_0_h2f_reset_reset_n, pio_led_external_connection_export\n\nExplanation: These ports include memory interface signals, Ethernet transmission signals, and various interface signals for QSPI, SDIO, USB, SPI, and UART. They also include reset and LED control outputs.\n\nNote: There are also several inout ports for bidirectional signals, which I haven't listed separately to keep the response concise."
                },
                {
                    "type": "text",
                    "text": "Internal signals and their explanation is as follows: \nBased on the given code, here are the internal signals and their explanations:\n\nInternal signals: mm_interconnect_0_pio_led_s1_writedata, mm_interconnect_0_pio_led_s1_address, mm_interconnect_0_pio_led_s1_chipselect, mm_interconnect_0_pio_led_s1_write, mm_interconnect_0_pio_led_s1_readdata, mm_interconnect_0_onchip_memory2_0_s1_writedata, mm_interconnect_0_onchip_memory2_0_s1_address, mm_interconnect_0_onchip_memory2_0_s1_chipselect, mm_interconnect_0_onchip_memory2_0_s1_clken, mm_interconnect_0_onchip_memory2_0_s1_write, mm_interconnect_0_onchip_memory2_0_s1_readdata, mm_interconnect_0_onchip_memory2_0_s1_byteenable, fpga_only_master_master_waitrequest, fpga_only_master_master_writedata, fpga_only_master_master_address, fpga_only_master_master_write, fpga_only_master_master_read, fpga_only_master_master_readdata, fpga_only_master_master_byteenable, fpga_only_master_master_readdatavalid.\n\nExplanation: These signals are used for interconnecting various components within the SoC system. The \"mm_interconnect\" signals are part of the memory-mapped interconnect, facilitating communication between the LED PIO and on-chip memory. The \"fpga_only_master\" signals are related to an FPGA master interface, enabling read and write operations to other components in the system. These internal signals handle data transfer, addressing, and control between different modules in the SoC design."
                },
                {
                    "type": "text",
                    "text": "Original Verilog code is as follows: \n<code>\n\n\n\n`timescale 1 ps / 1 ps\nmodule soc_system (\n\t\tinput  wire        clk_clk,                               \n\t\tinput  wire        reset_reset_n,                         \n\t\toutput wire [14:0] memory_mem_a,                          \n\t\toutput wire [2:0]  memory_mem_ba,                         \n\t\toutput wire        memory_mem_ck,                         \n\t\toutput wire        memory_mem_ck_n,                       \n\t\toutput wire        memory_mem_cke,                        \n\t\toutput wire        memory_mem_cs_n,                       \n\t\toutput wire        memory_mem_ras_n,                      \n\t\toutput wire        memory_mem_cas_n,                      \n\t\toutput wire        memory_mem_we_n,                       \n\t\toutput wire        memory_mem_reset_n,                    \n\t\tinout  wire [31:0] memory_mem_dq,                         \n\t\tinout  wire [3:0]  memory_mem_dqs,                        \n\t\tinout  wire [3:0]  memory_mem_dqs_n,                      \n\t\toutput wire        memory_mem_odt,                        \n\t\toutput wire [3:0]  memory_mem_dm,                         \n\t\tinput  wire        memory_oct_rzqin,                      \n\t\toutput wire        hps_0_hps_io_hps_io_emac1_inst_TX_CLK, \n\t\toutput wire        hps_0_hps_io_hps_io_emac1_inst_TXD0,   \n\t\toutput wire        hps_0_hps_io_hps_io_emac1_inst_TXD1,   \n\t\toutput wire        hps_0_hps_io_hps_io_emac1_inst_TXD2,   \n\t\toutput wire        hps_0_hps_io_hps_io_emac1_inst_TXD3,   \n\t\tinput  wire        hps_0_hps_io_hps_io_emac1_inst_RXD0,   \n\t\tinout  wire        hps_0_hps_io_hps_io_emac1_inst_MDIO,   \n\t\toutput wire        hps_0_hps_io_hps_io_emac1_inst_MDC,    \n\t\tinput  wire        hps_0_hps_io_hps_io_emac1_inst_RX_CTL, \n\t\toutput wire        hps_0_hps_io_hps_io_emac1_inst_TX_CTL, \n\t\tinput  wire        hps_0_hps_io_hps_io_emac1_inst_RX_CLK, \n\t\tinput  wire        hps_0_hps_io_hps_io_emac1_inst_RXD1,   \n\t\tinput  wire        hps_0_hps_io_hps_io_emac1_inst_RXD2,   \n\t\tinput  wire        hps_0_hps_io_hps_io_emac1_inst_RXD3,   \n\t\tinout  wire        hps_0_hps_io_hps_io_qspi_inst_IO0,     \n\t\tinout  wire        hps_0_hps_io_hps_io_qspi_inst_IO1,     \n\t\tinout  wire        hps_0_hps_io_hps_io_qspi_inst_IO2,     \n\t\tinout  wire        hps_0_hps_io_hps_io_qspi_inst_IO3,     \n\t\toutput wire        hps_0_hps_io_hps_io_qspi_inst_SS0,     \n\t\toutput wire        hps_0_hps_io_hps_io_qspi_inst_CLK,     \n\t\tinout  wire        hps_0_hps_io_hps_io_sdio_inst_CMD,     \n\t\tinout  wire        hps_0_hps_io_hps_io_sdio_inst_D0,      \n\t\tinout  wire        hps_0_hps_io_hps_io_sdio_inst_D1,      \n\t\toutput wire        hps_0_hps_io_hps_io_sdio_inst_CLK,     \n\t\tinout  wire        hps_0_hps_io_hps_io_sdio_inst_D2,      \n\t\tinout  wire        hps_0_hps_io_hps_io_sdio_inst_D3,      \n\t\tinout  wire        hps_0_hps_io_hps_io_usb1_inst_D0,      \n\t\tinout  wire        hps_0_hps_io_hps_io_usb1_inst_D1,      \n\t\tinout  wire        hps_0_hps_io_hps_io_usb1_inst_D2,      \n\t\tinout  wire        hps_0_hps_io_hps_io_usb1_inst_D3,      \n\t\tinout  wire        hps_0_hps_io_hps_io_usb1_inst_D4,      \n\t\tinout  wire        hps_0_hps_io_hps_io_usb1_inst_D5,      \n\t\tinout  wire        hps_0_hps_io_hps_io_usb1_inst_D6,      \n\t\tinout  wire        hps_0_hps_io_hps_io_usb1_inst_D7,      \n\t\tinput  wire        hps_0_hps_io_hps_io_usb1_inst_CLK,     \n\t\toutput wire        hps_0_hps_io_hps_io_usb1_inst_STP,     \n\t\tinput  wire        hps_0_hps_io_hps_io_usb1_inst_DIR,     \n\t\tinput  wire        hps_0_hps_io_hps_io_usb1_inst_NXT,     \n\t\toutput wire        hps_0_hps_io_hps_io_spim1_inst_CLK,    \n\t\toutput wire        hps_0_hps_io_hps_io_spim1_inst_MOSI,   \n\t\tinput  wire        hps_0_hps_io_hps_io_spim1_inst_MISO,   \n\t\toutput wire        hps_0_hps_io_hps_io_spim1_inst_SS0,    \n\t\tinput  wire        hps_0_hps_io_hps_io_uart0_inst_RX,     \n\t\toutput wire        hps_0_hps_io_hps_io_uart0_inst_TX,     \n\t\tinout  wire        hps_0_hps_io_hps_io_i2c0_inst_SDA,     \n\t\tinout  wire        hps_0_hps_io_hps_io_i2c0_inst_SCL,     \n\t\tinout  wire        hps_0_hps_io_hps_io_i2c1_inst_SDA,     \n\t\tinout  wire        hps_0_hps_io_hps_io_i2c1_inst_SCL,     \n\t\tinout  wire        hps_0_hps_io_hps_io_gpio_inst_GPIO09,  \n\t\tinout  wire        hps_0_hps_io_hps_io_gpio_inst_GPIO35,  \n\t\tinout  wire        hps_0_hps_io_hps_io_gpio_inst_GPIO40,  \n\t\tinout  wire        hps_0_hps_io_hps_io_gpio_inst_GPIO41,  \n\t\tinout  wire        hps_0_hps_io_hps_io_gpio_inst_GPIO48,  \n\t\tinout  wire        hps_0_hps_io_hps_io_gpio_inst_GPIO53,  \n\t\tinout  wire        hps_0_hps_io_hps_io_gpio_inst_GPIO54,  \n\t\tinout  wire        hps_0_hps_io_hps_io_gpio_inst_GPIO61,  \n\t\toutput wire        hps_0_h2f_reset_reset_n,               \n\t\tinput  wire [27:0] hps_0_f2h_stm_hw_events_stm_hwevents,  \n\t\tinput  wire        hps_0_f2h_warm_reset_req_reset_n,      \n\t\tinput  wire        hps_0_f2h_debug_reset_req_reset_n,     \n\t\tinput  wire        hps_0_f2h_cold_reset_req_reset_n,      \n\t\toutput wire [9:0]  pio_led_external_connection_export     \n\t);\n\n\twire  [31:0] mm_interconnect_0_pio_led_s1_writedata;                    \n\twire   [1:0] mm_interconnect_0_pio_led_s1_address;                      \n\twire         mm_interconnect_0_pio_led_s1_chipselect;                   \n\twire         mm_interconnect_0_pio_led_s1_write;                        \n\twire  [31:0] mm_interconnect_0_pio_led_s1_readdata;                     \n\twire  [63:0] mm_interconnect_0_onchip_memory2_0_s1_writedata;           \n\twire  [12:0] mm_interconnect_0_onchip_memory2_0_s1_address;             \n\twire         mm_interconnect_0_onchip_memory2_0_s1_chipselect;          \n\twire         mm_interconnect_0_onchip_memory2_0_s1_clken;               \n\twire         mm_interconnect_0_onchip_memory2_0_s1_write;               \n\twire  [63:0] mm_interconnect_0_onchip_memory2_0_s1_readdata;            \n\twire   [7:0] mm_interconnect_0_onchip_memory2_0_s1_byteenable;          \n\twire         fpga_only_master_master_waitrequest;                       \n\twire  [31:0] fpga_only_master_master_writedata;                         \n\twire  [31:0] fpga_only_master_master_address;                           \n\twire         fpga_only_master_master_write;                             \n\twire         fpga_only_master_master_read;                              \n\twire  [31:0] fpga_only_master_master_readdata;                          \n\twire   [3:0] fpga_only_master_master_byteenable;                        \n\twire         fpga_only_master_master_readdatavalid;                     \n\twire         mm_interconnect_0_jtag_uart_avalon_jtag_slave_waitrequest; \n\twire  [31:0] mm_interconnect_0_jtag_uart_avalon_jtag_slave_writedata;   \n\twire   [0:0] mm_interconnect_0_jtag_uart_avalon_jtag_slave_address;     \n\twire         mm_interconnect_0_jtag_uart_avalon_jtag_slave_chipselect;  \n\twire         mm_interconnect_0_jtag_uart_avalon_jtag_slave_write;       \n\twire         mm_interconnect_0_jtag_uart_avalon_jtag_slave_read;        \n\twire  [31:0] mm_interconnect_0_jtag_uart_avalon_jtag_slave_readdata;    \n\twire         hps_0_h2f_axi_master_awvalid;                              \n\twire   [2:0] hps_0_h2f_axi_master_arsize;                               \n\twire   [1:0] hps_0_h2f_axi_master_arlock;                               \n\twire   [3:0] hps_0_h2f_axi_master_awcache;                              \n\twire         hps_0_h2f_axi_master_arready;                              \n\twire  [11:0] hps_0_h2f_axi_master_arid;                                 \n\twire         hps_0_h2f_axi_master_rready;                               \n\twire         hps_0_h2f_axi_master_bready;                               \n\twire   [2:0] hps_0_h2f_axi_master_awsize;                               \n\twire   [2:0] hps_0_h2f_axi_master_awprot;                               \n\twire         hps_0_h2f_axi_master_arvalid;                              \n\twire   [2:0] hps_0_h2f_axi_master_arprot;                               \n\twire  [11:0] hps_0_h2f_axi_master_bid;                                  \n\twire   [3:0] hps_0_h2f_axi_master_arlen;                                \n\twire         hps_0_h2f_axi_master_awready;                              \n\twire  [11:0] hps_0_h2f_axi_master_awid;                                 \n\twire         hps_0_h2f_axi_master_bvalid;                               \n\twire  [11:0] hps_0_h2f_axi_master_wid;                                  \n\twire   [1:0] hps_0_h2f_axi_master_awlock;                               \n\twire   [1:0] hps_0_h2f_axi_master_awburst;                              \n\twire   [1:0] hps_0_h2f_axi_master_bresp;                                \n\twire   [7:0] hps_0_h2f_axi_master_wstrb;                                \n\twire         hps_0_h2f_axi_master_rvalid;                               \n\twire  [63:0] hps_0_h2f_axi_master_wdata;                                \n\twire         hps_0_h2f_axi_master_wready;                               \n\twire   [1:0] hps_0_h2f_axi_master_arburst;                              \n\twire  [63:0] hps_0_h2f_axi_master_rdata;                                \n\twire  [29:0] hps_0_h2f_axi_master_araddr;                               \n\twire   [3:0] hps_0_h2f_axi_master_arcache;                              \n\twire   [3:0] hps_0_h2f_axi_master_awlen;                                \n\twire  [29:0] hps_0_h2f_axi_master_awaddr;                               \n\twire  [11:0] hps_0_h2f_axi_master_rid;                                  \n\twire         hps_0_h2f_axi_master_wvalid;                               \n\twire   [1:0] hps_0_h2f_axi_master_rresp;                                \n\twire         hps_0_h2f_axi_master_wlast;                                \n\twire         hps_0_h2f_axi_master_rlast;                                \n\twire         hps_0_h2f_lw_axi_master_awvalid;                           \n\twire   [2:0] hps_0_h2f_lw_axi_master_arsize;                            \n\twire   [1:0] hps_0_h2f_lw_axi_master_arlock;                            \n\twire   [3:0] hps_0_h2f_lw_axi_master_awcache;                           \n\twire         hps_0_h2f_lw_axi_master_arready;                           \n\twire  [11:0] hps_0_h2f_lw_axi_master_arid;                              \n\twire         hps_0_h2f_lw_axi_master_rready;                            \n\twire         hps_0_h2f_lw_axi_master_bready;                            \n\twire   [2:0] hps_0_h2f_lw_axi_master_awsize;                            \n\twire   [2:0] hps_0_h2f_lw_axi_master_awprot;                            \n\twire         hps_0_h2f_lw_axi_master_arvalid;                           \n\twire   [2:0] hps_0_h2f_lw_axi_master_arprot;                            \n\twire  [11:0] hps_0_h2f_lw_axi_master_bid;                               \n\twire   [3:0] hps_0_h2f_lw_axi_master_arlen;                             \n\twire         hps_0_h2f_lw_axi_master_awready;                           \n\twire  [11:0] hps_0_h2f_lw_axi_master_awid;                              \n\twire         hps_0_h2f_lw_axi_master_bvalid;                            \n\twire  [11:0] hps_0_h2f_lw_axi_master_wid;                               \n\twire   [1:0] hps_0_h2f_lw_axi_master_awlock;                            \n\twire   [1:0] hps_0_h2f_lw_axi_master_awburst;                           \n\twire   [1:0] hps_0_h2f_lw_axi_master_bresp;                             \n\twire   [3:0] hps_0_h2f_lw_axi_master_wstrb;                             \n\twire         hps_0_h2f_lw_axi_master_rvalid;                            \n\twire  [31:0] hps_0_h2f_lw_axi_master_wdata;                             \n\twire         hps_0_h2f_lw_axi_master_wready;                            \n\twire   [1:0] hps_0_h2f_lw_axi_master_arburst;                           \n\twire  [31:0] hps_0_h2f_lw_axi_master_rdata;                             \n\twire  [20:0] hps_0_h2f_lw_axi_master_araddr;                            \n\twire   [3:0] hps_0_h2f_lw_axi_master_arcache;                           \n\twire   [3:0] hps_0_h2f_lw_axi_master_awlen;                             \n\twire  [20:0] hps_0_h2f_lw_axi_master_awaddr;                            \n\twire  [11:0] hps_0_h2f_lw_axi_master_rid;                               \n\twire         hps_0_h2f_lw_axi_master_wvalid;                            \n\twire   [1:0] hps_0_h2f_lw_axi_master_rresp;                             \n\twire         hps_0_h2f_lw_axi_master_wlast;                             \n\twire         hps_0_h2f_lw_axi_master_rlast;                             \n\twire   [0:0] mm_interconnect_0_sysid_qsys_control_slave_address;        \n\twire  [31:0] mm_interconnect_0_sysid_qsys_control_slave_readdata;       \n\twire   [0:0] mm_interconnect_0_intr_capturer_0_avalon_slave_0_address;  \n\twire         mm_interconnect_0_intr_capturer_0_avalon_slave_0_read;     \n\twire  [31:0] mm_interconnect_0_intr_capturer_0_avalon_slave_0_readdata; \n\twire         mm_interconnect_1_hps_0_f2h_axi_slave_awvalid;             \n\twire   [2:0] mm_interconnect_1_hps_0_f2h_axi_slave_arsize;              \n\twire   [1:0] mm_interconnect_1_hps_0_f2h_axi_slave_arlock;              \n\twire   [3:0] mm_interconnect_1_hps_0_f2h_axi_slave_awcache;             \n\twire         mm_interconnect_1_hps_0_f2h_axi_slave_arready;             \n\twire   [7:0] mm_interconnect_1_hps_0_f2h_axi_slave_arid;                \n\twire         mm_interconnect_1_hps_0_f2h_axi_slave_rready;              \n\twire         mm_interconnect_1_hps_0_f2h_axi_slave_bready;              \n\twire   [2:0] mm_interconnect_1_hps_0_f2h_axi_slave_awsize;              \n\twire   [2:0] mm_interconnect_1_hps_0_f2h_axi_slave_awprot;              \n\twire         mm_interconnect_1_hps_0_f2h_axi_slave_arvalid;             \n\twire   [2:0] mm_interconnect_1_hps_0_f2h_axi_slave_arprot;              \n\twire   [7:0] mm_interconnect_1_hps_0_f2h_axi_slave_bid;                 \n\twire   [3:0] mm_interconnect_1_hps_0_f2h_axi_slave_arlen;               \n\twire         mm_interconnect_1_hps_0_f2h_axi_slave_awready;             \n\twire   [7:0] mm_interconnect_1_hps_0_f2h_axi_slave_awid;                \n\twire         mm_interconnect_1_hps_0_f2h_axi_slave_bvalid;              \n\twire   [7:0] mm_interconnect_1_hps_0_f2h_axi_slave_wid;                 \n\twire   [1:0] mm_interconnect_1_hps_0_f2h_axi_slave_awlock;              \n\twire   [1:0] mm_interconnect_1_hps_0_f2h_axi_slave_awburst;             \n\twire   [1:0] mm_interconnect_1_hps_0_f2h_axi_slave_bresp;               \n\twire   [4:0] mm_interconnect_1_hps_0_f2h_axi_slave_aruser;              \n\twire   [4:0] mm_interconnect_1_hps_0_f2h_axi_slave_awuser;              \n\twire   [7:0] mm_interconnect_1_hps_0_f2h_axi_slave_wstrb;               \n\twire         mm_interconnect_1_hps_0_f2h_axi_slave_rvalid;              \n\twire   [1:0] mm_interconnect_1_hps_0_f2h_axi_slave_arburst;             \n\twire  [63:0] mm_interconnect_1_hps_0_f2h_axi_slave_wdata;               \n\twire         mm_interconnect_1_hps_0_f2h_axi_slave_wready;              \n\twire  [63:0] mm_interconnect_1_hps_0_f2h_axi_slave_rdata;               \n\twire  [31:0] mm_interconnect_1_hps_0_f2h_axi_slave_araddr;              \n\twire   [3:0] mm_interconnect_1_hps_0_f2h_axi_slave_arcache;             \n\twire   [3:0] mm_interconnect_1_hps_0_f2h_axi_slave_awlen;               \n\twire  [31:0] mm_interconnect_1_hps_0_f2h_axi_slave_awaddr;              \n\twire   [7:0] mm_interconnect_1_hps_0_f2h_axi_slave_rid;                 \n\twire         mm_interconnect_1_hps_0_f2h_axi_slave_wvalid;              \n\twire   [1:0] mm_interconnect_1_hps_0_f2h_axi_slave_rresp;               \n\twire         mm_interconnect_1_hps_0_f2h_axi_slave_wlast;               \n\twire         mm_interconnect_1_hps_0_f2h_axi_slave_rlast;               \n\twire         hps_only_master_master_waitrequest;                        \n\twire  [31:0] hps_only_master_master_writedata;                          \n\twire  [31:0] hps_only_master_master_address;                            \n\twire         hps_only_master_master_write;                              \n\twire         hps_only_master_master_read;                               \n\twire  [31:0] hps_only_master_master_readdata;                           \n\twire   [3:0] hps_only_master_master_byteenable;                         \n\twire         hps_only_master_master_readdatavalid;                      \n\twire  [31:0] hps_0_f2h_irq0_irq;                                        \n\twire  [31:0] hps_0_f2h_irq1_irq;                                        \n\twire  [31:0] intr_capturer_0_interrupt_receiver_irq;                    \n\twire         irq_mapper_receiver0_irq;                                  \n\twire         rst_controller_reset_out_reset;                            \n\twire         rst_controller_reset_out_reset_req;                        \n\twire         rst_controller_001_reset_out_reset;                        \n\n\tsoc_system_hps_0 #(\n\t\t.F2S_Width (2),\n\t\t.S2F_Width (2)\n\t) hps_0 (\n\t\t.f2h_cold_rst_req_n       (hps_0_f2h_cold_reset_req_reset_n),              \n\t\t.f2h_dbg_rst_req_n        (hps_0_f2h_debug_reset_req_reset_n),             \n\t\t.f2h_warm_rst_req_n       (hps_0_f2h_warm_reset_req_reset_n),              \n\t\t.f2h_stm_hwevents         (hps_0_f2h_stm_hw_events_stm_hwevents),          \n\t\t.mem_a                    (memory_mem_a),                                  \n\t\t.mem_ba                   (memory_mem_ba),                                 \n\t\t.mem_ck                   (memory_mem_ck),                                 \n\t\t.mem_ck_n                 (memory_mem_ck_n),                               \n\t\t.mem_cke                  (memory_mem_cke),                                \n\t\t.mem_cs_n                 (memory_mem_cs_n),                               \n\t\t.mem_ras_n                (memory_mem_ras_n),                              \n\t\t.mem_cas_n                (memory_mem_cas_n),                              \n\t\t.mem_we_n                 (memory_mem_we_n),                               \n\t\t.mem_reset_n              (memory_mem_reset_n),                            \n\t\t.mem_dq                   (memory_mem_dq),                                 \n\t\t.mem_dqs                  (memory_mem_dqs),                                \n\t\t.mem_dqs_n                (memory_mem_dqs_n),                              \n\t\t.mem_odt                  (memory_mem_odt),                                \n\t\t.mem_dm                   (memory_mem_dm),                                 \n\t\t.oct_rzqin                (memory_oct_rzqin),                              \n\t\t.hps_io_emac1_inst_TX_CLK (hps_0_hps_io_hps_io_emac1_inst_TX_CLK),         \n\t\t.hps_io_emac1_inst_TXD0   (hps_0_hps_io_hps_io_emac1_inst_TXD0),           \n\t\t.hps_io_emac1_inst_TXD1   (hps_0_hps_io_hps_io_emac1_inst_TXD1),           \n\t\t.hps_io_emac1_inst_TXD2   (hps_0_hps_io_hps_io_emac1_inst_TXD2),           \n\t\t.hps_io_emac1_inst_TXD3   (hps_0_hps_io_hps_io_emac1_inst_TXD3),           \n\t\t.hps_io_emac1_inst_RXD0   (hps_0_hps_io_hps_io_emac1_inst_RXD0),           \n\t\t.hps_io_emac1_inst_MDIO   (hps_0_hps_io_hps_io_emac1_inst_MDIO),           \n\t\t.hps_io_emac1_inst_MDC    (hps_0_hps_io_hps_io_emac1_inst_MDC),            \n\t\t.hps_io_emac1_inst_RX_CTL (hps_0_hps_io_hps_io_emac1_inst_RX_CTL),         \n\t\t.hps_io_emac1_inst_TX_CTL (hps_0_hps_io_hps_io_emac1_inst_TX_CTL),         \n\t\t.hps_io_emac1_inst_RX_CLK (hps_0_hps_io_hps_io_emac1_inst_RX_CLK),         \n\t\t.hps_io_emac1_inst_RXD1   (hps_0_hps_io_hps_io_emac1_inst_RXD1),           \n\t\t.hps_io_emac1_inst_RXD2   (hps_0_hps_io_hps_io_emac1_inst_RXD2),           \n\t\t.hps_io_emac1_inst_RXD3   (hps_0_hps_io_hps_io_emac1_inst_RXD3),           \n\t\t.hps_io_qspi_inst_IO0     (hps_0_hps_io_hps_io_qspi_inst_IO0),             \n\t\t.hps_io_qspi_inst_IO1     (hps_0_hps_io_hps_io_qspi_inst_IO1),             \n\t\t.hps_io_qspi_inst_IO2     (hps_0_hps_io_hps_io_qspi_inst_IO2),             \n\t\t.hps_io_qspi_inst_IO3     (hps_0_hps_io_hps_io_qspi_inst_IO3),             \n\t\t.hps_io_qspi_inst_SS0     (hps_0_hps_io_hps_io_qspi_inst_SS0),             \n\t\t.hps_io_qspi_inst_CLK     (hps_0_hps_io_hps_io_qspi_inst_CLK),             \n\t\t.hps_io_sdio_inst_CMD     (hps_0_hps_io_hps_io_sdio_inst_CMD),             \n\t\t.hps_io_sdio_inst_D0      (hps_0_hps_io_hps_io_sdio_inst_D0),              \n\t\t.hps_io_sdio_inst_D1      (hps_0_hps_io_hps_io_sdio_inst_D1),              \n\t\t.hps_io_sdio_inst_CLK     (hps_0_hps_io_hps_io_sdio_inst_CLK),             \n\t\t.hps_io_sdio_inst_D2      (hps_0_hps_io_hps_io_sdio_inst_D2),              \n\t\t.hps_io_sdio_inst_D3      (hps_0_hps_io_hps_io_sdio_inst_D3),              \n\t\t.hps_io_usb1_inst_D0      (hps_0_hps_io_hps_io_usb1_inst_D0),              \n\t\t.hps_io_usb1_inst_D1      (hps_0_hps_io_hps_io_usb1_inst_D1),              \n\t\t.hps_io_usb1_inst_D2      (hps_0_hps_io_hps_io_usb1_inst_D2),              \n\t\t.hps_io_usb1_inst_D3      (hps_0_hps_io_hps_io_usb1_inst_D3),              \n\t\t.hps_io_usb1_inst_D4      (hps_0_hps_io_hps_io_usb1_inst_D4),              \n\t\t.hps_io_usb1_inst_D5      (hps_0_hps_io_hps_io_usb1_inst_D5),              \n\t\t.hps_io_usb1_inst_D6      (hps_0_hps_io_hps_io_usb1_inst_D6),              \n\t\t.hps_io_usb1_inst_D7      (hps_0_hps_io_hps_io_usb1_inst_D7),              \n\t\t.hps_io_usb1_inst_CLK     (hps_0_hps_io_hps_io_usb1_inst_CLK),             \n\t\t.hps_io_usb1_inst_STP     (hps_0_hps_io_hps_io_usb1_inst_STP),             \n\t\t.hps_io_usb1_inst_DIR     (hps_0_hps_io_hps_io_usb1_inst_DIR),             \n\t\t.hps_io_usb1_inst_NXT     (hps_0_hps_io_hps_io_usb1_inst_NXT),             \n\t\t.hps_io_spim1_inst_CLK    (hps_0_hps_io_hps_io_spim1_inst_CLK),            \n\t\t.hps_io_spim1_inst_MOSI   (hps_0_hps_io_hps_io_spim1_inst_MOSI),           \n\t\t.hps_io_spim1_inst_MISO   (hps_0_hps_io_hps_io_spim1_inst_MISO),           \n\t\t.hps_io_spim1_inst_SS0    (hps_0_hps_io_hps_io_spim1_inst_SS0),            \n\t\t.hps_io_uart0_inst_RX     (hps_0_hps_io_hps_io_uart0_inst_RX),             \n\t\t.hps_io_uart0_inst_TX     (hps_0_hps_io_hps_io_uart0_inst_TX),             \n\t\t.hps_io_i2c0_inst_SDA     (hps_0_hps_io_hps_io_i2c0_inst_SDA),             \n\t\t.hps_io_i2c0_inst_SCL     (hps_0_hps_io_hps_io_i2c0_inst_SCL),             \n\t\t.hps_io_i2c1_inst_SDA     (hps_0_hps_io_hps_io_i2c1_inst_SDA),             \n\t\t.hps_io_i2c1_inst_SCL     (hps_0_hps_io_hps_io_i2c1_inst_SCL),             \n\t\t.hps_io_gpio_inst_GPIO09  (hps_0_hps_io_hps_io_gpio_inst_GPIO09),          \n\t\t.hps_io_gpio_inst_GPIO35  (hps_0_hps_io_hps_io_gpio_inst_GPIO35),          \n\t\t.hps_io_gpio_inst_GPIO40  (hps_0_hps_io_hps_io_gpio_inst_GPIO40),          \n\t\t.hps_io_gpio_inst_GPIO41  (hps_0_hps_io_hps_io_gpio_inst_GPIO41),          \n\t\t.hps_io_gpio_inst_GPIO48  (hps_0_hps_io_hps_io_gpio_inst_GPIO48),          \n\t\t.hps_io_gpio_inst_GPIO53  (hps_0_hps_io_hps_io_gpio_inst_GPIO53),          \n\t\t.hps_io_gpio_inst_GPIO54  (hps_0_hps_io_hps_io_gpio_inst_GPIO54),          \n\t\t.hps_io_gpio_inst_GPIO61  (hps_0_hps_io_hps_io_gpio_inst_GPIO61),          \n\t\t.h2f_rst_n                (hps_0_h2f_reset_reset_n),                       \n\t\t.h2f_axi_clk              (clk_clk),                                       \n\t\t.h2f_AWID                 (hps_0_h2f_axi_master_awid),                     \n\t\t.h2f_AWADDR               (hps_0_h2f_axi_master_awaddr),                   \n\t\t.h2f_AWLEN                (hps_0_h2f_axi_master_awlen),                    \n\t\t.h2f_AWSIZE               (hps_0_h2f_axi_master_awsize),                   \n\t\t.h2f_AWBURST              (hps_0_h2f_axi_master_awburst),                  \n\t\t.h2f_AWLOCK               (hps_0_h2f_axi_master_awlock),                   \n\t\t.h2f_AWCACHE              (hps_0_h2f_axi_master_awcache),                  \n\t\t.h2f_AWPROT               (hps_0_h2f_axi_master_awprot),                   \n\t\t.h2f_AWVALID              (hps_0_h2f_axi_master_awvalid),                  \n\t\t.h2f_AWREADY              (hps_0_h2f_axi_master_awready),                  \n\t\t.h2f_WID                  (hps_0_h2f_axi_master_wid),                      \n\t\t.h2f_WDATA                (hps_0_h2f_axi_master_wdata),                    \n\t\t.h2f_WSTRB                (hps_0_h2f_axi_master_wstrb),                    \n\t\t.h2f_WLAST                (hps_0_h2f_axi_master_wlast),                    \n\t\t.h2f_WVALID               (hps_0_h2f_axi_master_wvalid),                   \n\t\t.h2f_WREADY               (hps_0_h2f_axi_master_wready),                   \n\t\t.h2f_BID                  (hps_0_h2f_axi_master_bid),                      \n\t\t.h2f_BRESP                (hps_0_h2f_axi_master_bresp),                    \n\t\t.h2f_BVALID               (hps_0_h2f_axi_master_bvalid),                   \n\t\t.h2f_BREADY               (hps_0_h2f_axi_master_bready),                   \n\t\t.h2f_ARID                 (hps_0_h2f_axi_master_arid),                     \n\t\t.h2f_ARADDR               (hps_0_h2f_axi_master_araddr),                   \n\t\t.h2f_ARLEN                (hps_0_h2f_axi_master_arlen),                    \n\t\t.h2f_ARSIZE               (hps_0_h2f_axi_master_arsize),                   \n\t\t.h2f_ARBURST              (hps_0_h2f_axi_master_arburst),                  \n\t\t.h2f_ARLOCK               (hps_0_h2f_axi_master_arlock),                   \n\t\t.h2f_ARCACHE              (hps_0_h2f_axi_master_arcache),                  \n\t\t.h2f_ARPROT               (hps_0_h2f_axi_master_arprot),                   \n\t\t.h2f_ARVALID              (hps_0_h2f_axi_master_arvalid),                  \n\t\t.h2f_ARREADY              (hps_0_h2f_axi_master_arready),                  \n\t\t.h2f_RID                  (hps_0_h2f_axi_master_rid),                      \n\t\t.h2f_RDATA                (hps_0_h2f_axi_master_rdata),                    \n\t\t.h2f_RRESP                (hps_0_h2f_axi_master_rresp),                    \n\t\t.h2f_RLAST                (hps_0_h2f_axi_master_rlast),                    \n\t\t.h2f_RVALID               (hps_0_h2f_axi_master_rvalid),                   \n\t\t.h2f_RREADY               (hps_0_h2f_axi_master_rready),                   \n\t\t.f2h_axi_clk              (clk_clk),                                       \n\t\t.f2h_AWID                 (mm_interconnect_1_hps_0_f2h_axi_slave_awid),    \n\t\t.f2h_AWADDR               (mm_interconnect_1_hps_0_f2h_axi_slave_awaddr),  \n\t\t.f2h_AWLEN                (mm_interconnect_1_hps_0_f2h_axi_slave_awlen),   \n\t\t.f2h_AWSIZE               (mm_interconnect_1_hps_0_f2h_axi_slave_awsize),  \n\t\t.f2h_AWBURST              (mm_interconnect_1_hps_0_f2h_axi_slave_awburst), \n\t\t.f2h_AWLOCK               (mm_interconnect_1_hps_0_f2h_axi_slave_awlock),  \n\t\t.f2h_AWCACHE              (mm_interconnect_1_hps_0_f2h_axi_slave_awcache), \n\t\t.f2h_AWPROT               (mm_interconnect_1_hps_0_f2h_axi_slave_awprot),  \n\t\t.f2h_AWVALID              (mm_interconnect_1_hps_0_f2h_axi_slave_awvalid), \n\t\t.f2h_AWREADY              (mm_interconnect_1_hps_0_f2h_axi_slave_awready), \n\t\t.f2h_AWUSER               (mm_interconnect_1_hps_0_f2h_axi_slave_awuser),  \n\t\t.f2h_WID                  (mm_interconnect_1_hps_0_f2h_axi_slave_wid),     \n\t\t.f2h_WDATA                (mm_interconnect_1_hps_0_f2h_axi_slave_wdata),   \n\t\t.f2h_WSTRB                (mm_interconnect_1_hps_0_f2h_axi_slave_wstrb),   \n\t\t.f2h_WLAST                (mm_interconnect_1_hps_0_f2h_axi_slave_wlast),   \n\t\t.f2h_WVALID               (mm_interconnect_1_hps_0_f2h_axi_slave_wvalid),  \n\t\t.f2h_WREADY               (mm_interconnect_1_hps_0_f2h_axi_slave_wready),  \n\t\t.f2h_BID                  (mm_interconnect_1_hps_0_f2h_axi_slave_bid),     \n\t\t.f2h_BRESP                (mm_interconnect_1_hps_0_f2h_axi_slave_bresp),   \n\t\t.f2h_BVALID               (mm_interconnect_1_hps_0_f2h_axi_slave_bvalid),  \n\t\t.f2h_BREADY               (mm_interconnect_1_hps_0_f2h_axi_slave_bready),  \n\t\t.f2h_ARID                 (mm_interconnect_1_hps_0_f2h_axi_slave_arid),    \n\t\t.f2h_ARADDR               (mm_interconnect_1_hps_0_f2h_axi_slave_araddr),  \n\t\t.f2h_ARLEN                (mm_interconnect_1_hps_0_f2h_axi_slave_arlen),   \n\t\t.f2h_ARSIZE               (mm_interconnect_1_hps_0_f2h_axi_slave_arsize),  \n\t\t.f2h_ARBURST              (mm_interconnect_1_hps_0_f2h_axi_slave_arburst), \n\t\t.f2h_ARLOCK               (mm_interconnect_1_hps_0_f2h_axi_slave_arlock),  \n\t\t.f2h_ARCACHE              (mm_interconnect_1_hps_0_f2h_axi_slave_arcache), \n\t\t.f2h_ARPROT               (mm_interconnect_1_hps_0_f2h_axi_slave_arprot),  \n\t\t.f2h_ARVALID              (mm_interconnect_1_hps_0_f2h_axi_slave_arvalid), \n\t\t.f2h_ARREADY              (mm_interconnect_1_hps_0_f2h_axi_slave_arready), \n\t\t.f2h_ARUSER               (mm_interconnect_1_hps_0_f2h_axi_slave_aruser),  \n\t\t.f2h_RID                  (mm_interconnect_1_hps_0_f2h_axi_slave_rid),     \n\t\t.f2h_RDATA                (mm_interconnect_1_hps_0_f2h_axi_slave_rdata),   \n\t\t.f2h_RRESP                (mm_interconnect_1_hps_0_f2h_axi_slave_rresp),   \n\t\t.f2h_RLAST                (mm_interconnect_1_hps_0_f2h_axi_slave_rlast),   \n\t\t.f2h_RVALID               (mm_interconnect_1_hps_0_f2h_axi_slave_rvalid),  \n\t\t.f2h_RREADY               (mm_interconnect_1_hps_0_f2h_axi_slave_rready),  \n\t\t.h2f_lw_axi_clk           (clk_clk),                                       \n\t\t.h2f_lw_AWID              (hps_0_h2f_lw_axi_master_awid),                  \n\t\t.h2f_lw_AWADDR            (hps_0_h2f_lw_axi_master_awaddr),                \n\t\t.h2f_lw_AWLEN             (hps_0_h2f_lw_axi_master_awlen),                 \n\t\t.h2f_lw_AWSIZE            (hps_0_h2f_lw_axi_master_awsize),                \n\t\t.h2f_lw_AWBURST           (hps_0_h2f_lw_axi_master_awburst),               \n\t\t.h2f_lw_AWLOCK            (hps_0_h2f_lw_axi_master_awlock),                \n\t\t.h2f_lw_AWCACHE           (hps_0_h2f_lw_axi_master_awcache),               \n\t\t.h2f_lw_AWPROT            (hps_0_h2f_lw_axi_master_awprot),                \n\t\t.h2f_lw_AWVALID           (hps_0_h2f_lw_axi_master_awvalid),               \n\t\t.h2f_lw_AWREADY           (hps_0_h2f_lw_axi_master_awready),               \n\t\t.h2f_lw_WID               (hps_0_h2f_lw_axi_master_wid),                   \n\t\t.h2f_lw_WDATA             (hps_0_h2f_lw_axi_master_wdata),                 \n\t\t.h2f_lw_WSTRB             (hps_0_h2f_lw_axi_master_wstrb),                 \n\t\t.h2f_lw_WLAST             (hps_0_h2f_lw_axi_master_wlast),                 \n\t\t.h2f_lw_WVALID            (hps_0_h2f_lw_axi_master_wvalid),                \n\t\t.h2f_lw_WREADY            (hps_0_h2f_lw_axi_master_wready),                \n\t\t.h2f_lw_BID               (hps_0_h2f_lw_axi_master_bid),                   \n\t\t.h2f_lw_BRESP             (hps_0_h2f_lw_axi_master_bresp),                 \n\t\t.h2f_lw_BVALID            (hps_0_h2f_lw_axi_master_bvalid),                \n\t\t.h2f_lw_BREADY            (hps_0_h2f_lw_axi_master_bready),                \n\t\t.h2f_lw_ARID              (hps_0_h2f_lw_axi_master_arid),                  \n\t\t.h2f_lw_ARADDR            (hps_0_h2f_lw_axi_master_araddr),                \n\t\t.h2f_lw_ARLEN             (hps_0_h2f_lw_axi_master_arlen),                 \n\t\t.h2f_lw_ARSIZE            (hps_0_h2f_lw_axi_master_arsize),                \n\t\t.h2f_lw_ARBURST           (hps_0_h2f_lw_axi_master_arburst),               \n\t\t.h2f_lw_ARLOCK            (hps_0_h2f_lw_axi_master_arlock),                \n\t\t.h2f_lw_ARCACHE           (hps_0_h2f_lw_axi_master_arcache),               \n\t\t.h2f_lw_ARPROT            (hps_0_h2f_lw_axi_master_arprot),                \n\t\t.h2f_lw_ARVALID           (hps_0_h2f_lw_axi_master_arvalid),               \n\t\t.h2f_lw_ARREADY           (hps_0_h2f_lw_axi_master_arready),               \n\t\t.h2f_lw_RID               (hps_0_h2f_lw_axi_master_rid),                   \n\t\t.h2f_lw_RDATA             (hps_0_h2f_lw_axi_master_rdata),                 \n\t\t.h2f_lw_RRESP             (hps_0_h2f_lw_axi_master_rresp),                 \n\t\t.h2f_lw_RLAST             (hps_0_h2f_lw_axi_master_rlast),                 \n\t\t.h2f_lw_RVALID            (hps_0_h2f_lw_axi_master_rvalid),                \n\t\t.h2f_lw_RREADY            (hps_0_h2f_lw_axi_master_rready),                \n\t\t.f2h_irq_p0               (hps_0_f2h_irq0_irq),                            \n\t\t.f2h_irq_p1               (hps_0_f2h_irq1_irq)                             \n\t);\n\n\tsoc_system_onchip_memory2_0 onchip_memory2_0 (\n\t\t.clk        (clk_clk),                                          \n\t\t.address    (mm_interconnect_0_onchip_memory2_0_s1_address),    \n\t\t.clken      (mm_interconnect_0_onchip_memory2_0_s1_clken),      \n\t\t.chipselect (mm_interconnect_0_onchip_memory2_0_s1_chipselect), \n\t\t.write      (mm_interconnect_0_onchip_memory2_0_s1_write),      \n\t\t.readdata   (mm_interconnect_0_onchip_memory2_0_s1_readdata),   \n\t\t.writedata  (mm_interconnect_0_onchip_memory2_0_s1_writedata),  \n\t\t.byteenable (mm_interconnect_0_onchip_memory2_0_s1_byteenable), \n\t\t.reset      (rst_controller_reset_out_reset),                   \n\t\t.reset_req  (rst_controller_reset_out_reset_req)                \n\t);\n\n\tsoc_system_hps_only_master #(\n\t\t.USE_PLI     (0),\n\t\t.PLI_PORT    (50000),\n\t\t.FIFO_DEPTHS (2)\n\t) hps_only_master (\n\t\t.clk_clk              (clk_clk),                              \n\t\t.clk_reset_reset      (~reset_reset_n),                       \n\t\t.master_address       (hps_only_master_master_address),       \n\t\t.master_readdata      (hps_only_master_master_readdata),      \n\t\t.master_read          (hps_only_master_master_read),          \n\t\t.master_write         (hps_only_master_master_write),         \n\t\t.master_writedata     (hps_only_master_master_writedata),     \n\t\t.master_waitrequest   (hps_only_master_master_waitrequest),   \n\t\t.master_readdatavalid (hps_only_master_master_readdatavalid), \n\t\t.master_byteenable    (hps_only_master_master_byteenable),    \n\t\t.master_reset_reset   ()                                      \n\t);\n\n\tsoc_system_sysid_qsys sysid_qsys (\n\t\t.clock    (clk_clk),                                             \n\t\t.reset_n  (~rst_controller_reset_out_reset),                     \n\t\t.readdata (mm_interconnect_0_sysid_qsys_control_slave_readdata), \n\t\t.address  (mm_interconnect_0_sysid_qsys_control_slave_address)   \n\t);\n\n\tsoc_system_hps_only_master #(\n\t\t.USE_PLI     (0),\n\t\t.PLI_PORT    (50000),\n\t\t.FIFO_DEPTHS (2)\n\t) fpga_only_master (\n\t\t.clk_clk              (clk_clk),                               \n\t\t.clk_reset_reset      (~reset_reset_n),                        \n\t\t.master_address       (fpga_only_master_master_address),       \n\t\t.master_readdata      (fpga_only_master_master_readdata),      \n\t\t.master_read          (fpga_only_master_master_read),          \n\t\t.master_write         (fpga_only_master_master_write),         \n\t\t.master_writedata     (fpga_only_master_master_writedata),     \n\t\t.master_waitrequest   (fpga_only_master_master_waitrequest),   \n\t\t.master_readdatavalid (fpga_only_master_master_readdatavalid), \n\t\t.master_byteenable    (fpga_only_master_master_byteenable),    \n\t\t.master_reset_reset   ()                                       \n\t);\n\n\tsoc_system_jtag_uart jtag_uart (\n\t\t.clk            (clk_clk),                                                   \n\t\t.rst_n          (~rst_controller_reset_out_reset),                           \n\t\t.av_chipselect  (mm_interconnect_0_jtag_uart_avalon_jtag_slave_chipselect),  \n\t\t.av_address     (mm_interconnect_0_jtag_uart_avalon_jtag_slave_address),     \n\t\t.av_read_n      (~mm_interconnect_0_jtag_uart_avalon_jtag_slave_read),       \n\t\t.av_readdata    (mm_interconnect_0_jtag_uart_avalon_jtag_slave_readdata),    \n\t\t.av_write_n     (~mm_interconnect_0_jtag_uart_avalon_jtag_slave_write),      \n\t\t.av_writedata   (mm_interconnect_0_jtag_uart_avalon_jtag_slave_writedata),   \n\t\t.av_waitrequest (mm_interconnect_0_jtag_uart_avalon_jtag_slave_waitrequest), \n\t\t.av_irq         (irq_mapper_receiver0_irq)                                   \n\t);\n\n\tintr_capturer #(\n\t\t.NUM_INTR (32)\n\t) intr_capturer_0 (\n\t\t.clk          (clk_clk),                                                   \n\t\t.rst_n        (~rst_controller_reset_out_reset),                           \n\t\t.addr         (mm_interconnect_0_intr_capturer_0_avalon_slave_0_address),  \n\t\t.read         (mm_interconnect_0_intr_capturer_0_avalon_slave_0_read),     \n\t\t.rddata       (mm_interconnect_0_intr_capturer_0_avalon_slave_0_readdata), \n\t\t.interrupt_in (intr_capturer_0_interrupt_receiver_irq)                     \n\t);\n\n\tsoc_system_pio_led pio_led (\n\t\t.clk        (clk_clk),                                 \n\t\t.reset_n    (~rst_controller_reset_out_reset),         \n\t\t.address    (mm_interconnect_0_pio_led_s1_address),    \n\t\t.write_n    (~mm_interconnect_0_pio_led_s1_write),     \n\t\t.writedata  (mm_interconnect_0_pio_led_s1_writedata),  \n\t\t.chipselect (mm_interconnect_0_pio_led_s1_chipselect), \n\t\t.readdata   (mm_interconnect_0_pio_led_s1_readdata),   \n\t\t.out_port   (pio_led_external_connection_export)       \n\t);\n\n\tsoc_system_mm_interconnect_0 mm_interconnect_0 (\n\t\t.hps_0_h2f_axi_master_awid                                        (hps_0_h2f_axi_master_awid),                                 \n\t\t.hps_0_h2f_axi_master_awaddr                                      (hps_0_h2f_axi_master_awaddr),                               \n\t\t.hps_0_h2f_axi_master_awlen                                       (hps_0_h2f_axi_master_awlen),                                \n\t\t.hps_0_h2f_axi_master_awsize                                      (hps_0_h2f_axi_master_awsize),                               \n\t\t.hps_0_h2f_axi_master_awburst                                     (hps_0_h2f_axi_master_awburst),                              \n\t\t.hps_0_h2f_axi_master_awlock                                      (hps_0_h2f_axi_master_awlock),                               \n\t\t.hps_0_h2f_axi_master_awcache                                     (hps_0_h2f_axi_master_awcache),                              \n\t\t.hps_0_h2f_axi_master_awprot                                      (hps_0_h2f_axi_master_awprot),                               \n\t\t.hps_0_h2f_axi_master_awvalid                                     (hps_0_h2f_axi_master_awvalid),                              \n\t\t.hps_0_h2f_axi_master_awready                                     (hps_0_h2f_axi_master_awready),                              \n\t\t.hps_0_h2f_axi_master_wid                                         (hps_0_h2f_axi_master_wid),                                  \n\t\t.hps_0_h2f_axi_master_wdata                                       (hps_0_h2f_axi_master_wdata),                                \n\t\t.hps_0_h2f_axi_master_wstrb                                       (hps_0_h2f_axi_master_wstrb),                                \n\t\t.hps_0_h2f_axi_master_wlast                                       (hps_0_h2f_axi_master_wlast),                                \n\t\t.hps_0_h2f_axi_master_wvalid                                      (hps_0_h2f_axi_master_wvalid),                               \n\t\t.hps_0_h2f_axi_master_wready                                      (hps_0_h2f_axi_master_wready),                               \n\t\t.hps_0_h2f_axi_master_bid                                         (hps_0_h2f_axi_master_bid),                                  \n\t\t.hps_0_h2f_axi_master_bresp                                       (hps_0_h2f_axi_master_bresp),                                \n\t\t.hps_0_h2f_axi_master_bvalid                                      (hps_0_h2f_axi_master_bvalid),                               \n\t\t.hps_0_h2f_axi_master_bready                                      (hps_0_h2f_axi_master_bready),                               \n\t\t.hps_0_h2f_axi_master_arid                                        (hps_0_h2f_axi_master_arid),                                 \n\t\t.hps_0_h2f_axi_master_araddr                                      (hps_0_h2f_axi_master_araddr),                               \n\t\t.hps_0_h2f_axi_master_arlen                                       (hps_0_h2f_axi_master_arlen),                                \n\t\t.hps_0_h2f_axi_master_arsize                                      (hps_0_h2f_axi_master_arsize),                               \n\t\t.hps_0_h2f_axi_master_arburst                                     (hps_0_h2f_axi_master_arburst),                              \n\t\t.hps_0_h2f_axi_master_arlock                                      (hps_0_h2f_axi_master_arlock),                               \n\t\t.hps_0_h2f_axi_master_arcache                                     (hps_0_h2f_axi_master_arcache),                              \n\t\t.hps_0_h2f_axi_master_arprot                                      (hps_0_h2f_axi_master_arprot),                               \n\t\t.hps_0_h2f_axi_master_arvalid                                     (hps_0_h2f_axi_master_arvalid),                              \n\t\t.hps_0_h2f_axi_master_arready                                     (hps_0_h2f_axi_master_arready),                              \n\t\t.hps_0_h2f_axi_master_rid                                         (hps_0_h2f_axi_master_rid),                                  \n\t\t.hps_0_h2f_axi_master_rdata                                       (hps_0_h2f_axi_master_rdata),                                \n\t\t.hps_0_h2f_axi_master_rresp                                       (hps_0_h2f_axi_master_rresp),                                \n\t\t.hps_0_h2f_axi_master_rlast                                       (hps_0_h2f_axi_master_rlast),                                \n\t\t.hps_0_h2f_axi_master_rvalid                                      (hps_0_h2f_axi_master_rvalid),                               \n\t\t.hps_0_h2f_axi_master_rready                                      (hps_0_h2f_axi_master_rready),                               \n\t\t.hps_0_h2f_lw_axi_master_awid                                     (hps_0_h2f_lw_axi_master_awid),                              \n\t\t.hps_0_h2f_lw_axi_master_awaddr                                   (hps_0_h2f_lw_axi_master_awaddr),                            \n\t\t.hps_0_h2f_lw_axi_master_awlen                                    (hps_0_h2f_lw_axi_master_awlen),                             \n\t\t.hps_0_h2f_lw_axi_master_awsize                                   (hps_0_h2f_lw_axi_master_awsize),                            \n\t\t.hps_0_h2f_lw_axi_master_awburst                                  (hps_0_h2f_lw_axi_master_awburst),                           \n\t\t.hps_0_h2f_lw_axi_master_awlock                                   (hps_0_h2f_lw_axi_master_awlock),                            \n\t\t.hps_0_h2f_lw_axi_master_awcache                                  (hps_0_h2f_lw_axi_master_awcache),                           \n\t\t.hps_0_h2f_lw_axi_master_awprot                                   (hps_0_h2f_lw_axi_master_awprot),                            \n\t\t.hps_0_h2f_lw_axi_master_awvalid                                  (hps_0_h2f_lw_axi_master_awvalid),                           \n\t\t.hps_0_h2f_lw_axi_master_awready                                  (hps_0_h2f_lw_axi_master_awready),                           \n\t\t.hps_0_h2f_lw_axi_master_wid                                      (hps_0_h2f_lw_axi_master_wid),                               \n\t\t.hps_0_h2f_lw_axi_master_wdata                                    (hps_0_h2f_lw_axi_master_wdata),                             \n\t\t.hps_0_h2f_lw_axi_master_wstrb                                    (hps_0_h2f_lw_axi_master_wstrb),                             \n\t\t.hps_0_h2f_lw_axi_master_wlast                                    (hps_0_h2f_lw_axi_master_wlast),                             \n\t\t.hps_0_h2f_lw_axi_master_wvalid                                   (hps_0_h2f_lw_axi_master_wvalid),                            \n\t\t.hps_0_h2f_lw_axi_master_wready                                   (hps_0_h2f_lw_axi_master_wready),                            \n\t\t.hps_0_h2f_lw_axi_master_bid                                      (hps_0_h2f_lw_axi_master_bid),                               \n\t\t.hps_0_h2f_lw_axi_master_bresp                                    (hps_0_h2f_lw_axi_master_bresp),                             \n\t\t.hps_0_h2f_lw_axi_master_bvalid                                   (hps_0_h2f_lw_axi_master_bvalid),                            \n\t\t.hps_0_h2f_lw_axi_master_bready                                   (hps_0_h2f_lw_axi_master_bready),                            \n\t\t.hps_0_h2f_lw_axi_master_arid                                     (hps_0_h2f_lw_axi_master_arid),                              \n\t\t.hps_0_h2f_lw_axi_master_araddr                                   (hps_0_h2f_lw_axi_master_araddr),                            \n\t\t.hps_0_h2f_lw_axi_master_arlen                                    (hps_0_h2f_lw_axi_master_arlen),                             \n\t\t.hps_0_h2f_lw_axi_master_arsize                                   (hps_0_h2f_lw_axi_master_arsize),                            \n\t\t.hps_0_h2f_lw_axi_master_arburst                                  (hps_0_h2f_lw_axi_master_arburst),                           \n\t\t.hps_0_h2f_lw_axi_master_arlock                                   (hps_0_h2f_lw_axi_master_arlock),                            \n\t\t.hps_0_h2f_lw_axi_master_arcache                                  (hps_0_h2f_lw_axi_master_arcache),                           \n\t\t.hps_0_h2f_lw_axi_master_arprot                                   (hps_0_h2f_lw_axi_master_arprot),                            \n\t\t.hps_0_h2f_lw_axi_master_arvalid                                  (hps_0_h2f_lw_axi_master_arvalid),                           \n\t\t.hps_0_h2f_lw_axi_master_arready                                  (hps_0_h2f_lw_axi_master_arready),                           \n\t\t.hps_0_h2f_lw_axi_master_rid                                      (hps_0_h2f_lw_axi_master_rid),                               \n\t\t.hps_0_h2f_lw_axi_master_rdata                                    (hps_0_h2f_lw_axi_master_rdata),                             \n\t\t.hps_0_h2f_lw_axi_master_rresp                                    (hps_0_h2f_lw_axi_master_rresp),                             \n\t\t.hps_0_h2f_lw_axi_master_rlast                                    (hps_0_h2f_lw_axi_master_rlast),                             \n\t\t.hps_0_h2f_lw_axi_master_rvalid                                   (hps_0_h2f_lw_axi_master_rvalid),                            \n\t\t.hps_0_h2f_lw_axi_master_rready                                   (hps_0_h2f_lw_axi_master_rready),                            \n\t\t.clk_0_clk_clk                                                    (clk_clk),                                                   \n\t\t.fpga_only_master_clk_reset_reset_bridge_in_reset_reset           (rst_controller_reset_out_reset),                            \n\t\t.hps_0_h2f_axi_master_agent_clk_reset_reset_bridge_in_reset_reset (rst_controller_001_reset_out_reset),                        \n\t\t.onchip_memory2_0_reset1_reset_bridge_in_reset_reset              (rst_controller_reset_out_reset),                            \n\t\t.fpga_only_master_master_address                                  (fpga_only_master_master_address),                           \n\t\t.fpga_only_master_master_waitrequest                              (fpga_only_master_master_waitrequest),                       \n\t\t.fpga_only_master_master_byteenable                               (fpga_only_master_master_byteenable),                        \n\t\t.fpga_only_master_master_read                                     (fpga_only_master_master_read),                              \n\t\t.fpga_only_master_master_readdata                                 (fpga_only_master_master_readdata),                          \n\t\t.fpga_only_master_master_readdatavalid                            (fpga_only_master_master_readdatavalid),                     \n\t\t.fpga_only_master_master_write                                    (fpga_only_master_master_write),                             \n\t\t.fpga_only_master_master_writedata                                (fpga_only_master_master_writedata),                         \n\t\t.intr_capturer_0_avalon_slave_0_address                           (mm_interconnect_0_intr_capturer_0_avalon_slave_0_address),  \n\t\t.intr_capturer_0_avalon_slave_0_read                              (mm_interconnect_0_intr_capturer_0_avalon_slave_0_read),     \n\t\t.intr_capturer_0_avalon_slave_0_readdata                          (mm_interconnect_0_intr_capturer_0_avalon_slave_0_readdata), \n\t\t.jtag_uart_avalon_jtag_slave_address                              (mm_interconnect_0_jtag_uart_avalon_jtag_slave_address),     \n\t\t.jtag_uart_avalon_jtag_slave_write                                (mm_interconnect_0_jtag_uart_avalon_jtag_slave_write),       \n\t\t.jtag_uart_avalon_jtag_slave_read                                 (mm_interconnect_0_jtag_uart_avalon_jtag_slave_read),        \n\t\t.jtag_uart_avalon_jtag_slave_readdata                             (mm_interconnect_0_jtag_uart_avalon_jtag_slave_readdata),    \n\t\t.jtag_uart_avalon_jtag_slave_writedata                            (mm_interconnect_0_jtag_uart_avalon_jtag_slave_writedata),   \n\t\t.jtag_uart_avalon_jtag_slave_waitrequest                          (mm_interconnect_0_jtag_uart_avalon_jtag_slave_waitrequest), \n\t\t.jtag_uart_avalon_jtag_slave_chipselect                           (mm_interconnect_0_jtag_uart_avalon_jtag_slave_chipselect),  \n\t\t.onchip_memory2_0_s1_address                                      (mm_interconnect_0_onchip_memory2_0_s1_address),             \n\t\t.onchip_memory2_0_s1_write                                        (mm_interconnect_0_onchip_memory2_0_s1_write),               \n\t\t.onchip_memory2_0_s1_readdata                                     (mm_interconnect_0_onchip_memory2_0_s1_readdata),            \n\t\t.onchip_memory2_0_s1_writedata                                    (mm_interconnect_0_onchip_memory2_0_s1_writedata),           \n\t\t.onchip_memory2_0_s1_byteenable                                   (mm_interconnect_0_onchip_memory2_0_s1_byteenable),          \n\t\t.onchip_memory2_0_s1_chipselect                                   (mm_interconnect_0_onchip_memory2_0_s1_chipselect),          \n\t\t.onchip_memory2_0_s1_clken                                        (mm_interconnect_0_onchip_memory2_0_s1_clken),               \n\t\t.pio_led_s1_address                                               (mm_interconnect_0_pio_led_s1_address),                      \n\t\t.pio_led_s1_write                                                 (mm_interconnect_0_pio_led_s1_write),                        \n\t\t.pio_led_s1_readdata                                              (mm_interconnect_0_pio_led_s1_readdata),                     \n\t\t.pio_led_s1_writedata                                             (mm_interconnect_0_pio_led_s1_writedata),                    \n\t\t.pio_led_s1_chipselect                                            (mm_interconnect_0_pio_led_s1_chipselect),                   \n\t\t.sysid_qsys_control_slave_address                                 (mm_interconnect_0_sysid_qsys_control_slave_address),        \n\t\t.sysid_qsys_control_slave_readdata                                (mm_interconnect_0_sysid_qsys_control_slave_readdata)        \n\t);\n\n\tsoc_system_mm_interconnect_1 mm_interconnect_1 (\n\t\t.hps_0_f2h_axi_slave_awid                                            (mm_interconnect_1_hps_0_f2h_axi_slave_awid),    \n\t\t.hps_0_f2h_axi_slave_awaddr                                          (mm_interconnect_1_hps_0_f2h_axi_slave_awaddr),  \n\t\t.hps_0_f2h_axi_slave_awlen                                           (mm_interconnect_1_hps_0_f2h_axi_slave_awlen),   \n\t\t.hps_0_f2h_axi_slave_awsize                                          (mm_interconnect_1_hps_0_f2h_axi_slave_awsize),  \n\t\t.hps_0_f2h_axi_slave_awburst                                         (mm_interconnect_1_hps_0_f2h_axi_slave_awburst), \n\t\t.hps_0_f2h_axi_slave_awlock                                          (mm_interconnect_1_hps_0_f2h_axi_slave_awlock),  \n\t\t.hps_0_f2h_axi_slave_awcache                                         (mm_interconnect_1_hps_0_f2h_axi_slave_awcache), \n\t\t.hps_0_f2h_axi_slave_awprot                                          (mm_interconnect_1_hps_0_f2h_axi_slave_awprot),  \n\t\t.hps_0_f2h_axi_slave_awuser                                          (mm_interconnect_1_hps_0_f2h_axi_slave_awuser),  \n\t\t.hps_0_f2h_axi_slave_awvalid                                         (mm_interconnect_1_hps_0_f2h_axi_slave_awvalid), \n\t\t.hps_0_f2h_axi_slave_awready                                         (mm_interconnect_1_hps_0_f2h_axi_slave_awready), \n\t\t.hps_0_f2h_axi_slave_wid                                             (mm_interconnect_1_hps_0_f2h_axi_slave_wid),     \n\t\t.hps_0_f2h_axi_slave_wdata                                           (mm_interconnect_1_hps_0_f2h_axi_slave_wdata),   \n\t\t.hps_0_f2h_axi_slave_wstrb                                           (mm_interconnect_1_hps_0_f2h_axi_slave_wstrb),   \n\t\t.hps_0_f2h_axi_slave_wlast                                           (mm_interconnect_1_hps_0_f2h_axi_slave_wlast),   \n\t\t.hps_0_f2h_axi_slave_wvalid                                          (mm_interconnect_1_hps_0_f2h_axi_slave_wvalid),  \n\t\t.hps_0_f2h_axi_slave_wready                                          (mm_interconnect_1_hps_0_f2h_axi_slave_wready),  \n\t\t.hps_0_f2h_axi_slave_bid                                             (mm_interconnect_1_hps_0_f2h_axi_slave_bid),     \n\t\t.hps_0_f2h_axi_slave_bresp                                           (mm_interconnect_1_hps_0_f2h_axi_slave_bresp),   \n\t\t.hps_0_f2h_axi_slave_bvalid                                          (mm_interconnect_1_hps_0_f2h_axi_slave_bvalid),  \n\t\t.hps_0_f2h_axi_slave_bready                                          (mm_interconnect_1_hps_0_f2h_axi_slave_bready),  \n\t\t.hps_0_f2h_axi_slave_arid                                            (mm_interconnect_1_hps_0_f2h_axi_slave_arid),    \n\t\t.hps_0_f2h_axi_slave_araddr                                          (mm_interconnect_1_hps_0_f2h_axi_slave_araddr),  \n\t\t.hps_0_f2h_axi_slave_arlen                                           (mm_interconnect_1_hps_0_f2h_axi_slave_arlen),   \n\t\t.hps_0_f2h_axi_slave_arsize                                          (mm_interconnect_1_hps_0_f2h_axi_slave_arsize),  \n\t\t.hps_0_f2h_axi_slave_arburst                                         (mm_interconnect_1_hps_0_f2h_axi_slave_arburst), \n\t\t.hps_0_f2h_axi_slave_arlock                                          (mm_interconnect_1_hps_0_f2h_axi_slave_arlock),  \n\t\t.hps_0_f2h_axi_slave_arcache                                         (mm_interconnect_1_hps_0_f2h_axi_slave_arcache), \n\t\t.hps_0_f2h_axi_slave_arprot                                          (mm_interconnect_1_hps_0_f2h_axi_slave_arprot),  \n\t\t.hps_0_f2h_axi_slave_aruser                                          (mm_interconnect_1_hps_0_f2h_axi_slave_aruser),  \n\t\t.hps_0_f2h_axi_slave_arvalid                                         (mm_interconnect_1_hps_0_f2h_axi_slave_arvalid), \n\t\t.hps_0_f2h_axi_slave_arready                                         (mm_interconnect_1_hps_0_f2h_axi_slave_arready), \n\t\t.hps_0_f2h_axi_slave_rid                                             (mm_interconnect_1_hps_0_f2h_axi_slave_rid),     \n\t\t.hps_0_f2h_axi_slave_rdata                                           (mm_interconnect_1_hps_0_f2h_axi_slave_rdata),   \n\t\t.hps_0_f2h_axi_slave_rresp                                           (mm_interconnect_1_hps_0_f2h_axi_slave_rresp),   \n\t\t.hps_0_f2h_axi_slave_rlast                                           (mm_interconnect_1_hps_0_f2h_axi_slave_rlast),   \n\t\t.hps_0_f2h_axi_slave_rvalid                                          (mm_interconnect_1_hps_0_f2h_axi_slave_rvalid),  \n\t\t.hps_0_f2h_axi_slave_rready                                          (mm_interconnect_1_hps_0_f2h_axi_slave_rready),  \n\t\t.clk_0_clk_clk                                                       (clk_clk),                                       \n\t\t.hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset    (rst_controller_001_reset_out_reset),            \n\t\t.hps_only_master_clk_reset_reset_bridge_in_reset_reset               (rst_controller_reset_out_reset),                \n\t\t.hps_only_master_master_translator_reset_reset_bridge_in_reset_reset (rst_controller_reset_out_reset),                \n\t\t.hps_only_master_master_address                                      (hps_only_master_master_address),                \n\t\t.hps_only_master_master_waitrequest                                  (hps_only_master_master_waitrequest),            \n\t\t.hps_only_master_master_byteenable                                   (hps_only_master_master_byteenable),             \n\t\t.hps_only_master_master_read                                         (hps_only_master_master_read),                   \n\t\t.hps_only_master_master_readdata                                     (hps_only_master_master_readdata),               \n\t\t.hps_only_master_master_readdatavalid                                (hps_only_master_master_readdatavalid),          \n\t\t.hps_only_master_master_write                                        (hps_only_master_master_write),                  \n\t\t.hps_only_master_master_writedata                                    (hps_only_master_master_writedata)               \n\t);\n\n\tsoc_system_irq_mapper irq_mapper (\n\t\t.clk           (),                         \n\t\t.reset         (),                         \n\t\t.receiver0_irq (irq_mapper_receiver0_irq), \n\t\t.sender_irq    (hps_0_f2h_irq0_irq)        \n\t);\n\n\tsoc_system_irq_mapper_001 irq_mapper_001 (\n\t\t.clk        (),                   \n\t\t.reset      (),                   \n\t\t.sender_irq (hps_0_f2h_irq1_irq)  \n\t);\n\n\tsoc_system_irq_mapper irq_mapper_002 (\n\t\t.clk           (clk_clk),                                \n\t\t.reset         (rst_controller_reset_out_reset),         \n\t\t.receiver0_irq (irq_mapper_receiver0_irq),               \n\t\t.sender_irq    (intr_capturer_0_interrupt_receiver_irq)  \n\t);\n\n\taltera_reset_controller #(\n\t\t.NUM_RESET_INPUTS          (1),\n\t\t.OUTPUT_RESET_SYNC_EDGES   (\"deassert\"),\n\t\t.SYNC_DEPTH                (2),\n\t\t.RESET_REQUEST_PRESENT     (1),\n\t\t.RESET_REQ_WAIT_TIME       (1),\n\t\t.MIN_RST_ASSERTION_TIME    (3),\n\t\t.RESET_REQ_EARLY_DSRT_TIME (1),\n\t\t.USE_RESET_REQUEST_IN0     (0),\n\t\t.USE_RESET_REQUEST_IN1     (0),\n\t\t.USE_RESET_REQUEST_IN2     (0),\n\t\t.USE_RESET_REQUEST_IN3     (0),\n\t\t.USE_RESET_REQUEST_IN4     (0),\n\t\t.USE_RESET_REQUEST_IN5     (0),\n\t\t.USE_RESET_REQUEST_IN6     (0),\n\t\t.USE_RESET_REQUEST_IN7     (0),\n\t\t.USE_RESET_REQUEST_IN8     (0),\n\t\t.USE_RESET_REQUEST_IN9     (0),\n\t\t.USE_RESET_REQUEST_IN10    (0),\n\t\t.USE_RESET_REQUEST_IN11    (0),\n\t\t.USE_RESET_REQUEST_IN12    (0),\n\t\t.USE_RESET_REQUEST_IN13    (0),\n\t\t.USE_RESET_REQUEST_IN14    (0),\n\t\t.USE_RESET_REQUEST_IN15    (0),\n\t\t.ADAPT_RESET_REQUEST       (0)\n\t) rst_controller (\n\t\t.reset_in0      (~reset_reset_n),                     \n\t\t.clk            (clk_clk),                            \n\t\t.reset_out      (rst_controller_reset_out_reset),     \n\t\t.reset_req      (rst_controller_reset_out_reset_req), \n\t\t.reset_req_in0  (1'b0),                               \n\t\t.reset_in1      (1'b0),                               \n\t\t.reset_req_in1  (1'b0),                               \n\t\t.reset_in2      (1'b0),                               \n\t\t.reset_req_in2  (1'b0),                               \n\t\t.reset_in3      (1'b0),                               \n\t\t.reset_req_in3  (1'b0),                               \n\t\t.reset_in4      (1'b0),                               \n\t\t.reset_req_in4  (1'b0),                               \n\t\t.reset_in5      (1'b0),                               \n\t\t.reset_req_in5  (1'b0),                               \n\t\t.reset_in6      (1'b0),                               \n\t\t.reset_req_in6  (1'b0),                               \n\t\t.reset_in7      (1'b0),                               \n\t\t.reset_req_in7  (1'b0),                               \n\t\t.reset_in8      (1'b0),                               \n\t\t.reset_req_in8  (1'b0),                               \n\t\t.reset_in9      (1'b0),                               \n\t\t.reset_req_in9  (1'b0),                               \n\t\t.reset_in10     (1'b0),                               \n\t\t.reset_req_in10 (1'b0),                               \n\t\t.reset_in11     (1'b0),                               \n\t\t.reset_req_in11 (1'b0),                               \n\t\t.reset_in12     (1'b0),                               \n\t\t.reset_req_in12 (1'b0),                               \n\t\t.reset_in13     (1'b0),                               \n\t\t.reset_req_in13 (1'b0),                               \n\t\t.reset_in14     (1'b0),                               \n\t\t.reset_req_in14 (1'b0),                               \n\t\t.reset_in15     (1'b0),                               \n\t\t.reset_req_in15 (1'b0)                                \n\t);\n\n\taltera_reset_controller #(\n\t\t.NUM_RESET_INPUTS          (1),\n\t\t.OUTPUT_RESET_SYNC_EDGES   (\"deassert\"),\n\t\t.SYNC_DEPTH                (2),\n\t\t.RESET_REQUEST_PRESENT     (0),\n\t\t.RESET_REQ_WAIT_TIME       (1),\n\t\t.MIN_RST_ASSERTION_TIME    (3),\n\t\t.RESET_REQ_EARLY_DSRT_TIME (1),\n\t\t.USE_RESET_REQUEST_IN0     (0),\n\t\t.USE_RESET_REQUEST_IN1     (0),\n\t\t.USE_RESET_REQUEST_IN2     (0),\n\t\t.USE_RESET_REQUEST_IN3     (0),\n\t\t.USE_RESET_REQUEST_IN4     (0),\n\t\t.USE_RESET_REQUEST_IN5     (0),\n\t\t.USE_RESET_REQUEST_IN6     (0),\n\t\t.USE_RESET_REQUEST_IN7     (0),\n\t\t.USE_RESET_REQUEST_IN8     (0),\n\t\t.USE_RESET_REQUEST_IN9     (0),\n\t\t.USE_RESET_REQUEST_IN10    (0),\n\t\t.USE_RESET_REQUEST_IN11    (0),\n\t\t.USE_RESET_REQUEST_IN12    (0),\n\t\t.USE_RESET_REQUEST_IN13    (0),\n\t\t.USE_RESET_REQUEST_IN14    (0),\n\t\t.USE_RESET_REQUEST_IN15    (0),\n\t\t.ADAPT_RESET_REQUEST       (0)\n\t) rst_controller_001 (\n\t\t.reset_in0      (~hps_0_h2f_reset_reset_n),           \n\t\t.clk            (clk_clk),                            \n\t\t.reset_out      (rst_controller_001_reset_out_reset), \n\t\t.reset_req      (),                                   \n\t\t.reset_req_in0  (1'b0),                               \n\t\t.reset_in1      (1'b0),                               \n\t\t.reset_req_in1  (1'b0),                               \n\t\t.reset_in2      (1'b0),                               \n\t\t.reset_req_in2  (1'b0),                               \n\t\t.reset_in3      (1'b0),                               \n\t\t.reset_req_in3  (1'b0),                               \n\t\t.reset_in4      (1'b0),                               \n\t\t.reset_req_in4  (1'b0),                               \n\t\t.reset_in5      (1'b0),                               \n\t\t.reset_req_in5  (1'b0),                               \n\t\t.reset_in6      (1'b0),                               \n\t\t.reset_req_in6  (1'b0),                               \n\t\t.reset_in7      (1'b0),                               \n\t\t.reset_req_in7  (1'b0),                               \n\t\t.reset_in8      (1'b0),                               \n\t\t.reset_req_in8  (1'b0),                               \n\t\t.reset_in9      (1'b0),                               \n\t\t.reset_req_in9  (1'b0),                               \n\t\t.reset_in10     (1'b0),                               \n\t\t.reset_req_in10 (1'b0),                               \n\t\t.reset_in11     (1'b0),                               \n\t\t.reset_req_in11 (1'b0),                               \n\t\t.reset_in12     (1'b0),                               \n\t\t.reset_req_in12 (1'b0),                               \n\t\t.reset_in13     (1'b0),                               \n\t\t.reset_req_in13 (1'b0),                               \n\t\t.reset_in14     (1'b0),                               \n\t\t.reset_req_in14 (1'b0),                               \n\t\t.reset_in15     (1'b0),                               \n\t\t.reset_req_in15 (1'b0)                                \n\t);\n\nendmodule\n</code>"
                },
                {
                    "type": "text",
                    "text": "Based on the provided original Verilog code, its comments and above answers, generate a detailed specification for the module. Include the following information in a single, concise paragraph:\n1. The name of the module.\n2. A simple explanation of the module's functionality.\n3. The input and output ports, along with a brief explanation of each.\n4. The internal signals used within the module, with a brief explanation of their purpose.\n5. An overview of the different blocks or sections in the code and their functions.\nEnsure that the specification is clear and accurately reflects the details from the code and comments.\nYour answer should be structured and well-organized, providing a comprehensive and detailed overview of the module's design and operation.\nPlease provide your answer in the following format:\nModule name: [module name]. Module specification: [module specification]."
                },
                {
                    "type": "text",
                    "text": "Module name: soc_system. Module specification: This module implements a System-on-Chip (SoC) design integrating a Hard Processor System (HPS) with FPGA fabric. It features various interfaces including memory, Ethernet, USB, UART, SPI, I2C, and GPIO. The module has numerous input and output ports for clock, reset, memory interfacing, HPS I/O, and LED control. Key inputs include clk_clk, reset_reset_n, and memory_oct_rzqin, while outputs cover memory signals, HPS I/O, and LED control. Internal signals facilitate communication between submodules, handling memory-mapped interconnects, AXI interfaces, and various peripheral controls. The design incorporates several functional blocks: an HPS core, on-chip memory, master interfaces for FPGA and HPS, a JTAG UART, interrupt handling"
                }
            ]
        }
    ]
}