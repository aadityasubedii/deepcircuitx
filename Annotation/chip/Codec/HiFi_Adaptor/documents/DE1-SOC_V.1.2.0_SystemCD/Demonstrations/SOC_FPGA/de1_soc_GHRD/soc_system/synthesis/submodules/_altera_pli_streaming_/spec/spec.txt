Module name: altera_pli_streaming.
Module specification: The `altera_pli_streaming` module facilitates data streaming between a JTAG interface and a PLI (Programming Logic Interface), specifically designed for communication or testing with external systems through these interfaces. **Input Ports:** 1) `clk` - the clock input driving the module's sequential logic, 2) `reset_n` - an active-low reset signal for initializing internal states, 3) `source_ready` - indicates readiness to accept data, 4) `sink_valid` - signifies the validity of the data in `sink_data`, 5) `sink_data` - the data input to be processed. **Output Ports:** 1) `source_valid` - indicates that data on `source_data` is valid, 2) `source_data` - outputs processed data, 3) `sink_ready` - shows readiness to accept more data, 4) `resetrequest` - manages external reset requests. **Internal Signals:** 1) `pli_out_valid`, `pli_in_ready`, and `pli_out_data` facilitate data handling and states between PLI interfaces, 2) `jtag_source_data`, `jtag_source_valid`, `jtag_sink_ready`, and `jtag_resetrequest` manage JTAG data flows and reset conditions. **Code Blocks:** The module includes an `always` block triggered by clock or reset to handle PLI transactions with optional conditional compilation for ModelSim (`MODEL_TECH`), and integrates an instance of `altera_jtag_dc_streaming` for JTAG communication handling. The outputs are set based on conditions and incoming data validity, enhanced by synchronization across the JTAG and PLI data paths in concurrent procedural blocks (`always @*`), effectively making this module a critical bridge in external and internal data communications for system-level testing and interactions.