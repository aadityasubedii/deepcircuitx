Module name: intr_capturer. Module specification: The `intr_capturer` module, parameterized by `NUM_INTR` (default 32), is designed to capture and manage system interrupts. It processes a vector of interrupt signals (`interrupt_in`) based on the clock (`clk`) and an active low reset (`rst_n`). Depending on whether the address (`addr`) and read command (`read`) inputs dictate, the module selectively outputs interrupt data through the `rddata` port. This 32-bit wide output is either from the lower 32 bits or the upper segment when `NUM_INTR` exceeds 32, enabling handling of up to two groups of interrupts. Internally, the module uses a register (`interrupt_reg`) to store incoming interrupts consistently at clock edges. Conditional generation creates either a single or dual interrupt register scheme depending on `NUM_INTR`. Additional internal signals include `readdata_with_waitstate` (stabilizes output data with a clock cycle delay), `act_readdata` (combines lower and higher interrupt data), and control signals (`access_lower_32`, `access_higher_32`) that manage data access based on the address input. The register blocks manage data capturing on clock edges and reset conditions. A generate block configures interrupt management for systems with more than 32 interrupts by dividing `interrupt_reg` further. This comprehensive structure ensures efficient interrupt management and data stability under varying system conditions.