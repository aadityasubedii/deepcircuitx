Module name: `soc_system_hps_0_hps_io`. 

Module specification: The `soc_system_hps_0_hps_io` module is designed primarily as an interface wrapper facilitating connectivity between various peripheral interfaces and the Hard Processor System (HPS) in an FPGA or system-on-chip environment. It manages signal integrity and routes connections through its ports which include memory interface signals (`mem_*` for control and addressing of memory components), Ethernet MAC signals (`hps_io_emac1_inst_*` for both receiving and transmitting data and control lines), USB (`hps_io_usb1_inst_*` for data and control signals), SPI (`hps_io_spim1_inst_*` coordinates data flow in SPI communication), SDIO, UART (`hps_io_uart0_inst_RX` and `TX` for UART communication), I2C (`hps_io_i2c0_inst_*` and `i2c1_inst_*`), GPIO (`hps_io_gpio_inst_*`), and a calibration input (`oct_rzqin`). The module does not include user-defined internal signals and acts purely as a conduit, merely forwarding all the signals through a submodule named `border`. This submodule, `border`, is instantiated within the module and it connects all external signals directly to it. This straightforward interfacing approach allows for streamlined communication between the complex internal components of the system and external interfaces, ensuring efficient and organized signal management. The module's primary function is evident in its structural design, emphasizing clean routing and minimal internal signal manipulation.