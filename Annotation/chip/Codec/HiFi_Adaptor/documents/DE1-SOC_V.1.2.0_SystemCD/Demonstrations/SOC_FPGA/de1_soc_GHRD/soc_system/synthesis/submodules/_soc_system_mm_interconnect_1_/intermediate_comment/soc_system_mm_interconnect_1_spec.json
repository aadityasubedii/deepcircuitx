{
    "spec": "Module name: soc_system_mm_interconnect_1. Module specification: This module implements an interconnect system for a System-on-Chip (SoC) design, managing communication between a master device (likely a processor or DMA controller) and an AXI slave (possibly memory or peripherals). It supports AXI protocol features such as bursts, multiple channels, and different data widths. The module has input ports for clock, reset, master interface signals (address, data, control), and AXI slave interface signals (handshaking, data, responses). Output ports include AXI slave interface signals for address, data, and control channels, as well as master interface signals for wait requests and read data. Internally, the module uses various signals for address routing, command and response handling, data width adaptation, and arbitration. The code is structured into sections for master and slave agents, address routers, command and response",
    "gpt-message": [
        {
            "role": "system",
            "content": "You are an expert in hardware design with a deep understanding of Verilog RTL codes. Now I want to train a large language model for code comment generation tasks specifically focused on Verilog RTL codes. And I want you to help me process the raw data, transforming it into suitable formats that can serve as inputs and outputs for the model."
        },
        {
            "role": "user",
            "content": "Name of the module and its functionality is as follows: \nModule name: soc_system_mm_interconnect_1\n\nExplanation: This module appears to be an interconnect or bus system for a System-on-Chip (SoC) design. It manages communication between a master device (likely a processor or DMA controller) and a slave device (an AXI slave, possibly memory or peripherals). The module includes components for address routing, command and response handling, data width adaptation, and arbitration. It supports AXI protocol features such as bursts, multiple channels, and different data widths between master and slave interfaces. The interconnect likely facilitates efficient data transfer and protocol conversion between different parts of the SoC system."
        },
        {
            "role": "user",
            "content": "Input and output ports and their explanation is as follows: \nInput ports:\n- clk_0_clk_clk\n- hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset\n- master_secure_clk_reset_reset_bridge_in_reset_reset\n- master_secure_master_translator_reset_reset_bridge_in_reset_reset\n- master_secure_master_address\n- master_secure_master_byteenable\n- master_secure_master_read\n- master_secure_master_write\n- master_secure_master_writedata\n- hps_0_f2h_axi_slave_awready\n- hps_0_f2h_axi_slave_wready\n- hps_0_f2h_axi_slave_bid\n- hps_0_f2h_axi_slave_bresp\n- hps_0_f2h_axi_slave_bvalid\n- hps_0_f2h_axi_slave_arready\n- hps_0_f2h_axi_slave_rid\n- hps_0_f2h_axi_slave_rdata\n- hps_0_f2h_axi_slave_rresp\n- hps_0_f2h_axi_slave_rlast\n- hps_0_f2h_axi_slave_rvalid\n\nExplanation: These input ports include clock and reset signals, master interface signals for address, data, and control, and AXI slave interface signals for handshaking, data, and responses.\n\nOutput ports:\n- hps_0_f2h_axi_slave_awid\n- hps_0_f2h_axi_slave_awaddr\n- hps_0_f2h_axi_slave_awlen\n- hps_0_f2h_axi_slave_awsize\n- hps_0_f2h_axi_slave_awburst\n- hps_0_f2h_axi_slave_awlock\n- hps_0_f2h_axi_slave_awcache\n- hps_0_f2h_axi_slave_awprot\n- hps_0_f2h_axi_slave_awuser\n- hps_0_f2h_axi_slave_awvalid\n- hps_0_f2h_axi_slave_wid\n- hps_0_f2h_axi_slave_wdata\n- hps_0_f2h_axi_slave_wstrb\n- hps_0_f2h_axi_slave_wlast\n- hps_0_f2h_axi_slave_wvalid\n- hps_0_f2h_axi_slave_bready\n- hps_0_f2h_axi_slave_arid\n- hps_0_f2h_axi_slave_araddr\n- hps_0_f2h_axi_slave_arlen\n- hps_0_f2h_axi_slave_arsize\n- hps_0_f2h_axi_slave_arburst\n- hps_0_f2h_axi_slave_arlock\n- hps_0_f2h_axi_slave_arcache\n- hps_0_f2h_axi_slave_arprot\n- hps_0_f2h_axi_slave_aruser\n- hps_0_f2h_axi_slave_arvalid\n- hps_0_f2h_axi_slave_rready\n- master_secure_master_waitrequest\n- master_secure_master_readdata\n- master_secure_master_readdatavalid\n\nExplanation: These output ports include AXI slave interface signals for address, data, and control channels, as well as master interface signals for wait requests, read data, and read data valid indications."
        },
        {
            "role": "user",
            "content": "Internal signals and their explanation is as follows: \nInternal signals:\n- master_secure_master_translator_avalon_universal_master_0_* signals\n- hps_0_f2h_axi_slave_agent_*_rp_* signals\n- addr_router_src_* signals\n- limiter_cmd_src_* and limiter_rsp_src_* signals\n- rsp_xbar_mux_src_* signals\n- cmd_xbar_demux_src* signals\n- rsp_xbar_demux_*_src* signals\n- cmd_xbar_mux_*_src_* signals\n- width_adapter_*_src_* signals\n- id_router_*_src_* signals\n\nExplanation:\n- master_secure_master_translator_avalon_universal_master_0_* signals: Interface signals between the master translator and the interconnect, carrying address, data, and control information.\n- hps_0_f2h_axi_slave_agent_*_rp_* signals: Response path signals from the AXI slave agent, carrying read and write response information.\n- addr_router_src_* signals: Output signals from the address router, directing commands to appropriate destinations.\n- limiter_cmd_src_* and limiter_rsp_src_* signals: Command and response signals from/to the traffic limiter, controlling data flow.\n- rsp_xbar_mux_src_* signals: Multiplexed response signals from the crossbar, combining responses from multiple sources.\n- cmd_xbar_demux_src* signals: Demultiplexed command signals, splitting commands to multiple destinations.\n- rsp_xbar_demux_*_src* signals: Demultiplexed response signals, separating responses from different sources.\n- cmd_xbar_mux_*_src_* signals: Multiplexed command signals, combining commands from multiple sources.\n- width_adapter_*_src_* signals: Output signals from width adapters, converting between different data widths.\n- id_router_*_src_* signals: Output signals from ID routers, managing transaction IDs for proper routing.\n\nThese internal signals facilitate the interconnect's functionality, managing data flow, routing, and protocol conversion between the master and slave interfaces."
        },
        {
            "role": "user",
            "content": "Original Verilog code is as follows: \n```verilog\n\n\n\n\n\n\n\n`timescale 1 ps / 1 ps\nmodule soc_system_mm_interconnect_1 (\n\t\toutput wire [7:0]  hps_0_f2h_axi_slave_awid,                                          \n\t\toutput wire [31:0] hps_0_f2h_axi_slave_awaddr,                                        \n\t\toutput wire [3:0]  hps_0_f2h_axi_slave_awlen,                                         \n\t\toutput wire [2:0]  hps_0_f2h_axi_slave_awsize,                                        \n\t\toutput wire [1:0]  hps_0_f2h_axi_slave_awburst,                                       \n\t\toutput wire [1:0]  hps_0_f2h_axi_slave_awlock,                                        \n\t\toutput wire [3:0]  hps_0_f2h_axi_slave_awcache,                                       \n\t\toutput wire [2:0]  hps_0_f2h_axi_slave_awprot,                                        \n\t\toutput wire [4:0]  hps_0_f2h_axi_slave_awuser,                                        \n\t\toutput wire        hps_0_f2h_axi_slave_awvalid,                                       \n\t\tinput  wire        hps_0_f2h_axi_slave_awready,                                       \n\t\toutput wire [7:0]  hps_0_f2h_axi_slave_wid,                                           \n\t\toutput wire [63:0] hps_0_f2h_axi_slave_wdata,                                         \n\t\toutput wire [7:0]  hps_0_f2h_axi_slave_wstrb,                                         \n\t\toutput wire        hps_0_f2h_axi_slave_wlast,                                         \n\t\toutput wire        hps_0_f2h_axi_slave_wvalid,                                        \n\t\tinput  wire        hps_0_f2h_axi_slave_wready,                                        \n\t\tinput  wire [7:0]  hps_0_f2h_axi_slave_bid,                                           \n\t\tinput  wire [1:0]  hps_0_f2h_axi_slave_bresp,                                         \n\t\tinput  wire        hps_0_f2h_axi_slave_bvalid,                                        \n\t\toutput wire        hps_0_f2h_axi_slave_bready,                                        \n\t\toutput wire [7:0]  hps_0_f2h_axi_slave_arid,                                          \n\t\toutput wire [31:0] hps_0_f2h_axi_slave_araddr,                                        \n\t\toutput wire [3:0]  hps_0_f2h_axi_slave_arlen,                                         \n\t\toutput wire [2:0]  hps_0_f2h_axi_slave_arsize,                                        \n\t\toutput wire [1:0]  hps_0_f2h_axi_slave_arburst,                                       \n\t\toutput wire [1:0]  hps_0_f2h_axi_slave_arlock,                                        \n\t\toutput wire [3:0]  hps_0_f2h_axi_slave_arcache,                                       \n\t\toutput wire [2:0]  hps_0_f2h_axi_slave_arprot,                                        \n\t\toutput wire [4:0]  hps_0_f2h_axi_slave_aruser,                                        \n\t\toutput wire        hps_0_f2h_axi_slave_arvalid,                                       \n\t\tinput  wire        hps_0_f2h_axi_slave_arready,                                       \n\t\tinput  wire [7:0]  hps_0_f2h_axi_slave_rid,                                           \n\t\tinput  wire [63:0] hps_0_f2h_axi_slave_rdata,                                         \n\t\tinput  wire [1:0]  hps_0_f2h_axi_slave_rresp,                                         \n\t\tinput  wire        hps_0_f2h_axi_slave_rlast,                                         \n\t\tinput  wire        hps_0_f2h_axi_slave_rvalid,                                        \n\t\toutput wire        hps_0_f2h_axi_slave_rready,                                        \n\t\tinput  wire        clk_0_clk_clk,                                                     \n\t\tinput  wire        hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset,  \n\t\tinput  wire        master_secure_clk_reset_reset_bridge_in_reset_reset,               \n\t\tinput  wire        master_secure_master_translator_reset_reset_bridge_in_reset_reset, \n\t\tinput  wire [31:0] master_secure_master_address,                                      \n\t\toutput wire        master_secure_master_waitrequest,                                  \n\t\tinput  wire [3:0]  master_secure_master_byteenable,                                   \n\t\tinput  wire        master_secure_master_read,                                         \n\t\toutput wire [31:0] master_secure_master_readdata,                                     \n\t\toutput wire        master_secure_master_readdatavalid,                                \n\t\tinput  wire        master_secure_master_write,                                        \n\t\tinput  wire [31:0] master_secure_master_writedata                                     \n\t);\n\n\twire          master_secure_master_translator_avalon_universal_master_0_waitrequest;            \n\twire    [2:0] master_secure_master_translator_avalon_universal_master_0_burstcount;             \n\twire   [31:0] master_secure_master_translator_avalon_universal_master_0_writedata;              \n\twire   [31:0] master_secure_master_translator_avalon_universal_master_0_address;                \n\twire          master_secure_master_translator_avalon_universal_master_0_lock;                   \n\twire          master_secure_master_translator_avalon_universal_master_0_write;                  \n\twire          master_secure_master_translator_avalon_universal_master_0_read;                   \n\twire   [31:0] master_secure_master_translator_avalon_universal_master_0_readdata;               \n\twire          master_secure_master_translator_avalon_universal_master_0_debugaccess;            \n\twire    [3:0] master_secure_master_translator_avalon_universal_master_0_byteenable;             \n\twire          master_secure_master_translator_avalon_universal_master_0_readdatavalid;          \n\twire          master_secure_master_translator_avalon_universal_master_0_agent_cp_endofpacket;   \n\twire          master_secure_master_translator_avalon_universal_master_0_agent_cp_valid;         \n\twire          master_secure_master_translator_avalon_universal_master_0_agent_cp_startofpacket; \n\twire  [117:0] master_secure_master_translator_avalon_universal_master_0_agent_cp_data;          \n\twire          master_secure_master_translator_avalon_universal_master_0_agent_cp_ready;         \n\twire          hps_0_f2h_axi_slave_agent_write_rp_endofpacket;                                   \n\twire          hps_0_f2h_axi_slave_agent_write_rp_valid;                                         \n\twire          hps_0_f2h_axi_slave_agent_write_rp_startofpacket;                                 \n\twire  [153:0] hps_0_f2h_axi_slave_agent_write_rp_data;                                          \n\twire          hps_0_f2h_axi_slave_agent_write_rp_ready;                                         \n\twire          hps_0_f2h_axi_slave_agent_read_rp_endofpacket;                                    \n\twire          hps_0_f2h_axi_slave_agent_read_rp_valid;                                          \n\twire          hps_0_f2h_axi_slave_agent_read_rp_startofpacket;                                  \n\twire  [153:0] hps_0_f2h_axi_slave_agent_read_rp_data;                                           \n\twire          hps_0_f2h_axi_slave_agent_read_rp_ready;                                          \n\twire          addr_router_src_endofpacket;                                                      \n\twire          addr_router_src_valid;                                                            \n\twire          addr_router_src_startofpacket;                                                    \n\twire  [117:0] addr_router_src_data;                                                             \n\twire    [1:0] addr_router_src_channel;                                                          \n\twire          addr_router_src_ready;                                                            \n\twire          limiter_cmd_src_endofpacket;                                                      \n\twire          limiter_cmd_src_startofpacket;                                                    \n\twire  [117:0] limiter_cmd_src_data;                                                             \n\twire    [1:0] limiter_cmd_src_channel;                                                          \n\twire          limiter_cmd_src_ready;                                                            \n\twire          rsp_xbar_mux_src_endofpacket;                                                     \n\twire          rsp_xbar_mux_src_valid;                                                           \n\twire          rsp_xbar_mux_src_startofpacket;                                                   \n\twire  [117:0] rsp_xbar_mux_src_data;                                                            \n\twire    [1:0] rsp_xbar_mux_src_channel;                                                         \n\twire          rsp_xbar_mux_src_ready;                                                           \n\twire          limiter_rsp_src_endofpacket;                                                      \n\twire          limiter_rsp_src_valid;                                                            \n\twire          limiter_rsp_src_startofpacket;                                                    \n\twire  [117:0] limiter_rsp_src_data;                                                             \n\twire    [1:0] limiter_rsp_src_channel;                                                          \n\twire          limiter_rsp_src_ready;                                                            \n\twire          cmd_xbar_demux_src0_endofpacket;                                                  \n\twire          cmd_xbar_demux_src0_valid;                                                        \n\twire          cmd_xbar_demux_src0_startofpacket;                                                \n\twire  [117:0] cmd_xbar_demux_src0_data;                                                         \n\twire    [1:0] cmd_xbar_demux_src0_channel;                                                      \n\twire          cmd_xbar_demux_src0_ready;                                                        \n\twire          cmd_xbar_demux_src1_endofpacket;                                                  \n\twire          cmd_xbar_demux_src1_valid;                                                        \n\twire          cmd_xbar_demux_src1_startofpacket;                                                \n\twire  [117:0] cmd_xbar_demux_src1_data;                                                         \n\twire    [1:0] cmd_xbar_demux_src1_channel;                                                      \n\twire          cmd_xbar_demux_src1_ready;                                                        \n\twire          rsp_xbar_demux_src0_endofpacket;                                                  \n\twire          rsp_xbar_demux_src0_valid;                                                        \n\twire          rsp_xbar_demux_src0_startofpacket;                                                \n\twire  [117:0] rsp_xbar_demux_src0_data;                                                         \n\twire    [1:0] rsp_xbar_demux_src0_channel;                                                      \n\twire          rsp_xbar_demux_src0_ready;                                                        \n\twire          rsp_xbar_demux_001_src0_endofpacket;                                              \n\twire          rsp_xbar_demux_001_src0_valid;                                                    \n\twire          rsp_xbar_demux_001_src0_startofpacket;                                            \n\twire  [117:0] rsp_xbar_demux_001_src0_data;                                                     \n\twire    [1:0] rsp_xbar_demux_001_src0_channel;                                                  \n\twire          rsp_xbar_demux_001_src0_ready;                                                    \n\twire          cmd_xbar_mux_src_endofpacket;                                                     \n\twire          cmd_xbar_mux_src_valid;                                                           \n\twire          cmd_xbar_mux_src_startofpacket;                                                   \n\twire  [117:0] cmd_xbar_mux_src_data;                                                            \n\twire    [1:0] cmd_xbar_mux_src_channel;                                                         \n\twire          cmd_xbar_mux_src_ready;                                                           \n\twire          width_adapter_src_endofpacket;                                                    \n\twire          width_adapter_src_valid;                                                          \n\twire          width_adapter_src_startofpacket;                                                  \n\twire  [153:0] width_adapter_src_data;                                                           \n\twire          width_adapter_src_ready;                                                          \n\twire    [1:0] width_adapter_src_channel;                                                        \n\twire          cmd_xbar_mux_001_src_endofpacket;                                                 \n\twire          cmd_xbar_mux_001_src_valid;                                                       \n\twire          cmd_xbar_mux_001_src_startofpacket;                                               \n\twire  [117:0] cmd_xbar_mux_001_src_data;                                                        \n\twire    [1:0] cmd_xbar_mux_001_src_channel;                                                     \n\twire          cmd_xbar_mux_001_src_ready;                                                       \n\twire          width_adapter_001_src_endofpacket;                                                \n\twire          width_adapter_001_src_valid;                                                      \n\twire          width_adapter_001_src_startofpacket;                                              \n\twire  [153:0] width_adapter_001_src_data;                                                       \n\twire          width_adapter_001_src_ready;                                                      \n\twire    [1:0] width_adapter_001_src_channel;                                                    \n\twire          id_router_src_endofpacket;                                                        \n\twire          id_router_src_valid;                                                              \n\twire          id_router_src_startofpacket;                                                      \n\twire  [153:0] id_router_src_data;                                                               \n\twire    [1:0] id_router_src_channel;                                                            \n\twire          id_router_src_ready;                                                              \n\twire          width_adapter_002_src_endofpacket;                                                \n\twire          width_adapter_002_src_valid;                                                      \n\twire          width_adapter_002_src_startofpacket;                                              \n\twire  [117:0] width_adapter_002_src_data;                                                       \n\twire          width_adapter_002_src_ready;                                                      \n\twire    [1:0] width_adapter_002_src_channel;                                                    \n\twire          id_router_001_src_endofpacket;                                                    \n\twire          id_router_001_src_valid;                                                          \n\twire          id_router_001_src_startofpacket;                                                  \n\twire  [153:0] id_router_001_src_data;                                                           \n\twire    [1:0] id_router_001_src_channel;                                                        \n\twire          id_router_001_src_ready;                                                          \n\twire          width_adapter_003_src_endofpacket;                                                \n\twire          width_adapter_003_src_valid;                                                      \n\twire          width_adapter_003_src_startofpacket;                                              \n\twire  [117:0] width_adapter_003_src_data;                                                       \n\twire          width_adapter_003_src_ready;                                                      \n\twire    [1:0] width_adapter_003_src_channel;                                                    \n\twire    [1:0] limiter_cmd_valid_data;                                                           \n\n\taltera_merlin_master_translator #(\n\t\t.AV_ADDRESS_W                (32),\n\t\t.AV_DATA_W                   (32),\n\t\t.AV_BURSTCOUNT_W             (1),\n\t\t.AV_BYTEENABLE_W             (4),\n\t\t.UAV_ADDRESS_W               (32),\n\t\t.UAV_BURSTCOUNT_W            (3),\n\t\t.USE_READ                    (1),\n\t\t.USE_WRITE                   (1),\n\t\t.USE_BEGINBURSTTRANSFER      (0),\n\t\t.USE_BEGINTRANSFER           (0),\n\t\t.USE_CHIPSELECT              (0),\n\t\t.USE_BURSTCOUNT              (0),\n\t\t.USE_READDATAVALID           (1),\n\t\t.USE_WAITREQUEST             (1),\n\t\t.USE_READRESPONSE            (0),\n\t\t.USE_WRITERESPONSE           (0),\n\t\t.AV_SYMBOLS_PER_WORD         (4),\n\t\t.AV_ADDRESS_SYMBOLS          (1),\n\t\t.AV_BURSTCOUNT_SYMBOLS       (0),\n\t\t.AV_CONSTANT_BURST_BEHAVIOR  (0),\n\t\t.UAV_CONSTANT_BURST_BEHAVIOR (0),\n\t\t.AV_LINEWRAPBURSTS           (0),\n\t\t.AV_REGISTERINCOMINGSIGNALS  (0)\n\t) master_secure_master_translator (\n\t\t.clk                      (clk_0_clk_clk),                                                           \n\t\t.reset                    (master_secure_master_translator_reset_reset_bridge_in_reset_reset),       \n\t\t.uav_address              (master_secure_master_translator_avalon_universal_master_0_address),       \n\t\t.uav_burstcount           (master_secure_master_translator_avalon_universal_master_0_burstcount),    \n\t\t.uav_read                 (master_secure_master_translator_avalon_universal_master_0_read),          \n\t\t.uav_write                (master_secure_master_translator_avalon_universal_master_0_write),         \n\t\t.uav_waitrequest          (master_secure_master_translator_avalon_universal_master_0_waitrequest),   \n\t\t.uav_readdatavalid        (master_secure_master_translator_avalon_universal_master_0_readdatavalid), \n\t\t.uav_byteenable           (master_secure_master_translator_avalon_universal_master_0_byteenable),    \n\t\t.uav_readdata             (master_secure_master_translator_avalon_universal_master_0_readdata),      \n\t\t.uav_writedata            (master_secure_master_translator_avalon_universal_master_0_writedata),     \n\t\t.uav_lock                 (master_secure_master_translator_avalon_universal_master_0_lock),          \n\t\t.uav_debugaccess          (master_secure_master_translator_avalon_universal_master_0_debugaccess),   \n\t\t.av_address               (master_secure_master_address),                                            \n\t\t.av_waitrequest           (master_secure_master_waitrequest),                                        \n\t\t.av_byteenable            (master_secure_master_byteenable),                                         \n\t\t.av_read                  (master_secure_master_read),                                               \n\t\t.av_readdata              (master_secure_master_readdata),                                           \n\t\t.av_readdatavalid         (master_secure_master_readdatavalid),                                      \n\t\t.av_write                 (master_secure_master_write),                                              \n\t\t.av_writedata             (master_secure_master_writedata),                                          \n\t\t.av_burstcount            (1'b1),                                                                    \n\t\t.av_beginbursttransfer    (1'b0),                                                                    \n\t\t.av_begintransfer         (1'b0),                                                                    \n\t\t.av_chipselect            (1'b0),                                                                    \n\t\t.av_lock                  (1'b0),                                                                    \n\t\t.av_debugaccess           (1'b0),                                                                    \n\t\t.uav_clken                (),                                                                        \n\t\t.av_clken                 (1'b1),                                                                    \n\t\t.uav_response             (2'b00),                                                                   \n\t\t.av_response              (),                                                                        \n\t\t.uav_writeresponserequest (),                                                                        \n\t\t.uav_writeresponsevalid   (1'b0),                                                                    \n\t\t.av_writeresponserequest  (1'b0),                                                                    \n\t\t.av_writeresponsevalid    ()                                                                         \n\t);\n\n\taltera_merlin_master_agent #(\n\t\t.PKT_PROTECTION_H          (108),\n\t\t.PKT_PROTECTION_L          (106),\n\t\t.PKT_BEGIN_BURST           (101),\n\t\t.PKT_BURSTWRAP_H           (89),\n\t\t.PKT_BURSTWRAP_L           (82),\n\t\t.PKT_BURST_SIZE_H          (92),\n\t\t.PKT_BURST_SIZE_L          (90),\n\t\t.PKT_BURST_TYPE_H          (94),\n\t\t.PKT_BURST_TYPE_L          (93),\n\t\t.PKT_BYTE_CNT_H            (81),\n\t\t.PKT_BYTE_CNT_L            (74),\n\t\t.PKT_ADDR_H                (67),\n\t\t.PKT_ADDR_L                (36),\n\t\t.PKT_TRANS_COMPRESSED_READ (68),\n\t\t.PKT_TRANS_POSTED          (69),\n\t\t.PKT_TRANS_WRITE           (70),\n\t\t.PKT_TRANS_READ            (71),\n\t\t.PKT_TRANS_LOCK            (72),\n\t\t.PKT_TRANS_EXCLUSIVE       (73),\n\t\t.PKT_DATA_H                (31),\n\t\t.PKT_DATA_L                (0),\n\t\t.PKT_BYTEEN_H              (35),\n\t\t.PKT_BYTEEN_L              (32),\n\t\t.PKT_SRC_ID_H              (103),\n\t\t.PKT_SRC_ID_L              (103),\n\t\t.PKT_DEST_ID_H             (104),\n\t\t.PKT_DEST_ID_L             (104),\n\t\t.PKT_THREAD_ID_H           (105),\n\t\t.PKT_THREAD_ID_L           (105),\n\t\t.PKT_CACHE_H               (112),\n\t\t.PKT_CACHE_L               (109),\n\t\t.PKT_DATA_SIDEBAND_H       (100),\n\t\t.PKT_DATA_SIDEBAND_L       (100),\n\t\t.PKT_QOS_H                 (102),\n\t\t.PKT_QOS_L                 (102),\n\t\t.PKT_ADDR_SIDEBAND_H       (99),\n\t\t.PKT_ADDR_SIDEBAND_L       (95),\n\t\t.PKT_RESPONSE_STATUS_H     (114),\n\t\t.PKT_RESPONSE_STATUS_L     (113),\n\t\t.PKT_ORI_BURST_SIZE_L      (115),\n\t\t.PKT_ORI_BURST_SIZE_H      (117),\n\t\t.ST_DATA_W                 (118),\n\t\t.ST_CHANNEL_W              (2),\n\t\t.AV_BURSTCOUNT_W           (3),\n\t\t.SUPPRESS_0_BYTEEN_RSP     (1),\n\t\t.ID                        (0),\n\t\t.BURSTWRAP_VALUE           (255),\n\t\t.CACHE_VALUE               (0),\n\t\t.SECURE_ACCESS_BIT         (1),\n\t\t.USE_READRESPONSE          (0),\n\t\t.USE_WRITERESPONSE         (0)\n\t) master_secure_master_translator_avalon_universal_master_0_agent (\n\t\t.clk                     (clk_0_clk_clk),                                                                    \n\t\t.reset                   (master_secure_master_translator_reset_reset_bridge_in_reset_reset),                \n\t\t.av_address              (master_secure_master_translator_avalon_universal_master_0_address),                \n\t\t.av_write                (master_secure_master_translator_avalon_universal_master_0_write),                  \n\t\t.av_read                 (master_secure_master_translator_avalon_universal_master_0_read),                   \n\t\t.av_writedata            (master_secure_master_translator_avalon_universal_master_0_writedata),              \n\t\t.av_readdata             (master_secure_master_translator_avalon_universal_master_0_readdata),               \n\t\t.av_waitrequest          (master_secure_master_translator_avalon_universal_master_0_waitrequest),            \n\t\t.av_readdatavalid        (master_secure_master_translator_avalon_universal_master_0_readdatavalid),          \n\t\t.av_byteenable           (master_secure_master_translator_avalon_universal_master_0_byteenable),             \n\t\t.av_burstcount           (master_secure_master_translator_avalon_universal_master_0_burstcount),             \n\t\t.av_debugaccess          (master_secure_master_translator_avalon_universal_master_0_debugaccess),            \n\t\t.av_lock                 (master_secure_master_translator_avalon_universal_master_0_lock),                   \n\t\t.cp_valid                (master_secure_master_translator_avalon_universal_master_0_agent_cp_valid),         \n\t\t.cp_data                 (master_secure_master_translator_avalon_universal_master_0_agent_cp_data),          \n\t\t.cp_startofpacket        (master_secure_master_translator_avalon_universal_master_0_agent_cp_startofpacket), \n\t\t.cp_endofpacket          (master_secure_master_translator_avalon_universal_master_0_agent_cp_endofpacket),   \n\t\t.cp_ready                (master_secure_master_translator_avalon_universal_master_0_agent_cp_ready),         \n\t\t.rp_valid                (limiter_rsp_src_valid),                                                            \n\t\t.rp_data                 (limiter_rsp_src_data),                                                             \n\t\t.rp_channel              (limiter_rsp_src_channel),                                                          \n\t\t.rp_startofpacket        (limiter_rsp_src_startofpacket),                                                    \n\t\t.rp_endofpacket          (limiter_rsp_src_endofpacket),                                                      \n\t\t.rp_ready                (limiter_rsp_src_ready),                                                            \n\t\t.av_response             (),                                                                                 \n\t\t.av_writeresponserequest (1'b0),                                                                             \n\t\t.av_writeresponsevalid   ()                                                                                  \n\t);\n\n\taltera_merlin_axi_slave_ni #(\n\t\t.PKT_QOS_H                   (138),\n\t\t.PKT_QOS_L                   (138),\n\t\t.PKT_THREAD_ID_H             (141),\n\t\t.PKT_THREAD_ID_L             (141),\n\t\t.PKT_RESPONSE_STATUS_H       (150),\n\t\t.PKT_RESPONSE_STATUS_L       (149),\n\t\t.PKT_BEGIN_BURST             (137),\n\t\t.PKT_CACHE_H                 (148),\n\t\t.PKT_CACHE_L                 (145),\n\t\t.PKT_DATA_SIDEBAND_H         (136),\n\t\t.PKT_DATA_SIDEBAND_L         (136),\n\t\t.PKT_ADDR_SIDEBAND_H         (135),\n\t\t.PKT_ADDR_SIDEBAND_L         (131),\n\t\t.PKT_BURST_TYPE_H            (130),\n\t\t.PKT_BURST_TYPE_L            (129),\n\t\t.PKT_PROTECTION_H            (144),\n\t\t.PKT_PROTECTION_L            (142),\n\t\t.PKT_BURST_SIZE_H            (128),\n\t\t.PKT_BURST_SIZE_L            (126),\n\t\t.PKT_BURSTWRAP_H             (125),\n\t\t.PKT_BURSTWRAP_L             (118),\n\t\t.PKT_BYTE_CNT_H              (117),\n\t\t.PKT_BYTE_CNT_L              (110),\n\t\t.PKT_ADDR_H                  (103),\n\t\t.PKT_ADDR_L                  (72),\n\t\t.PKT_TRANS_EXCLUSIVE         (109),\n\t\t.PKT_TRANS_LOCK              (108),\n\t\t.PKT_TRANS_COMPRESSED_READ   (104),\n\t\t.PKT_TRANS_POSTED            (105),\n\t\t.PKT_TRANS_WRITE             (106),\n\t\t.PKT_TRANS_READ              (107),\n\t\t.PKT_DATA_H                  (63),\n\t\t.PKT_DATA_L                  (0),\n\t\t.PKT_BYTEEN_H                (71),\n\t\t.PKT_BYTEEN_L                (64),\n\t\t.PKT_SRC_ID_H                (139),\n\t\t.PKT_SRC_ID_L                (139),\n\t\t.PKT_DEST_ID_H               (140),\n\t\t.PKT_DEST_ID_L               (140),\n\t\t.PKT_ORI_BURST_SIZE_L        (151),\n\t\t.PKT_ORI_BURST_SIZE_H        (153),\n\t\t.ADDR_USER_WIDTH             (5),\n\t\t.DATA_USER_WIDTH             (1),\n\t\t.ST_DATA_W                   (154),\n\t\t.ADDR_WIDTH                  (32),\n\t\t.RDATA_WIDTH                 (64),\n\t\t.WDATA_WIDTH                 (64),\n\t\t.ST_CHANNEL_W                (2),\n\t\t.AXI_SLAVE_ID_W              (8),\n\t\t.PASS_ID_TO_SLAVE            (1),\n\t\t.AXI_VERSION                 (\"AXI3\"),\n\t\t.WRITE_ACCEPTANCE_CAPABILITY (8),\n\t\t.READ_ACCEPTANCE_CAPABILITY  (8)\n\t) hps_0_f2h_axi_slave_agent (\n\t\t.aclk                   (clk_0_clk_clk),                                                     \n\t\t.aresetn                (~hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset), \n\t\t.read_cp_valid          (width_adapter_001_src_valid),                                       \n\t\t.read_cp_ready          (width_adapter_001_src_ready),                                       \n\t\t.read_cp_data           (width_adapter_001_src_data),                                        \n\t\t.read_cp_channel        (width_adapter_001_src_channel),                                     \n\t\t.read_cp_startofpacket  (width_adapter_001_src_startofpacket),                               \n\t\t.read_cp_endofpacket    (width_adapter_001_src_endofpacket),                                 \n\t\t.write_cp_ready         (width_adapter_src_ready),                                           \n\t\t.write_cp_valid         (width_adapter_src_valid),                                           \n\t\t.write_cp_data          (width_adapter_src_data),                                            \n\t\t.write_cp_channel       (width_adapter_src_channel),                                         \n\t\t.write_cp_startofpacket (width_adapter_src_startofpacket),                                   \n\t\t.write_cp_endofpacket   (width_adapter_src_endofpacket),                                     \n\t\t.read_rp_ready          (hps_0_f2h_axi_slave_agent_read_rp_ready),                           \n\t\t.read_rp_valid          (hps_0_f2h_axi_slave_agent_read_rp_valid),                           \n\t\t.read_rp_data           (hps_0_f2h_axi_slave_agent_read_rp_data),                            \n\t\t.read_rp_startofpacket  (hps_0_f2h_axi_slave_agent_read_rp_startofpacket),                   \n\t\t.read_rp_endofpacket    (hps_0_f2h_axi_slave_agent_read_rp_endofpacket),                     \n\t\t.write_rp_ready         (hps_0_f2h_axi_slave_agent_write_rp_ready),                          \n\t\t.write_rp_valid         (hps_0_f2h_axi_slave_agent_write_rp_valid),                          \n\t\t.write_rp_data          (hps_0_f2h_axi_slave_agent_write_rp_data),                           \n\t\t.write_rp_startofpacket (hps_0_f2h_axi_slave_agent_write_rp_startofpacket),                  \n\t\t.write_rp_endofpacket   (hps_0_f2h_axi_slave_agent_write_rp_endofpacket),                    \n\t\t.awid                   (hps_0_f2h_axi_slave_awid),                                          \n\t\t.awaddr                 (hps_0_f2h_axi_slave_awaddr),                                        \n\t\t.awlen                  (hps_0_f2h_axi_slave_awlen),                                         \n\t\t.awsize                 (hps_0_f2h_axi_slave_awsize),                                        \n\t\t.awburst                (hps_0_f2h_axi_slave_awburst),                                       \n\t\t.awlock                 (hps_0_f2h_axi_slave_awlock),                                        \n\t\t.awcache                (hps_0_f2h_axi_slave_awcache),                                       \n\t\t.awprot                 (hps_0_f2h_axi_slave_awprot),                                        \n\t\t.awuser                 (hps_0_f2h_axi_slave_awuser),                                        \n\t\t.awvalid                (hps_0_f2h_axi_slave_awvalid),                                       \n\t\t.awready                (hps_0_f2h_axi_slave_awready),                                       \n\t\t.wid                    (hps_0_f2h_axi_slave_wid),                                           \n\t\t.wdata                  (hps_0_f2h_axi_slave_wdata),                                         \n\t\t.wstrb                  (hps_0_f2h_axi_slave_wstrb),                                         \n\t\t.wlast                  (hps_0_f2h_axi_slave_wlast),                                         \n\t\t.wvalid                 (hps_0_f2h_axi_slave_wvalid),                                        \n\t\t.wready                 (hps_0_f2h_axi_slave_wready),                                        \n\t\t.bid                    (hps_0_f2h_axi_slave_bid),                                           \n\t\t.bresp                  (hps_0_f2h_axi_slave_bresp),                                         \n\t\t.bvalid                 (hps_0_f2h_axi_slave_bvalid),                                        \n\t\t.bready                 (hps_0_f2h_axi_slave_bready),                                        \n\t\t.arid                   (hps_0_f2h_axi_slave_arid),                                          \n\t\t.araddr                 (hps_0_f2h_axi_slave_araddr),                                        \n\t\t.arlen                  (hps_0_f2h_axi_slave_arlen),                                         \n\t\t.arsize                 (hps_0_f2h_axi_slave_arsize),                                        \n\t\t.arburst                (hps_0_f2h_axi_slave_arburst),                                       \n\t\t.arlock                 (hps_0_f2h_axi_slave_arlock),                                        \n\t\t.arcache                (hps_0_f2h_axi_slave_arcache),                                       \n\t\t.arprot                 (hps_0_f2h_axi_slave_arprot),                                        \n\t\t.aruser                 (hps_0_f2h_axi_slave_aruser),                                        \n\t\t.arvalid                (hps_0_f2h_axi_slave_arvalid),                                       \n\t\t.arready                (hps_0_f2h_axi_slave_arready),                                       \n\t\t.rid                    (hps_0_f2h_axi_slave_rid),                                           \n\t\t.rdata                  (hps_0_f2h_axi_slave_rdata),                                         \n\t\t.rresp                  (hps_0_f2h_axi_slave_rresp),                                         \n\t\t.rlast                  (hps_0_f2h_axi_slave_rlast),                                         \n\t\t.rvalid                 (hps_0_f2h_axi_slave_rvalid),                                        \n\t\t.rready                 (hps_0_f2h_axi_slave_rready)                                         \n\t);\n\n\tsoc_system_mm_interconnect_1_addr_router addr_router (\n\t\t.sink_ready         (master_secure_master_translator_avalon_universal_master_0_agent_cp_ready),         \n\t\t.sink_valid         (master_secure_master_translator_avalon_universal_master_0_agent_cp_valid),         \n\t\t.sink_data          (master_secure_master_translator_avalon_universal_master_0_agent_cp_data),          \n\t\t.sink_startofpacket (master_secure_master_translator_avalon_universal_master_0_agent_cp_startofpacket), \n\t\t.sink_endofpacket   (master_secure_master_translator_avalon_universal_master_0_agent_cp_endofpacket),   \n\t\t.clk                (clk_0_clk_clk),                                                                    \n\t\t.reset              (master_secure_master_translator_reset_reset_bridge_in_reset_reset),                \n\t\t.src_ready          (addr_router_src_ready),                                                            \n\t\t.src_valid          (addr_router_src_valid),                                                            \n\t\t.src_data           (addr_router_src_data),                                                             \n\t\t.src_channel        (addr_router_src_channel),                                                          \n\t\t.src_startofpacket  (addr_router_src_startofpacket),                                                    \n\t\t.src_endofpacket    (addr_router_src_endofpacket)                                                       \n\t);\n\n\tsoc_system_mm_interconnect_1_id_router id_router (\n\t\t.sink_ready         (hps_0_f2h_axi_slave_agent_write_rp_ready),                         \n\t\t.sink_valid         (hps_0_f2h_axi_slave_agent_write_rp_valid),                         \n\t\t.sink_data          (hps_0_f2h_axi_slave_agent_write_rp_data),                          \n\t\t.sink_startofpacket (hps_0_f2h_axi_slave_agent_write_rp_startofpacket),                 \n\t\t.sink_endofpacket   (hps_0_f2h_axi_slave_agent_write_rp_endofpacket),                   \n\t\t.clk                (clk_0_clk_clk),                                                    \n\t\t.reset              (hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset), \n\t\t.src_ready          (id_router_src_ready),                                              \n\t\t.src_valid          (id_router_src_valid),                                              \n\t\t.src_data           (id_router_src_data),                                               \n\t\t.src_channel        (id_router_src_channel),                                            \n\t\t.src_startofpacket  (id_router_src_startofpacket),                                      \n\t\t.src_endofpacket    (id_router_src_endofpacket)                                         \n\t);\n\n\tsoc_system_mm_interconnect_1_id_router id_router_001 (\n\t\t.sink_ready         (hps_0_f2h_axi_slave_agent_read_rp_ready),                          \n\t\t.sink_valid         (hps_0_f2h_axi_slave_agent_read_rp_valid),                          \n\t\t.sink_data          (hps_0_f2h_axi_slave_agent_read_rp_data),                           \n\t\t.sink_startofpacket (hps_0_f2h_axi_slave_agent_read_rp_startofpacket),                  \n\t\t.sink_endofpacket   (hps_0_f2h_axi_slave_agent_read_rp_endofpacket),                    \n\t\t.clk                (clk_0_clk_clk),                                                    \n\t\t.reset              (hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset), \n\t\t.src_ready          (id_router_001_src_ready),                                          \n\t\t.src_valid          (id_router_001_src_valid),                                          \n\t\t.src_data           (id_router_001_src_data),                                           \n\t\t.src_channel        (id_router_001_src_channel),                                        \n\t\t.src_startofpacket  (id_router_001_src_startofpacket),                                  \n\t\t.src_endofpacket    (id_router_001_src_endofpacket)                                     \n\t);\n\n\taltera_merlin_traffic_limiter #(\n\t\t.PKT_DEST_ID_H             (104),\n\t\t.PKT_DEST_ID_L             (104),\n\t\t.PKT_SRC_ID_H              (103),\n\t\t.PKT_SRC_ID_L              (103),\n\t\t.PKT_TRANS_POSTED          (69),\n\t\t.PKT_TRANS_WRITE           (70),\n\t\t.MAX_OUTSTANDING_RESPONSES (16),\n\t\t.PIPELINED                 (0),\n\t\t.ST_DATA_W                 (118),\n\t\t.ST_CHANNEL_W              (2),\n\t\t.VALID_WIDTH               (2),\n\t\t.ENFORCE_ORDER             (1),\n\t\t.PREVENT_HAZARDS           (1),\n\t\t.PKT_BYTE_CNT_H            (81),\n\t\t.PKT_BYTE_CNT_L            (74),\n\t\t.PKT_BYTEEN_H              (35),\n\t\t.PKT_BYTEEN_L              (32),\n\t\t.REORDER                   (0)\n\t) limiter (\n\t\t.clk                    (clk_0_clk_clk),                                                     \n\t\t.reset                  (master_secure_master_translator_reset_reset_bridge_in_reset_reset), \n\t\t.cmd_sink_ready         (addr_router_src_ready),                                             \n\t\t.cmd_sink_valid         (addr_router_src_valid),                                             \n\t\t.cmd_sink_data          (addr_router_src_data),                                              \n\t\t.cmd_sink_channel       (addr_router_src_channel),                                           \n\t\t.cmd_sink_startofpacket (addr_router_src_startofpacket),                                     \n\t\t.cmd_sink_endofpacket   (addr_router_src_endofpacket),                                       \n\t\t.cmd_src_ready          (limiter_cmd_src_ready),                                             \n\t\t.cmd_src_data           (limiter_cmd_src_data),                                              \n\t\t.cmd_src_channel        (limiter_cmd_src_channel),                                           \n\t\t.cmd_src_startofpacket  (limiter_cmd_src_startofpacket),                                     \n\t\t.cmd_src_endofpacket    (limiter_cmd_src_endofpacket),                                       \n\t\t.rsp_sink_ready         (rsp_xbar_mux_src_ready),                                            \n\t\t.rsp_sink_valid         (rsp_xbar_mux_src_valid),                                            \n\t\t.rsp_sink_channel       (rsp_xbar_mux_src_channel),                                          \n\t\t.rsp_sink_data          (rsp_xbar_mux_src_data),                                             \n\t\t.rsp_sink_startofpacket (rsp_xbar_mux_src_startofpacket),                                    \n\t\t.rsp_sink_endofpacket   (rsp_xbar_mux_src_endofpacket),                                      \n\t\t.rsp_src_ready          (limiter_rsp_src_ready),                                             \n\t\t.rsp_src_valid          (limiter_rsp_src_valid),                                             \n\t\t.rsp_src_data           (limiter_rsp_src_data),                                              \n\t\t.rsp_src_channel        (limiter_rsp_src_channel),                                           \n\t\t.rsp_src_startofpacket  (limiter_rsp_src_startofpacket),                                     \n\t\t.rsp_src_endofpacket    (limiter_rsp_src_endofpacket),                                       \n\t\t.cmd_src_valid          (limiter_cmd_valid_data)                                             \n\t);\n\n\tsoc_system_mm_interconnect_1_cmd_xbar_demux cmd_xbar_demux (\n\t\t.clk                (clk_0_clk_clk),                                                     \n\t\t.reset              (master_secure_master_translator_reset_reset_bridge_in_reset_reset), \n\t\t.sink_ready         (limiter_cmd_src_ready),                                             \n\t\t.sink_channel       (limiter_cmd_src_channel),                                           \n\t\t.sink_data          (limiter_cmd_src_data),                                              \n\t\t.sink_startofpacket (limiter_cmd_src_startofpacket),                                     \n\t\t.sink_endofpacket   (limiter_cmd_src_endofpacket),                                       \n\t\t.sink_valid         (limiter_cmd_valid_data),                                            \n\t\t.src0_ready         (cmd_xbar_demux_src0_ready),                                         \n\t\t.src0_valid         (cmd_xbar_demux_src0_valid),                                         \n\t\t.src0_data          (cmd_xbar_demux_src0_data),                                          \n\t\t.src0_channel       (cmd_xbar_demux_src0_channel),                                       \n\t\t.src0_startofpacket (cmd_xbar_demux_src0_startofpacket),                                 \n\t\t.src0_endofpacket   (cmd_xbar_demux_src0_endofpacket),                                   \n\t\t.src1_ready         (cmd_xbar_demux_src1_ready),                                         \n\t\t.src1_valid         (cmd_xbar_demux_src1_valid),                                         \n\t\t.src1_data          (cmd_xbar_demux_src1_data),                                          \n\t\t.src1_channel       (cmd_xbar_demux_src1_channel),                                       \n\t\t.src1_startofpacket (cmd_xbar_demux_src1_startofpacket),                                 \n\t\t.src1_endofpacket   (cmd_xbar_demux_src1_endofpacket)                                    \n\t);\n\n\tsoc_system_mm_interconnect_1_cmd_xbar_mux cmd_xbar_mux (\n\t\t.clk                 (clk_0_clk_clk),                                                    \n\t\t.reset               (hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset), \n\t\t.src_ready           (cmd_xbar_mux_src_ready),                                           \n\t\t.src_valid           (cmd_xbar_mux_src_valid),                                           \n\t\t.src_data            (cmd_xbar_mux_src_data),                                            \n\t\t.src_channel         (cmd_xbar_mux_src_channel),                                         \n\t\t.src_startofpacket   (cmd_xbar_mux_src_startofpacket),                                   \n\t\t.src_endofpacket     (cmd_xbar_mux_src_endofpacket),                                     \n\t\t.sink0_ready         (cmd_xbar_demux_src0_ready),                                        \n\t\t.sink0_valid         (cmd_xbar_demux_src0_valid),                                        \n\t\t.sink0_channel       (cmd_xbar_demux_src0_channel),                                      \n\t\t.sink0_data          (cmd_xbar_demux_src0_data),                                         \n\t\t.sink0_startofpacket (cmd_xbar_demux_src0_startofpacket),                                \n\t\t.sink0_endofpacket   (cmd_xbar_demux_src0_endofpacket)                                   \n\t);\n\n\tsoc_system_mm_interconnect_1_cmd_xbar_mux cmd_xbar_mux_001 (\n\t\t.clk                 (clk_0_clk_clk),                                                    \n\t\t.reset               (hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset), \n\t\t.src_ready           (cmd_xbar_mux_001_src_ready),                                       \n\t\t.src_valid           (cmd_xbar_mux_001_src_valid),                                       \n\t\t.src_data            (cmd_xbar_mux_001_src_data),                                        \n\t\t.src_channel         (cmd_xbar_mux_001_src_channel),                                     \n\t\t.src_startofpacket   (cmd_xbar_mux_001_src_startofpacket),                               \n\t\t.src_endofpacket     (cmd_xbar_mux_001_src_endofpacket),                                 \n\t\t.sink0_ready         (cmd_xbar_demux_src1_ready),                                        \n\t\t.sink0_valid         (cmd_xbar_demux_src1_valid),                                        \n\t\t.sink0_channel       (cmd_xbar_demux_src1_channel),                                      \n\t\t.sink0_data          (cmd_xbar_demux_src1_data),                                         \n\t\t.sink0_startofpacket (cmd_xbar_demux_src1_startofpacket),                                \n\t\t.sink0_endofpacket   (cmd_xbar_demux_src1_endofpacket)                                   \n\t);\n\n\tsoc_system_mm_interconnect_1_rsp_xbar_demux rsp_xbar_demux (\n\t\t.clk                (clk_0_clk_clk),                                                    \n\t\t.reset              (hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset), \n\t\t.sink_ready         (width_adapter_002_src_ready),                                      \n\t\t.sink_channel       (width_adapter_002_src_channel),                                    \n\t\t.sink_data          (width_adapter_002_src_data),                                       \n\t\t.sink_startofpacket (width_adapter_002_src_startofpacket),                              \n\t\t.sink_endofpacket   (width_adapter_002_src_endofpacket),                                \n\t\t.sink_valid         (width_adapter_002_src_valid),                                      \n\t\t.src0_ready         (rsp_xbar_demux_src0_ready),                                        \n\t\t.src0_valid         (rsp_xbar_demux_src0_valid),                                        \n\t\t.src0_data          (rsp_xbar_demux_src0_data),                                         \n\t\t.src0_channel       (rsp_xbar_demux_src0_channel),                                      \n\t\t.src0_startofpacket (rsp_xbar_demux_src0_startofpacket),                                \n\t\t.src0_endofpacket   (rsp_xbar_demux_src0_endofpacket)                                   \n\t);\n\n\tsoc_system_mm_interconnect_1_rsp_xbar_demux rsp_xbar_demux_001 (\n\t\t.clk                (clk_0_clk_clk),                                                    \n\t\t.reset              (hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset), \n\t\t.sink_ready         (width_adapter_003_src_ready),                                      \n\t\t.sink_channel       (width_adapter_003_src_channel),                                    \n\t\t.sink_data          (width_adapter_003_src_data),                                       \n\t\t.sink_startofpacket (width_adapter_003_src_startofpacket),                              \n\t\t.sink_endofpacket   (width_adapter_003_src_endofpacket),                                \n\t\t.sink_valid         (width_adapter_003_src_valid),                                      \n\t\t.src0_ready         (rsp_xbar_demux_001_src0_ready),                                    \n\t\t.src0_valid         (rsp_xbar_demux_001_src0_valid),                                    \n\t\t.src0_data          (rsp_xbar_demux_001_src0_data),                                     \n\t\t.src0_channel       (rsp_xbar_demux_001_src0_channel),                                  \n\t\t.src0_startofpacket (rsp_xbar_demux_001_src0_startofpacket),                            \n\t\t.src0_endofpacket   (rsp_xbar_demux_001_src0_endofpacket)                               \n\t);\n\n\tsoc_system_mm_interconnect_1_rsp_xbar_mux rsp_xbar_mux (\n\t\t.clk                 (clk_0_clk_clk),                                                     \n\t\t.reset               (master_secure_master_translator_reset_reset_bridge_in_reset_reset), \n\t\t.src_ready           (rsp_xbar_mux_src_ready),                                            \n\t\t.src_valid           (rsp_xbar_mux_src_valid),                                            \n\t\t.src_data            (rsp_xbar_mux_src_data),                                             \n\t\t.src_channel         (rsp_xbar_mux_src_channel),                                          \n\t\t.src_startofpacket   (rsp_xbar_mux_src_startofpacket),                                    \n\t\t.src_endofpacket     (rsp_xbar_mux_src_endofpacket),                                      \n\t\t.sink0_ready         (rsp_xbar_demux_src0_ready),                                         \n\t\t.sink0_valid         (rsp_xbar_demux_src0_valid),                                         \n\t\t.sink0_channel       (rsp_xbar_demux_src0_channel),                                       \n\t\t.sink0_data          (rsp_xbar_demux_src0_data),                                          \n\t\t.sink0_startofpacket (rsp_xbar_demux_src0_startofpacket),                                 \n\t\t.sink0_endofpacket   (rsp_xbar_demux_src0_endofpacket),                                   \n\t\t.sink1_ready         (rsp_xbar_demux_001_src0_ready),                                     \n\t\t.sink1_valid         (rsp_xbar_demux_001_src0_valid),                                     \n\t\t.sink1_channel       (rsp_xbar_demux_001_src0_channel),                                   \n\t\t.sink1_data          (rsp_xbar_demux_001_src0_data),                                      \n\t\t.sink1_startofpacket (rsp_xbar_demux_001_src0_startofpacket),                             \n\t\t.sink1_endofpacket   (rsp_xbar_demux_001_src0_endofpacket)                                \n\t);\n\n\taltera_merlin_width_adapter #(\n\t\t.IN_PKT_ADDR_H                 (67),\n\t\t.IN_PKT_ADDR_L                 (36),\n\t\t.IN_PKT_DATA_H                 (31),\n\t\t.IN_PKT_DATA_L                 (0),\n\t\t.IN_PKT_BYTEEN_H               (35),\n\t\t.IN_PKT_BYTEEN_L               (32),\n\t\t.IN_PKT_BYTE_CNT_H             (81),\n\t\t.IN_PKT_BYTE_CNT_L             (74),\n\t\t.IN_PKT_TRANS_COMPRESSED_READ  (68),\n\t\t.IN_PKT_BURSTWRAP_H            (89),\n\t\t.IN_PKT_BURSTWRAP_L            (82),\n\t\t.IN_PKT_BURST_SIZE_H           (92),\n\t\t.IN_PKT_BURST_SIZE_L           (90),\n\t\t.IN_PKT_RESPONSE_STATUS_H      (114),\n\t\t.IN_PKT_RESPONSE_STATUS_L      (113),\n\t\t.IN_PKT_TRANS_EXCLUSIVE        (73),\n\t\t.IN_PKT_BURST_TYPE_H           (94),\n\t\t.IN_PKT_BURST_TYPE_L           (93),\n\t\t.IN_PKT_ORI_BURST_SIZE_L       (115),\n\t\t.IN_PKT_ORI_BURST_SIZE_H       (117),\n\t\t.IN_ST_DATA_W                  (118),\n\t\t.OUT_PKT_ADDR_H                (103),\n\t\t.OUT_PKT_ADDR_L                (72),\n\t\t.OUT_PKT_DATA_H                (63),\n\t\t.OUT_PKT_DATA_L                (0),\n\t\t.OUT_PKT_BYTEEN_H              (71),\n\t\t.OUT_PKT_BYTEEN_L              (64),\n\t\t.OUT_PKT_BYTE_CNT_H            (117),\n\t\t.OUT_PKT_BYTE_CNT_L            (110),\n\t\t.OUT_PKT_TRANS_COMPRESSED_READ (104),\n\t\t.OUT_PKT_BURST_SIZE_H          (128),\n\t\t.OUT_PKT_BURST_SIZE_L          (126),\n\t\t.OUT_PKT_RESPONSE_STATUS_H     (150),\n\t\t.OUT_PKT_RESPONSE_STATUS_L     (149),\n\t\t.OUT_PKT_TRANS_EXCLUSIVE       (109),\n\t\t.OUT_PKT_BURST_TYPE_H          (130),\n\t\t.OUT_PKT_BURST_TYPE_L          (129),\n\t\t.OUT_PKT_ORI_BURST_SIZE_L      (151),\n\t\t.OUT_PKT_ORI_BURST_SIZE_H      (153),\n\t\t.OUT_ST_DATA_W                 (154),\n\t\t.ST_CHANNEL_W                  (2),\n\t\t.OPTIMIZE_FOR_RSP              (0),\n\t\t.RESPONSE_PATH                 (0),\n\t\t.CONSTANT_BURST_SIZE           (0),\n\t\t.PACKING                       (0)\n\t) width_adapter (\n\t\t.clk                  (clk_0_clk_clk),                                                    \n\t\t.reset                (hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset), \n\t\t.in_valid             (cmd_xbar_mux_src_valid),                                           \n\t\t.in_channel           (cmd_xbar_mux_src_channel),                                         \n\t\t.in_startofpacket     (cmd_xbar_mux_src_startofpacket),                                   \n\t\t.in_endofpacket       (cmd_xbar_mux_src_endofpacket),                                     \n\t\t.in_ready             (cmd_xbar_mux_src_ready),                                           \n\t\t.in_data              (cmd_xbar_mux_src_data),                                            \n\t\t.out_endofpacket      (width_adapter_src_endofpacket),                                    \n\t\t.out_data             (width_adapter_src_data),                                           \n\t\t.out_channel          (width_adapter_src_channel),                                        \n\t\t.out_valid            (width_adapter_src_valid),                                          \n\t\t.out_ready            (width_adapter_src_ready),                                          \n\t\t.out_startofpacket    (width_adapter_src_startofpacket),                                  \n\t\t.in_command_size_data (3'b000)                                                            \n\t);\n\n\taltera_merlin_width_adapter #(\n\t\t.IN_PKT_ADDR_H                 (67),\n\t\t.IN_PKT_ADDR_L                 (36),\n\t\t.IN_PKT_DATA_H                 (31),\n\t\t.IN_PKT_DATA_L                 (0),\n\t\t.IN_PKT_BYTEEN_H               (35),\n\t\t.IN_PKT_BYTEEN_L               (32),\n\t\t.IN_PKT_BYTE_CNT_H             (81),\n\t\t.IN_PKT_BYTE_CNT_L             (74),\n\t\t.IN_PKT_TRANS_COMPRESSED_READ  (68),\n\t\t.IN_PKT_BURSTWRAP_H            (89),\n\t\t.IN_PKT_BURSTWRAP_L            (82),\n\t\t.IN_PKT_BURST_SIZE_H           (92),\n\t\t.IN_PKT_BURST_SIZE_L           (90),\n\t\t.IN_PKT_RESPONSE_STATUS_H      (114),\n\t\t.IN_PKT_RESPONSE_STATUS_L      (113),\n\t\t.IN_PKT_TRANS_EXCLUSIVE        (73),\n\t\t.IN_PKT_BURST_TYPE_H           (94),\n\t\t.IN_PKT_BURST_TYPE_L           (93),\n\t\t.IN_PKT_ORI_BURST_SIZE_L       (115),\n\t\t.IN_PKT_ORI_BURST_SIZE_H       (117),\n\t\t.IN_ST_DATA_W                  (118),\n\t\t.OUT_PKT_ADDR_H                (103),\n\t\t.OUT_PKT_ADDR_L                (72),\n\t\t.OUT_PKT_DATA_H                (63),\n\t\t.OUT_PKT_DATA_L                (0),\n\t\t.OUT_PKT_BYTEEN_H              (71),\n\t\t.OUT_PKT_BYTEEN_L              (64),\n\t\t.OUT_PKT_BYTE_CNT_H            (117),\n\t\t.OUT_PKT_BYTE_CNT_L            (110),\n\t\t.OUT_PKT_TRANS_COMPRESSED_READ (104),\n\t\t.OUT_PKT_BURST_SIZE_H          (128),\n\t\t.OUT_PKT_BURST_SIZE_L          (126),\n\t\t.OUT_PKT_RESPONSE_STATUS_H     (150),\n\t\t.OUT_PKT_RESPONSE_STATUS_L     (149),\n\t\t.OUT_PKT_TRANS_EXCLUSIVE       (109),\n\t\t.OUT_PKT_BURST_TYPE_H          (130),\n\t\t.OUT_PKT_BURST_TYPE_L          (129),\n\t\t.OUT_PKT_ORI_BURST_SIZE_L      (151),\n\t\t.OUT_PKT_ORI_BURST_SIZE_H      (153),\n\t\t.OUT_ST_DATA_W                 (154),\n\t\t.ST_CHANNEL_W                  (2),\n\t\t.OPTIMIZE_FOR_RSP              (0),\n\t\t.RESPONSE_PATH                 (0),\n\t\t.CONSTANT_BURST_SIZE           (0),\n\t\t.PACKING                       (0)\n\t) width_adapter_001 (\n\t\t.clk                  (clk_0_clk_clk),                                                    \n\t\t.reset                (hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset), \n\t\t.in_valid             (cmd_xbar_mux_001_src_valid),                                       \n\t\t.in_channel           (cmd_xbar_mux_001_src_channel),                                     \n\t\t.in_startofpacket     (cmd_xbar_mux_001_src_startofpacket),                               \n\t\t.in_endofpacket       (cmd_xbar_mux_001_src_endofpacket),                                 \n\t\t.in_ready             (cmd_xbar_mux_001_src_ready),                                       \n\t\t.in_data              (cmd_xbar_mux_001_src_data),                                        \n\t\t.out_endofpacket      (width_adapter_001_src_endofpacket),                                \n\t\t.out_data             (width_adapter_001_src_data),                                       \n\t\t.out_channel          (width_adapter_001_src_channel),                                    \n\t\t.out_valid            (width_adapter_001_src_valid),                                      \n\t\t.out_ready            (width_adapter_001_src_ready),                                      \n\t\t.out_startofpacket    (width_adapter_001_src_startofpacket),                              \n\t\t.in_command_size_data (3'b000)                                                            \n\t);\n\n\taltera_merlin_width_adapter #(\n\t\t.IN_PKT_ADDR_H                 (103),\n\t\t.IN_PKT_ADDR_L                 (72),\n\t\t.IN_PKT_DATA_H                 (63),\n\t\t.IN_PKT_DATA_L                 (0),\n\t\t.IN_PKT_BYTEEN_H               (71),\n\t\t.IN_PKT_BYTEEN_L               (64),\n\t\t.IN_PKT_BYTE_CNT_H             (117),\n\t\t.IN_PKT_BYTE_CNT_L             (110),\n\t\t.IN_PKT_TRANS_COMPRESSED_READ  (104),\n\t\t.IN_PKT_BURSTWRAP_H            (125),\n\t\t.IN_PKT_BURSTWRAP_L            (118),\n\t\t.IN_PKT_BURST_SIZE_H           (128),\n\t\t.IN_PKT_BURST_SIZE_L           (126),\n\t\t.IN_PKT_RESPONSE_STATUS_H      (150),\n\t\t.IN_PKT_RESPONSE_STATUS_L      (149),\n\t\t.IN_PKT_TRANS_EXCLUSIVE        (109),\n\t\t.IN_PKT_BURST_TYPE_H           (130),\n\t\t.IN_PKT_BURST_TYPE_L           (129),\n\t\t.IN_PKT_ORI_BURST_SIZE_L       (151),\n\t\t.IN_PKT_ORI_BURST_SIZE_H       (153),\n\t\t.IN_ST_DATA_W                  (154),\n\t\t.OUT_PKT_ADDR_H                (67),\n\t\t.OUT_PKT_ADDR_L                (36),\n\t\t.OUT_PKT_DATA_H                (31),\n\t\t.OUT_PKT_DATA_L                (0),\n\t\t.OUT_PKT_BYTEEN_H              (35),\n\t\t.OUT_PKT_BYTEEN_L              (32),\n\t\t.OUT_PKT_BYTE_CNT_H            (81),\n\t\t.OUT_PKT_BYTE_CNT_L            (74),\n\t\t.OUT_PKT_TRANS_COMPRESSED_READ (68),\n\t\t.OUT_PKT_BURST_SIZE_H          (92),\n\t\t.OUT_PKT_BURST_SIZE_L          (90),\n\t\t.OUT_PKT_RESPONSE_STATUS_H     (114),\n\t\t.OUT_PKT_RESPONSE_STATUS_L     (113),\n\t\t.OUT_PKT_TRANS_EXCLUSIVE       (73),\n\t\t.OUT_PKT_BURST_TYPE_H          (94),\n\t\t.OUT_PKT_BURST_TYPE_L          (93),\n\t\t.OUT_PKT_ORI_BURST_SIZE_L      (115),\n\t\t.OUT_PKT_ORI_BURST_SIZE_H      (117),\n\t\t.OUT_ST_DATA_W                 (118),\n\t\t.ST_CHANNEL_W                  (2),\n\t\t.OPTIMIZE_FOR_RSP              (1),\n\t\t.RESPONSE_PATH                 (1),\n\t\t.CONSTANT_BURST_SIZE           (0),\n\t\t.PACKING                       (1)\n\t) width_adapter_002 (\n\t\t.clk                  (clk_0_clk_clk),                                                    \n\t\t.reset                (hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset), \n\t\t.in_valid             (id_router_src_valid),                                              \n\t\t.in_channel           (id_router_src_channel),                                            \n\t\t.in_startofpacket     (id_router_src_startofpacket),                                      \n\t\t.in_endofpacket       (id_router_src_endofpacket),                                        \n\t\t.in_ready             (id_router_src_ready),                                              \n\t\t.in_data              (id_router_src_data),                                               \n\t\t.out_endofpacket      (width_adapter_002_src_endofpacket),                                \n\t\t.out_data             (width_adapter_002_src_data),                                       \n\t\t.out_channel          (width_adapter_002_src_channel),                                    \n\t\t.out_valid            (width_adapter_002_src_valid),                                      \n\t\t.out_ready            (width_adapter_002_src_ready),                                      \n\t\t.out_startofpacket    (width_adapter_002_src_startofpacket),                              \n\t\t.in_command_size_data (3'b000)                                                            \n\t);\n\n\taltera_merlin_width_adapter #(\n\t\t.IN_PKT_ADDR_H                 (103),\n\t\t.IN_PKT_ADDR_L                 (72),\n\t\t.IN_PKT_DATA_H                 (63),\n\t\t.IN_PKT_DATA_L                 (0),\n\t\t.IN_PKT_BYTEEN_H               (71),\n\t\t.IN_PKT_BYTEEN_L               (64),\n\t\t.IN_PKT_BYTE_CNT_H             (117),\n\t\t.IN_PKT_BYTE_CNT_L             (110),\n\t\t.IN_PKT_TRANS_COMPRESSED_READ  (104),\n\t\t.IN_PKT_BURSTWRAP_H            (125),\n\t\t.IN_PKT_BURSTWRAP_L            (118),\n\t\t.IN_PKT_BURST_SIZE_H           (128),\n\t\t.IN_PKT_BURST_SIZE_L           (126),\n\t\t.IN_PKT_RESPONSE_STATUS_H      (150),\n\t\t.IN_PKT_RESPONSE_STATUS_L      (149),\n\t\t.IN_PKT_TRANS_EXCLUSIVE        (109),\n\t\t.IN_PKT_BURST_TYPE_H           (130),\n\t\t.IN_PKT_BURST_TYPE_L           (129),\n\t\t.IN_PKT_ORI_BURST_SIZE_L       (151),\n\t\t.IN_PKT_ORI_BURST_SIZE_H       (153),\n\t\t.IN_ST_DATA_W                  (154),\n\t\t.OUT_PKT_ADDR_H                (67),\n\t\t.OUT_PKT_ADDR_L                (36),\n\t\t.OUT_PKT_DATA_H                (31),\n\t\t.OUT_PKT_DATA_L                (0),\n\t\t.OUT_PKT_BYTEEN_H              (35),\n\t\t.OUT_PKT_BYTEEN_L              (32),\n\t\t.OUT_PKT_BYTE_CNT_H            (81),\n\t\t.OUT_PKT_BYTE_CNT_L            (74),\n\t\t.OUT_PKT_TRANS_COMPRESSED_READ (68),\n\t\t.OUT_PKT_BURST_SIZE_H          (92),\n\t\t.OUT_PKT_BURST_SIZE_L          (90),\n\t\t.OUT_PKT_RESPONSE_STATUS_H     (114),\n\t\t.OUT_PKT_RESPONSE_STATUS_L     (113),\n\t\t.OUT_PKT_TRANS_EXCLUSIVE       (73),\n\t\t.OUT_PKT_BURST_TYPE_H          (94),\n\t\t.OUT_PKT_BURST_TYPE_L          (93),\n\t\t.OUT_PKT_ORI_BURST_SIZE_L      (115),\n\t\t.OUT_PKT_ORI_BURST_SIZE_H      (117),\n\t\t.OUT_ST_DATA_W                 (118),\n\t\t.ST_CHANNEL_W                  (2),\n\t\t.OPTIMIZE_FOR_RSP              (1),\n\t\t.RESPONSE_PATH                 (1),\n\t\t.CONSTANT_BURST_SIZE           (0),\n\t\t.PACKING                       (1)\n\t) width_adapter_003 (\n\t\t.clk                  (clk_0_clk_clk),                                                    \n\t\t.reset                (hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset), \n\t\t.in_valid             (id_router_001_src_valid),                                          \n\t\t.in_channel           (id_router_001_src_channel),                                        \n\t\t.in_startofpacket     (id_router_001_src_startofpacket),                                  \n\t\t.in_endofpacket       (id_router_001_src_endofpacket),                                    \n\t\t.in_ready             (id_router_001_src_ready),                                          \n\t\t.in_data              (id_router_001_src_data),                                           \n\t\t.out_endofpacket      (width_adapter_003_src_endofpacket),                                \n\t\t.out_data             (width_adapter_003_src_data),                                       \n\t\t.out_channel          (width_adapter_003_src_channel),                                    \n\t\t.out_valid            (width_adapter_003_src_valid),                                      \n\t\t.out_ready            (width_adapter_003_src_ready),                                      \n\t\t.out_startofpacket    (width_adapter_003_src_startofpacket),                              \n\t\t.in_command_size_data (3'b000)                                                            \n\t);\n\nendmodule\n```"
        },
        {
            "role": "user",
            "content": "Based on the provided original Verilog code, its comments and above answers, generate a detailed specification for the module. Include the following information in a single, concise paragraph:\n1. The name of the module.\n2. A simple explanation of the module's functionality.\n3. The input and output ports, along with a brief explanation of each.\n4. The internal signals used within the module, with a brief explanation of their purpose.\n5. An overview of the different blocks or sections in the code and their functions.\nEnsure that the specification is clear and accurately reflects the details from the code and comments.\nYour answer should be structured and well-organized, providing a comprehensive and detailed overview of the module's design and operation.\nPlease provide your answer in the following format:\nModule name: [module name]. Module specification: [module specification]."
        },
        {
            "role": "assistant",
            "content": "Module name: soc_system_mm_interconnect_1. Module specification: This module implements an interconnect system for a System-on-Chip (SoC) design, managing communication between a master device (likely a processor or DMA controller) and an AXI slave (possibly memory or peripherals). It supports AXI protocol features such as bursts, multiple channels, and different data widths. The module has input ports for clock, reset, master interface signals (address, data, control), and AXI slave interface signals (handshaking, data, responses). Output ports include AXI slave interface signals for address, data, and control channels, as well as master interface signals for wait requests and read data. Internally, the module uses various signals for address routing, command and response handling, data width adaptation, and arbitration. The code is structured into sections for master and slave agents, address routers, command and response"
        }
    ],
    "claude-message": [
        {
            "role": "user",
            "content": [
                {
                    "type": "text",
                    "text": "You are an expert in hardware design with a deep understanding of Verilog RTL codes. Now I want to train a large language model for code comment generation tasks specifically focused on Verilog RTL codes. And I want you to help me process the raw data, transforming it into suitable formats that can serve as inputs and outputs for the model."
                },
                {
                    "type": "text",
                    "text": "Name of the module and its functionality is as follows: \nModule name: soc_system_mm_interconnect_1\n\nExplanation: This module appears to be an interconnect or bus system for a System-on-Chip (SoC) design. It manages communication between a master device (likely a processor or DMA controller) and a slave device (an AXI slave, possibly memory or peripherals). The module includes components for address routing, command and response handling, data width adaptation, and arbitration. It supports AXI protocol features such as bursts, multiple channels, and different data widths between master and slave interfaces. The interconnect likely facilitates efficient data transfer and protocol conversion between different parts of the SoC system."
                },
                {
                    "type": "text",
                    "text": "Input and output ports and their explanation is as follows: \nInput ports:\n- clk_0_clk_clk\n- hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset\n- master_secure_clk_reset_reset_bridge_in_reset_reset\n- master_secure_master_translator_reset_reset_bridge_in_reset_reset\n- master_secure_master_address\n- master_secure_master_byteenable\n- master_secure_master_read\n- master_secure_master_write\n- master_secure_master_writedata\n- hps_0_f2h_axi_slave_awready\n- hps_0_f2h_axi_slave_wready\n- hps_0_f2h_axi_slave_bid\n- hps_0_f2h_axi_slave_bresp\n- hps_0_f2h_axi_slave_bvalid\n- hps_0_f2h_axi_slave_arready\n- hps_0_f2h_axi_slave_rid\n- hps_0_f2h_axi_slave_rdata\n- hps_0_f2h_axi_slave_rresp\n- hps_0_f2h_axi_slave_rlast\n- hps_0_f2h_axi_slave_rvalid\n\nExplanation: These input ports include clock and reset signals, master interface signals for address, data, and control, and AXI slave interface signals for handshaking, data, and responses.\n\nOutput ports:\n- hps_0_f2h_axi_slave_awid\n- hps_0_f2h_axi_slave_awaddr\n- hps_0_f2h_axi_slave_awlen\n- hps_0_f2h_axi_slave_awsize\n- hps_0_f2h_axi_slave_awburst\n- hps_0_f2h_axi_slave_awlock\n- hps_0_f2h_axi_slave_awcache\n- hps_0_f2h_axi_slave_awprot\n- hps_0_f2h_axi_slave_awuser\n- hps_0_f2h_axi_slave_awvalid\n- hps_0_f2h_axi_slave_wid\n- hps_0_f2h_axi_slave_wdata\n- hps_0_f2h_axi_slave_wstrb\n- hps_0_f2h_axi_slave_wlast\n- hps_0_f2h_axi_slave_wvalid\n- hps_0_f2h_axi_slave_bready\n- hps_0_f2h_axi_slave_arid\n- hps_0_f2h_axi_slave_araddr\n- hps_0_f2h_axi_slave_arlen\n- hps_0_f2h_axi_slave_arsize\n- hps_0_f2h_axi_slave_arburst\n- hps_0_f2h_axi_slave_arlock\n- hps_0_f2h_axi_slave_arcache\n- hps_0_f2h_axi_slave_arprot\n- hps_0_f2h_axi_slave_aruser\n- hps_0_f2h_axi_slave_arvalid\n- hps_0_f2h_axi_slave_rready\n- master_secure_master_waitrequest\n- master_secure_master_readdata\n- master_secure_master_readdatavalid\n\nExplanation: These output ports include AXI slave interface signals for address, data, and control channels, as well as master interface signals for wait requests, read data, and read data valid indications."
                },
                {
                    "type": "text",
                    "text": "Internal signals and their explanation is as follows: \nInternal signals:\n- master_secure_master_translator_avalon_universal_master_0_* signals\n- hps_0_f2h_axi_slave_agent_*_rp_* signals\n- addr_router_src_* signals\n- limiter_cmd_src_* and limiter_rsp_src_* signals\n- rsp_xbar_mux_src_* signals\n- cmd_xbar_demux_src* signals\n- rsp_xbar_demux_*_src* signals\n- cmd_xbar_mux_*_src_* signals\n- width_adapter_*_src_* signals\n- id_router_*_src_* signals\n\nExplanation:\n- master_secure_master_translator_avalon_universal_master_0_* signals: Interface signals between the master translator and the interconnect, carrying address, data, and control information.\n- hps_0_f2h_axi_slave_agent_*_rp_* signals: Response path signals from the AXI slave agent, carrying read and write response information.\n- addr_router_src_* signals: Output signals from the address router, directing commands to appropriate destinations.\n- limiter_cmd_src_* and limiter_rsp_src_* signals: Command and response signals from/to the traffic limiter, controlling data flow.\n- rsp_xbar_mux_src_* signals: Multiplexed response signals from the crossbar, combining responses from multiple sources.\n- cmd_xbar_demux_src* signals: Demultiplexed command signals, splitting commands to multiple destinations.\n- rsp_xbar_demux_*_src* signals: Demultiplexed response signals, separating responses from different sources.\n- cmd_xbar_mux_*_src_* signals: Multiplexed command signals, combining commands from multiple sources.\n- width_adapter_*_src_* signals: Output signals from width adapters, converting between different data widths.\n- id_router_*_src_* signals: Output signals from ID routers, managing transaction IDs for proper routing.\n\nThese internal signals facilitate the interconnect's functionality, managing data flow, routing, and protocol conversion between the master and slave interfaces."
                },
                {
                    "type": "text",
                    "text": "Original Verilog code is as follows: \n<code>\n\n\n\n\n\n\n`timescale 1 ps / 1 ps\nmodule soc_system_mm_interconnect_1 (\n\t\toutput wire [7:0]  hps_0_f2h_axi_slave_awid,                                          \n\t\toutput wire [31:0] hps_0_f2h_axi_slave_awaddr,                                        \n\t\toutput wire [3:0]  hps_0_f2h_axi_slave_awlen,                                         \n\t\toutput wire [2:0]  hps_0_f2h_axi_slave_awsize,                                        \n\t\toutput wire [1:0]  hps_0_f2h_axi_slave_awburst,                                       \n\t\toutput wire [1:0]  hps_0_f2h_axi_slave_awlock,                                        \n\t\toutput wire [3:0]  hps_0_f2h_axi_slave_awcache,                                       \n\t\toutput wire [2:0]  hps_0_f2h_axi_slave_awprot,                                        \n\t\toutput wire [4:0]  hps_0_f2h_axi_slave_awuser,                                        \n\t\toutput wire        hps_0_f2h_axi_slave_awvalid,                                       \n\t\tinput  wire        hps_0_f2h_axi_slave_awready,                                       \n\t\toutput wire [7:0]  hps_0_f2h_axi_slave_wid,                                           \n\t\toutput wire [63:0] hps_0_f2h_axi_slave_wdata,                                         \n\t\toutput wire [7:0]  hps_0_f2h_axi_slave_wstrb,                                         \n\t\toutput wire        hps_0_f2h_axi_slave_wlast,                                         \n\t\toutput wire        hps_0_f2h_axi_slave_wvalid,                                        \n\t\tinput  wire        hps_0_f2h_axi_slave_wready,                                        \n\t\tinput  wire [7:0]  hps_0_f2h_axi_slave_bid,                                           \n\t\tinput  wire [1:0]  hps_0_f2h_axi_slave_bresp,                                         \n\t\tinput  wire        hps_0_f2h_axi_slave_bvalid,                                        \n\t\toutput wire        hps_0_f2h_axi_slave_bready,                                        \n\t\toutput wire [7:0]  hps_0_f2h_axi_slave_arid,                                          \n\t\toutput wire [31:0] hps_0_f2h_axi_slave_araddr,                                        \n\t\toutput wire [3:0]  hps_0_f2h_axi_slave_arlen,                                         \n\t\toutput wire [2:0]  hps_0_f2h_axi_slave_arsize,                                        \n\t\toutput wire [1:0]  hps_0_f2h_axi_slave_arburst,                                       \n\t\toutput wire [1:0]  hps_0_f2h_axi_slave_arlock,                                        \n\t\toutput wire [3:0]  hps_0_f2h_axi_slave_arcache,                                       \n\t\toutput wire [2:0]  hps_0_f2h_axi_slave_arprot,                                        \n\t\toutput wire [4:0]  hps_0_f2h_axi_slave_aruser,                                        \n\t\toutput wire        hps_0_f2h_axi_slave_arvalid,                                       \n\t\tinput  wire        hps_0_f2h_axi_slave_arready,                                       \n\t\tinput  wire [7:0]  hps_0_f2h_axi_slave_rid,                                           \n\t\tinput  wire [63:0] hps_0_f2h_axi_slave_rdata,                                         \n\t\tinput  wire [1:0]  hps_0_f2h_axi_slave_rresp,                                         \n\t\tinput  wire        hps_0_f2h_axi_slave_rlast,                                         \n\t\tinput  wire        hps_0_f2h_axi_slave_rvalid,                                        \n\t\toutput wire        hps_0_f2h_axi_slave_rready,                                        \n\t\tinput  wire        clk_0_clk_clk,                                                     \n\t\tinput  wire        hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset,  \n\t\tinput  wire        master_secure_clk_reset_reset_bridge_in_reset_reset,               \n\t\tinput  wire        master_secure_master_translator_reset_reset_bridge_in_reset_reset, \n\t\tinput  wire [31:0] master_secure_master_address,                                      \n\t\toutput wire        master_secure_master_waitrequest,                                  \n\t\tinput  wire [3:0]  master_secure_master_byteenable,                                   \n\t\tinput  wire        master_secure_master_read,                                         \n\t\toutput wire [31:0] master_secure_master_readdata,                                     \n\t\toutput wire        master_secure_master_readdatavalid,                                \n\t\tinput  wire        master_secure_master_write,                                        \n\t\tinput  wire [31:0] master_secure_master_writedata                                     \n\t);\n\n\twire          master_secure_master_translator_avalon_universal_master_0_waitrequest;            \n\twire    [2:0] master_secure_master_translator_avalon_universal_master_0_burstcount;             \n\twire   [31:0] master_secure_master_translator_avalon_universal_master_0_writedata;              \n\twire   [31:0] master_secure_master_translator_avalon_universal_master_0_address;                \n\twire          master_secure_master_translator_avalon_universal_master_0_lock;                   \n\twire          master_secure_master_translator_avalon_universal_master_0_write;                  \n\twire          master_secure_master_translator_avalon_universal_master_0_read;                   \n\twire   [31:0] master_secure_master_translator_avalon_universal_master_0_readdata;               \n\twire          master_secure_master_translator_avalon_universal_master_0_debugaccess;            \n\twire    [3:0] master_secure_master_translator_avalon_universal_master_0_byteenable;             \n\twire          master_secure_master_translator_avalon_universal_master_0_readdatavalid;          \n\twire          master_secure_master_translator_avalon_universal_master_0_agent_cp_endofpacket;   \n\twire          master_secure_master_translator_avalon_universal_master_0_agent_cp_valid;         \n\twire          master_secure_master_translator_avalon_universal_master_0_agent_cp_startofpacket; \n\twire  [117:0] master_secure_master_translator_avalon_universal_master_0_agent_cp_data;          \n\twire          master_secure_master_translator_avalon_universal_master_0_agent_cp_ready;         \n\twire          hps_0_f2h_axi_slave_agent_write_rp_endofpacket;                                   \n\twire          hps_0_f2h_axi_slave_agent_write_rp_valid;                                         \n\twire          hps_0_f2h_axi_slave_agent_write_rp_startofpacket;                                 \n\twire  [153:0] hps_0_f2h_axi_slave_agent_write_rp_data;                                          \n\twire          hps_0_f2h_axi_slave_agent_write_rp_ready;                                         \n\twire          hps_0_f2h_axi_slave_agent_read_rp_endofpacket;                                    \n\twire          hps_0_f2h_axi_slave_agent_read_rp_valid;                                          \n\twire          hps_0_f2h_axi_slave_agent_read_rp_startofpacket;                                  \n\twire  [153:0] hps_0_f2h_axi_slave_agent_read_rp_data;                                           \n\twire          hps_0_f2h_axi_slave_agent_read_rp_ready;                                          \n\twire          addr_router_src_endofpacket;                                                      \n\twire          addr_router_src_valid;                                                            \n\twire          addr_router_src_startofpacket;                                                    \n\twire  [117:0] addr_router_src_data;                                                             \n\twire    [1:0] addr_router_src_channel;                                                          \n\twire          addr_router_src_ready;                                                            \n\twire          limiter_cmd_src_endofpacket;                                                      \n\twire          limiter_cmd_src_startofpacket;                                                    \n\twire  [117:0] limiter_cmd_src_data;                                                             \n\twire    [1:0] limiter_cmd_src_channel;                                                          \n\twire          limiter_cmd_src_ready;                                                            \n\twire          rsp_xbar_mux_src_endofpacket;                                                     \n\twire          rsp_xbar_mux_src_valid;                                                           \n\twire          rsp_xbar_mux_src_startofpacket;                                                   \n\twire  [117:0] rsp_xbar_mux_src_data;                                                            \n\twire    [1:0] rsp_xbar_mux_src_channel;                                                         \n\twire          rsp_xbar_mux_src_ready;                                                           \n\twire          limiter_rsp_src_endofpacket;                                                      \n\twire          limiter_rsp_src_valid;                                                            \n\twire          limiter_rsp_src_startofpacket;                                                    \n\twire  [117:0] limiter_rsp_src_data;                                                             \n\twire    [1:0] limiter_rsp_src_channel;                                                          \n\twire          limiter_rsp_src_ready;                                                            \n\twire          cmd_xbar_demux_src0_endofpacket;                                                  \n\twire          cmd_xbar_demux_src0_valid;                                                        \n\twire          cmd_xbar_demux_src0_startofpacket;                                                \n\twire  [117:0] cmd_xbar_demux_src0_data;                                                         \n\twire    [1:0] cmd_xbar_demux_src0_channel;                                                      \n\twire          cmd_xbar_demux_src0_ready;                                                        \n\twire          cmd_xbar_demux_src1_endofpacket;                                                  \n\twire          cmd_xbar_demux_src1_valid;                                                        \n\twire          cmd_xbar_demux_src1_startofpacket;                                                \n\twire  [117:0] cmd_xbar_demux_src1_data;                                                         \n\twire    [1:0] cmd_xbar_demux_src1_channel;                                                      \n\twire          cmd_xbar_demux_src1_ready;                                                        \n\twire          rsp_xbar_demux_src0_endofpacket;                                                  \n\twire          rsp_xbar_demux_src0_valid;                                                        \n\twire          rsp_xbar_demux_src0_startofpacket;                                                \n\twire  [117:0] rsp_xbar_demux_src0_data;                                                         \n\twire    [1:0] rsp_xbar_demux_src0_channel;                                                      \n\twire          rsp_xbar_demux_src0_ready;                                                        \n\twire          rsp_xbar_demux_001_src0_endofpacket;                                              \n\twire          rsp_xbar_demux_001_src0_valid;                                                    \n\twire          rsp_xbar_demux_001_src0_startofpacket;                                            \n\twire  [117:0] rsp_xbar_demux_001_src0_data;                                                     \n\twire    [1:0] rsp_xbar_demux_001_src0_channel;                                                  \n\twire          rsp_xbar_demux_001_src0_ready;                                                    \n\twire          cmd_xbar_mux_src_endofpacket;                                                     \n\twire          cmd_xbar_mux_src_valid;                                                           \n\twire          cmd_xbar_mux_src_startofpacket;                                                   \n\twire  [117:0] cmd_xbar_mux_src_data;                                                            \n\twire    [1:0] cmd_xbar_mux_src_channel;                                                         \n\twire          cmd_xbar_mux_src_ready;                                                           \n\twire          width_adapter_src_endofpacket;                                                    \n\twire          width_adapter_src_valid;                                                          \n\twire          width_adapter_src_startofpacket;                                                  \n\twire  [153:0] width_adapter_src_data;                                                           \n\twire          width_adapter_src_ready;                                                          \n\twire    [1:0] width_adapter_src_channel;                                                        \n\twire          cmd_xbar_mux_001_src_endofpacket;                                                 \n\twire          cmd_xbar_mux_001_src_valid;                                                       \n\twire          cmd_xbar_mux_001_src_startofpacket;                                               \n\twire  [117:0] cmd_xbar_mux_001_src_data;                                                        \n\twire    [1:0] cmd_xbar_mux_001_src_channel;                                                     \n\twire          cmd_xbar_mux_001_src_ready;                                                       \n\twire          width_adapter_001_src_endofpacket;                                                \n\twire          width_adapter_001_src_valid;                                                      \n\twire          width_adapter_001_src_startofpacket;                                              \n\twire  [153:0] width_adapter_001_src_data;                                                       \n\twire          width_adapter_001_src_ready;                                                      \n\twire    [1:0] width_adapter_001_src_channel;                                                    \n\twire          id_router_src_endofpacket;                                                        \n\twire          id_router_src_valid;                                                              \n\twire          id_router_src_startofpacket;                                                      \n\twire  [153:0] id_router_src_data;                                                               \n\twire    [1:0] id_router_src_channel;                                                            \n\twire          id_router_src_ready;                                                              \n\twire          width_adapter_002_src_endofpacket;                                                \n\twire          width_adapter_002_src_valid;                                                      \n\twire          width_adapter_002_src_startofpacket;                                              \n\twire  [117:0] width_adapter_002_src_data;                                                       \n\twire          width_adapter_002_src_ready;                                                      \n\twire    [1:0] width_adapter_002_src_channel;                                                    \n\twire          id_router_001_src_endofpacket;                                                    \n\twire          id_router_001_src_valid;                                                          \n\twire          id_router_001_src_startofpacket;                                                  \n\twire  [153:0] id_router_001_src_data;                                                           \n\twire    [1:0] id_router_001_src_channel;                                                        \n\twire          id_router_001_src_ready;                                                          \n\twire          width_adapter_003_src_endofpacket;                                                \n\twire          width_adapter_003_src_valid;                                                      \n\twire          width_adapter_003_src_startofpacket;                                              \n\twire  [117:0] width_adapter_003_src_data;                                                       \n\twire          width_adapter_003_src_ready;                                                      \n\twire    [1:0] width_adapter_003_src_channel;                                                    \n\twire    [1:0] limiter_cmd_valid_data;                                                           \n\n\taltera_merlin_master_translator #(\n\t\t.AV_ADDRESS_W                (32),\n\t\t.AV_DATA_W                   (32),\n\t\t.AV_BURSTCOUNT_W             (1),\n\t\t.AV_BYTEENABLE_W             (4),\n\t\t.UAV_ADDRESS_W               (32),\n\t\t.UAV_BURSTCOUNT_W            (3),\n\t\t.USE_READ                    (1),\n\t\t.USE_WRITE                   (1),\n\t\t.USE_BEGINBURSTTRANSFER      (0),\n\t\t.USE_BEGINTRANSFER           (0),\n\t\t.USE_CHIPSELECT              (0),\n\t\t.USE_BURSTCOUNT              (0),\n\t\t.USE_READDATAVALID           (1),\n\t\t.USE_WAITREQUEST             (1),\n\t\t.USE_READRESPONSE            (0),\n\t\t.USE_WRITERESPONSE           (0),\n\t\t.AV_SYMBOLS_PER_WORD         (4),\n\t\t.AV_ADDRESS_SYMBOLS          (1),\n\t\t.AV_BURSTCOUNT_SYMBOLS       (0),\n\t\t.AV_CONSTANT_BURST_BEHAVIOR  (0),\n\t\t.UAV_CONSTANT_BURST_BEHAVIOR (0),\n\t\t.AV_LINEWRAPBURSTS           (0),\n\t\t.AV_REGISTERINCOMINGSIGNALS  (0)\n\t) master_secure_master_translator (\n\t\t.clk                      (clk_0_clk_clk),                                                           \n\t\t.reset                    (master_secure_master_translator_reset_reset_bridge_in_reset_reset),       \n\t\t.uav_address              (master_secure_master_translator_avalon_universal_master_0_address),       \n\t\t.uav_burstcount           (master_secure_master_translator_avalon_universal_master_0_burstcount),    \n\t\t.uav_read                 (master_secure_master_translator_avalon_universal_master_0_read),          \n\t\t.uav_write                (master_secure_master_translator_avalon_universal_master_0_write),         \n\t\t.uav_waitrequest          (master_secure_master_translator_avalon_universal_master_0_waitrequest),   \n\t\t.uav_readdatavalid        (master_secure_master_translator_avalon_universal_master_0_readdatavalid), \n\t\t.uav_byteenable           (master_secure_master_translator_avalon_universal_master_0_byteenable),    \n\t\t.uav_readdata             (master_secure_master_translator_avalon_universal_master_0_readdata),      \n\t\t.uav_writedata            (master_secure_master_translator_avalon_universal_master_0_writedata),     \n\t\t.uav_lock                 (master_secure_master_translator_avalon_universal_master_0_lock),          \n\t\t.uav_debugaccess          (master_secure_master_translator_avalon_universal_master_0_debugaccess),   \n\t\t.av_address               (master_secure_master_address),                                            \n\t\t.av_waitrequest           (master_secure_master_waitrequest),                                        \n\t\t.av_byteenable            (master_secure_master_byteenable),                                         \n\t\t.av_read                  (master_secure_master_read),                                               \n\t\t.av_readdata              (master_secure_master_readdata),                                           \n\t\t.av_readdatavalid         (master_secure_master_readdatavalid),                                      \n\t\t.av_write                 (master_secure_master_write),                                              \n\t\t.av_writedata             (master_secure_master_writedata),                                          \n\t\t.av_burstcount            (1'b1),                                                                    \n\t\t.av_beginbursttransfer    (1'b0),                                                                    \n\t\t.av_begintransfer         (1'b0),                                                                    \n\t\t.av_chipselect            (1'b0),                                                                    \n\t\t.av_lock                  (1'b0),                                                                    \n\t\t.av_debugaccess           (1'b0),                                                                    \n\t\t.uav_clken                (),                                                                        \n\t\t.av_clken                 (1'b1),                                                                    \n\t\t.uav_response             (2'b00),                                                                   \n\t\t.av_response              (),                                                                        \n\t\t.uav_writeresponserequest (),                                                                        \n\t\t.uav_writeresponsevalid   (1'b0),                                                                    \n\t\t.av_writeresponserequest  (1'b0),                                                                    \n\t\t.av_writeresponsevalid    ()                                                                         \n\t);\n\n\taltera_merlin_master_agent #(\n\t\t.PKT_PROTECTION_H          (108),\n\t\t.PKT_PROTECTION_L          (106),\n\t\t.PKT_BEGIN_BURST           (101),\n\t\t.PKT_BURSTWRAP_H           (89),\n\t\t.PKT_BURSTWRAP_L           (82),\n\t\t.PKT_BURST_SIZE_H          (92),\n\t\t.PKT_BURST_SIZE_L          (90),\n\t\t.PKT_BURST_TYPE_H          (94),\n\t\t.PKT_BURST_TYPE_L          (93),\n\t\t.PKT_BYTE_CNT_H            (81),\n\t\t.PKT_BYTE_CNT_L            (74),\n\t\t.PKT_ADDR_H                (67),\n\t\t.PKT_ADDR_L                (36),\n\t\t.PKT_TRANS_COMPRESSED_READ (68),\n\t\t.PKT_TRANS_POSTED          (69),\n\t\t.PKT_TRANS_WRITE           (70),\n\t\t.PKT_TRANS_READ            (71),\n\t\t.PKT_TRANS_LOCK            (72),\n\t\t.PKT_TRANS_EXCLUSIVE       (73),\n\t\t.PKT_DATA_H                (31),\n\t\t.PKT_DATA_L                (0),\n\t\t.PKT_BYTEEN_H              (35),\n\t\t.PKT_BYTEEN_L              (32),\n\t\t.PKT_SRC_ID_H              (103),\n\t\t.PKT_SRC_ID_L              (103),\n\t\t.PKT_DEST_ID_H             (104),\n\t\t.PKT_DEST_ID_L             (104),\n\t\t.PKT_THREAD_ID_H           (105),\n\t\t.PKT_THREAD_ID_L           (105),\n\t\t.PKT_CACHE_H               (112),\n\t\t.PKT_CACHE_L               (109),\n\t\t.PKT_DATA_SIDEBAND_H       (100),\n\t\t.PKT_DATA_SIDEBAND_L       (100),\n\t\t.PKT_QOS_H                 (102),\n\t\t.PKT_QOS_L                 (102),\n\t\t.PKT_ADDR_SIDEBAND_H       (99),\n\t\t.PKT_ADDR_SIDEBAND_L       (95),\n\t\t.PKT_RESPONSE_STATUS_H     (114),\n\t\t.PKT_RESPONSE_STATUS_L     (113),\n\t\t.PKT_ORI_BURST_SIZE_L      (115),\n\t\t.PKT_ORI_BURST_SIZE_H      (117),\n\t\t.ST_DATA_W                 (118),\n\t\t.ST_CHANNEL_W              (2),\n\t\t.AV_BURSTCOUNT_W           (3),\n\t\t.SUPPRESS_0_BYTEEN_RSP     (1),\n\t\t.ID                        (0),\n\t\t.BURSTWRAP_VALUE           (255),\n\t\t.CACHE_VALUE               (0),\n\t\t.SECURE_ACCESS_BIT         (1),\n\t\t.USE_READRESPONSE          (0),\n\t\t.USE_WRITERESPONSE         (0)\n\t) master_secure_master_translator_avalon_universal_master_0_agent (\n\t\t.clk                     (clk_0_clk_clk),                                                                    \n\t\t.reset                   (master_secure_master_translator_reset_reset_bridge_in_reset_reset),                \n\t\t.av_address              (master_secure_master_translator_avalon_universal_master_0_address),                \n\t\t.av_write                (master_secure_master_translator_avalon_universal_master_0_write),                  \n\t\t.av_read                 (master_secure_master_translator_avalon_universal_master_0_read),                   \n\t\t.av_writedata            (master_secure_master_translator_avalon_universal_master_0_writedata),              \n\t\t.av_readdata             (master_secure_master_translator_avalon_universal_master_0_readdata),               \n\t\t.av_waitrequest          (master_secure_master_translator_avalon_universal_master_0_waitrequest),            \n\t\t.av_readdatavalid        (master_secure_master_translator_avalon_universal_master_0_readdatavalid),          \n\t\t.av_byteenable           (master_secure_master_translator_avalon_universal_master_0_byteenable),             \n\t\t.av_burstcount           (master_secure_master_translator_avalon_universal_master_0_burstcount),             \n\t\t.av_debugaccess          (master_secure_master_translator_avalon_universal_master_0_debugaccess),            \n\t\t.av_lock                 (master_secure_master_translator_avalon_universal_master_0_lock),                   \n\t\t.cp_valid                (master_secure_master_translator_avalon_universal_master_0_agent_cp_valid),         \n\t\t.cp_data                 (master_secure_master_translator_avalon_universal_master_0_agent_cp_data),          \n\t\t.cp_startofpacket        (master_secure_master_translator_avalon_universal_master_0_agent_cp_startofpacket), \n\t\t.cp_endofpacket          (master_secure_master_translator_avalon_universal_master_0_agent_cp_endofpacket),   \n\t\t.cp_ready                (master_secure_master_translator_avalon_universal_master_0_agent_cp_ready),         \n\t\t.rp_valid                (limiter_rsp_src_valid),                                                            \n\t\t.rp_data                 (limiter_rsp_src_data),                                                             \n\t\t.rp_channel              (limiter_rsp_src_channel),                                                          \n\t\t.rp_startofpacket        (limiter_rsp_src_startofpacket),                                                    \n\t\t.rp_endofpacket          (limiter_rsp_src_endofpacket),                                                      \n\t\t.rp_ready                (limiter_rsp_src_ready),                                                            \n\t\t.av_response             (),                                                                                 \n\t\t.av_writeresponserequest (1'b0),                                                                             \n\t\t.av_writeresponsevalid   ()                                                                                  \n\t);\n\n\taltera_merlin_axi_slave_ni #(\n\t\t.PKT_QOS_H                   (138),\n\t\t.PKT_QOS_L                   (138),\n\t\t.PKT_THREAD_ID_H             (141),\n\t\t.PKT_THREAD_ID_L             (141),\n\t\t.PKT_RESPONSE_STATUS_H       (150),\n\t\t.PKT_RESPONSE_STATUS_L       (149),\n\t\t.PKT_BEGIN_BURST             (137),\n\t\t.PKT_CACHE_H                 (148),\n\t\t.PKT_CACHE_L                 (145),\n\t\t.PKT_DATA_SIDEBAND_H         (136),\n\t\t.PKT_DATA_SIDEBAND_L         (136),\n\t\t.PKT_ADDR_SIDEBAND_H         (135),\n\t\t.PKT_ADDR_SIDEBAND_L         (131),\n\t\t.PKT_BURST_TYPE_H            (130),\n\t\t.PKT_BURST_TYPE_L            (129),\n\t\t.PKT_PROTECTION_H            (144),\n\t\t.PKT_PROTECTION_L            (142),\n\t\t.PKT_BURST_SIZE_H            (128),\n\t\t.PKT_BURST_SIZE_L            (126),\n\t\t.PKT_BURSTWRAP_H             (125),\n\t\t.PKT_BURSTWRAP_L             (118),\n\t\t.PKT_BYTE_CNT_H              (117),\n\t\t.PKT_BYTE_CNT_L              (110),\n\t\t.PKT_ADDR_H                  (103),\n\t\t.PKT_ADDR_L                  (72),\n\t\t.PKT_TRANS_EXCLUSIVE         (109),\n\t\t.PKT_TRANS_LOCK              (108),\n\t\t.PKT_TRANS_COMPRESSED_READ   (104),\n\t\t.PKT_TRANS_POSTED            (105),\n\t\t.PKT_TRANS_WRITE             (106),\n\t\t.PKT_TRANS_READ              (107),\n\t\t.PKT_DATA_H                  (63),\n\t\t.PKT_DATA_L                  (0),\n\t\t.PKT_BYTEEN_H                (71),\n\t\t.PKT_BYTEEN_L                (64),\n\t\t.PKT_SRC_ID_H                (139),\n\t\t.PKT_SRC_ID_L                (139),\n\t\t.PKT_DEST_ID_H               (140),\n\t\t.PKT_DEST_ID_L               (140),\n\t\t.PKT_ORI_BURST_SIZE_L        (151),\n\t\t.PKT_ORI_BURST_SIZE_H        (153),\n\t\t.ADDR_USER_WIDTH             (5),\n\t\t.DATA_USER_WIDTH             (1),\n\t\t.ST_DATA_W                   (154),\n\t\t.ADDR_WIDTH                  (32),\n\t\t.RDATA_WIDTH                 (64),\n\t\t.WDATA_WIDTH                 (64),\n\t\t.ST_CHANNEL_W                (2),\n\t\t.AXI_SLAVE_ID_W              (8),\n\t\t.PASS_ID_TO_SLAVE            (1),\n\t\t.AXI_VERSION                 (\"AXI3\"),\n\t\t.WRITE_ACCEPTANCE_CAPABILITY (8),\n\t\t.READ_ACCEPTANCE_CAPABILITY  (8)\n\t) hps_0_f2h_axi_slave_agent (\n\t\t.aclk                   (clk_0_clk_clk),                                                     \n\t\t.aresetn                (~hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset), \n\t\t.read_cp_valid          (width_adapter_001_src_valid),                                       \n\t\t.read_cp_ready          (width_adapter_001_src_ready),                                       \n\t\t.read_cp_data           (width_adapter_001_src_data),                                        \n\t\t.read_cp_channel        (width_adapter_001_src_channel),                                     \n\t\t.read_cp_startofpacket  (width_adapter_001_src_startofpacket),                               \n\t\t.read_cp_endofpacket    (width_adapter_001_src_endofpacket),                                 \n\t\t.write_cp_ready         (width_adapter_src_ready),                                           \n\t\t.write_cp_valid         (width_adapter_src_valid),                                           \n\t\t.write_cp_data          (width_adapter_src_data),                                            \n\t\t.write_cp_channel       (width_adapter_src_channel),                                         \n\t\t.write_cp_startofpacket (width_adapter_src_startofpacket),                                   \n\t\t.write_cp_endofpacket   (width_adapter_src_endofpacket),                                     \n\t\t.read_rp_ready          (hps_0_f2h_axi_slave_agent_read_rp_ready),                           \n\t\t.read_rp_valid          (hps_0_f2h_axi_slave_agent_read_rp_valid),                           \n\t\t.read_rp_data           (hps_0_f2h_axi_slave_agent_read_rp_data),                            \n\t\t.read_rp_startofpacket  (hps_0_f2h_axi_slave_agent_read_rp_startofpacket),                   \n\t\t.read_rp_endofpacket    (hps_0_f2h_axi_slave_agent_read_rp_endofpacket),                     \n\t\t.write_rp_ready         (hps_0_f2h_axi_slave_agent_write_rp_ready),                          \n\t\t.write_rp_valid         (hps_0_f2h_axi_slave_agent_write_rp_valid),                          \n\t\t.write_rp_data          (hps_0_f2h_axi_slave_agent_write_rp_data),                           \n\t\t.write_rp_startofpacket (hps_0_f2h_axi_slave_agent_write_rp_startofpacket),                  \n\t\t.write_rp_endofpacket   (hps_0_f2h_axi_slave_agent_write_rp_endofpacket),                    \n\t\t.awid                   (hps_0_f2h_axi_slave_awid),                                          \n\t\t.awaddr                 (hps_0_f2h_axi_slave_awaddr),                                        \n\t\t.awlen                  (hps_0_f2h_axi_slave_awlen),                                         \n\t\t.awsize                 (hps_0_f2h_axi_slave_awsize),                                        \n\t\t.awburst                (hps_0_f2h_axi_slave_awburst),                                       \n\t\t.awlock                 (hps_0_f2h_axi_slave_awlock),                                        \n\t\t.awcache                (hps_0_f2h_axi_slave_awcache),                                       \n\t\t.awprot                 (hps_0_f2h_axi_slave_awprot),                                        \n\t\t.awuser                 (hps_0_f2h_axi_slave_awuser),                                        \n\t\t.awvalid                (hps_0_f2h_axi_slave_awvalid),                                       \n\t\t.awready                (hps_0_f2h_axi_slave_awready),                                       \n\t\t.wid                    (hps_0_f2h_axi_slave_wid),                                           \n\t\t.wdata                  (hps_0_f2h_axi_slave_wdata),                                         \n\t\t.wstrb                  (hps_0_f2h_axi_slave_wstrb),                                         \n\t\t.wlast                  (hps_0_f2h_axi_slave_wlast),                                         \n\t\t.wvalid                 (hps_0_f2h_axi_slave_wvalid),                                        \n\t\t.wready                 (hps_0_f2h_axi_slave_wready),                                        \n\t\t.bid                    (hps_0_f2h_axi_slave_bid),                                           \n\t\t.bresp                  (hps_0_f2h_axi_slave_bresp),                                         \n\t\t.bvalid                 (hps_0_f2h_axi_slave_bvalid),                                        \n\t\t.bready                 (hps_0_f2h_axi_slave_bready),                                        \n\t\t.arid                   (hps_0_f2h_axi_slave_arid),                                          \n\t\t.araddr                 (hps_0_f2h_axi_slave_araddr),                                        \n\t\t.arlen                  (hps_0_f2h_axi_slave_arlen),                                         \n\t\t.arsize                 (hps_0_f2h_axi_slave_arsize),                                        \n\t\t.arburst                (hps_0_f2h_axi_slave_arburst),                                       \n\t\t.arlock                 (hps_0_f2h_axi_slave_arlock),                                        \n\t\t.arcache                (hps_0_f2h_axi_slave_arcache),                                       \n\t\t.arprot                 (hps_0_f2h_axi_slave_arprot),                                        \n\t\t.aruser                 (hps_0_f2h_axi_slave_aruser),                                        \n\t\t.arvalid                (hps_0_f2h_axi_slave_arvalid),                                       \n\t\t.arready                (hps_0_f2h_axi_slave_arready),                                       \n\t\t.rid                    (hps_0_f2h_axi_slave_rid),                                           \n\t\t.rdata                  (hps_0_f2h_axi_slave_rdata),                                         \n\t\t.rresp                  (hps_0_f2h_axi_slave_rresp),                                         \n\t\t.rlast                  (hps_0_f2h_axi_slave_rlast),                                         \n\t\t.rvalid                 (hps_0_f2h_axi_slave_rvalid),                                        \n\t\t.rready                 (hps_0_f2h_axi_slave_rready)                                         \n\t);\n\n\tsoc_system_mm_interconnect_1_addr_router addr_router (\n\t\t.sink_ready         (master_secure_master_translator_avalon_universal_master_0_agent_cp_ready),         \n\t\t.sink_valid         (master_secure_master_translator_avalon_universal_master_0_agent_cp_valid),         \n\t\t.sink_data          (master_secure_master_translator_avalon_universal_master_0_agent_cp_data),          \n\t\t.sink_startofpacket (master_secure_master_translator_avalon_universal_master_0_agent_cp_startofpacket), \n\t\t.sink_endofpacket   (master_secure_master_translator_avalon_universal_master_0_agent_cp_endofpacket),   \n\t\t.clk                (clk_0_clk_clk),                                                                    \n\t\t.reset              (master_secure_master_translator_reset_reset_bridge_in_reset_reset),                \n\t\t.src_ready          (addr_router_src_ready),                                                            \n\t\t.src_valid          (addr_router_src_valid),                                                            \n\t\t.src_data           (addr_router_src_data),                                                             \n\t\t.src_channel        (addr_router_src_channel),                                                          \n\t\t.src_startofpacket  (addr_router_src_startofpacket),                                                    \n\t\t.src_endofpacket    (addr_router_src_endofpacket)                                                       \n\t);\n\n\tsoc_system_mm_interconnect_1_id_router id_router (\n\t\t.sink_ready         (hps_0_f2h_axi_slave_agent_write_rp_ready),                         \n\t\t.sink_valid         (hps_0_f2h_axi_slave_agent_write_rp_valid),                         \n\t\t.sink_data          (hps_0_f2h_axi_slave_agent_write_rp_data),                          \n\t\t.sink_startofpacket (hps_0_f2h_axi_slave_agent_write_rp_startofpacket),                 \n\t\t.sink_endofpacket   (hps_0_f2h_axi_slave_agent_write_rp_endofpacket),                   \n\t\t.clk                (clk_0_clk_clk),                                                    \n\t\t.reset              (hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset), \n\t\t.src_ready          (id_router_src_ready),                                              \n\t\t.src_valid          (id_router_src_valid),                                              \n\t\t.src_data           (id_router_src_data),                                               \n\t\t.src_channel        (id_router_src_channel),                                            \n\t\t.src_startofpacket  (id_router_src_startofpacket),                                      \n\t\t.src_endofpacket    (id_router_src_endofpacket)                                         \n\t);\n\n\tsoc_system_mm_interconnect_1_id_router id_router_001 (\n\t\t.sink_ready         (hps_0_f2h_axi_slave_agent_read_rp_ready),                          \n\t\t.sink_valid         (hps_0_f2h_axi_slave_agent_read_rp_valid),                          \n\t\t.sink_data          (hps_0_f2h_axi_slave_agent_read_rp_data),                           \n\t\t.sink_startofpacket (hps_0_f2h_axi_slave_agent_read_rp_startofpacket),                  \n\t\t.sink_endofpacket   (hps_0_f2h_axi_slave_agent_read_rp_endofpacket),                    \n\t\t.clk                (clk_0_clk_clk),                                                    \n\t\t.reset              (hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset), \n\t\t.src_ready          (id_router_001_src_ready),                                          \n\t\t.src_valid          (id_router_001_src_valid),                                          \n\t\t.src_data           (id_router_001_src_data),                                           \n\t\t.src_channel        (id_router_001_src_channel),                                        \n\t\t.src_startofpacket  (id_router_001_src_startofpacket),                                  \n\t\t.src_endofpacket    (id_router_001_src_endofpacket)                                     \n\t);\n\n\taltera_merlin_traffic_limiter #(\n\t\t.PKT_DEST_ID_H             (104),\n\t\t.PKT_DEST_ID_L             (104),\n\t\t.PKT_SRC_ID_H              (103),\n\t\t.PKT_SRC_ID_L              (103),\n\t\t.PKT_TRANS_POSTED          (69),\n\t\t.PKT_TRANS_WRITE           (70),\n\t\t.MAX_OUTSTANDING_RESPONSES (16),\n\t\t.PIPELINED                 (0),\n\t\t.ST_DATA_W                 (118),\n\t\t.ST_CHANNEL_W              (2),\n\t\t.VALID_WIDTH               (2),\n\t\t.ENFORCE_ORDER             (1),\n\t\t.PREVENT_HAZARDS           (1),\n\t\t.PKT_BYTE_CNT_H            (81),\n\t\t.PKT_BYTE_CNT_L            (74),\n\t\t.PKT_BYTEEN_H              (35),\n\t\t.PKT_BYTEEN_L              (32),\n\t\t.REORDER                   (0)\n\t) limiter (\n\t\t.clk                    (clk_0_clk_clk),                                                     \n\t\t.reset                  (master_secure_master_translator_reset_reset_bridge_in_reset_reset), \n\t\t.cmd_sink_ready         (addr_router_src_ready),                                             \n\t\t.cmd_sink_valid         (addr_router_src_valid),                                             \n\t\t.cmd_sink_data          (addr_router_src_data),                                              \n\t\t.cmd_sink_channel       (addr_router_src_channel),                                           \n\t\t.cmd_sink_startofpacket (addr_router_src_startofpacket),                                     \n\t\t.cmd_sink_endofpacket   (addr_router_src_endofpacket),                                       \n\t\t.cmd_src_ready          (limiter_cmd_src_ready),                                             \n\t\t.cmd_src_data           (limiter_cmd_src_data),                                              \n\t\t.cmd_src_channel        (limiter_cmd_src_channel),                                           \n\t\t.cmd_src_startofpacket  (limiter_cmd_src_startofpacket),                                     \n\t\t.cmd_src_endofpacket    (limiter_cmd_src_endofpacket),                                       \n\t\t.rsp_sink_ready         (rsp_xbar_mux_src_ready),                                            \n\t\t.rsp_sink_valid         (rsp_xbar_mux_src_valid),                                            \n\t\t.rsp_sink_channel       (rsp_xbar_mux_src_channel),                                          \n\t\t.rsp_sink_data          (rsp_xbar_mux_src_data),                                             \n\t\t.rsp_sink_startofpacket (rsp_xbar_mux_src_startofpacket),                                    \n\t\t.rsp_sink_endofpacket   (rsp_xbar_mux_src_endofpacket),                                      \n\t\t.rsp_src_ready          (limiter_rsp_src_ready),                                             \n\t\t.rsp_src_valid          (limiter_rsp_src_valid),                                             \n\t\t.rsp_src_data           (limiter_rsp_src_data),                                              \n\t\t.rsp_src_channel        (limiter_rsp_src_channel),                                           \n\t\t.rsp_src_startofpacket  (limiter_rsp_src_startofpacket),                                     \n\t\t.rsp_src_endofpacket    (limiter_rsp_src_endofpacket),                                       \n\t\t.cmd_src_valid          (limiter_cmd_valid_data)                                             \n\t);\n\n\tsoc_system_mm_interconnect_1_cmd_xbar_demux cmd_xbar_demux (\n\t\t.clk                (clk_0_clk_clk),                                                     \n\t\t.reset              (master_secure_master_translator_reset_reset_bridge_in_reset_reset), \n\t\t.sink_ready         (limiter_cmd_src_ready),                                             \n\t\t.sink_channel       (limiter_cmd_src_channel),                                           \n\t\t.sink_data          (limiter_cmd_src_data),                                              \n\t\t.sink_startofpacket (limiter_cmd_src_startofpacket),                                     \n\t\t.sink_endofpacket   (limiter_cmd_src_endofpacket),                                       \n\t\t.sink_valid         (limiter_cmd_valid_data),                                            \n\t\t.src0_ready         (cmd_xbar_demux_src0_ready),                                         \n\t\t.src0_valid         (cmd_xbar_demux_src0_valid),                                         \n\t\t.src0_data          (cmd_xbar_demux_src0_data),                                          \n\t\t.src0_channel       (cmd_xbar_demux_src0_channel),                                       \n\t\t.src0_startofpacket (cmd_xbar_demux_src0_startofpacket),                                 \n\t\t.src0_endofpacket   (cmd_xbar_demux_src0_endofpacket),                                   \n\t\t.src1_ready         (cmd_xbar_demux_src1_ready),                                         \n\t\t.src1_valid         (cmd_xbar_demux_src1_valid),                                         \n\t\t.src1_data          (cmd_xbar_demux_src1_data),                                          \n\t\t.src1_channel       (cmd_xbar_demux_src1_channel),                                       \n\t\t.src1_startofpacket (cmd_xbar_demux_src1_startofpacket),                                 \n\t\t.src1_endofpacket   (cmd_xbar_demux_src1_endofpacket)                                    \n\t);\n\n\tsoc_system_mm_interconnect_1_cmd_xbar_mux cmd_xbar_mux (\n\t\t.clk                 (clk_0_clk_clk),                                                    \n\t\t.reset               (hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset), \n\t\t.src_ready           (cmd_xbar_mux_src_ready),                                           \n\t\t.src_valid           (cmd_xbar_mux_src_valid),                                           \n\t\t.src_data            (cmd_xbar_mux_src_data),                                            \n\t\t.src_channel         (cmd_xbar_mux_src_channel),                                         \n\t\t.src_startofpacket   (cmd_xbar_mux_src_startofpacket),                                   \n\t\t.src_endofpacket     (cmd_xbar_mux_src_endofpacket),                                     \n\t\t.sink0_ready         (cmd_xbar_demux_src0_ready),                                        \n\t\t.sink0_valid         (cmd_xbar_demux_src0_valid),                                        \n\t\t.sink0_channel       (cmd_xbar_demux_src0_channel),                                      \n\t\t.sink0_data          (cmd_xbar_demux_src0_data),                                         \n\t\t.sink0_startofpacket (cmd_xbar_demux_src0_startofpacket),                                \n\t\t.sink0_endofpacket   (cmd_xbar_demux_src0_endofpacket)                                   \n\t);\n\n\tsoc_system_mm_interconnect_1_cmd_xbar_mux cmd_xbar_mux_001 (\n\t\t.clk                 (clk_0_clk_clk),                                                    \n\t\t.reset               (hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset), \n\t\t.src_ready           (cmd_xbar_mux_001_src_ready),                                       \n\t\t.src_valid           (cmd_xbar_mux_001_src_valid),                                       \n\t\t.src_data            (cmd_xbar_mux_001_src_data),                                        \n\t\t.src_channel         (cmd_xbar_mux_001_src_channel),                                     \n\t\t.src_startofpacket   (cmd_xbar_mux_001_src_startofpacket),                               \n\t\t.src_endofpacket     (cmd_xbar_mux_001_src_endofpacket),                                 \n\t\t.sink0_ready         (cmd_xbar_demux_src1_ready),                                        \n\t\t.sink0_valid         (cmd_xbar_demux_src1_valid),                                        \n\t\t.sink0_channel       (cmd_xbar_demux_src1_channel),                                      \n\t\t.sink0_data          (cmd_xbar_demux_src1_data),                                         \n\t\t.sink0_startofpacket (cmd_xbar_demux_src1_startofpacket),                                \n\t\t.sink0_endofpacket   (cmd_xbar_demux_src1_endofpacket)                                   \n\t);\n\n\tsoc_system_mm_interconnect_1_rsp_xbar_demux rsp_xbar_demux (\n\t\t.clk                (clk_0_clk_clk),                                                    \n\t\t.reset              (hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset), \n\t\t.sink_ready         (width_adapter_002_src_ready),                                      \n\t\t.sink_channel       (width_adapter_002_src_channel),                                    \n\t\t.sink_data          (width_adapter_002_src_data),                                       \n\t\t.sink_startofpacket (width_adapter_002_src_startofpacket),                              \n\t\t.sink_endofpacket   (width_adapter_002_src_endofpacket),                                \n\t\t.sink_valid         (width_adapter_002_src_valid),                                      \n\t\t.src0_ready         (rsp_xbar_demux_src0_ready),                                        \n\t\t.src0_valid         (rsp_xbar_demux_src0_valid),                                        \n\t\t.src0_data          (rsp_xbar_demux_src0_data),                                         \n\t\t.src0_channel       (rsp_xbar_demux_src0_channel),                                      \n\t\t.src0_startofpacket (rsp_xbar_demux_src0_startofpacket),                                \n\t\t.src0_endofpacket   (rsp_xbar_demux_src0_endofpacket)                                   \n\t);\n\n\tsoc_system_mm_interconnect_1_rsp_xbar_demux rsp_xbar_demux_001 (\n\t\t.clk                (clk_0_clk_clk),                                                    \n\t\t.reset              (hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset), \n\t\t.sink_ready         (width_adapter_003_src_ready),                                      \n\t\t.sink_channel       (width_adapter_003_src_channel),                                    \n\t\t.sink_data          (width_adapter_003_src_data),                                       \n\t\t.sink_startofpacket (width_adapter_003_src_startofpacket),                              \n\t\t.sink_endofpacket   (width_adapter_003_src_endofpacket),                                \n\t\t.sink_valid         (width_adapter_003_src_valid),                                      \n\t\t.src0_ready         (rsp_xbar_demux_001_src0_ready),                                    \n\t\t.src0_valid         (rsp_xbar_demux_001_src0_valid),                                    \n\t\t.src0_data          (rsp_xbar_demux_001_src0_data),                                     \n\t\t.src0_channel       (rsp_xbar_demux_001_src0_channel),                                  \n\t\t.src0_startofpacket (rsp_xbar_demux_001_src0_startofpacket),                            \n\t\t.src0_endofpacket   (rsp_xbar_demux_001_src0_endofpacket)                               \n\t);\n\n\tsoc_system_mm_interconnect_1_rsp_xbar_mux rsp_xbar_mux (\n\t\t.clk                 (clk_0_clk_clk),                                                     \n\t\t.reset               (master_secure_master_translator_reset_reset_bridge_in_reset_reset), \n\t\t.src_ready           (rsp_xbar_mux_src_ready),                                            \n\t\t.src_valid           (rsp_xbar_mux_src_valid),                                            \n\t\t.src_data            (rsp_xbar_mux_src_data),                                             \n\t\t.src_channel         (rsp_xbar_mux_src_channel),                                          \n\t\t.src_startofpacket   (rsp_xbar_mux_src_startofpacket),                                    \n\t\t.src_endofpacket     (rsp_xbar_mux_src_endofpacket),                                      \n\t\t.sink0_ready         (rsp_xbar_demux_src0_ready),                                         \n\t\t.sink0_valid         (rsp_xbar_demux_src0_valid),                                         \n\t\t.sink0_channel       (rsp_xbar_demux_src0_channel),                                       \n\t\t.sink0_data          (rsp_xbar_demux_src0_data),                                          \n\t\t.sink0_startofpacket (rsp_xbar_demux_src0_startofpacket),                                 \n\t\t.sink0_endofpacket   (rsp_xbar_demux_src0_endofpacket),                                   \n\t\t.sink1_ready         (rsp_xbar_demux_001_src0_ready),                                     \n\t\t.sink1_valid         (rsp_xbar_demux_001_src0_valid),                                     \n\t\t.sink1_channel       (rsp_xbar_demux_001_src0_channel),                                   \n\t\t.sink1_data          (rsp_xbar_demux_001_src0_data),                                      \n\t\t.sink1_startofpacket (rsp_xbar_demux_001_src0_startofpacket),                             \n\t\t.sink1_endofpacket   (rsp_xbar_demux_001_src0_endofpacket)                                \n\t);\n\n\taltera_merlin_width_adapter #(\n\t\t.IN_PKT_ADDR_H                 (67),\n\t\t.IN_PKT_ADDR_L                 (36),\n\t\t.IN_PKT_DATA_H                 (31),\n\t\t.IN_PKT_DATA_L                 (0),\n\t\t.IN_PKT_BYTEEN_H               (35),\n\t\t.IN_PKT_BYTEEN_L               (32),\n\t\t.IN_PKT_BYTE_CNT_H             (81),\n\t\t.IN_PKT_BYTE_CNT_L             (74),\n\t\t.IN_PKT_TRANS_COMPRESSED_READ  (68),\n\t\t.IN_PKT_BURSTWRAP_H            (89),\n\t\t.IN_PKT_BURSTWRAP_L            (82),\n\t\t.IN_PKT_BURST_SIZE_H           (92),\n\t\t.IN_PKT_BURST_SIZE_L           (90),\n\t\t.IN_PKT_RESPONSE_STATUS_H      (114),\n\t\t.IN_PKT_RESPONSE_STATUS_L      (113),\n\t\t.IN_PKT_TRANS_EXCLUSIVE        (73),\n\t\t.IN_PKT_BURST_TYPE_H           (94),\n\t\t.IN_PKT_BURST_TYPE_L           (93),\n\t\t.IN_PKT_ORI_BURST_SIZE_L       (115),\n\t\t.IN_PKT_ORI_BURST_SIZE_H       (117),\n\t\t.IN_ST_DATA_W                  (118),\n\t\t.OUT_PKT_ADDR_H                (103),\n\t\t.OUT_PKT_ADDR_L                (72),\n\t\t.OUT_PKT_DATA_H                (63),\n\t\t.OUT_PKT_DATA_L                (0),\n\t\t.OUT_PKT_BYTEEN_H              (71),\n\t\t.OUT_PKT_BYTEEN_L              (64),\n\t\t.OUT_PKT_BYTE_CNT_H            (117),\n\t\t.OUT_PKT_BYTE_CNT_L            (110),\n\t\t.OUT_PKT_TRANS_COMPRESSED_READ (104),\n\t\t.OUT_PKT_BURST_SIZE_H          (128),\n\t\t.OUT_PKT_BURST_SIZE_L          (126),\n\t\t.OUT_PKT_RESPONSE_STATUS_H     (150),\n\t\t.OUT_PKT_RESPONSE_STATUS_L     (149),\n\t\t.OUT_PKT_TRANS_EXCLUSIVE       (109),\n\t\t.OUT_PKT_BURST_TYPE_H          (130),\n\t\t.OUT_PKT_BURST_TYPE_L          (129),\n\t\t.OUT_PKT_ORI_BURST_SIZE_L      (151),\n\t\t.OUT_PKT_ORI_BURST_SIZE_H      (153),\n\t\t.OUT_ST_DATA_W                 (154),\n\t\t.ST_CHANNEL_W                  (2),\n\t\t.OPTIMIZE_FOR_RSP              (0),\n\t\t.RESPONSE_PATH                 (0),\n\t\t.CONSTANT_BURST_SIZE           (0),\n\t\t.PACKING                       (0)\n\t) width_adapter (\n\t\t.clk                  (clk_0_clk_clk),                                                    \n\t\t.reset                (hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset), \n\t\t.in_valid             (cmd_xbar_mux_src_valid),                                           \n\t\t.in_channel           (cmd_xbar_mux_src_channel),                                         \n\t\t.in_startofpacket     (cmd_xbar_mux_src_startofpacket),                                   \n\t\t.in_endofpacket       (cmd_xbar_mux_src_endofpacket),                                     \n\t\t.in_ready             (cmd_xbar_mux_src_ready),                                           \n\t\t.in_data              (cmd_xbar_mux_src_data),                                            \n\t\t.out_endofpacket      (width_adapter_src_endofpacket),                                    \n\t\t.out_data             (width_adapter_src_data),                                           \n\t\t.out_channel          (width_adapter_src_channel),                                        \n\t\t.out_valid            (width_adapter_src_valid),                                          \n\t\t.out_ready            (width_adapter_src_ready),                                          \n\t\t.out_startofpacket    (width_adapter_src_startofpacket),                                  \n\t\t.in_command_size_data (3'b000)                                                            \n\t);\n\n\taltera_merlin_width_adapter #(\n\t\t.IN_PKT_ADDR_H                 (67),\n\t\t.IN_PKT_ADDR_L                 (36),\n\t\t.IN_PKT_DATA_H                 (31),\n\t\t.IN_PKT_DATA_L                 (0),\n\t\t.IN_PKT_BYTEEN_H               (35),\n\t\t.IN_PKT_BYTEEN_L               (32),\n\t\t.IN_PKT_BYTE_CNT_H             (81),\n\t\t.IN_PKT_BYTE_CNT_L             (74),\n\t\t.IN_PKT_TRANS_COMPRESSED_READ  (68),\n\t\t.IN_PKT_BURSTWRAP_H            (89),\n\t\t.IN_PKT_BURSTWRAP_L            (82),\n\t\t.IN_PKT_BURST_SIZE_H           (92),\n\t\t.IN_PKT_BURST_SIZE_L           (90),\n\t\t.IN_PKT_RESPONSE_STATUS_H      (114),\n\t\t.IN_PKT_RESPONSE_STATUS_L      (113),\n\t\t.IN_PKT_TRANS_EXCLUSIVE        (73),\n\t\t.IN_PKT_BURST_TYPE_H           (94),\n\t\t.IN_PKT_BURST_TYPE_L           (93),\n\t\t.IN_PKT_ORI_BURST_SIZE_L       (115),\n\t\t.IN_PKT_ORI_BURST_SIZE_H       (117),\n\t\t.IN_ST_DATA_W                  (118),\n\t\t.OUT_PKT_ADDR_H                (103),\n\t\t.OUT_PKT_ADDR_L                (72),\n\t\t.OUT_PKT_DATA_H                (63),\n\t\t.OUT_PKT_DATA_L                (0),\n\t\t.OUT_PKT_BYTEEN_H              (71),\n\t\t.OUT_PKT_BYTEEN_L              (64),\n\t\t.OUT_PKT_BYTE_CNT_H            (117),\n\t\t.OUT_PKT_BYTE_CNT_L            (110),\n\t\t.OUT_PKT_TRANS_COMPRESSED_READ (104),\n\t\t.OUT_PKT_BURST_SIZE_H          (128),\n\t\t.OUT_PKT_BURST_SIZE_L          (126),\n\t\t.OUT_PKT_RESPONSE_STATUS_H     (150),\n\t\t.OUT_PKT_RESPONSE_STATUS_L     (149),\n\t\t.OUT_PKT_TRANS_EXCLUSIVE       (109),\n\t\t.OUT_PKT_BURST_TYPE_H          (130),\n\t\t.OUT_PKT_BURST_TYPE_L          (129),\n\t\t.OUT_PKT_ORI_BURST_SIZE_L      (151),\n\t\t.OUT_PKT_ORI_BURST_SIZE_H      (153),\n\t\t.OUT_ST_DATA_W                 (154),\n\t\t.ST_CHANNEL_W                  (2),\n\t\t.OPTIMIZE_FOR_RSP              (0),\n\t\t.RESPONSE_PATH                 (0),\n\t\t.CONSTANT_BURST_SIZE           (0),\n\t\t.PACKING                       (0)\n\t) width_adapter_001 (\n\t\t.clk                  (clk_0_clk_clk),                                                    \n\t\t.reset                (hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset), \n\t\t.in_valid             (cmd_xbar_mux_001_src_valid),                                       \n\t\t.in_channel           (cmd_xbar_mux_001_src_channel),                                     \n\t\t.in_startofpacket     (cmd_xbar_mux_001_src_startofpacket),                               \n\t\t.in_endofpacket       (cmd_xbar_mux_001_src_endofpacket),                                 \n\t\t.in_ready             (cmd_xbar_mux_001_src_ready),                                       \n\t\t.in_data              (cmd_xbar_mux_001_src_data),                                        \n\t\t.out_endofpacket      (width_adapter_001_src_endofpacket),                                \n\t\t.out_data             (width_adapter_001_src_data),                                       \n\t\t.out_channel          (width_adapter_001_src_channel),                                    \n\t\t.out_valid            (width_adapter_001_src_valid),                                      \n\t\t.out_ready            (width_adapter_001_src_ready),                                      \n\t\t.out_startofpacket    (width_adapter_001_src_startofpacket),                              \n\t\t.in_command_size_data (3'b000)                                                            \n\t);\n\n\taltera_merlin_width_adapter #(\n\t\t.IN_PKT_ADDR_H                 (103),\n\t\t.IN_PKT_ADDR_L                 (72),\n\t\t.IN_PKT_DATA_H                 (63),\n\t\t.IN_PKT_DATA_L                 (0),\n\t\t.IN_PKT_BYTEEN_H               (71),\n\t\t.IN_PKT_BYTEEN_L               (64),\n\t\t.IN_PKT_BYTE_CNT_H             (117),\n\t\t.IN_PKT_BYTE_CNT_L             (110),\n\t\t.IN_PKT_TRANS_COMPRESSED_READ  (104),\n\t\t.IN_PKT_BURSTWRAP_H            (125),\n\t\t.IN_PKT_BURSTWRAP_L            (118),\n\t\t.IN_PKT_BURST_SIZE_H           (128),\n\t\t.IN_PKT_BURST_SIZE_L           (126),\n\t\t.IN_PKT_RESPONSE_STATUS_H      (150),\n\t\t.IN_PKT_RESPONSE_STATUS_L      (149),\n\t\t.IN_PKT_TRANS_EXCLUSIVE        (109),\n\t\t.IN_PKT_BURST_TYPE_H           (130),\n\t\t.IN_PKT_BURST_TYPE_L           (129),\n\t\t.IN_PKT_ORI_BURST_SIZE_L       (151),\n\t\t.IN_PKT_ORI_BURST_SIZE_H       (153),\n\t\t.IN_ST_DATA_W                  (154),\n\t\t.OUT_PKT_ADDR_H                (67),\n\t\t.OUT_PKT_ADDR_L                (36),\n\t\t.OUT_PKT_DATA_H                (31),\n\t\t.OUT_PKT_DATA_L                (0),\n\t\t.OUT_PKT_BYTEEN_H              (35),\n\t\t.OUT_PKT_BYTEEN_L              (32),\n\t\t.OUT_PKT_BYTE_CNT_H            (81),\n\t\t.OUT_PKT_BYTE_CNT_L            (74),\n\t\t.OUT_PKT_TRANS_COMPRESSED_READ (68),\n\t\t.OUT_PKT_BURST_SIZE_H          (92),\n\t\t.OUT_PKT_BURST_SIZE_L          (90),\n\t\t.OUT_PKT_RESPONSE_STATUS_H     (114),\n\t\t.OUT_PKT_RESPONSE_STATUS_L     (113),\n\t\t.OUT_PKT_TRANS_EXCLUSIVE       (73),\n\t\t.OUT_PKT_BURST_TYPE_H          (94),\n\t\t.OUT_PKT_BURST_TYPE_L          (93),\n\t\t.OUT_PKT_ORI_BURST_SIZE_L      (115),\n\t\t.OUT_PKT_ORI_BURST_SIZE_H      (117),\n\t\t.OUT_ST_DATA_W                 (118),\n\t\t.ST_CHANNEL_W                  (2),\n\t\t.OPTIMIZE_FOR_RSP              (1),\n\t\t.RESPONSE_PATH                 (1),\n\t\t.CONSTANT_BURST_SIZE           (0),\n\t\t.PACKING                       (1)\n\t) width_adapter_002 (\n\t\t.clk                  (clk_0_clk_clk),                                                    \n\t\t.reset                (hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset), \n\t\t.in_valid             (id_router_src_valid),                                              \n\t\t.in_channel           (id_router_src_channel),                                            \n\t\t.in_startofpacket     (id_router_src_startofpacket),                                      \n\t\t.in_endofpacket       (id_router_src_endofpacket),                                        \n\t\t.in_ready             (id_router_src_ready),                                              \n\t\t.in_data              (id_router_src_data),                                               \n\t\t.out_endofpacket      (width_adapter_002_src_endofpacket),                                \n\t\t.out_data             (width_adapter_002_src_data),                                       \n\t\t.out_channel          (width_adapter_002_src_channel),                                    \n\t\t.out_valid            (width_adapter_002_src_valid),                                      \n\t\t.out_ready            (width_adapter_002_src_ready),                                      \n\t\t.out_startofpacket    (width_adapter_002_src_startofpacket),                              \n\t\t.in_command_size_data (3'b000)                                                            \n\t);\n\n\taltera_merlin_width_adapter #(\n\t\t.IN_PKT_ADDR_H                 (103),\n\t\t.IN_PKT_ADDR_L                 (72),\n\t\t.IN_PKT_DATA_H                 (63),\n\t\t.IN_PKT_DATA_L                 (0),\n\t\t.IN_PKT_BYTEEN_H               (71),\n\t\t.IN_PKT_BYTEEN_L               (64),\n\t\t.IN_PKT_BYTE_CNT_H             (117),\n\t\t.IN_PKT_BYTE_CNT_L             (110),\n\t\t.IN_PKT_TRANS_COMPRESSED_READ  (104),\n\t\t.IN_PKT_BURSTWRAP_H            (125),\n\t\t.IN_PKT_BURSTWRAP_L            (118),\n\t\t.IN_PKT_BURST_SIZE_H           (128),\n\t\t.IN_PKT_BURST_SIZE_L           (126),\n\t\t.IN_PKT_RESPONSE_STATUS_H      (150),\n\t\t.IN_PKT_RESPONSE_STATUS_L      (149),\n\t\t.IN_PKT_TRANS_EXCLUSIVE        (109),\n\t\t.IN_PKT_BURST_TYPE_H           (130),\n\t\t.IN_PKT_BURST_TYPE_L           (129),\n\t\t.IN_PKT_ORI_BURST_SIZE_L       (151),\n\t\t.IN_PKT_ORI_BURST_SIZE_H       (153),\n\t\t.IN_ST_DATA_W                  (154),\n\t\t.OUT_PKT_ADDR_H                (67),\n\t\t.OUT_PKT_ADDR_L                (36),\n\t\t.OUT_PKT_DATA_H                (31),\n\t\t.OUT_PKT_DATA_L                (0),\n\t\t.OUT_PKT_BYTEEN_H              (35),\n\t\t.OUT_PKT_BYTEEN_L              (32),\n\t\t.OUT_PKT_BYTE_CNT_H            (81),\n\t\t.OUT_PKT_BYTE_CNT_L            (74),\n\t\t.OUT_PKT_TRANS_COMPRESSED_READ (68),\n\t\t.OUT_PKT_BURST_SIZE_H          (92),\n\t\t.OUT_PKT_BURST_SIZE_L          (90),\n\t\t.OUT_PKT_RESPONSE_STATUS_H     (114),\n\t\t.OUT_PKT_RESPONSE_STATUS_L     (113),\n\t\t.OUT_PKT_TRANS_EXCLUSIVE       (73),\n\t\t.OUT_PKT_BURST_TYPE_H          (94),\n\t\t.OUT_PKT_BURST_TYPE_L          (93),\n\t\t.OUT_PKT_ORI_BURST_SIZE_L      (115),\n\t\t.OUT_PKT_ORI_BURST_SIZE_H      (117),\n\t\t.OUT_ST_DATA_W                 (118),\n\t\t.ST_CHANNEL_W                  (2),\n\t\t.OPTIMIZE_FOR_RSP              (1),\n\t\t.RESPONSE_PATH                 (1),\n\t\t.CONSTANT_BURST_SIZE           (0),\n\t\t.PACKING                       (1)\n\t) width_adapter_003 (\n\t\t.clk                  (clk_0_clk_clk),                                                    \n\t\t.reset                (hps_0_f2h_axi_slave_agent_reset_sink_reset_bridge_in_reset_reset), \n\t\t.in_valid             (id_router_001_src_valid),                                          \n\t\t.in_channel           (id_router_001_src_channel),                                        \n\t\t.in_startofpacket     (id_router_001_src_startofpacket),                                  \n\t\t.in_endofpacket       (id_router_001_src_endofpacket),                                    \n\t\t.in_ready             (id_router_001_src_ready),                                          \n\t\t.in_data              (id_router_001_src_data),                                           \n\t\t.out_endofpacket      (width_adapter_003_src_endofpacket),                                \n\t\t.out_data             (width_adapter_003_src_data),                                       \n\t\t.out_channel          (width_adapter_003_src_channel),                                    \n\t\t.out_valid            (width_adapter_003_src_valid),                                      \n\t\t.out_ready            (width_adapter_003_src_ready),                                      \n\t\t.out_startofpacket    (width_adapter_003_src_startofpacket),                              \n\t\t.in_command_size_data (3'b000)                                                            \n\t);\n\nendmodule\n</code>"
                },
                {
                    "type": "text",
                    "text": "Based on the provided original Verilog code, its comments and above answers, generate a detailed specification for the module. Include the following information in a single, concise paragraph:\n1. The name of the module.\n2. A simple explanation of the module's functionality.\n3. The input and output ports, along with a brief explanation of each.\n4. The internal signals used within the module, with a brief explanation of their purpose.\n5. An overview of the different blocks or sections in the code and their functions.\nEnsure that the specification is clear and accurately reflects the details from the code and comments.\nYour answer should be structured and well-organized, providing a comprehensive and detailed overview of the module's design and operation.\nPlease provide your answer in the following format:\nModule name: [module name]. Module specification: [module specification]."
                },
                {
                    "type": "text",
                    "text": "Module name: soc_system_mm_interconnect_1. Module specification: This module implements an interconnect system for a System-on-Chip (SoC) design, managing communication between a master device (likely a processor or DMA controller) and an AXI slave (possibly memory or peripherals). It supports AXI protocol features such as bursts, multiple channels, and different data widths. The module has input ports for clock, reset, master interface signals (address, data, control), and AXI slave interface signals (handshaking, data, responses). Output ports include AXI slave interface signals for address, data, and control channels, as well as master interface signals for wait requests and read data. Internally, the module uses various signals for address routing, command and response handling, data width adaptation, and arbitration. The code is structured into sections for master and slave agents, address routers, command and response"
                }
            ]
        }
    ]
}