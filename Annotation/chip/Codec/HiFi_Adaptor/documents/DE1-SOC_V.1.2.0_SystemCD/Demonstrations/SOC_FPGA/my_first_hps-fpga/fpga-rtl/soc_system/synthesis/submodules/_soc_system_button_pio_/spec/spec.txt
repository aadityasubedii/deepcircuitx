Module name: soc_system_button_pio. 
Module specification: The "soc_system_button_pio" module functions as a programmable input/output controller specifically designed for managing button inputs within a System-on-Chip (SoC) environment. Its primary roles include detecting rising edge transitions from button inputs, generating interrupts, and enabling status reading through specific registers. The module utilizes several input ports: `address` (2-bit, selects registers for access), `chipselect` (activates the module for operations), `clk` (clock signal for synchronization), `in_port` (4-bit, represents button states), `reset_n` (active-low reset), `write_n` (active-low write enable), and `writedata` (32-bit data for register writing). The outputs comprise `irq` (interrupt request signal) and `readdata` (32-bit data from the addressed register). Internally, the module uses `clk_en` (always enabled clock operations), `d1_data_in` and `d2_data_in` (delay registers for edge detection), `data_in` (current button states), `edge_capture` (stores detected edges), `edge_capture_wr_strobe` (controls edge capture register writing), `edge_detect` (identifies rising edges), `irq_mask` (holds interrupt mask settings), and `read_mux_out` (outputs selected register data based on address). The code is structured into blocks handling edge detection, interrupt management, register operations, and reset conditions, ensuring robust functionality for button input handling and interrupt generation in an SoC scenario.