{
    "spec": "Module name: Computer_System. Module specification: This module represents the top-level entity of a computer system design, integrating various components including an ARM A9 Hard Processor System (HPS), audio subsystem, AV configuration, bus master for audio, and system PLL. The module handles interconnections between these components, manages clock and reset signals, and provides interfaces for external connections such as memory, audio I/O, and various communication protocols (EMAC, QSPI, SDIO, USB, SPI, UART, I2C, and GPIO). Input ports include audio inputs, bus master control signals, Ethernet receive signals, USB control signals, SPI input, UART receive, memory calibration, and system clock/reset inputs. Output ports handle audio output, configuration clock, bus master responses, Ethernet transmit signals, QSPI control, SDIO clock, USB control, SPI output,",
    "gpt-message": [
        {
            "role": "system",
            "content": "You are an expert in hardware design with a deep understanding of Verilog RTL codes. Now I want to train a large language model for code comment generation tasks specifically focused on Verilog RTL codes. And I want you to help me process the raw data, transforming it into suitable formats that can serve as inputs and outputs for the model."
        },
        {
            "role": "user",
            "content": "Name of the module and its functionality is as follows: \nModule name: Computer_System\n\nExplanation: This module appears to be the top-level entity of a computer system design. It integrates various components including an ARM A9 HPS (Hard Processor System), audio subsystem, AV configuration, bus master for audio, and system PLL. The module handles interconnections between these components, manages clock and reset signals, and provides interfaces for external connections such as memory, audio I/O, and various communication protocols (EMAC, QSPI, SDIO, USB, SPI, UART, I2C, and GPIO). It likely represents a complete system-on-chip design for a computer system with audio processing capabilities."
        },
        {
            "role": "user",
            "content": "Input and output ports and their explanation is as follows: \nInput ports:\naudio_ADCDAT, audio_ADCLRCK, audio_BCLK, audio_DACLRCK, audio_pll_ref_clk_clk, audio_pll_ref_reset_reset, bus_master_audio_external_interface_address, bus_master_audio_external_interface_byte_enable, bus_master_audio_external_interface_read, bus_master_audio_external_interface_write, bus_master_audio_external_interface_write_data, hps_io_hps_io_emac1_inst_RXD0, hps_io_hps_io_emac1_inst_RX_CTL, hps_io_hps_io_emac1_inst_RX_CLK, hps_io_hps_io_emac1_inst_RXD1, hps_io_hps_io_emac1_inst_RXD2, hps_io_hps_io_emac1_inst_RXD3, hps_io_hps_io_usb1_inst_CLK, hps_io_hps_io_usb1_inst_DIR, hps_io_hps_io_usb1_inst_NXT, hps_io_hps_io_spim1_inst_MISO, hps_io_hps_io_uart0_inst_RX, memory_oct_rzqin, system_pll_ref_clk_clk, system_pll_ref_reset_reset.\n\nExplanation: These ports handle audio input, bus master control, Ethernet receive, USB control, SPI input, UART receive, memory calibration, and system clock/reset inputs.\n\nOutput ports:\naudio_DACDAT, audio_clk_clk, av_config_SCLK, bus_master_audio_external_interface_acknowledge, bus_master_audio_external_interface_read_data, hps_io_hps_io_emac1_inst_TX_CLK, hps_io_hps_io_emac1_inst_TXD0, hps_io_hps_io_emac1_inst_TXD1, hps_io_hps_io_emac1_inst_TXD2, hps_io_hps_io_emac1_inst_TXD3, hps_io_hps_io_emac1_inst_MDC, hps_io_hps_io_emac1_inst_TX_CTL, hps_io_hps_io_qspi_inst_SS0, hps_io_hps_io_qspi_inst_CLK, hps_io_hps_io_sdio_inst_CLK, hps_io_hps_io_usb1_inst_STP, hps_io_hps_io_spim1_inst_CLK, hps_io_hps_io_spim1_inst_MOSI, hps_io_hps_io_spim1_inst_SS0, hps_io_hps_io_uart0_inst_TX, memory_mem_a, memory_mem_ba, memory_mem_ck, memory_mem_ck_n, memory_mem_cke, memory_mem_cs_n, memory_mem_ras_n, memory_mem_cas_n, memory_mem_we_n, memory_mem_reset_n, memory_mem_odt, memory_mem_dm, sdram_clk_clk.\n\nExplanation: These ports handle audio output, configuration clock, bus master responses, Ethernet transmit, QSPI control, SDIO clock, USB control, SPI output, UART transmit, and memory interface signals."
        },
        {
            "role": "user",
            "content": "Internal signals and their explanation is as follows: \nInternal signals:\nsystem_pll_sys_clk_clk, bus_master_audio_avalon_master_readdata, bus_master_audio_avalon_master_waitrequest, bus_master_audio_avalon_master_byteenable, bus_master_audio_avalon_master_read, bus_master_audio_avalon_master_address, bus_master_audio_avalon_master_write, bus_master_audio_avalon_master_writedata, arm_a9_hps_h2f_lw_axi_master_* (multiple signals), mm_interconnect_0_audio_subsystem_audio_slave_* (multiple signals), mm_interconnect_0_av_config_avalon_av_config_slave_* (multiple signals), irq_mapper_receiver0_irq, arm_a9_hps_f2h_irq0_irq, arm_a9_hps_f2h_irq1_irq, rst_controller_*_reset_out_reset (multiple signals), arm_a9_hps_h2f_reset_reset, system_pll_reset_source_reset.\n\nExplanation:\n- system_pll_sys_clk_clk: System clock signal generated by the PLL.\n- bus_master_audio_avalon_master_*: Signals for the Avalon bus interface of the audio bus master.\n- arm_a9_hps_h2f_lw_axi_master_*: AXI bus signals for the ARM A9 HPS to FPGA communication.\n- mm_interconnect_0_*: Interconnect signals for connecting various components like audio subsystem and AV config.\n- irq_mapper_receiver0_irq: Interrupt signal from the audio subsystem.\n- arm_a9_hps_f2h_irq0_irq, arm_a9_hps_f2h_irq1_irq: FPGA to HPS interrupt signals.\n- rst_controller_*_reset_out_reset: Reset signals from different reset controllers.\n- arm_a9_hps_h2f_reset_reset: Reset signal from ARM A9 HPS to FPGA.\n- system_pll_reset_source_reset: Reset signal from the system PLL.\n\nThese signals handle internal communication, control, and synchronization between various components of the computer system."
        },
        {
            "role": "user",
            "content": "Original Verilog code is as follows: \n```verilog\n\n\n\n\n`timescale 1 ps / 1 ps\nmodule Computer_System (\n\t\tinput  wire        audio_ADCDAT,                                    \n\t\tinput  wire        audio_ADCLRCK,                                   \n\t\tinput  wire        audio_BCLK,                                      \n\t\toutput wire        audio_DACDAT,                                    \n\t\tinput  wire        audio_DACLRCK,                                   \n\t\toutput wire        audio_clk_clk,                                   \n\t\tinput  wire        audio_pll_ref_clk_clk,                           \n\t\tinput  wire        audio_pll_ref_reset_reset,                       \n\t\tinout  wire        av_config_SDAT,                                  \n\t\toutput wire        av_config_SCLK,                                  \n\t\tinput  wire [15:0] bus_master_audio_external_interface_address,     \n\t\tinput  wire [3:0]  bus_master_audio_external_interface_byte_enable, \n\t\tinput  wire        bus_master_audio_external_interface_read,        \n\t\tinput  wire        bus_master_audio_external_interface_write,       \n\t\tinput  wire [31:0] bus_master_audio_external_interface_write_data,  \n\t\toutput wire        bus_master_audio_external_interface_acknowledge, \n\t\toutput wire [31:0] bus_master_audio_external_interface_read_data,   \n\t\toutput wire        hps_io_hps_io_emac1_inst_TX_CLK,                 \n\t\toutput wire        hps_io_hps_io_emac1_inst_TXD0,                   \n\t\toutput wire        hps_io_hps_io_emac1_inst_TXD1,                   \n\t\toutput wire        hps_io_hps_io_emac1_inst_TXD2,                   \n\t\toutput wire        hps_io_hps_io_emac1_inst_TXD3,                   \n\t\tinput  wire        hps_io_hps_io_emac1_inst_RXD0,                   \n\t\tinout  wire        hps_io_hps_io_emac1_inst_MDIO,                   \n\t\toutput wire        hps_io_hps_io_emac1_inst_MDC,                    \n\t\tinput  wire        hps_io_hps_io_emac1_inst_RX_CTL,                 \n\t\toutput wire        hps_io_hps_io_emac1_inst_TX_CTL,                 \n\t\tinput  wire        hps_io_hps_io_emac1_inst_RX_CLK,                 \n\t\tinput  wire        hps_io_hps_io_emac1_inst_RXD1,                   \n\t\tinput  wire        hps_io_hps_io_emac1_inst_RXD2,                   \n\t\tinput  wire        hps_io_hps_io_emac1_inst_RXD3,                   \n\t\tinout  wire        hps_io_hps_io_qspi_inst_IO0,                     \n\t\tinout  wire        hps_io_hps_io_qspi_inst_IO1,                     \n\t\tinout  wire        hps_io_hps_io_qspi_inst_IO2,                     \n\t\tinout  wire        hps_io_hps_io_qspi_inst_IO3,                     \n\t\toutput wire        hps_io_hps_io_qspi_inst_SS0,                     \n\t\toutput wire        hps_io_hps_io_qspi_inst_CLK,                     \n\t\tinout  wire        hps_io_hps_io_sdio_inst_CMD,                     \n\t\tinout  wire        hps_io_hps_io_sdio_inst_D0,                      \n\t\tinout  wire        hps_io_hps_io_sdio_inst_D1,                      \n\t\toutput wire        hps_io_hps_io_sdio_inst_CLK,                     \n\t\tinout  wire        hps_io_hps_io_sdio_inst_D2,                      \n\t\tinout  wire        hps_io_hps_io_sdio_inst_D3,                      \n\t\tinout  wire        hps_io_hps_io_usb1_inst_D0,                      \n\t\tinout  wire        hps_io_hps_io_usb1_inst_D1,                      \n\t\tinout  wire        hps_io_hps_io_usb1_inst_D2,                      \n\t\tinout  wire        hps_io_hps_io_usb1_inst_D3,                      \n\t\tinout  wire        hps_io_hps_io_usb1_inst_D4,                      \n\t\tinout  wire        hps_io_hps_io_usb1_inst_D5,                      \n\t\tinout  wire        hps_io_hps_io_usb1_inst_D6,                      \n\t\tinout  wire        hps_io_hps_io_usb1_inst_D7,                      \n\t\tinput  wire        hps_io_hps_io_usb1_inst_CLK,                     \n\t\toutput wire        hps_io_hps_io_usb1_inst_STP,                     \n\t\tinput  wire        hps_io_hps_io_usb1_inst_DIR,                     \n\t\tinput  wire        hps_io_hps_io_usb1_inst_NXT,                     \n\t\toutput wire        hps_io_hps_io_spim1_inst_CLK,                    \n\t\toutput wire        hps_io_hps_io_spim1_inst_MOSI,                   \n\t\tinput  wire        hps_io_hps_io_spim1_inst_MISO,                   \n\t\toutput wire        hps_io_hps_io_spim1_inst_SS0,                    \n\t\tinput  wire        hps_io_hps_io_uart0_inst_RX,                     \n\t\toutput wire        hps_io_hps_io_uart0_inst_TX,                     \n\t\tinout  wire        hps_io_hps_io_i2c0_inst_SDA,                     \n\t\tinout  wire        hps_io_hps_io_i2c0_inst_SCL,                     \n\t\tinout  wire        hps_io_hps_io_i2c1_inst_SDA,                     \n\t\tinout  wire        hps_io_hps_io_i2c1_inst_SCL,                     \n\t\tinout  wire        hps_io_hps_io_gpio_inst_GPIO09,                  \n\t\tinout  wire        hps_io_hps_io_gpio_inst_GPIO35,                  \n\t\tinout  wire        hps_io_hps_io_gpio_inst_GPIO40,                  \n\t\tinout  wire        hps_io_hps_io_gpio_inst_GPIO41,                  \n\t\tinout  wire        hps_io_hps_io_gpio_inst_GPIO48,                  \n\t\tinout  wire        hps_io_hps_io_gpio_inst_GPIO53,                  \n\t\tinout  wire        hps_io_hps_io_gpio_inst_GPIO54,                  \n\t\tinout  wire        hps_io_hps_io_gpio_inst_GPIO61,                  \n\t\toutput wire [14:0] memory_mem_a,                                    \n\t\toutput wire [2:0]  memory_mem_ba,                                   \n\t\toutput wire        memory_mem_ck,                                   \n\t\toutput wire        memory_mem_ck_n,                                 \n\t\toutput wire        memory_mem_cke,                                  \n\t\toutput wire        memory_mem_cs_n,                                 \n\t\toutput wire        memory_mem_ras_n,                                \n\t\toutput wire        memory_mem_cas_n,                                \n\t\toutput wire        memory_mem_we_n,                                 \n\t\toutput wire        memory_mem_reset_n,                              \n\t\tinout  wire [31:0] memory_mem_dq,                                   \n\t\tinout  wire [3:0]  memory_mem_dqs,                                  \n\t\tinout  wire [3:0]  memory_mem_dqs_n,                                \n\t\toutput wire        memory_mem_odt,                                  \n\t\toutput wire [3:0]  memory_mem_dm,                                   \n\t\tinput  wire        memory_oct_rzqin,                                \n\t\toutput wire        sdram_clk_clk,                                   \n\t\tinput  wire        system_pll_ref_clk_clk,                          \n\t\tinput  wire        system_pll_ref_reset_reset                       \n\t);\n\n\twire         system_pll_sys_clk_clk;                                         \n\twire  [31:0] bus_master_audio_avalon_master_readdata;                        \n\twire         bus_master_audio_avalon_master_waitrequest;                     \n\twire   [3:0] bus_master_audio_avalon_master_byteenable;                      \n\twire         bus_master_audio_avalon_master_read;                            \n\twire  [15:0] bus_master_audio_avalon_master_address;                         \n\twire         bus_master_audio_avalon_master_write;                           \n\twire  [31:0] bus_master_audio_avalon_master_writedata;                       \n\twire   [1:0] arm_a9_hps_h2f_lw_axi_master_awburst;                           \n\twire   [3:0] arm_a9_hps_h2f_lw_axi_master_arlen;                             \n\twire   [3:0] arm_a9_hps_h2f_lw_axi_master_wstrb;                             \n\twire         arm_a9_hps_h2f_lw_axi_master_wready;                            \n\twire  [11:0] arm_a9_hps_h2f_lw_axi_master_rid;                               \n\twire         arm_a9_hps_h2f_lw_axi_master_rready;                            \n\twire   [3:0] arm_a9_hps_h2f_lw_axi_master_awlen;                             \n\twire  [11:0] arm_a9_hps_h2f_lw_axi_master_wid;                               \n\twire   [3:0] arm_a9_hps_h2f_lw_axi_master_arcache;                           \n\twire         arm_a9_hps_h2f_lw_axi_master_wvalid;                            \n\twire  [20:0] arm_a9_hps_h2f_lw_axi_master_araddr;                            \n\twire   [2:0] arm_a9_hps_h2f_lw_axi_master_arprot;                            \n\twire   [2:0] arm_a9_hps_h2f_lw_axi_master_awprot;                            \n\twire  [31:0] arm_a9_hps_h2f_lw_axi_master_wdata;                             \n\twire         arm_a9_hps_h2f_lw_axi_master_arvalid;                           \n\twire   [3:0] arm_a9_hps_h2f_lw_axi_master_awcache;                           \n\twire  [11:0] arm_a9_hps_h2f_lw_axi_master_arid;                              \n\twire   [1:0] arm_a9_hps_h2f_lw_axi_master_arlock;                            \n\twire   [1:0] arm_a9_hps_h2f_lw_axi_master_awlock;                            \n\twire  [20:0] arm_a9_hps_h2f_lw_axi_master_awaddr;                            \n\twire   [1:0] arm_a9_hps_h2f_lw_axi_master_bresp;                             \n\twire         arm_a9_hps_h2f_lw_axi_master_arready;                           \n\twire  [31:0] arm_a9_hps_h2f_lw_axi_master_rdata;                             \n\twire         arm_a9_hps_h2f_lw_axi_master_awready;                           \n\twire   [1:0] arm_a9_hps_h2f_lw_axi_master_arburst;                           \n\twire   [2:0] arm_a9_hps_h2f_lw_axi_master_arsize;                            \n\twire         arm_a9_hps_h2f_lw_axi_master_bready;                            \n\twire         arm_a9_hps_h2f_lw_axi_master_rlast;                             \n\twire         arm_a9_hps_h2f_lw_axi_master_wlast;                             \n\twire   [1:0] arm_a9_hps_h2f_lw_axi_master_rresp;                             \n\twire  [11:0] arm_a9_hps_h2f_lw_axi_master_awid;                              \n\twire  [11:0] arm_a9_hps_h2f_lw_axi_master_bid;                               \n\twire         arm_a9_hps_h2f_lw_axi_master_bvalid;                            \n\twire   [2:0] arm_a9_hps_h2f_lw_axi_master_awsize;                            \n\twire         arm_a9_hps_h2f_lw_axi_master_awvalid;                           \n\twire         arm_a9_hps_h2f_lw_axi_master_rvalid;                            \n\twire         mm_interconnect_0_audio_subsystem_audio_slave_chipselect;       \n\twire  [31:0] mm_interconnect_0_audio_subsystem_audio_slave_readdata;         \n\twire   [1:0] mm_interconnect_0_audio_subsystem_audio_slave_address;          \n\twire         mm_interconnect_0_audio_subsystem_audio_slave_read;             \n\twire         mm_interconnect_0_audio_subsystem_audio_slave_write;            \n\twire  [31:0] mm_interconnect_0_audio_subsystem_audio_slave_writedata;        \n\twire  [31:0] mm_interconnect_0_av_config_avalon_av_config_slave_readdata;    \n\twire         mm_interconnect_0_av_config_avalon_av_config_slave_waitrequest; \n\twire   [1:0] mm_interconnect_0_av_config_avalon_av_config_slave_address;     \n\twire         mm_interconnect_0_av_config_avalon_av_config_slave_read;        \n\twire   [3:0] mm_interconnect_0_av_config_avalon_av_config_slave_byteenable;  \n\twire         mm_interconnect_0_av_config_avalon_av_config_slave_write;       \n\twire  [31:0] mm_interconnect_0_av_config_avalon_av_config_slave_writedata;   \n\twire         irq_mapper_receiver0_irq;                                       \n\twire  [31:0] arm_a9_hps_f2h_irq0_irq;                                        \n\twire  [31:0] arm_a9_hps_f2h_irq1_irq;                                        \n\twire         rst_controller_reset_out_reset;                                 \n\twire         arm_a9_hps_h2f_reset_reset;                                     \n\twire         system_pll_reset_source_reset;                                  \n\twire         rst_controller_001_reset_out_reset;                             \n\twire         rst_controller_002_reset_out_reset;                             \n\n\tComputer_System_ARM_A9_HPS #(\n\t\t.F2S_Width (2),\n\t\t.S2F_Width (3)\n\t) arm_a9_hps (\n\t\t.mem_a                    (memory_mem_a),                         \n\t\t.mem_ba                   (memory_mem_ba),                        \n\t\t.mem_ck                   (memory_mem_ck),                        \n\t\t.mem_ck_n                 (memory_mem_ck_n),                      \n\t\t.mem_cke                  (memory_mem_cke),                       \n\t\t.mem_cs_n                 (memory_mem_cs_n),                      \n\t\t.mem_ras_n                (memory_mem_ras_n),                     \n\t\t.mem_cas_n                (memory_mem_cas_n),                     \n\t\t.mem_we_n                 (memory_mem_we_n),                      \n\t\t.mem_reset_n              (memory_mem_reset_n),                   \n\t\t.mem_dq                   (memory_mem_dq),                        \n\t\t.mem_dqs                  (memory_mem_dqs),                       \n\t\t.mem_dqs_n                (memory_mem_dqs_n),                     \n\t\t.mem_odt                  (memory_mem_odt),                       \n\t\t.mem_dm                   (memory_mem_dm),                        \n\t\t.oct_rzqin                (memory_oct_rzqin),                     \n\t\t.hps_io_emac1_inst_TX_CLK (hps_io_hps_io_emac1_inst_TX_CLK),      \n\t\t.hps_io_emac1_inst_TXD0   (hps_io_hps_io_emac1_inst_TXD0),        \n\t\t.hps_io_emac1_inst_TXD1   (hps_io_hps_io_emac1_inst_TXD1),        \n\t\t.hps_io_emac1_inst_TXD2   (hps_io_hps_io_emac1_inst_TXD2),        \n\t\t.hps_io_emac1_inst_TXD3   (hps_io_hps_io_emac1_inst_TXD3),        \n\t\t.hps_io_emac1_inst_RXD0   (hps_io_hps_io_emac1_inst_RXD0),        \n\t\t.hps_io_emac1_inst_MDIO   (hps_io_hps_io_emac1_inst_MDIO),        \n\t\t.hps_io_emac1_inst_MDC    (hps_io_hps_io_emac1_inst_MDC),         \n\t\t.hps_io_emac1_inst_RX_CTL (hps_io_hps_io_emac1_inst_RX_CTL),      \n\t\t.hps_io_emac1_inst_TX_CTL (hps_io_hps_io_emac1_inst_TX_CTL),      \n\t\t.hps_io_emac1_inst_RX_CLK (hps_io_hps_io_emac1_inst_RX_CLK),      \n\t\t.hps_io_emac1_inst_RXD1   (hps_io_hps_io_emac1_inst_RXD1),        \n\t\t.hps_io_emac1_inst_RXD2   (hps_io_hps_io_emac1_inst_RXD2),        \n\t\t.hps_io_emac1_inst_RXD3   (hps_io_hps_io_emac1_inst_RXD3),        \n\t\t.hps_io_qspi_inst_IO0     (hps_io_hps_io_qspi_inst_IO0),          \n\t\t.hps_io_qspi_inst_IO1     (hps_io_hps_io_qspi_inst_IO1),          \n\t\t.hps_io_qspi_inst_IO2     (hps_io_hps_io_qspi_inst_IO2),          \n\t\t.hps_io_qspi_inst_IO3     (hps_io_hps_io_qspi_inst_IO3),          \n\t\t.hps_io_qspi_inst_SS0     (hps_io_hps_io_qspi_inst_SS0),          \n\t\t.hps_io_qspi_inst_CLK     (hps_io_hps_io_qspi_inst_CLK),          \n\t\t.hps_io_sdio_inst_CMD     (hps_io_hps_io_sdio_inst_CMD),          \n\t\t.hps_io_sdio_inst_D0      (hps_io_hps_io_sdio_inst_D0),           \n\t\t.hps_io_sdio_inst_D1      (hps_io_hps_io_sdio_inst_D1),           \n\t\t.hps_io_sdio_inst_CLK     (hps_io_hps_io_sdio_inst_CLK),          \n\t\t.hps_io_sdio_inst_D2      (hps_io_hps_io_sdio_inst_D2),           \n\t\t.hps_io_sdio_inst_D3      (hps_io_hps_io_sdio_inst_D3),           \n\t\t.hps_io_usb1_inst_D0      (hps_io_hps_io_usb1_inst_D0),           \n\t\t.hps_io_usb1_inst_D1      (hps_io_hps_io_usb1_inst_D1),           \n\t\t.hps_io_usb1_inst_D2      (hps_io_hps_io_usb1_inst_D2),           \n\t\t.hps_io_usb1_inst_D3      (hps_io_hps_io_usb1_inst_D3),           \n\t\t.hps_io_usb1_inst_D4      (hps_io_hps_io_usb1_inst_D4),           \n\t\t.hps_io_usb1_inst_D5      (hps_io_hps_io_usb1_inst_D5),           \n\t\t.hps_io_usb1_inst_D6      (hps_io_hps_io_usb1_inst_D6),           \n\t\t.hps_io_usb1_inst_D7      (hps_io_hps_io_usb1_inst_D7),           \n\t\t.hps_io_usb1_inst_CLK     (hps_io_hps_io_usb1_inst_CLK),          \n\t\t.hps_io_usb1_inst_STP     (hps_io_hps_io_usb1_inst_STP),          \n\t\t.hps_io_usb1_inst_DIR     (hps_io_hps_io_usb1_inst_DIR),          \n\t\t.hps_io_usb1_inst_NXT     (hps_io_hps_io_usb1_inst_NXT),          \n\t\t.hps_io_spim1_inst_CLK    (hps_io_hps_io_spim1_inst_CLK),         \n\t\t.hps_io_spim1_inst_MOSI   (hps_io_hps_io_spim1_inst_MOSI),        \n\t\t.hps_io_spim1_inst_MISO   (hps_io_hps_io_spim1_inst_MISO),        \n\t\t.hps_io_spim1_inst_SS0    (hps_io_hps_io_spim1_inst_SS0),         \n\t\t.hps_io_uart0_inst_RX     (hps_io_hps_io_uart0_inst_RX),          \n\t\t.hps_io_uart0_inst_TX     (hps_io_hps_io_uart0_inst_TX),          \n\t\t.hps_io_i2c0_inst_SDA     (hps_io_hps_io_i2c0_inst_SDA),          \n\t\t.hps_io_i2c0_inst_SCL     (hps_io_hps_io_i2c0_inst_SCL),          \n\t\t.hps_io_i2c1_inst_SDA     (hps_io_hps_io_i2c1_inst_SDA),          \n\t\t.hps_io_i2c1_inst_SCL     (hps_io_hps_io_i2c1_inst_SCL),          \n\t\t.hps_io_gpio_inst_GPIO09  (hps_io_hps_io_gpio_inst_GPIO09),       \n\t\t.hps_io_gpio_inst_GPIO35  (hps_io_hps_io_gpio_inst_GPIO35),       \n\t\t.hps_io_gpio_inst_GPIO40  (hps_io_hps_io_gpio_inst_GPIO40),       \n\t\t.hps_io_gpio_inst_GPIO41  (hps_io_hps_io_gpio_inst_GPIO41),       \n\t\t.hps_io_gpio_inst_GPIO48  (hps_io_hps_io_gpio_inst_GPIO48),       \n\t\t.hps_io_gpio_inst_GPIO53  (hps_io_hps_io_gpio_inst_GPIO53),       \n\t\t.hps_io_gpio_inst_GPIO54  (hps_io_hps_io_gpio_inst_GPIO54),       \n\t\t.hps_io_gpio_inst_GPIO61  (hps_io_hps_io_gpio_inst_GPIO61),       \n\t\t.h2f_rst_n                (arm_a9_hps_h2f_reset_reset),           \n\t\t.h2f_axi_clk              (system_pll_sys_clk_clk),               \n\t\t.h2f_AWID                 (),                                     \n\t\t.h2f_AWADDR               (),                                     \n\t\t.h2f_AWLEN                (),                                     \n\t\t.h2f_AWSIZE               (),                                     \n\t\t.h2f_AWBURST              (),                                     \n\t\t.h2f_AWLOCK               (),                                     \n\t\t.h2f_AWCACHE              (),                                     \n\t\t.h2f_AWPROT               (),                                     \n\t\t.h2f_AWVALID              (),                                     \n\t\t.h2f_AWREADY              (),                                     \n\t\t.h2f_WID                  (),                                     \n\t\t.h2f_WDATA                (),                                     \n\t\t.h2f_WSTRB                (),                                     \n\t\t.h2f_WLAST                (),                                     \n\t\t.h2f_WVALID               (),                                     \n\t\t.h2f_WREADY               (),                                     \n\t\t.h2f_BID                  (),                                     \n\t\t.h2f_BRESP                (),                                     \n\t\t.h2f_BVALID               (),                                     \n\t\t.h2f_BREADY               (),                                     \n\t\t.h2f_ARID                 (),                                     \n\t\t.h2f_ARADDR               (),                                     \n\t\t.h2f_ARLEN                (),                                     \n\t\t.h2f_ARSIZE               (),                                     \n\t\t.h2f_ARBURST              (),                                     \n\t\t.h2f_ARLOCK               (),                                     \n\t\t.h2f_ARCACHE              (),                                     \n\t\t.h2f_ARPROT               (),                                     \n\t\t.h2f_ARVALID              (),                                     \n\t\t.h2f_ARREADY              (),                                     \n\t\t.h2f_RID                  (),                                     \n\t\t.h2f_RDATA                (),                                     \n\t\t.h2f_RRESP                (),                                     \n\t\t.h2f_RLAST                (),                                     \n\t\t.h2f_RVALID               (),                                     \n\t\t.h2f_RREADY               (),                                     \n\t\t.f2h_axi_clk              (system_pll_sys_clk_clk),               \n\t\t.f2h_AWID                 (),                                     \n\t\t.f2h_AWADDR               (),                                     \n\t\t.f2h_AWLEN                (),                                     \n\t\t.f2h_AWSIZE               (),                                     \n\t\t.f2h_AWBURST              (),                                     \n\t\t.f2h_AWLOCK               (),                                     \n\t\t.f2h_AWCACHE              (),                                     \n\t\t.f2h_AWPROT               (),                                     \n\t\t.f2h_AWVALID              (),                                     \n\t\t.f2h_AWREADY              (),                                     \n\t\t.f2h_AWUSER               (),                                     \n\t\t.f2h_WID                  (),                                     \n\t\t.f2h_WDATA                (),                                     \n\t\t.f2h_WSTRB                (),                                     \n\t\t.f2h_WLAST                (),                                     \n\t\t.f2h_WVALID               (),                                     \n\t\t.f2h_WREADY               (),                                     \n\t\t.f2h_BID                  (),                                     \n\t\t.f2h_BRESP                (),                                     \n\t\t.f2h_BVALID               (),                                     \n\t\t.f2h_BREADY               (),                                     \n\t\t.f2h_ARID                 (),                                     \n\t\t.f2h_ARADDR               (),                                     \n\t\t.f2h_ARLEN                (),                                     \n\t\t.f2h_ARSIZE               (),                                     \n\t\t.f2h_ARBURST              (),                                     \n\t\t.f2h_ARLOCK               (),                                     \n\t\t.f2h_ARCACHE              (),                                     \n\t\t.f2h_ARPROT               (),                                     \n\t\t.f2h_ARVALID              (),                                     \n\t\t.f2h_ARREADY              (),                                     \n\t\t.f2h_ARUSER               (),                                     \n\t\t.f2h_RID                  (),                                     \n\t\t.f2h_RDATA                (),                                     \n\t\t.f2h_RRESP                (),                                     \n\t\t.f2h_RLAST                (),                                     \n\t\t.f2h_RVALID               (),                                     \n\t\t.f2h_RREADY               (),                                     \n\t\t.h2f_lw_axi_clk           (system_pll_sys_clk_clk),               \n\t\t.h2f_lw_AWID              (arm_a9_hps_h2f_lw_axi_master_awid),    \n\t\t.h2f_lw_AWADDR            (arm_a9_hps_h2f_lw_axi_master_awaddr),  \n\t\t.h2f_lw_AWLEN             (arm_a9_hps_h2f_lw_axi_master_awlen),   \n\t\t.h2f_lw_AWSIZE            (arm_a9_hps_h2f_lw_axi_master_awsize),  \n\t\t.h2f_lw_AWBURST           (arm_a9_hps_h2f_lw_axi_master_awburst), \n\t\t.h2f_lw_AWLOCK            (arm_a9_hps_h2f_lw_axi_master_awlock),  \n\t\t.h2f_lw_AWCACHE           (arm_a9_hps_h2f_lw_axi_master_awcache), \n\t\t.h2f_lw_AWPROT            (arm_a9_hps_h2f_lw_axi_master_awprot),  \n\t\t.h2f_lw_AWVALID           (arm_a9_hps_h2f_lw_axi_master_awvalid), \n\t\t.h2f_lw_AWREADY           (arm_a9_hps_h2f_lw_axi_master_awready), \n\t\t.h2f_lw_WID               (arm_a9_hps_h2f_lw_axi_master_wid),     \n\t\t.h2f_lw_WDATA             (arm_a9_hps_h2f_lw_axi_master_wdata),   \n\t\t.h2f_lw_WSTRB             (arm_a9_hps_h2f_lw_axi_master_wstrb),   \n\t\t.h2f_lw_WLAST             (arm_a9_hps_h2f_lw_axi_master_wlast),   \n\t\t.h2f_lw_WVALID            (arm_a9_hps_h2f_lw_axi_master_wvalid),  \n\t\t.h2f_lw_WREADY            (arm_a9_hps_h2f_lw_axi_master_wready),  \n\t\t.h2f_lw_BID               (arm_a9_hps_h2f_lw_axi_master_bid),     \n\t\t.h2f_lw_BRESP             (arm_a9_hps_h2f_lw_axi_master_bresp),   \n\t\t.h2f_lw_BVALID            (arm_a9_hps_h2f_lw_axi_master_bvalid),  \n\t\t.h2f_lw_BREADY            (arm_a9_hps_h2f_lw_axi_master_bready),  \n\t\t.h2f_lw_ARID              (arm_a9_hps_h2f_lw_axi_master_arid),    \n\t\t.h2f_lw_ARADDR            (arm_a9_hps_h2f_lw_axi_master_araddr),  \n\t\t.h2f_lw_ARLEN             (arm_a9_hps_h2f_lw_axi_master_arlen),   \n\t\t.h2f_lw_ARSIZE            (arm_a9_hps_h2f_lw_axi_master_arsize),  \n\t\t.h2f_lw_ARBURST           (arm_a9_hps_h2f_lw_axi_master_arburst), \n\t\t.h2f_lw_ARLOCK            (arm_a9_hps_h2f_lw_axi_master_arlock),  \n\t\t.h2f_lw_ARCACHE           (arm_a9_hps_h2f_lw_axi_master_arcache), \n\t\t.h2f_lw_ARPROT            (arm_a9_hps_h2f_lw_axi_master_arprot),  \n\t\t.h2f_lw_ARVALID           (arm_a9_hps_h2f_lw_axi_master_arvalid), \n\t\t.h2f_lw_ARREADY           (arm_a9_hps_h2f_lw_axi_master_arready), \n\t\t.h2f_lw_RID               (arm_a9_hps_h2f_lw_axi_master_rid),     \n\t\t.h2f_lw_RDATA             (arm_a9_hps_h2f_lw_axi_master_rdata),   \n\t\t.h2f_lw_RRESP             (arm_a9_hps_h2f_lw_axi_master_rresp),   \n\t\t.h2f_lw_RLAST             (arm_a9_hps_h2f_lw_axi_master_rlast),   \n\t\t.h2f_lw_RVALID            (arm_a9_hps_h2f_lw_axi_master_rvalid),  \n\t\t.h2f_lw_RREADY            (arm_a9_hps_h2f_lw_axi_master_rready),  \n\t\t.f2h_irq_p0               (arm_a9_hps_f2h_irq0_irq),              \n\t\t.f2h_irq_p1               (arm_a9_hps_f2h_irq1_irq)               \n\t);\n\n\tComputer_System_AV_Config av_config (\n\t\t.clk         (system_pll_sys_clk_clk),                                         \n\t\t.reset       (rst_controller_reset_out_reset),                                 \n\t\t.address     (mm_interconnect_0_av_config_avalon_av_config_slave_address),     \n\t\t.byteenable  (mm_interconnect_0_av_config_avalon_av_config_slave_byteenable),  \n\t\t.read        (mm_interconnect_0_av_config_avalon_av_config_slave_read),        \n\t\t.write       (mm_interconnect_0_av_config_avalon_av_config_slave_write),       \n\t\t.writedata   (mm_interconnect_0_av_config_avalon_av_config_slave_writedata),   \n\t\t.readdata    (mm_interconnect_0_av_config_avalon_av_config_slave_readdata),    \n\t\t.waitrequest (mm_interconnect_0_av_config_avalon_av_config_slave_waitrequest), \n\t\t.I2C_SDAT    (av_config_SDAT),                                                 \n\t\t.I2C_SCLK    (av_config_SCLK)                                                  \n\t);\n\n\tComputer_System_Audio_Subsystem audio_subsystem (\n\t\t.audio_ADCDAT              (audio_ADCDAT),                                             \n\t\t.audio_ADCLRCK             (audio_ADCLRCK),                                            \n\t\t.audio_BCLK                (audio_BCLK),                                               \n\t\t.audio_DACDAT              (audio_DACDAT),                                             \n\t\t.audio_DACLRCK             (audio_DACLRCK),                                            \n\t\t.audio_clk_clk             (audio_clk_clk),                                            \n\t\t.audio_irq_irq             (irq_mapper_receiver0_irq),                                 \n\t\t.audio_pll_ref_clk_clk     (audio_pll_ref_clk_clk),                                    \n\t\t.audio_pll_ref_reset_reset (audio_pll_ref_reset_reset),                                \n\t\t.audio_reset_reset         (),                                                         \n\t\t.audio_slave_address       (mm_interconnect_0_audio_subsystem_audio_slave_address),    \n\t\t.audio_slave_chipselect    (mm_interconnect_0_audio_subsystem_audio_slave_chipselect), \n\t\t.audio_slave_read          (mm_interconnect_0_audio_subsystem_audio_slave_read),       \n\t\t.audio_slave_write         (mm_interconnect_0_audio_subsystem_audio_slave_write),      \n\t\t.audio_slave_writedata     (mm_interconnect_0_audio_subsystem_audio_slave_writedata),  \n\t\t.audio_slave_readdata      (mm_interconnect_0_audio_subsystem_audio_slave_readdata),   \n\t\t.sys_clk_clk               (system_pll_sys_clk_clk),                                   \n\t\t.sys_reset_reset_n         (~rst_controller_001_reset_out_reset)                       \n\t);\n\n\tComputer_System_Bus_master_audio bus_master_audio (\n\t\t.clk                (system_pll_sys_clk_clk),                          \n\t\t.reset              (rst_controller_reset_out_reset),                  \n\t\t.avalon_readdata    (bus_master_audio_avalon_master_readdata),         \n\t\t.avalon_waitrequest (bus_master_audio_avalon_master_waitrequest),      \n\t\t.avalon_byteenable  (bus_master_audio_avalon_master_byteenable),       \n\t\t.avalon_read        (bus_master_audio_avalon_master_read),             \n\t\t.avalon_write       (bus_master_audio_avalon_master_write),            \n\t\t.avalon_writedata   (bus_master_audio_avalon_master_writedata),        \n\t\t.avalon_address     (bus_master_audio_avalon_master_address),          \n\t\t.address            (bus_master_audio_external_interface_address),     \n\t\t.byte_enable        (bus_master_audio_external_interface_byte_enable), \n\t\t.read               (bus_master_audio_external_interface_read),        \n\t\t.write              (bus_master_audio_external_interface_write),       \n\t\t.write_data         (bus_master_audio_external_interface_write_data),  \n\t\t.acknowledge        (bus_master_audio_external_interface_acknowledge), \n\t\t.read_data          (bus_master_audio_external_interface_read_data)    \n\t);\n\n\tComputer_System_System_PLL system_pll (\n\t\t.ref_clk_clk        (system_pll_ref_clk_clk),        \n\t\t.ref_reset_reset    (system_pll_ref_reset_reset),    \n\t\t.sys_clk_clk        (system_pll_sys_clk_clk),        \n\t\t.sdram_clk_clk      (sdram_clk_clk),                 \n\t\t.reset_source_reset (system_pll_reset_source_reset)  \n\t);\n\n\tComputer_System_mm_interconnect_0 mm_interconnect_0 (\n\t\t.ARM_A9_HPS_h2f_lw_axi_master_awid                                        (arm_a9_hps_h2f_lw_axi_master_awid),                              \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_awaddr                                      (arm_a9_hps_h2f_lw_axi_master_awaddr),                            \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_awlen                                       (arm_a9_hps_h2f_lw_axi_master_awlen),                             \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_awsize                                      (arm_a9_hps_h2f_lw_axi_master_awsize),                            \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_awburst                                     (arm_a9_hps_h2f_lw_axi_master_awburst),                           \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_awlock                                      (arm_a9_hps_h2f_lw_axi_master_awlock),                            \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_awcache                                     (arm_a9_hps_h2f_lw_axi_master_awcache),                           \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_awprot                                      (arm_a9_hps_h2f_lw_axi_master_awprot),                            \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_awvalid                                     (arm_a9_hps_h2f_lw_axi_master_awvalid),                           \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_awready                                     (arm_a9_hps_h2f_lw_axi_master_awready),                           \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_wid                                         (arm_a9_hps_h2f_lw_axi_master_wid),                               \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_wdata                                       (arm_a9_hps_h2f_lw_axi_master_wdata),                             \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_wstrb                                       (arm_a9_hps_h2f_lw_axi_master_wstrb),                             \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_wlast                                       (arm_a9_hps_h2f_lw_axi_master_wlast),                             \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_wvalid                                      (arm_a9_hps_h2f_lw_axi_master_wvalid),                            \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_wready                                      (arm_a9_hps_h2f_lw_axi_master_wready),                            \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_bid                                         (arm_a9_hps_h2f_lw_axi_master_bid),                               \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_bresp                                       (arm_a9_hps_h2f_lw_axi_master_bresp),                             \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_bvalid                                      (arm_a9_hps_h2f_lw_axi_master_bvalid),                            \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_bready                                      (arm_a9_hps_h2f_lw_axi_master_bready),                            \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_arid                                        (arm_a9_hps_h2f_lw_axi_master_arid),                              \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_araddr                                      (arm_a9_hps_h2f_lw_axi_master_araddr),                            \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_arlen                                       (arm_a9_hps_h2f_lw_axi_master_arlen),                             \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_arsize                                      (arm_a9_hps_h2f_lw_axi_master_arsize),                            \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_arburst                                     (arm_a9_hps_h2f_lw_axi_master_arburst),                           \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_arlock                                      (arm_a9_hps_h2f_lw_axi_master_arlock),                            \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_arcache                                     (arm_a9_hps_h2f_lw_axi_master_arcache),                           \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_arprot                                      (arm_a9_hps_h2f_lw_axi_master_arprot),                            \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_arvalid                                     (arm_a9_hps_h2f_lw_axi_master_arvalid),                           \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_arready                                     (arm_a9_hps_h2f_lw_axi_master_arready),                           \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_rid                                         (arm_a9_hps_h2f_lw_axi_master_rid),                               \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_rdata                                       (arm_a9_hps_h2f_lw_axi_master_rdata),                             \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_rresp                                       (arm_a9_hps_h2f_lw_axi_master_rresp),                             \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_rlast                                       (arm_a9_hps_h2f_lw_axi_master_rlast),                             \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_rvalid                                      (arm_a9_hps_h2f_lw_axi_master_rvalid),                            \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_rready                                      (arm_a9_hps_h2f_lw_axi_master_rready),                            \n\t\t.System_PLL_sys_clk_clk                                                   (system_pll_sys_clk_clk),                                         \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_agent_clk_reset_reset_bridge_in_reset_reset (rst_controller_002_reset_out_reset),                             \n\t\t.Audio_Subsystem_sys_reset_reset_bridge_in_reset_reset                    (rst_controller_reset_out_reset),                                 \n\t\t.Bus_master_audio_reset_reset_bridge_in_reset_reset                       (rst_controller_reset_out_reset),                                 \n\t\t.Bus_master_audio_avalon_master_address                                   (bus_master_audio_avalon_master_address),                         \n\t\t.Bus_master_audio_avalon_master_waitrequest                               (bus_master_audio_avalon_master_waitrequest),                     \n\t\t.Bus_master_audio_avalon_master_byteenable                                (bus_master_audio_avalon_master_byteenable),                      \n\t\t.Bus_master_audio_avalon_master_read                                      (bus_master_audio_avalon_master_read),                            \n\t\t.Bus_master_audio_avalon_master_readdata                                  (bus_master_audio_avalon_master_readdata),                        \n\t\t.Bus_master_audio_avalon_master_write                                     (bus_master_audio_avalon_master_write),                           \n\t\t.Bus_master_audio_avalon_master_writedata                                 (bus_master_audio_avalon_master_writedata),                       \n\t\t.Audio_Subsystem_audio_slave_address                                      (mm_interconnect_0_audio_subsystem_audio_slave_address),          \n\t\t.Audio_Subsystem_audio_slave_write                                        (mm_interconnect_0_audio_subsystem_audio_slave_write),            \n\t\t.Audio_Subsystem_audio_slave_read                                         (mm_interconnect_0_audio_subsystem_audio_slave_read),             \n\t\t.Audio_Subsystem_audio_slave_readdata                                     (mm_interconnect_0_audio_subsystem_audio_slave_readdata),         \n\t\t.Audio_Subsystem_audio_slave_writedata                                    (mm_interconnect_0_audio_subsystem_audio_slave_writedata),        \n\t\t.Audio_Subsystem_audio_slave_chipselect                                   (mm_interconnect_0_audio_subsystem_audio_slave_chipselect),       \n\t\t.AV_Config_avalon_av_config_slave_address                                 (mm_interconnect_0_av_config_avalon_av_config_slave_address),     \n\t\t.AV_Config_avalon_av_config_slave_write                                   (mm_interconnect_0_av_config_avalon_av_config_slave_write),       \n\t\t.AV_Config_avalon_av_config_slave_read                                    (mm_interconnect_0_av_config_avalon_av_config_slave_read),        \n\t\t.AV_Config_avalon_av_config_slave_readdata                                (mm_interconnect_0_av_config_avalon_av_config_slave_readdata),    \n\t\t.AV_Config_avalon_av_config_slave_writedata                               (mm_interconnect_0_av_config_avalon_av_config_slave_writedata),   \n\t\t.AV_Config_avalon_av_config_slave_byteenable                              (mm_interconnect_0_av_config_avalon_av_config_slave_byteenable),  \n\t\t.AV_Config_avalon_av_config_slave_waitrequest                             (mm_interconnect_0_av_config_avalon_av_config_slave_waitrequest)  \n\t);\n\n\tComputer_System_irq_mapper irq_mapper (\n\t\t.clk           (),                         \n\t\t.reset         (),                         \n\t\t.receiver0_irq (irq_mapper_receiver0_irq), \n\t\t.sender_irq    (arm_a9_hps_f2h_irq0_irq)   \n\t);\n\n\tComputer_System_irq_mapper_001 irq_mapper_001 (\n\t\t.clk        (),                        \n\t\t.reset      (),                        \n\t\t.sender_irq (arm_a9_hps_f2h_irq1_irq)  \n\t);\n\n\taltera_reset_controller #(\n\t\t.NUM_RESET_INPUTS          (2),\n\t\t.OUTPUT_RESET_SYNC_EDGES   (\"deassert\"),\n\t\t.SYNC_DEPTH                (2),\n\t\t.RESET_REQUEST_PRESENT     (0),\n\t\t.RESET_REQ_WAIT_TIME       (1),\n\t\t.MIN_RST_ASSERTION_TIME    (3),\n\t\t.RESET_REQ_EARLY_DSRT_TIME (1),\n\t\t.USE_RESET_REQUEST_IN0     (0),\n\t\t.USE_RESET_REQUEST_IN1     (0),\n\t\t.USE_RESET_REQUEST_IN2     (0),\n\t\t.USE_RESET_REQUEST_IN3     (0),\n\t\t.USE_RESET_REQUEST_IN4     (0),\n\t\t.USE_RESET_REQUEST_IN5     (0),\n\t\t.USE_RESET_REQUEST_IN6     (0),\n\t\t.USE_RESET_REQUEST_IN7     (0),\n\t\t.USE_RESET_REQUEST_IN8     (0),\n\t\t.USE_RESET_REQUEST_IN9     (0),\n\t\t.USE_RESET_REQUEST_IN10    (0),\n\t\t.USE_RESET_REQUEST_IN11    (0),\n\t\t.USE_RESET_REQUEST_IN12    (0),\n\t\t.USE_RESET_REQUEST_IN13    (0),\n\t\t.USE_RESET_REQUEST_IN14    (0),\n\t\t.USE_RESET_REQUEST_IN15    (0),\n\t\t.ADAPT_RESET_REQUEST       (0)\n\t) rst_controller (\n\t\t.reset_in0      (~arm_a9_hps_h2f_reset_reset),    \n\t\t.reset_in1      (system_pll_reset_source_reset),  \n\t\t.clk            (system_pll_sys_clk_clk),         \n\t\t.reset_out      (rst_controller_reset_out_reset), \n\t\t.reset_req      (),                               \n\t\t.reset_req_in0  (1'b0),                           \n\t\t.reset_req_in1  (1'b0),                           \n\t\t.reset_in2      (1'b0),                           \n\t\t.reset_req_in2  (1'b0),                           \n\t\t.reset_in3      (1'b0),                           \n\t\t.reset_req_in3  (1'b0),                           \n\t\t.reset_in4      (1'b0),                           \n\t\t.reset_req_in4  (1'b0),                           \n\t\t.reset_in5      (1'b0),                           \n\t\t.reset_req_in5  (1'b0),                           \n\t\t.reset_in6      (1'b0),                           \n\t\t.reset_req_in6  (1'b0),                           \n\t\t.reset_in7      (1'b0),                           \n\t\t.reset_req_in7  (1'b0),                           \n\t\t.reset_in8      (1'b0),                           \n\t\t.reset_req_in8  (1'b0),                           \n\t\t.reset_in9      (1'b0),                           \n\t\t.reset_req_in9  (1'b0),                           \n\t\t.reset_in10     (1'b0),                           \n\t\t.reset_req_in10 (1'b0),                           \n\t\t.reset_in11     (1'b0),                           \n\t\t.reset_req_in11 (1'b0),                           \n\t\t.reset_in12     (1'b0),                           \n\t\t.reset_req_in12 (1'b0),                           \n\t\t.reset_in13     (1'b0),                           \n\t\t.reset_req_in13 (1'b0),                           \n\t\t.reset_in14     (1'b0),                           \n\t\t.reset_req_in14 (1'b0),                           \n\t\t.reset_in15     (1'b0),                           \n\t\t.reset_req_in15 (1'b0)                            \n\t);\n\n\taltera_reset_controller #(\n\t\t.NUM_RESET_INPUTS          (2),\n\t\t.OUTPUT_RESET_SYNC_EDGES   (\"none\"),\n\t\t.SYNC_DEPTH                (2),\n\t\t.RESET_REQUEST_PRESENT     (0),\n\t\t.RESET_REQ_WAIT_TIME       (1),\n\t\t.MIN_RST_ASSERTION_TIME    (3),\n\t\t.RESET_REQ_EARLY_DSRT_TIME (1),\n\t\t.USE_RESET_REQUEST_IN0     (0),\n\t\t.USE_RESET_REQUEST_IN1     (0),\n\t\t.USE_RESET_REQUEST_IN2     (0),\n\t\t.USE_RESET_REQUEST_IN3     (0),\n\t\t.USE_RESET_REQUEST_IN4     (0),\n\t\t.USE_RESET_REQUEST_IN5     (0),\n\t\t.USE_RESET_REQUEST_IN6     (0),\n\t\t.USE_RESET_REQUEST_IN7     (0),\n\t\t.USE_RESET_REQUEST_IN8     (0),\n\t\t.USE_RESET_REQUEST_IN9     (0),\n\t\t.USE_RESET_REQUEST_IN10    (0),\n\t\t.USE_RESET_REQUEST_IN11    (0),\n\t\t.USE_RESET_REQUEST_IN12    (0),\n\t\t.USE_RESET_REQUEST_IN13    (0),\n\t\t.USE_RESET_REQUEST_IN14    (0),\n\t\t.USE_RESET_REQUEST_IN15    (0),\n\t\t.ADAPT_RESET_REQUEST       (0)\n\t) rst_controller_001 (\n\t\t.reset_in0      (~arm_a9_hps_h2f_reset_reset),        \n\t\t.reset_in1      (system_pll_reset_source_reset),      \n\t\t.clk            (),                                   \n\t\t.reset_out      (rst_controller_001_reset_out_reset), \n\t\t.reset_req      (),                                   \n\t\t.reset_req_in0  (1'b0),                               \n\t\t.reset_req_in1  (1'b0),                               \n\t\t.reset_in2      (1'b0),                               \n\t\t.reset_req_in2  (1'b0),                               \n\t\t.reset_in3      (1'b0),                               \n\t\t.reset_req_in3  (1'b0),                               \n\t\t.reset_in4      (1'b0),                               \n\t\t.reset_req_in4  (1'b0),                               \n\t\t.reset_in5      (1'b0),                               \n\t\t.reset_req_in5  (1'b0),                               \n\t\t.reset_in6      (1'b0),                               \n\t\t.reset_req_in6  (1'b0),                               \n\t\t.reset_in7      (1'b0),                               \n\t\t.reset_req_in7  (1'b0),                               \n\t\t.reset_in8      (1'b0),                               \n\t\t.reset_req_in8  (1'b0),                               \n\t\t.reset_in9      (1'b0),                               \n\t\t.reset_req_in9  (1'b0),                               \n\t\t.reset_in10     (1'b0),                               \n\t\t.reset_req_in10 (1'b0),                               \n\t\t.reset_in11     (1'b0),                               \n\t\t.reset_req_in11 (1'b0),                               \n\t\t.reset_in12     (1'b0),                               \n\t\t.reset_req_in12 (1'b0),                               \n\t\t.reset_in13     (1'b0),                               \n\t\t.reset_req_in13 (1'b0),                               \n\t\t.reset_in14     (1'b0),                               \n\t\t.reset_req_in14 (1'b0),                               \n\t\t.reset_in15     (1'b0),                               \n\t\t.reset_req_in15 (1'b0)                                \n\t);\n\n\taltera_reset_controller #(\n\t\t.NUM_RESET_INPUTS          (1),\n\t\t.OUTPUT_RESET_SYNC_EDGES   (\"deassert\"),\n\t\t.SYNC_DEPTH                (2),\n\t\t.RESET_REQUEST_PRESENT     (0),\n\t\t.RESET_REQ_WAIT_TIME       (1),\n\t\t.MIN_RST_ASSERTION_TIME    (3),\n\t\t.RESET_REQ_EARLY_DSRT_TIME (1),\n\t\t.USE_RESET_REQUEST_IN0     (0),\n\t\t.USE_RESET_REQUEST_IN1     (0),\n\t\t.USE_RESET_REQUEST_IN2     (0),\n\t\t.USE_RESET_REQUEST_IN3     (0),\n\t\t.USE_RESET_REQUEST_IN4     (0),\n\t\t.USE_RESET_REQUEST_IN5     (0),\n\t\t.USE_RESET_REQUEST_IN6     (0),\n\t\t.USE_RESET_REQUEST_IN7     (0),\n\t\t.USE_RESET_REQUEST_IN8     (0),\n\t\t.USE_RESET_REQUEST_IN9     (0),\n\t\t.USE_RESET_REQUEST_IN10    (0),\n\t\t.USE_RESET_REQUEST_IN11    (0),\n\t\t.USE_RESET_REQUEST_IN12    (0),\n\t\t.USE_RESET_REQUEST_IN13    (0),\n\t\t.USE_RESET_REQUEST_IN14    (0),\n\t\t.USE_RESET_REQUEST_IN15    (0),\n\t\t.ADAPT_RESET_REQUEST       (0)\n\t) rst_controller_002 (\n\t\t.reset_in0      (~arm_a9_hps_h2f_reset_reset),        \n\t\t.clk            (system_pll_sys_clk_clk),             \n\t\t.reset_out      (rst_controller_002_reset_out_reset), \n\t\t.reset_req      (),                                   \n\t\t.reset_req_in0  (1'b0),                               \n\t\t.reset_in1      (1'b0),                               \n\t\t.reset_req_in1  (1'b0),                               \n\t\t.reset_in2      (1'b0),                               \n\t\t.reset_req_in2  (1'b0),                               \n\t\t.reset_in3      (1'b0),                               \n\t\t.reset_req_in3  (1'b0),                               \n\t\t.reset_in4      (1'b0),                               \n\t\t.reset_req_in4  (1'b0),                               \n\t\t.reset_in5      (1'b0),                               \n\t\t.reset_req_in5  (1'b0),                               \n\t\t.reset_in6      (1'b0),                               \n\t\t.reset_req_in6  (1'b0),                               \n\t\t.reset_in7      (1'b0),                               \n\t\t.reset_req_in7  (1'b0),                               \n\t\t.reset_in8      (1'b0),                               \n\t\t.reset_req_in8  (1'b0),                               \n\t\t.reset_in9      (1'b0),                               \n\t\t.reset_req_in9  (1'b0),                               \n\t\t.reset_in10     (1'b0),                               \n\t\t.reset_req_in10 (1'b0),                               \n\t\t.reset_in11     (1'b0),                               \n\t\t.reset_req_in11 (1'b0),                               \n\t\t.reset_in12     (1'b0),                               \n\t\t.reset_req_in12 (1'b0),                               \n\t\t.reset_in13     (1'b0),                               \n\t\t.reset_req_in13 (1'b0),                               \n\t\t.reset_in14     (1'b0),                               \n\t\t.reset_req_in14 (1'b0),                               \n\t\t.reset_in15     (1'b0),                               \n\t\t.reset_req_in15 (1'b0)                                \n\t);\n\nendmodule\n```"
        },
        {
            "role": "user",
            "content": "Based on the provided original Verilog code, its comments and above answers, generate a detailed specification for the module. Include the following information in a single, concise paragraph:\n1. The name of the module.\n2. A simple explanation of the module's functionality.\n3. The input and output ports, along with a brief explanation of each.\n4. The internal signals used within the module, with a brief explanation of their purpose.\n5. An overview of the different blocks or sections in the code and their functions.\nEnsure that the specification is clear and accurately reflects the details from the code and comments.\nYour answer should be structured and well-organized, providing a comprehensive and detailed overview of the module's design and operation.\nPlease provide your answer in the following format:\nModule name: [module name]. Module specification: [module specification]."
        },
        {
            "role": "assistant",
            "content": "Module name: Computer_System. Module specification: This module represents the top-level entity of a computer system design, integrating various components including an ARM A9 Hard Processor System (HPS), audio subsystem, AV configuration, bus master for audio, and system PLL. The module handles interconnections between these components, manages clock and reset signals, and provides interfaces for external connections such as memory, audio I/O, and various communication protocols (EMAC, QSPI, SDIO, USB, SPI, UART, I2C, and GPIO). Input ports include audio inputs, bus master control signals, Ethernet receive signals, USB control signals, SPI input, UART receive, memory calibration, and system clock/reset inputs. Output ports handle audio output, configuration clock, bus master responses, Ethernet transmit signals, QSPI control, SDIO clock, USB control, SPI output,"
        }
    ],
    "claude-message": [
        {
            "role": "user",
            "content": [
                {
                    "type": "text",
                    "text": "You are an expert in hardware design with a deep understanding of Verilog RTL codes. Now I want to train a large language model for code comment generation tasks specifically focused on Verilog RTL codes. And I want you to help me process the raw data, transforming it into suitable formats that can serve as inputs and outputs for the model."
                },
                {
                    "type": "text",
                    "text": "Name of the module and its functionality is as follows: \nModule name: Computer_System\n\nExplanation: This module appears to be the top-level entity of a computer system design. It integrates various components including an ARM A9 HPS (Hard Processor System), audio subsystem, AV configuration, bus master for audio, and system PLL. The module handles interconnections between these components, manages clock and reset signals, and provides interfaces for external connections such as memory, audio I/O, and various communication protocols (EMAC, QSPI, SDIO, USB, SPI, UART, I2C, and GPIO). It likely represents a complete system-on-chip design for a computer system with audio processing capabilities."
                },
                {
                    "type": "text",
                    "text": "Input and output ports and their explanation is as follows: \nInput ports:\naudio_ADCDAT, audio_ADCLRCK, audio_BCLK, audio_DACLRCK, audio_pll_ref_clk_clk, audio_pll_ref_reset_reset, bus_master_audio_external_interface_address, bus_master_audio_external_interface_byte_enable, bus_master_audio_external_interface_read, bus_master_audio_external_interface_write, bus_master_audio_external_interface_write_data, hps_io_hps_io_emac1_inst_RXD0, hps_io_hps_io_emac1_inst_RX_CTL, hps_io_hps_io_emac1_inst_RX_CLK, hps_io_hps_io_emac1_inst_RXD1, hps_io_hps_io_emac1_inst_RXD2, hps_io_hps_io_emac1_inst_RXD3, hps_io_hps_io_usb1_inst_CLK, hps_io_hps_io_usb1_inst_DIR, hps_io_hps_io_usb1_inst_NXT, hps_io_hps_io_spim1_inst_MISO, hps_io_hps_io_uart0_inst_RX, memory_oct_rzqin, system_pll_ref_clk_clk, system_pll_ref_reset_reset.\n\nExplanation: These ports handle audio input, bus master control, Ethernet receive, USB control, SPI input, UART receive, memory calibration, and system clock/reset inputs.\n\nOutput ports:\naudio_DACDAT, audio_clk_clk, av_config_SCLK, bus_master_audio_external_interface_acknowledge, bus_master_audio_external_interface_read_data, hps_io_hps_io_emac1_inst_TX_CLK, hps_io_hps_io_emac1_inst_TXD0, hps_io_hps_io_emac1_inst_TXD1, hps_io_hps_io_emac1_inst_TXD2, hps_io_hps_io_emac1_inst_TXD3, hps_io_hps_io_emac1_inst_MDC, hps_io_hps_io_emac1_inst_TX_CTL, hps_io_hps_io_qspi_inst_SS0, hps_io_hps_io_qspi_inst_CLK, hps_io_hps_io_sdio_inst_CLK, hps_io_hps_io_usb1_inst_STP, hps_io_hps_io_spim1_inst_CLK, hps_io_hps_io_spim1_inst_MOSI, hps_io_hps_io_spim1_inst_SS0, hps_io_hps_io_uart0_inst_TX, memory_mem_a, memory_mem_ba, memory_mem_ck, memory_mem_ck_n, memory_mem_cke, memory_mem_cs_n, memory_mem_ras_n, memory_mem_cas_n, memory_mem_we_n, memory_mem_reset_n, memory_mem_odt, memory_mem_dm, sdram_clk_clk.\n\nExplanation: These ports handle audio output, configuration clock, bus master responses, Ethernet transmit, QSPI control, SDIO clock, USB control, SPI output, UART transmit, and memory interface signals."
                },
                {
                    "type": "text",
                    "text": "Internal signals and their explanation is as follows: \nInternal signals:\nsystem_pll_sys_clk_clk, bus_master_audio_avalon_master_readdata, bus_master_audio_avalon_master_waitrequest, bus_master_audio_avalon_master_byteenable, bus_master_audio_avalon_master_read, bus_master_audio_avalon_master_address, bus_master_audio_avalon_master_write, bus_master_audio_avalon_master_writedata, arm_a9_hps_h2f_lw_axi_master_* (multiple signals), mm_interconnect_0_audio_subsystem_audio_slave_* (multiple signals), mm_interconnect_0_av_config_avalon_av_config_slave_* (multiple signals), irq_mapper_receiver0_irq, arm_a9_hps_f2h_irq0_irq, arm_a9_hps_f2h_irq1_irq, rst_controller_*_reset_out_reset (multiple signals), arm_a9_hps_h2f_reset_reset, system_pll_reset_source_reset.\n\nExplanation:\n- system_pll_sys_clk_clk: System clock signal generated by the PLL.\n- bus_master_audio_avalon_master_*: Signals for the Avalon bus interface of the audio bus master.\n- arm_a9_hps_h2f_lw_axi_master_*: AXI bus signals for the ARM A9 HPS to FPGA communication.\n- mm_interconnect_0_*: Interconnect signals for connecting various components like audio subsystem and AV config.\n- irq_mapper_receiver0_irq: Interrupt signal from the audio subsystem.\n- arm_a9_hps_f2h_irq0_irq, arm_a9_hps_f2h_irq1_irq: FPGA to HPS interrupt signals.\n- rst_controller_*_reset_out_reset: Reset signals from different reset controllers.\n- arm_a9_hps_h2f_reset_reset: Reset signal from ARM A9 HPS to FPGA.\n- system_pll_reset_source_reset: Reset signal from the system PLL.\n\nThese signals handle internal communication, control, and synchronization between various components of the computer system."
                },
                {
                    "type": "text",
                    "text": "Original Verilog code is as follows: \n<code>\n\n\n\n`timescale 1 ps / 1 ps\nmodule Computer_System (\n\t\tinput  wire        audio_ADCDAT,                                    \n\t\tinput  wire        audio_ADCLRCK,                                   \n\t\tinput  wire        audio_BCLK,                                      \n\t\toutput wire        audio_DACDAT,                                    \n\t\tinput  wire        audio_DACLRCK,                                   \n\t\toutput wire        audio_clk_clk,                                   \n\t\tinput  wire        audio_pll_ref_clk_clk,                           \n\t\tinput  wire        audio_pll_ref_reset_reset,                       \n\t\tinout  wire        av_config_SDAT,                                  \n\t\toutput wire        av_config_SCLK,                                  \n\t\tinput  wire [15:0] bus_master_audio_external_interface_address,     \n\t\tinput  wire [3:0]  bus_master_audio_external_interface_byte_enable, \n\t\tinput  wire        bus_master_audio_external_interface_read,        \n\t\tinput  wire        bus_master_audio_external_interface_write,       \n\t\tinput  wire [31:0] bus_master_audio_external_interface_write_data,  \n\t\toutput wire        bus_master_audio_external_interface_acknowledge, \n\t\toutput wire [31:0] bus_master_audio_external_interface_read_data,   \n\t\toutput wire        hps_io_hps_io_emac1_inst_TX_CLK,                 \n\t\toutput wire        hps_io_hps_io_emac1_inst_TXD0,                   \n\t\toutput wire        hps_io_hps_io_emac1_inst_TXD1,                   \n\t\toutput wire        hps_io_hps_io_emac1_inst_TXD2,                   \n\t\toutput wire        hps_io_hps_io_emac1_inst_TXD3,                   \n\t\tinput  wire        hps_io_hps_io_emac1_inst_RXD0,                   \n\t\tinout  wire        hps_io_hps_io_emac1_inst_MDIO,                   \n\t\toutput wire        hps_io_hps_io_emac1_inst_MDC,                    \n\t\tinput  wire        hps_io_hps_io_emac1_inst_RX_CTL,                 \n\t\toutput wire        hps_io_hps_io_emac1_inst_TX_CTL,                 \n\t\tinput  wire        hps_io_hps_io_emac1_inst_RX_CLK,                 \n\t\tinput  wire        hps_io_hps_io_emac1_inst_RXD1,                   \n\t\tinput  wire        hps_io_hps_io_emac1_inst_RXD2,                   \n\t\tinput  wire        hps_io_hps_io_emac1_inst_RXD3,                   \n\t\tinout  wire        hps_io_hps_io_qspi_inst_IO0,                     \n\t\tinout  wire        hps_io_hps_io_qspi_inst_IO1,                     \n\t\tinout  wire        hps_io_hps_io_qspi_inst_IO2,                     \n\t\tinout  wire        hps_io_hps_io_qspi_inst_IO3,                     \n\t\toutput wire        hps_io_hps_io_qspi_inst_SS0,                     \n\t\toutput wire        hps_io_hps_io_qspi_inst_CLK,                     \n\t\tinout  wire        hps_io_hps_io_sdio_inst_CMD,                     \n\t\tinout  wire        hps_io_hps_io_sdio_inst_D0,                      \n\t\tinout  wire        hps_io_hps_io_sdio_inst_D1,                      \n\t\toutput wire        hps_io_hps_io_sdio_inst_CLK,                     \n\t\tinout  wire        hps_io_hps_io_sdio_inst_D2,                      \n\t\tinout  wire        hps_io_hps_io_sdio_inst_D3,                      \n\t\tinout  wire        hps_io_hps_io_usb1_inst_D0,                      \n\t\tinout  wire        hps_io_hps_io_usb1_inst_D1,                      \n\t\tinout  wire        hps_io_hps_io_usb1_inst_D2,                      \n\t\tinout  wire        hps_io_hps_io_usb1_inst_D3,                      \n\t\tinout  wire        hps_io_hps_io_usb1_inst_D4,                      \n\t\tinout  wire        hps_io_hps_io_usb1_inst_D5,                      \n\t\tinout  wire        hps_io_hps_io_usb1_inst_D6,                      \n\t\tinout  wire        hps_io_hps_io_usb1_inst_D7,                      \n\t\tinput  wire        hps_io_hps_io_usb1_inst_CLK,                     \n\t\toutput wire        hps_io_hps_io_usb1_inst_STP,                     \n\t\tinput  wire        hps_io_hps_io_usb1_inst_DIR,                     \n\t\tinput  wire        hps_io_hps_io_usb1_inst_NXT,                     \n\t\toutput wire        hps_io_hps_io_spim1_inst_CLK,                    \n\t\toutput wire        hps_io_hps_io_spim1_inst_MOSI,                   \n\t\tinput  wire        hps_io_hps_io_spim1_inst_MISO,                   \n\t\toutput wire        hps_io_hps_io_spim1_inst_SS0,                    \n\t\tinput  wire        hps_io_hps_io_uart0_inst_RX,                     \n\t\toutput wire        hps_io_hps_io_uart0_inst_TX,                     \n\t\tinout  wire        hps_io_hps_io_i2c0_inst_SDA,                     \n\t\tinout  wire        hps_io_hps_io_i2c0_inst_SCL,                     \n\t\tinout  wire        hps_io_hps_io_i2c1_inst_SDA,                     \n\t\tinout  wire        hps_io_hps_io_i2c1_inst_SCL,                     \n\t\tinout  wire        hps_io_hps_io_gpio_inst_GPIO09,                  \n\t\tinout  wire        hps_io_hps_io_gpio_inst_GPIO35,                  \n\t\tinout  wire        hps_io_hps_io_gpio_inst_GPIO40,                  \n\t\tinout  wire        hps_io_hps_io_gpio_inst_GPIO41,                  \n\t\tinout  wire        hps_io_hps_io_gpio_inst_GPIO48,                  \n\t\tinout  wire        hps_io_hps_io_gpio_inst_GPIO53,                  \n\t\tinout  wire        hps_io_hps_io_gpio_inst_GPIO54,                  \n\t\tinout  wire        hps_io_hps_io_gpio_inst_GPIO61,                  \n\t\toutput wire [14:0] memory_mem_a,                                    \n\t\toutput wire [2:0]  memory_mem_ba,                                   \n\t\toutput wire        memory_mem_ck,                                   \n\t\toutput wire        memory_mem_ck_n,                                 \n\t\toutput wire        memory_mem_cke,                                  \n\t\toutput wire        memory_mem_cs_n,                                 \n\t\toutput wire        memory_mem_ras_n,                                \n\t\toutput wire        memory_mem_cas_n,                                \n\t\toutput wire        memory_mem_we_n,                                 \n\t\toutput wire        memory_mem_reset_n,                              \n\t\tinout  wire [31:0] memory_mem_dq,                                   \n\t\tinout  wire [3:0]  memory_mem_dqs,                                  \n\t\tinout  wire [3:0]  memory_mem_dqs_n,                                \n\t\toutput wire        memory_mem_odt,                                  \n\t\toutput wire [3:0]  memory_mem_dm,                                   \n\t\tinput  wire        memory_oct_rzqin,                                \n\t\toutput wire        sdram_clk_clk,                                   \n\t\tinput  wire        system_pll_ref_clk_clk,                          \n\t\tinput  wire        system_pll_ref_reset_reset                       \n\t);\n\n\twire         system_pll_sys_clk_clk;                                         \n\twire  [31:0] bus_master_audio_avalon_master_readdata;                        \n\twire         bus_master_audio_avalon_master_waitrequest;                     \n\twire   [3:0] bus_master_audio_avalon_master_byteenable;                      \n\twire         bus_master_audio_avalon_master_read;                            \n\twire  [15:0] bus_master_audio_avalon_master_address;                         \n\twire         bus_master_audio_avalon_master_write;                           \n\twire  [31:0] bus_master_audio_avalon_master_writedata;                       \n\twire   [1:0] arm_a9_hps_h2f_lw_axi_master_awburst;                           \n\twire   [3:0] arm_a9_hps_h2f_lw_axi_master_arlen;                             \n\twire   [3:0] arm_a9_hps_h2f_lw_axi_master_wstrb;                             \n\twire         arm_a9_hps_h2f_lw_axi_master_wready;                            \n\twire  [11:0] arm_a9_hps_h2f_lw_axi_master_rid;                               \n\twire         arm_a9_hps_h2f_lw_axi_master_rready;                            \n\twire   [3:0] arm_a9_hps_h2f_lw_axi_master_awlen;                             \n\twire  [11:0] arm_a9_hps_h2f_lw_axi_master_wid;                               \n\twire   [3:0] arm_a9_hps_h2f_lw_axi_master_arcache;                           \n\twire         arm_a9_hps_h2f_lw_axi_master_wvalid;                            \n\twire  [20:0] arm_a9_hps_h2f_lw_axi_master_araddr;                            \n\twire   [2:0] arm_a9_hps_h2f_lw_axi_master_arprot;                            \n\twire   [2:0] arm_a9_hps_h2f_lw_axi_master_awprot;                            \n\twire  [31:0] arm_a9_hps_h2f_lw_axi_master_wdata;                             \n\twire         arm_a9_hps_h2f_lw_axi_master_arvalid;                           \n\twire   [3:0] arm_a9_hps_h2f_lw_axi_master_awcache;                           \n\twire  [11:0] arm_a9_hps_h2f_lw_axi_master_arid;                              \n\twire   [1:0] arm_a9_hps_h2f_lw_axi_master_arlock;                            \n\twire   [1:0] arm_a9_hps_h2f_lw_axi_master_awlock;                            \n\twire  [20:0] arm_a9_hps_h2f_lw_axi_master_awaddr;                            \n\twire   [1:0] arm_a9_hps_h2f_lw_axi_master_bresp;                             \n\twire         arm_a9_hps_h2f_lw_axi_master_arready;                           \n\twire  [31:0] arm_a9_hps_h2f_lw_axi_master_rdata;                             \n\twire         arm_a9_hps_h2f_lw_axi_master_awready;                           \n\twire   [1:0] arm_a9_hps_h2f_lw_axi_master_arburst;                           \n\twire   [2:0] arm_a9_hps_h2f_lw_axi_master_arsize;                            \n\twire         arm_a9_hps_h2f_lw_axi_master_bready;                            \n\twire         arm_a9_hps_h2f_lw_axi_master_rlast;                             \n\twire         arm_a9_hps_h2f_lw_axi_master_wlast;                             \n\twire   [1:0] arm_a9_hps_h2f_lw_axi_master_rresp;                             \n\twire  [11:0] arm_a9_hps_h2f_lw_axi_master_awid;                              \n\twire  [11:0] arm_a9_hps_h2f_lw_axi_master_bid;                               \n\twire         arm_a9_hps_h2f_lw_axi_master_bvalid;                            \n\twire   [2:0] arm_a9_hps_h2f_lw_axi_master_awsize;                            \n\twire         arm_a9_hps_h2f_lw_axi_master_awvalid;                           \n\twire         arm_a9_hps_h2f_lw_axi_master_rvalid;                            \n\twire         mm_interconnect_0_audio_subsystem_audio_slave_chipselect;       \n\twire  [31:0] mm_interconnect_0_audio_subsystem_audio_slave_readdata;         \n\twire   [1:0] mm_interconnect_0_audio_subsystem_audio_slave_address;          \n\twire         mm_interconnect_0_audio_subsystem_audio_slave_read;             \n\twire         mm_interconnect_0_audio_subsystem_audio_slave_write;            \n\twire  [31:0] mm_interconnect_0_audio_subsystem_audio_slave_writedata;        \n\twire  [31:0] mm_interconnect_0_av_config_avalon_av_config_slave_readdata;    \n\twire         mm_interconnect_0_av_config_avalon_av_config_slave_waitrequest; \n\twire   [1:0] mm_interconnect_0_av_config_avalon_av_config_slave_address;     \n\twire         mm_interconnect_0_av_config_avalon_av_config_slave_read;        \n\twire   [3:0] mm_interconnect_0_av_config_avalon_av_config_slave_byteenable;  \n\twire         mm_interconnect_0_av_config_avalon_av_config_slave_write;       \n\twire  [31:0] mm_interconnect_0_av_config_avalon_av_config_slave_writedata;   \n\twire         irq_mapper_receiver0_irq;                                       \n\twire  [31:0] arm_a9_hps_f2h_irq0_irq;                                        \n\twire  [31:0] arm_a9_hps_f2h_irq1_irq;                                        \n\twire         rst_controller_reset_out_reset;                                 \n\twire         arm_a9_hps_h2f_reset_reset;                                     \n\twire         system_pll_reset_source_reset;                                  \n\twire         rst_controller_001_reset_out_reset;                             \n\twire         rst_controller_002_reset_out_reset;                             \n\n\tComputer_System_ARM_A9_HPS #(\n\t\t.F2S_Width (2),\n\t\t.S2F_Width (3)\n\t) arm_a9_hps (\n\t\t.mem_a                    (memory_mem_a),                         \n\t\t.mem_ba                   (memory_mem_ba),                        \n\t\t.mem_ck                   (memory_mem_ck),                        \n\t\t.mem_ck_n                 (memory_mem_ck_n),                      \n\t\t.mem_cke                  (memory_mem_cke),                       \n\t\t.mem_cs_n                 (memory_mem_cs_n),                      \n\t\t.mem_ras_n                (memory_mem_ras_n),                     \n\t\t.mem_cas_n                (memory_mem_cas_n),                     \n\t\t.mem_we_n                 (memory_mem_we_n),                      \n\t\t.mem_reset_n              (memory_mem_reset_n),                   \n\t\t.mem_dq                   (memory_mem_dq),                        \n\t\t.mem_dqs                  (memory_mem_dqs),                       \n\t\t.mem_dqs_n                (memory_mem_dqs_n),                     \n\t\t.mem_odt                  (memory_mem_odt),                       \n\t\t.mem_dm                   (memory_mem_dm),                        \n\t\t.oct_rzqin                (memory_oct_rzqin),                     \n\t\t.hps_io_emac1_inst_TX_CLK (hps_io_hps_io_emac1_inst_TX_CLK),      \n\t\t.hps_io_emac1_inst_TXD0   (hps_io_hps_io_emac1_inst_TXD0),        \n\t\t.hps_io_emac1_inst_TXD1   (hps_io_hps_io_emac1_inst_TXD1),        \n\t\t.hps_io_emac1_inst_TXD2   (hps_io_hps_io_emac1_inst_TXD2),        \n\t\t.hps_io_emac1_inst_TXD3   (hps_io_hps_io_emac1_inst_TXD3),        \n\t\t.hps_io_emac1_inst_RXD0   (hps_io_hps_io_emac1_inst_RXD0),        \n\t\t.hps_io_emac1_inst_MDIO   (hps_io_hps_io_emac1_inst_MDIO),        \n\t\t.hps_io_emac1_inst_MDC    (hps_io_hps_io_emac1_inst_MDC),         \n\t\t.hps_io_emac1_inst_RX_CTL (hps_io_hps_io_emac1_inst_RX_CTL),      \n\t\t.hps_io_emac1_inst_TX_CTL (hps_io_hps_io_emac1_inst_TX_CTL),      \n\t\t.hps_io_emac1_inst_RX_CLK (hps_io_hps_io_emac1_inst_RX_CLK),      \n\t\t.hps_io_emac1_inst_RXD1   (hps_io_hps_io_emac1_inst_RXD1),        \n\t\t.hps_io_emac1_inst_RXD2   (hps_io_hps_io_emac1_inst_RXD2),        \n\t\t.hps_io_emac1_inst_RXD3   (hps_io_hps_io_emac1_inst_RXD3),        \n\t\t.hps_io_qspi_inst_IO0     (hps_io_hps_io_qspi_inst_IO0),          \n\t\t.hps_io_qspi_inst_IO1     (hps_io_hps_io_qspi_inst_IO1),          \n\t\t.hps_io_qspi_inst_IO2     (hps_io_hps_io_qspi_inst_IO2),          \n\t\t.hps_io_qspi_inst_IO3     (hps_io_hps_io_qspi_inst_IO3),          \n\t\t.hps_io_qspi_inst_SS0     (hps_io_hps_io_qspi_inst_SS0),          \n\t\t.hps_io_qspi_inst_CLK     (hps_io_hps_io_qspi_inst_CLK),          \n\t\t.hps_io_sdio_inst_CMD     (hps_io_hps_io_sdio_inst_CMD),          \n\t\t.hps_io_sdio_inst_D0      (hps_io_hps_io_sdio_inst_D0),           \n\t\t.hps_io_sdio_inst_D1      (hps_io_hps_io_sdio_inst_D1),           \n\t\t.hps_io_sdio_inst_CLK     (hps_io_hps_io_sdio_inst_CLK),          \n\t\t.hps_io_sdio_inst_D2      (hps_io_hps_io_sdio_inst_D2),           \n\t\t.hps_io_sdio_inst_D3      (hps_io_hps_io_sdio_inst_D3),           \n\t\t.hps_io_usb1_inst_D0      (hps_io_hps_io_usb1_inst_D0),           \n\t\t.hps_io_usb1_inst_D1      (hps_io_hps_io_usb1_inst_D1),           \n\t\t.hps_io_usb1_inst_D2      (hps_io_hps_io_usb1_inst_D2),           \n\t\t.hps_io_usb1_inst_D3      (hps_io_hps_io_usb1_inst_D3),           \n\t\t.hps_io_usb1_inst_D4      (hps_io_hps_io_usb1_inst_D4),           \n\t\t.hps_io_usb1_inst_D5      (hps_io_hps_io_usb1_inst_D5),           \n\t\t.hps_io_usb1_inst_D6      (hps_io_hps_io_usb1_inst_D6),           \n\t\t.hps_io_usb1_inst_D7      (hps_io_hps_io_usb1_inst_D7),           \n\t\t.hps_io_usb1_inst_CLK     (hps_io_hps_io_usb1_inst_CLK),          \n\t\t.hps_io_usb1_inst_STP     (hps_io_hps_io_usb1_inst_STP),          \n\t\t.hps_io_usb1_inst_DIR     (hps_io_hps_io_usb1_inst_DIR),          \n\t\t.hps_io_usb1_inst_NXT     (hps_io_hps_io_usb1_inst_NXT),          \n\t\t.hps_io_spim1_inst_CLK    (hps_io_hps_io_spim1_inst_CLK),         \n\t\t.hps_io_spim1_inst_MOSI   (hps_io_hps_io_spim1_inst_MOSI),        \n\t\t.hps_io_spim1_inst_MISO   (hps_io_hps_io_spim1_inst_MISO),        \n\t\t.hps_io_spim1_inst_SS0    (hps_io_hps_io_spim1_inst_SS0),         \n\t\t.hps_io_uart0_inst_RX     (hps_io_hps_io_uart0_inst_RX),          \n\t\t.hps_io_uart0_inst_TX     (hps_io_hps_io_uart0_inst_TX),          \n\t\t.hps_io_i2c0_inst_SDA     (hps_io_hps_io_i2c0_inst_SDA),          \n\t\t.hps_io_i2c0_inst_SCL     (hps_io_hps_io_i2c0_inst_SCL),          \n\t\t.hps_io_i2c1_inst_SDA     (hps_io_hps_io_i2c1_inst_SDA),          \n\t\t.hps_io_i2c1_inst_SCL     (hps_io_hps_io_i2c1_inst_SCL),          \n\t\t.hps_io_gpio_inst_GPIO09  (hps_io_hps_io_gpio_inst_GPIO09),       \n\t\t.hps_io_gpio_inst_GPIO35  (hps_io_hps_io_gpio_inst_GPIO35),       \n\t\t.hps_io_gpio_inst_GPIO40  (hps_io_hps_io_gpio_inst_GPIO40),       \n\t\t.hps_io_gpio_inst_GPIO41  (hps_io_hps_io_gpio_inst_GPIO41),       \n\t\t.hps_io_gpio_inst_GPIO48  (hps_io_hps_io_gpio_inst_GPIO48),       \n\t\t.hps_io_gpio_inst_GPIO53  (hps_io_hps_io_gpio_inst_GPIO53),       \n\t\t.hps_io_gpio_inst_GPIO54  (hps_io_hps_io_gpio_inst_GPIO54),       \n\t\t.hps_io_gpio_inst_GPIO61  (hps_io_hps_io_gpio_inst_GPIO61),       \n\t\t.h2f_rst_n                (arm_a9_hps_h2f_reset_reset),           \n\t\t.h2f_axi_clk              (system_pll_sys_clk_clk),               \n\t\t.h2f_AWID                 (),                                     \n\t\t.h2f_AWADDR               (),                                     \n\t\t.h2f_AWLEN                (),                                     \n\t\t.h2f_AWSIZE               (),                                     \n\t\t.h2f_AWBURST              (),                                     \n\t\t.h2f_AWLOCK               (),                                     \n\t\t.h2f_AWCACHE              (),                                     \n\t\t.h2f_AWPROT               (),                                     \n\t\t.h2f_AWVALID              (),                                     \n\t\t.h2f_AWREADY              (),                                     \n\t\t.h2f_WID                  (),                                     \n\t\t.h2f_WDATA                (),                                     \n\t\t.h2f_WSTRB                (),                                     \n\t\t.h2f_WLAST                (),                                     \n\t\t.h2f_WVALID               (),                                     \n\t\t.h2f_WREADY               (),                                     \n\t\t.h2f_BID                  (),                                     \n\t\t.h2f_BRESP                (),                                     \n\t\t.h2f_BVALID               (),                                     \n\t\t.h2f_BREADY               (),                                     \n\t\t.h2f_ARID                 (),                                     \n\t\t.h2f_ARADDR               (),                                     \n\t\t.h2f_ARLEN                (),                                     \n\t\t.h2f_ARSIZE               (),                                     \n\t\t.h2f_ARBURST              (),                                     \n\t\t.h2f_ARLOCK               (),                                     \n\t\t.h2f_ARCACHE              (),                                     \n\t\t.h2f_ARPROT               (),                                     \n\t\t.h2f_ARVALID              (),                                     \n\t\t.h2f_ARREADY              (),                                     \n\t\t.h2f_RID                  (),                                     \n\t\t.h2f_RDATA                (),                                     \n\t\t.h2f_RRESP                (),                                     \n\t\t.h2f_RLAST                (),                                     \n\t\t.h2f_RVALID               (),                                     \n\t\t.h2f_RREADY               (),                                     \n\t\t.f2h_axi_clk              (system_pll_sys_clk_clk),               \n\t\t.f2h_AWID                 (),                                     \n\t\t.f2h_AWADDR               (),                                     \n\t\t.f2h_AWLEN                (),                                     \n\t\t.f2h_AWSIZE               (),                                     \n\t\t.f2h_AWBURST              (),                                     \n\t\t.f2h_AWLOCK               (),                                     \n\t\t.f2h_AWCACHE              (),                                     \n\t\t.f2h_AWPROT               (),                                     \n\t\t.f2h_AWVALID              (),                                     \n\t\t.f2h_AWREADY              (),                                     \n\t\t.f2h_AWUSER               (),                                     \n\t\t.f2h_WID                  (),                                     \n\t\t.f2h_WDATA                (),                                     \n\t\t.f2h_WSTRB                (),                                     \n\t\t.f2h_WLAST                (),                                     \n\t\t.f2h_WVALID               (),                                     \n\t\t.f2h_WREADY               (),                                     \n\t\t.f2h_BID                  (),                                     \n\t\t.f2h_BRESP                (),                                     \n\t\t.f2h_BVALID               (),                                     \n\t\t.f2h_BREADY               (),                                     \n\t\t.f2h_ARID                 (),                                     \n\t\t.f2h_ARADDR               (),                                     \n\t\t.f2h_ARLEN                (),                                     \n\t\t.f2h_ARSIZE               (),                                     \n\t\t.f2h_ARBURST              (),                                     \n\t\t.f2h_ARLOCK               (),                                     \n\t\t.f2h_ARCACHE              (),                                     \n\t\t.f2h_ARPROT               (),                                     \n\t\t.f2h_ARVALID              (),                                     \n\t\t.f2h_ARREADY              (),                                     \n\t\t.f2h_ARUSER               (),                                     \n\t\t.f2h_RID                  (),                                     \n\t\t.f2h_RDATA                (),                                     \n\t\t.f2h_RRESP                (),                                     \n\t\t.f2h_RLAST                (),                                     \n\t\t.f2h_RVALID               (),                                     \n\t\t.f2h_RREADY               (),                                     \n\t\t.h2f_lw_axi_clk           (system_pll_sys_clk_clk),               \n\t\t.h2f_lw_AWID              (arm_a9_hps_h2f_lw_axi_master_awid),    \n\t\t.h2f_lw_AWADDR            (arm_a9_hps_h2f_lw_axi_master_awaddr),  \n\t\t.h2f_lw_AWLEN             (arm_a9_hps_h2f_lw_axi_master_awlen),   \n\t\t.h2f_lw_AWSIZE            (arm_a9_hps_h2f_lw_axi_master_awsize),  \n\t\t.h2f_lw_AWBURST           (arm_a9_hps_h2f_lw_axi_master_awburst), \n\t\t.h2f_lw_AWLOCK            (arm_a9_hps_h2f_lw_axi_master_awlock),  \n\t\t.h2f_lw_AWCACHE           (arm_a9_hps_h2f_lw_axi_master_awcache), \n\t\t.h2f_lw_AWPROT            (arm_a9_hps_h2f_lw_axi_master_awprot),  \n\t\t.h2f_lw_AWVALID           (arm_a9_hps_h2f_lw_axi_master_awvalid), \n\t\t.h2f_lw_AWREADY           (arm_a9_hps_h2f_lw_axi_master_awready), \n\t\t.h2f_lw_WID               (arm_a9_hps_h2f_lw_axi_master_wid),     \n\t\t.h2f_lw_WDATA             (arm_a9_hps_h2f_lw_axi_master_wdata),   \n\t\t.h2f_lw_WSTRB             (arm_a9_hps_h2f_lw_axi_master_wstrb),   \n\t\t.h2f_lw_WLAST             (arm_a9_hps_h2f_lw_axi_master_wlast),   \n\t\t.h2f_lw_WVALID            (arm_a9_hps_h2f_lw_axi_master_wvalid),  \n\t\t.h2f_lw_WREADY            (arm_a9_hps_h2f_lw_axi_master_wready),  \n\t\t.h2f_lw_BID               (arm_a9_hps_h2f_lw_axi_master_bid),     \n\t\t.h2f_lw_BRESP             (arm_a9_hps_h2f_lw_axi_master_bresp),   \n\t\t.h2f_lw_BVALID            (arm_a9_hps_h2f_lw_axi_master_bvalid),  \n\t\t.h2f_lw_BREADY            (arm_a9_hps_h2f_lw_axi_master_bready),  \n\t\t.h2f_lw_ARID              (arm_a9_hps_h2f_lw_axi_master_arid),    \n\t\t.h2f_lw_ARADDR            (arm_a9_hps_h2f_lw_axi_master_araddr),  \n\t\t.h2f_lw_ARLEN             (arm_a9_hps_h2f_lw_axi_master_arlen),   \n\t\t.h2f_lw_ARSIZE            (arm_a9_hps_h2f_lw_axi_master_arsize),  \n\t\t.h2f_lw_ARBURST           (arm_a9_hps_h2f_lw_axi_master_arburst), \n\t\t.h2f_lw_ARLOCK            (arm_a9_hps_h2f_lw_axi_master_arlock),  \n\t\t.h2f_lw_ARCACHE           (arm_a9_hps_h2f_lw_axi_master_arcache), \n\t\t.h2f_lw_ARPROT            (arm_a9_hps_h2f_lw_axi_master_arprot),  \n\t\t.h2f_lw_ARVALID           (arm_a9_hps_h2f_lw_axi_master_arvalid), \n\t\t.h2f_lw_ARREADY           (arm_a9_hps_h2f_lw_axi_master_arready), \n\t\t.h2f_lw_RID               (arm_a9_hps_h2f_lw_axi_master_rid),     \n\t\t.h2f_lw_RDATA             (arm_a9_hps_h2f_lw_axi_master_rdata),   \n\t\t.h2f_lw_RRESP             (arm_a9_hps_h2f_lw_axi_master_rresp),   \n\t\t.h2f_lw_RLAST             (arm_a9_hps_h2f_lw_axi_master_rlast),   \n\t\t.h2f_lw_RVALID            (arm_a9_hps_h2f_lw_axi_master_rvalid),  \n\t\t.h2f_lw_RREADY            (arm_a9_hps_h2f_lw_axi_master_rready),  \n\t\t.f2h_irq_p0               (arm_a9_hps_f2h_irq0_irq),              \n\t\t.f2h_irq_p1               (arm_a9_hps_f2h_irq1_irq)               \n\t);\n\n\tComputer_System_AV_Config av_config (\n\t\t.clk         (system_pll_sys_clk_clk),                                         \n\t\t.reset       (rst_controller_reset_out_reset),                                 \n\t\t.address     (mm_interconnect_0_av_config_avalon_av_config_slave_address),     \n\t\t.byteenable  (mm_interconnect_0_av_config_avalon_av_config_slave_byteenable),  \n\t\t.read        (mm_interconnect_0_av_config_avalon_av_config_slave_read),        \n\t\t.write       (mm_interconnect_0_av_config_avalon_av_config_slave_write),       \n\t\t.writedata   (mm_interconnect_0_av_config_avalon_av_config_slave_writedata),   \n\t\t.readdata    (mm_interconnect_0_av_config_avalon_av_config_slave_readdata),    \n\t\t.waitrequest (mm_interconnect_0_av_config_avalon_av_config_slave_waitrequest), \n\t\t.I2C_SDAT    (av_config_SDAT),                                                 \n\t\t.I2C_SCLK    (av_config_SCLK)                                                  \n\t);\n\n\tComputer_System_Audio_Subsystem audio_subsystem (\n\t\t.audio_ADCDAT              (audio_ADCDAT),                                             \n\t\t.audio_ADCLRCK             (audio_ADCLRCK),                                            \n\t\t.audio_BCLK                (audio_BCLK),                                               \n\t\t.audio_DACDAT              (audio_DACDAT),                                             \n\t\t.audio_DACLRCK             (audio_DACLRCK),                                            \n\t\t.audio_clk_clk             (audio_clk_clk),                                            \n\t\t.audio_irq_irq             (irq_mapper_receiver0_irq),                                 \n\t\t.audio_pll_ref_clk_clk     (audio_pll_ref_clk_clk),                                    \n\t\t.audio_pll_ref_reset_reset (audio_pll_ref_reset_reset),                                \n\t\t.audio_reset_reset         (),                                                         \n\t\t.audio_slave_address       (mm_interconnect_0_audio_subsystem_audio_slave_address),    \n\t\t.audio_slave_chipselect    (mm_interconnect_0_audio_subsystem_audio_slave_chipselect), \n\t\t.audio_slave_read          (mm_interconnect_0_audio_subsystem_audio_slave_read),       \n\t\t.audio_slave_write         (mm_interconnect_0_audio_subsystem_audio_slave_write),      \n\t\t.audio_slave_writedata     (mm_interconnect_0_audio_subsystem_audio_slave_writedata),  \n\t\t.audio_slave_readdata      (mm_interconnect_0_audio_subsystem_audio_slave_readdata),   \n\t\t.sys_clk_clk               (system_pll_sys_clk_clk),                                   \n\t\t.sys_reset_reset_n         (~rst_controller_001_reset_out_reset)                       \n\t);\n\n\tComputer_System_Bus_master_audio bus_master_audio (\n\t\t.clk                (system_pll_sys_clk_clk),                          \n\t\t.reset              (rst_controller_reset_out_reset),                  \n\t\t.avalon_readdata    (bus_master_audio_avalon_master_readdata),         \n\t\t.avalon_waitrequest (bus_master_audio_avalon_master_waitrequest),      \n\t\t.avalon_byteenable  (bus_master_audio_avalon_master_byteenable),       \n\t\t.avalon_read        (bus_master_audio_avalon_master_read),             \n\t\t.avalon_write       (bus_master_audio_avalon_master_write),            \n\t\t.avalon_writedata   (bus_master_audio_avalon_master_writedata),        \n\t\t.avalon_address     (bus_master_audio_avalon_master_address),          \n\t\t.address            (bus_master_audio_external_interface_address),     \n\t\t.byte_enable        (bus_master_audio_external_interface_byte_enable), \n\t\t.read               (bus_master_audio_external_interface_read),        \n\t\t.write              (bus_master_audio_external_interface_write),       \n\t\t.write_data         (bus_master_audio_external_interface_write_data),  \n\t\t.acknowledge        (bus_master_audio_external_interface_acknowledge), \n\t\t.read_data          (bus_master_audio_external_interface_read_data)    \n\t);\n\n\tComputer_System_System_PLL system_pll (\n\t\t.ref_clk_clk        (system_pll_ref_clk_clk),        \n\t\t.ref_reset_reset    (system_pll_ref_reset_reset),    \n\t\t.sys_clk_clk        (system_pll_sys_clk_clk),        \n\t\t.sdram_clk_clk      (sdram_clk_clk),                 \n\t\t.reset_source_reset (system_pll_reset_source_reset)  \n\t);\n\n\tComputer_System_mm_interconnect_0 mm_interconnect_0 (\n\t\t.ARM_A9_HPS_h2f_lw_axi_master_awid                                        (arm_a9_hps_h2f_lw_axi_master_awid),                              \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_awaddr                                      (arm_a9_hps_h2f_lw_axi_master_awaddr),                            \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_awlen                                       (arm_a9_hps_h2f_lw_axi_master_awlen),                             \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_awsize                                      (arm_a9_hps_h2f_lw_axi_master_awsize),                            \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_awburst                                     (arm_a9_hps_h2f_lw_axi_master_awburst),                           \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_awlock                                      (arm_a9_hps_h2f_lw_axi_master_awlock),                            \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_awcache                                     (arm_a9_hps_h2f_lw_axi_master_awcache),                           \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_awprot                                      (arm_a9_hps_h2f_lw_axi_master_awprot),                            \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_awvalid                                     (arm_a9_hps_h2f_lw_axi_master_awvalid),                           \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_awready                                     (arm_a9_hps_h2f_lw_axi_master_awready),                           \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_wid                                         (arm_a9_hps_h2f_lw_axi_master_wid),                               \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_wdata                                       (arm_a9_hps_h2f_lw_axi_master_wdata),                             \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_wstrb                                       (arm_a9_hps_h2f_lw_axi_master_wstrb),                             \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_wlast                                       (arm_a9_hps_h2f_lw_axi_master_wlast),                             \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_wvalid                                      (arm_a9_hps_h2f_lw_axi_master_wvalid),                            \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_wready                                      (arm_a9_hps_h2f_lw_axi_master_wready),                            \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_bid                                         (arm_a9_hps_h2f_lw_axi_master_bid),                               \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_bresp                                       (arm_a9_hps_h2f_lw_axi_master_bresp),                             \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_bvalid                                      (arm_a9_hps_h2f_lw_axi_master_bvalid),                            \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_bready                                      (arm_a9_hps_h2f_lw_axi_master_bready),                            \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_arid                                        (arm_a9_hps_h2f_lw_axi_master_arid),                              \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_araddr                                      (arm_a9_hps_h2f_lw_axi_master_araddr),                            \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_arlen                                       (arm_a9_hps_h2f_lw_axi_master_arlen),                             \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_arsize                                      (arm_a9_hps_h2f_lw_axi_master_arsize),                            \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_arburst                                     (arm_a9_hps_h2f_lw_axi_master_arburst),                           \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_arlock                                      (arm_a9_hps_h2f_lw_axi_master_arlock),                            \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_arcache                                     (arm_a9_hps_h2f_lw_axi_master_arcache),                           \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_arprot                                      (arm_a9_hps_h2f_lw_axi_master_arprot),                            \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_arvalid                                     (arm_a9_hps_h2f_lw_axi_master_arvalid),                           \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_arready                                     (arm_a9_hps_h2f_lw_axi_master_arready),                           \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_rid                                         (arm_a9_hps_h2f_lw_axi_master_rid),                               \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_rdata                                       (arm_a9_hps_h2f_lw_axi_master_rdata),                             \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_rresp                                       (arm_a9_hps_h2f_lw_axi_master_rresp),                             \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_rlast                                       (arm_a9_hps_h2f_lw_axi_master_rlast),                             \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_rvalid                                      (arm_a9_hps_h2f_lw_axi_master_rvalid),                            \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_rready                                      (arm_a9_hps_h2f_lw_axi_master_rready),                            \n\t\t.System_PLL_sys_clk_clk                                                   (system_pll_sys_clk_clk),                                         \n\t\t.ARM_A9_HPS_h2f_lw_axi_master_agent_clk_reset_reset_bridge_in_reset_reset (rst_controller_002_reset_out_reset),                             \n\t\t.Audio_Subsystem_sys_reset_reset_bridge_in_reset_reset                    (rst_controller_reset_out_reset),                                 \n\t\t.Bus_master_audio_reset_reset_bridge_in_reset_reset                       (rst_controller_reset_out_reset),                                 \n\t\t.Bus_master_audio_avalon_master_address                                   (bus_master_audio_avalon_master_address),                         \n\t\t.Bus_master_audio_avalon_master_waitrequest                               (bus_master_audio_avalon_master_waitrequest),                     \n\t\t.Bus_master_audio_avalon_master_byteenable                                (bus_master_audio_avalon_master_byteenable),                      \n\t\t.Bus_master_audio_avalon_master_read                                      (bus_master_audio_avalon_master_read),                            \n\t\t.Bus_master_audio_avalon_master_readdata                                  (bus_master_audio_avalon_master_readdata),                        \n\t\t.Bus_master_audio_avalon_master_write                                     (bus_master_audio_avalon_master_write),                           \n\t\t.Bus_master_audio_avalon_master_writedata                                 (bus_master_audio_avalon_master_writedata),                       \n\t\t.Audio_Subsystem_audio_slave_address                                      (mm_interconnect_0_audio_subsystem_audio_slave_address),          \n\t\t.Audio_Subsystem_audio_slave_write                                        (mm_interconnect_0_audio_subsystem_audio_slave_write),            \n\t\t.Audio_Subsystem_audio_slave_read                                         (mm_interconnect_0_audio_subsystem_audio_slave_read),             \n\t\t.Audio_Subsystem_audio_slave_readdata                                     (mm_interconnect_0_audio_subsystem_audio_slave_readdata),         \n\t\t.Audio_Subsystem_audio_slave_writedata                                    (mm_interconnect_0_audio_subsystem_audio_slave_writedata),        \n\t\t.Audio_Subsystem_audio_slave_chipselect                                   (mm_interconnect_0_audio_subsystem_audio_slave_chipselect),       \n\t\t.AV_Config_avalon_av_config_slave_address                                 (mm_interconnect_0_av_config_avalon_av_config_slave_address),     \n\t\t.AV_Config_avalon_av_config_slave_write                                   (mm_interconnect_0_av_config_avalon_av_config_slave_write),       \n\t\t.AV_Config_avalon_av_config_slave_read                                    (mm_interconnect_0_av_config_avalon_av_config_slave_read),        \n\t\t.AV_Config_avalon_av_config_slave_readdata                                (mm_interconnect_0_av_config_avalon_av_config_slave_readdata),    \n\t\t.AV_Config_avalon_av_config_slave_writedata                               (mm_interconnect_0_av_config_avalon_av_config_slave_writedata),   \n\t\t.AV_Config_avalon_av_config_slave_byteenable                              (mm_interconnect_0_av_config_avalon_av_config_slave_byteenable),  \n\t\t.AV_Config_avalon_av_config_slave_waitrequest                             (mm_interconnect_0_av_config_avalon_av_config_slave_waitrequest)  \n\t);\n\n\tComputer_System_irq_mapper irq_mapper (\n\t\t.clk           (),                         \n\t\t.reset         (),                         \n\t\t.receiver0_irq (irq_mapper_receiver0_irq), \n\t\t.sender_irq    (arm_a9_hps_f2h_irq0_irq)   \n\t);\n\n\tComputer_System_irq_mapper_001 irq_mapper_001 (\n\t\t.clk        (),                        \n\t\t.reset      (),                        \n\t\t.sender_irq (arm_a9_hps_f2h_irq1_irq)  \n\t);\n\n\taltera_reset_controller #(\n\t\t.NUM_RESET_INPUTS          (2),\n\t\t.OUTPUT_RESET_SYNC_EDGES   (\"deassert\"),\n\t\t.SYNC_DEPTH                (2),\n\t\t.RESET_REQUEST_PRESENT     (0),\n\t\t.RESET_REQ_WAIT_TIME       (1),\n\t\t.MIN_RST_ASSERTION_TIME    (3),\n\t\t.RESET_REQ_EARLY_DSRT_TIME (1),\n\t\t.USE_RESET_REQUEST_IN0     (0),\n\t\t.USE_RESET_REQUEST_IN1     (0),\n\t\t.USE_RESET_REQUEST_IN2     (0),\n\t\t.USE_RESET_REQUEST_IN3     (0),\n\t\t.USE_RESET_REQUEST_IN4     (0),\n\t\t.USE_RESET_REQUEST_IN5     (0),\n\t\t.USE_RESET_REQUEST_IN6     (0),\n\t\t.USE_RESET_REQUEST_IN7     (0),\n\t\t.USE_RESET_REQUEST_IN8     (0),\n\t\t.USE_RESET_REQUEST_IN9     (0),\n\t\t.USE_RESET_REQUEST_IN10    (0),\n\t\t.USE_RESET_REQUEST_IN11    (0),\n\t\t.USE_RESET_REQUEST_IN12    (0),\n\t\t.USE_RESET_REQUEST_IN13    (0),\n\t\t.USE_RESET_REQUEST_IN14    (0),\n\t\t.USE_RESET_REQUEST_IN15    (0),\n\t\t.ADAPT_RESET_REQUEST       (0)\n\t) rst_controller (\n\t\t.reset_in0      (~arm_a9_hps_h2f_reset_reset),    \n\t\t.reset_in1      (system_pll_reset_source_reset),  \n\t\t.clk            (system_pll_sys_clk_clk),         \n\t\t.reset_out      (rst_controller_reset_out_reset), \n\t\t.reset_req      (),                               \n\t\t.reset_req_in0  (1'b0),                           \n\t\t.reset_req_in1  (1'b0),                           \n\t\t.reset_in2      (1'b0),                           \n\t\t.reset_req_in2  (1'b0),                           \n\t\t.reset_in3      (1'b0),                           \n\t\t.reset_req_in3  (1'b0),                           \n\t\t.reset_in4      (1'b0),                           \n\t\t.reset_req_in4  (1'b0),                           \n\t\t.reset_in5      (1'b0),                           \n\t\t.reset_req_in5  (1'b0),                           \n\t\t.reset_in6      (1'b0),                           \n\t\t.reset_req_in6  (1'b0),                           \n\t\t.reset_in7      (1'b0),                           \n\t\t.reset_req_in7  (1'b0),                           \n\t\t.reset_in8      (1'b0),                           \n\t\t.reset_req_in8  (1'b0),                           \n\t\t.reset_in9      (1'b0),                           \n\t\t.reset_req_in9  (1'b0),                           \n\t\t.reset_in10     (1'b0),                           \n\t\t.reset_req_in10 (1'b0),                           \n\t\t.reset_in11     (1'b0),                           \n\t\t.reset_req_in11 (1'b0),                           \n\t\t.reset_in12     (1'b0),                           \n\t\t.reset_req_in12 (1'b0),                           \n\t\t.reset_in13     (1'b0),                           \n\t\t.reset_req_in13 (1'b0),                           \n\t\t.reset_in14     (1'b0),                           \n\t\t.reset_req_in14 (1'b0),                           \n\t\t.reset_in15     (1'b0),                           \n\t\t.reset_req_in15 (1'b0)                            \n\t);\n\n\taltera_reset_controller #(\n\t\t.NUM_RESET_INPUTS          (2),\n\t\t.OUTPUT_RESET_SYNC_EDGES   (\"none\"),\n\t\t.SYNC_DEPTH                (2),\n\t\t.RESET_REQUEST_PRESENT     (0),\n\t\t.RESET_REQ_WAIT_TIME       (1),\n\t\t.MIN_RST_ASSERTION_TIME    (3),\n\t\t.RESET_REQ_EARLY_DSRT_TIME (1),\n\t\t.USE_RESET_REQUEST_IN0     (0),\n\t\t.USE_RESET_REQUEST_IN1     (0),\n\t\t.USE_RESET_REQUEST_IN2     (0),\n\t\t.USE_RESET_REQUEST_IN3     (0),\n\t\t.USE_RESET_REQUEST_IN4     (0),\n\t\t.USE_RESET_REQUEST_IN5     (0),\n\t\t.USE_RESET_REQUEST_IN6     (0),\n\t\t.USE_RESET_REQUEST_IN7     (0),\n\t\t.USE_RESET_REQUEST_IN8     (0),\n\t\t.USE_RESET_REQUEST_IN9     (0),\n\t\t.USE_RESET_REQUEST_IN10    (0),\n\t\t.USE_RESET_REQUEST_IN11    (0),\n\t\t.USE_RESET_REQUEST_IN12    (0),\n\t\t.USE_RESET_REQUEST_IN13    (0),\n\t\t.USE_RESET_REQUEST_IN14    (0),\n\t\t.USE_RESET_REQUEST_IN15    (0),\n\t\t.ADAPT_RESET_REQUEST       (0)\n\t) rst_controller_001 (\n\t\t.reset_in0      (~arm_a9_hps_h2f_reset_reset),        \n\t\t.reset_in1      (system_pll_reset_source_reset),      \n\t\t.clk            (),                                   \n\t\t.reset_out      (rst_controller_001_reset_out_reset), \n\t\t.reset_req      (),                                   \n\t\t.reset_req_in0  (1'b0),                               \n\t\t.reset_req_in1  (1'b0),                               \n\t\t.reset_in2      (1'b0),                               \n\t\t.reset_req_in2  (1'b0),                               \n\t\t.reset_in3      (1'b0),                               \n\t\t.reset_req_in3  (1'b0),                               \n\t\t.reset_in4      (1'b0),                               \n\t\t.reset_req_in4  (1'b0),                               \n\t\t.reset_in5      (1'b0),                               \n\t\t.reset_req_in5  (1'b0),                               \n\t\t.reset_in6      (1'b0),                               \n\t\t.reset_req_in6  (1'b0),                               \n\t\t.reset_in7      (1'b0),                               \n\t\t.reset_req_in7  (1'b0),                               \n\t\t.reset_in8      (1'b0),                               \n\t\t.reset_req_in8  (1'b0),                               \n\t\t.reset_in9      (1'b0),                               \n\t\t.reset_req_in9  (1'b0),                               \n\t\t.reset_in10     (1'b0),                               \n\t\t.reset_req_in10 (1'b0),                               \n\t\t.reset_in11     (1'b0),                               \n\t\t.reset_req_in11 (1'b0),                               \n\t\t.reset_in12     (1'b0),                               \n\t\t.reset_req_in12 (1'b0),                               \n\t\t.reset_in13     (1'b0),                               \n\t\t.reset_req_in13 (1'b0),                               \n\t\t.reset_in14     (1'b0),                               \n\t\t.reset_req_in14 (1'b0),                               \n\t\t.reset_in15     (1'b0),                               \n\t\t.reset_req_in15 (1'b0)                                \n\t);\n\n\taltera_reset_controller #(\n\t\t.NUM_RESET_INPUTS          (1),\n\t\t.OUTPUT_RESET_SYNC_EDGES   (\"deassert\"),\n\t\t.SYNC_DEPTH                (2),\n\t\t.RESET_REQUEST_PRESENT     (0),\n\t\t.RESET_REQ_WAIT_TIME       (1),\n\t\t.MIN_RST_ASSERTION_TIME    (3),\n\t\t.RESET_REQ_EARLY_DSRT_TIME (1),\n\t\t.USE_RESET_REQUEST_IN0     (0),\n\t\t.USE_RESET_REQUEST_IN1     (0),\n\t\t.USE_RESET_REQUEST_IN2     (0),\n\t\t.USE_RESET_REQUEST_IN3     (0),\n\t\t.USE_RESET_REQUEST_IN4     (0),\n\t\t.USE_RESET_REQUEST_IN5     (0),\n\t\t.USE_RESET_REQUEST_IN6     (0),\n\t\t.USE_RESET_REQUEST_IN7     (0),\n\t\t.USE_RESET_REQUEST_IN8     (0),\n\t\t.USE_RESET_REQUEST_IN9     (0),\n\t\t.USE_RESET_REQUEST_IN10    (0),\n\t\t.USE_RESET_REQUEST_IN11    (0),\n\t\t.USE_RESET_REQUEST_IN12    (0),\n\t\t.USE_RESET_REQUEST_IN13    (0),\n\t\t.USE_RESET_REQUEST_IN14    (0),\n\t\t.USE_RESET_REQUEST_IN15    (0),\n\t\t.ADAPT_RESET_REQUEST       (0)\n\t) rst_controller_002 (\n\t\t.reset_in0      (~arm_a9_hps_h2f_reset_reset),        \n\t\t.clk            (system_pll_sys_clk_clk),             \n\t\t.reset_out      (rst_controller_002_reset_out_reset), \n\t\t.reset_req      (),                                   \n\t\t.reset_req_in0  (1'b0),                               \n\t\t.reset_in1      (1'b0),                               \n\t\t.reset_req_in1  (1'b0),                               \n\t\t.reset_in2      (1'b0),                               \n\t\t.reset_req_in2  (1'b0),                               \n\t\t.reset_in3      (1'b0),                               \n\t\t.reset_req_in3  (1'b0),                               \n\t\t.reset_in4      (1'b0),                               \n\t\t.reset_req_in4  (1'b0),                               \n\t\t.reset_in5      (1'b0),                               \n\t\t.reset_req_in5  (1'b0),                               \n\t\t.reset_in6      (1'b0),                               \n\t\t.reset_req_in6  (1'b0),                               \n\t\t.reset_in7      (1'b0),                               \n\t\t.reset_req_in7  (1'b0),                               \n\t\t.reset_in8      (1'b0),                               \n\t\t.reset_req_in8  (1'b0),                               \n\t\t.reset_in9      (1'b0),                               \n\t\t.reset_req_in9  (1'b0),                               \n\t\t.reset_in10     (1'b0),                               \n\t\t.reset_req_in10 (1'b0),                               \n\t\t.reset_in11     (1'b0),                               \n\t\t.reset_req_in11 (1'b0),                               \n\t\t.reset_in12     (1'b0),                               \n\t\t.reset_req_in12 (1'b0),                               \n\t\t.reset_in13     (1'b0),                               \n\t\t.reset_req_in13 (1'b0),                               \n\t\t.reset_in14     (1'b0),                               \n\t\t.reset_req_in14 (1'b0),                               \n\t\t.reset_in15     (1'b0),                               \n\t\t.reset_req_in15 (1'b0)                                \n\t);\n\nendmodule\n</code>"
                },
                {
                    "type": "text",
                    "text": "Based on the provided original Verilog code, its comments and above answers, generate a detailed specification for the module. Include the following information in a single, concise paragraph:\n1. The name of the module.\n2. A simple explanation of the module's functionality.\n3. The input and output ports, along with a brief explanation of each.\n4. The internal signals used within the module, with a brief explanation of their purpose.\n5. An overview of the different blocks or sections in the code and their functions.\nEnsure that the specification is clear and accurately reflects the details from the code and comments.\nYour answer should be structured and well-organized, providing a comprehensive and detailed overview of the module's design and operation.\nPlease provide your answer in the following format:\nModule name: [module name]. Module specification: [module specification]."
                },
                {
                    "type": "text",
                    "text": "Module name: Computer_System. Module specification: This module represents the top-level entity of a computer system design, integrating various components including an ARM A9 Hard Processor System (HPS), audio subsystem, AV configuration, bus master for audio, and system PLL. The module handles interconnections between these components, manages clock and reset signals, and provides interfaces for external connections such as memory, audio I/O, and various communication protocols (EMAC, QSPI, SDIO, USB, SPI, UART, I2C, and GPIO). Input ports include audio inputs, bus master control signals, Ethernet receive signals, USB control signals, SPI input, UART receive, memory calibration, and system clock/reset inputs. Output ports handle audio output, configuration clock, bus master responses, Ethernet transmit signals, QSPI control, SDIO clock, USB control, SPI output,"
                }
            ]
        }
    ]
}