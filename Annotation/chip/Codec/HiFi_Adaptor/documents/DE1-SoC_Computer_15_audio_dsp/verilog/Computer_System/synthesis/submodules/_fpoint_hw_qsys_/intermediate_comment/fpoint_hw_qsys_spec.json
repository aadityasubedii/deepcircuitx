{
    "spec": "Module name: fpoint_hw_qsys. Module specification: This module is a floating-point arithmetic unit that can perform multiplication, addition/subtraction, and division operations on 32-bit IEEE 754 single-precision floating-point numbers. It takes two input operands (dataa and datab), a 2-bit operation selector (n), and control signals (clk, clk_en, reset, start) as inputs. The module outputs a 32-bit result and a done signal. Internally, it uses registers to store input operands and a counter for operation timing. The module contains three main sub-modules: a floating-point multiplier, an adder/subtractor, and a divider. The operation is selected using the 'n' input, where 0 is multiply, 1/2 is add/subtract, and 3 is divide. The module uses a counter to control the",
    "gpt-message": [
        {
            "role": "system",
            "content": "You are an expert in hardware design with a deep understanding of Verilog RTL codes. Now I want to train a large language model for code comment generation tasks specifically focused on Verilog RTL codes. And I want you to help me process the raw data, transforming it into suitable formats that can serve as inputs and outputs for the model."
        },
        {
            "role": "user",
            "content": "Name of the module and its functionality is as follows: \nModule name: fpoint_hw_qsys\n\nExplanation: This module appears to be a floating-point arithmetic unit that can perform multiplication, addition/subtraction, and division operations on 32-bit IEEE 754 single-precision floating-point numbers. It takes two input operands (dataa and datab), a 2-bit operation selector (n), and control signals (clk, clk_en, reset, start). The module includes separate sub-modules for multiplication, addition/subtraction, and division. It uses a counter to control the operation timing and generates a 'done' signal when the operation is complete. The result of the selected operation is output as a 32-bit floating-point number."
        },
        {
            "role": "user",
            "content": "Input and output ports and their explanation is as follows: \nInput ports: clk, clk_en, dataa, datab, n, reset, start. \n\nExplanation:\n- clk: Clock input for synchronous operations\n- clk_en: Clock enable signal\n- dataa: 32-bit input operand A\n- datab: 32-bit input operand B\n- n: 2-bit operation selector (00: multiply, 01/10: add/subtract, 11: divide)\n- reset: Reset signal to initialize the module\n- start: Signal to begin a new operation\n\nOutput ports: done, result.\n\nExplanation:\n- done: Signal indicating the completion of the selected operation\n- result: 32-bit output containing the result of the floating-point operation"
        },
        {
            "role": "user",
            "content": "Internal signals and their explanation is as follows: \nBased on the provided code, here are the internal signals and their explanations:\n\nInternal signals: add_sub, counter_in, counter_out, dataa_regout, datab_regout, load_data, local_reset_n, result_addsub, result_div, result_mult.\n\nExplanation:\n- add_sub: Determines whether addition or subtraction is performed in the addsub unit.\n- counter_in: Input value for the operation counter.\n- counter_out: Current value of the operation counter.\n- dataa_regout: Registered version of input operand A.\n- datab_regout: Registered version of input operand B.\n- load_data: Initial counter value based on the selected operation.\n- local_reset_n: Inverted reset signal for internal use.\n- result_addsub: Output from the addition/subtraction unit.\n- result_div: Output from the division unit.\n- result_mult: Output from the multiplication unit.\n\nThese internal signals are used to control the flow of data, manage operation timing, and store intermediate results within the floating-point arithmetic module."
        },
        {
            "role": "user",
            "content": "Original Verilog code is as follows: \n```verilog\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_mult_single\n\t( \n\taclr,\n\tclk_en,\n\tclock,\n\tdataa,\n\tdatab,\n\tresult) ;\n\tinput   aclr;\n\tinput   clk_en;\n\tinput   clock;\n\tinput   [31:0]  dataa;\n\tinput   [31:0]  datab;\n\toutput   [31:0]  result;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\ttri0   aclr;\n\ttri1   clk_en;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\n\treg\tdataa_exp_all_one_ff_p1;\n\treg\tdataa_exp_not_zero_ff_p1;\n\treg\tdataa_man_not_zero_ff_p1;\n\treg\tdataa_man_not_zero_ff_p2;\n\treg\tdatab_exp_all_one_ff_p1;\n\treg\tdatab_exp_not_zero_ff_p1;\n\treg\tdatab_man_not_zero_ff_p1;\n\treg\tdatab_man_not_zero_ff_p2;\n\treg\t[9:0]\tdelay_exp2_bias;\n\treg\t[9:0]\tdelay_exp3_bias;\n\treg\t[9:0]\tdelay_exp_bias;\n\treg\tdelay_man_product_msb;\n\treg\tdelay_man_product_msb2;\n\treg\tdelay_man_product_msb_p0;\n\treg\t[23:0]\tdelay_round;\n\treg\t[8:0]\texp_add_p1;\n\treg\t[9:0]\texp_adj_p1;\n\treg\t[9:0]\texp_adj_p2;\n\treg\t[8:0]\texp_bias_p1;\n\treg\t[8:0]\texp_bias_p2;\n\treg\t[7:0]\texp_result_ff;\n\treg\tinput_is_infinity_dffe_0;\n\treg\tinput_is_infinity_dffe_1;\n\treg\tinput_is_infinity_dffe_2;\n\treg\tinput_is_infinity_dffe_3;\n\treg\tinput_is_infinity_ff1;\n\treg\tinput_is_infinity_ff2;\n\treg\tinput_is_infinity_ff3;\n\treg\tinput_is_infinity_ff4;\n\treg\tinput_is_nan_dffe_0;\n\treg\tinput_is_nan_dffe_1;\n\treg\tinput_is_nan_dffe_2;\n\treg\tinput_is_nan_dffe_3;\n\treg\tinput_is_nan_ff1;\n\treg\tinput_is_nan_ff2;\n\treg\tinput_is_nan_ff3;\n\treg\tinput_is_nan_ff4;\n\treg\tinput_not_zero_dffe_0;\n\treg\tinput_not_zero_dffe_1;\n\treg\tinput_not_zero_dffe_2;\n\treg\tinput_not_zero_dffe_3;\n\treg\tinput_not_zero_ff1;\n\treg\tinput_not_zero_ff2;\n\treg\tinput_not_zero_ff3;\n\treg\tinput_not_zero_ff4;\n\treg\tlsb_dffe;\n\treg\t[22:0]\tman_result_ff;\n\treg\tman_round_carry_p0;\n\treg\t[23:0]\tman_round_p;\n\treg\t[23:0]\tman_round_p0;\n\treg\t[24:0]\tman_round_p2;\n\treg\tround_dffe;\n\treg\t[0:0]\tsign_node_ff0;\n\treg\t[0:0]\tsign_node_ff1;\n\treg\t[0:0]\tsign_node_ff2;\n\treg\t[0:0]\tsign_node_ff3;\n\treg\t[0:0]\tsign_node_ff4;\n\treg\t[0:0]\tsign_node_ff5;\n\treg\t[0:0]\tsign_node_ff6;\n\treg\t[0:0]\tsign_node_ff7;\n\treg\t[0:0]\tsign_node_ff8;\n\treg\t[0:0]\tsign_node_ff9;\n\treg\tsticky_dffe;\n\twire  [8:0]   wire_exp_add_adder_result;\n\twire  [9:0]   wire_exp_adj_adder_result;\n\twire  [9:0]   wire_exp_bias_subtr_result;\n\twire  [24:0]   wire_man_round_adder_result;\n\twire  [47:0]   wire_man_product2_mult_result;\n\twire  [9:0]  bias;\n\twire  [7:0]  dataa_exp_all_one;\n\twire  [7:0]  dataa_exp_not_zero;\n\twire  [22:0]  dataa_man_not_zero;\n\twire  [7:0]  datab_exp_all_one;\n\twire  [7:0]  datab_exp_not_zero;\n\twire  [22:0]  datab_man_not_zero;\n\twire  exp_is_inf;\n\twire  exp_is_zero;\n\twire  [9:0]  expmod;\n\twire  [7:0]  inf_num;\n\twire  lsb_bit;\n\twire  [24:0]  man_shift_full;\n\twire  [7:0]  result_exp_all_one;\n\twire  [8:0]  result_exp_not_zero;\n\twire  round_bit;\n\twire  round_carry;\n\twire  [22:0]  sticky_bit;\n\n\t\n\tinitial\n\t\tdataa_exp_all_one_ff_p1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) dataa_exp_all_one_ff_p1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   dataa_exp_all_one_ff_p1 <= dataa_exp_all_one[7];\n\t\n\tinitial\n\t\tdataa_exp_not_zero_ff_p1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) dataa_exp_not_zero_ff_p1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   dataa_exp_not_zero_ff_p1 <= dataa_exp_not_zero[7];\n\t\n\tinitial\n\t\tdataa_man_not_zero_ff_p1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) dataa_man_not_zero_ff_p1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   dataa_man_not_zero_ff_p1 <= dataa_man_not_zero[10];\n\t\n\tinitial\n\t\tdataa_man_not_zero_ff_p2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) dataa_man_not_zero_ff_p2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   dataa_man_not_zero_ff_p2 <= dataa_man_not_zero[22];\n\t\n\tinitial\n\t\tdatab_exp_all_one_ff_p1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) datab_exp_all_one_ff_p1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   datab_exp_all_one_ff_p1 <= datab_exp_all_one[7];\n\t\n\tinitial\n\t\tdatab_exp_not_zero_ff_p1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) datab_exp_not_zero_ff_p1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   datab_exp_not_zero_ff_p1 <= datab_exp_not_zero[7];\n\t\n\tinitial\n\t\tdatab_man_not_zero_ff_p1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) datab_man_not_zero_ff_p1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   datab_man_not_zero_ff_p1 <= datab_man_not_zero[10];\n\t\n\tinitial\n\t\tdatab_man_not_zero_ff_p2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) datab_man_not_zero_ff_p2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   datab_man_not_zero_ff_p2 <= datab_man_not_zero[22];\n\t\n\tinitial\n\t\tdelay_exp2_bias = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) delay_exp2_bias <= 10'b0;\n\t\telse if  (clk_en == 1'b1)   delay_exp2_bias <= delay_exp_bias;\n\t\n\tinitial\n\t\tdelay_exp3_bias = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) delay_exp3_bias <= 10'b0;\n\t\telse if  (clk_en == 1'b1)   delay_exp3_bias <= delay_exp2_bias;\n\t\n\tinitial\n\t\tdelay_exp_bias = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) delay_exp_bias <= 10'b0;\n\t\telse if  (clk_en == 1'b1)   delay_exp_bias <= wire_exp_bias_subtr_result;\n\t\n\tinitial\n\t\tdelay_man_product_msb = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) delay_man_product_msb <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   delay_man_product_msb <= delay_man_product_msb_p0;\n\t\n\tinitial\n\t\tdelay_man_product_msb2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) delay_man_product_msb2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   delay_man_product_msb2 <= delay_man_product_msb;\n\t\n\tinitial\n\t\tdelay_man_product_msb_p0 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) delay_man_product_msb_p0 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   delay_man_product_msb_p0 <= wire_man_product2_mult_result[47];\n\t\n\tinitial\n\t\tdelay_round = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) delay_round <= 24'b0;\n\t\telse if  (clk_en == 1'b1)   delay_round <= ((man_round_p2[23:0] & {24{(~ man_round_p2[24])}}) | (man_round_p2[24:1] & {24{man_round_p2[24]}}));\n\t\n\tinitial\n\t\texp_add_p1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_add_p1 <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_add_p1 <= wire_exp_add_adder_result;\n\t\n\tinitial\n\t\texp_adj_p1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_adj_p1 <= 10'b0;\n\t\telse if  (clk_en == 1'b1)   exp_adj_p1 <= delay_exp3_bias;\n\t\n\tinitial\n\t\texp_adj_p2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_adj_p2 <= 10'b0;\n\t\telse if  (clk_en == 1'b1)   exp_adj_p2 <= wire_exp_adj_adder_result;\n\t\n\tinitial\n\t\texp_bias_p1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_bias_p1 <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_bias_p1 <= exp_add_p1[8:0];\n\t\n\tinitial\n\t\texp_bias_p2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_bias_p2 <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_bias_p2 <= exp_bias_p1;\n\t\n\tinitial\n\t\texp_result_ff = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_result_ff <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   exp_result_ff <= ((inf_num & {8{((exp_is_inf | input_is_infinity_ff4) | input_is_nan_ff4)}}) | ((exp_adj_p2[7:0] & {8{(~ exp_is_zero)}}) & {8{input_not_zero_ff4}}));\n\t\n\tinitial\n\t\tinput_is_infinity_dffe_0 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_infinity_dffe_0 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_infinity_dffe_0 <= ((dataa_exp_all_one_ff_p1 & (~ (dataa_man_not_zero_ff_p1 | dataa_man_not_zero_ff_p2))) | (datab_exp_all_one_ff_p1 & (~ (datab_man_not_zero_ff_p1 | datab_man_not_zero_ff_p2))));\n\t\n\tinitial\n\t\tinput_is_infinity_dffe_1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_infinity_dffe_1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_infinity_dffe_1 <= input_is_infinity_dffe_0;\n\t\n\tinitial\n\t\tinput_is_infinity_dffe_2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_infinity_dffe_2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_infinity_dffe_2 <= input_is_infinity_dffe_1;\n\t\n\tinitial\n\t\tinput_is_infinity_dffe_3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_infinity_dffe_3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_infinity_dffe_3 <= input_is_infinity_dffe_2;\n\t\n\tinitial\n\t\tinput_is_infinity_ff1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_infinity_ff1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_infinity_ff1 <= input_is_infinity_dffe_3;\n\t\n\tinitial\n\t\tinput_is_infinity_ff2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_infinity_ff2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_infinity_ff2 <= input_is_infinity_ff1;\n\t\n\tinitial\n\t\tinput_is_infinity_ff3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_infinity_ff3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_infinity_ff3 <= input_is_infinity_ff2;\n\t\n\tinitial\n\t\tinput_is_infinity_ff4 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_infinity_ff4 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_infinity_ff4 <= input_is_infinity_ff3;\n\t\n\tinitial\n\t\tinput_is_nan_dffe_0 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_nan_dffe_0 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_nan_dffe_0 <= ((dataa_exp_all_one_ff_p1 & (dataa_man_not_zero_ff_p1 | dataa_man_not_zero_ff_p2)) | (datab_exp_all_one_ff_p1 & (datab_man_not_zero_ff_p1 | datab_man_not_zero_ff_p2)));\n\t\n\tinitial\n\t\tinput_is_nan_dffe_1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_nan_dffe_1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_nan_dffe_1 <= input_is_nan_dffe_0;\n\t\n\tinitial\n\t\tinput_is_nan_dffe_2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_nan_dffe_2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_nan_dffe_2 <= input_is_nan_dffe_1;\n\t\n\tinitial\n\t\tinput_is_nan_dffe_3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_nan_dffe_3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_nan_dffe_3 <= input_is_nan_dffe_2;\n\t\n\tinitial\n\t\tinput_is_nan_ff1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_nan_ff1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_nan_ff1 <= input_is_nan_dffe_3;\n\t\n\tinitial\n\t\tinput_is_nan_ff2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_nan_ff2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_nan_ff2 <= input_is_nan_ff1;\n\t\n\tinitial\n\t\tinput_is_nan_ff3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_nan_ff3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_nan_ff3 <= input_is_nan_ff2;\n\t\n\tinitial\n\t\tinput_is_nan_ff4 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_nan_ff4 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_nan_ff4 <= input_is_nan_ff3;\n\t\n\tinitial\n\t\tinput_not_zero_dffe_0 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_not_zero_dffe_0 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_not_zero_dffe_0 <= (dataa_exp_not_zero_ff_p1 & datab_exp_not_zero_ff_p1);\n\t\n\tinitial\n\t\tinput_not_zero_dffe_1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_not_zero_dffe_1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_not_zero_dffe_1 <= input_not_zero_dffe_0;\n\t\n\tinitial\n\t\tinput_not_zero_dffe_2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_not_zero_dffe_2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_not_zero_dffe_2 <= input_not_zero_dffe_1;\n\t\n\tinitial\n\t\tinput_not_zero_dffe_3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_not_zero_dffe_3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_not_zero_dffe_3 <= input_not_zero_dffe_2;\n\t\n\tinitial\n\t\tinput_not_zero_ff1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_not_zero_ff1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_not_zero_ff1 <= input_not_zero_dffe_3;\n\t\n\tinitial\n\t\tinput_not_zero_ff2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_not_zero_ff2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_not_zero_ff2 <= input_not_zero_ff1;\n\t\n\tinitial\n\t\tinput_not_zero_ff3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_not_zero_ff3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_not_zero_ff3 <= input_not_zero_ff2;\n\t\n\tinitial\n\t\tinput_not_zero_ff4 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_not_zero_ff4 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_not_zero_ff4 <= input_not_zero_ff3;\n\t\n\tinitial\n\t\tlsb_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) lsb_dffe <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   lsb_dffe <= lsb_bit;\n\t\n\tinitial\n\t\tman_result_ff = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_result_ff <= 23'b0;\n\t\telse if  (clk_en == 1'b1)   man_result_ff <= {((((((delay_round[22] & input_not_zero_ff4) & (~ input_is_infinity_ff4)) & (~ exp_is_inf)) & (~ exp_is_zero)) | (input_is_infinity_ff4 & (~ input_not_zero_ff4))) | input_is_nan_ff4), (((((delay_round[21:0] & {22{input_not_zero_ff4}}) & {22{(~ input_is_infinity_ff4)}}) & {22{(~ exp_is_inf)}}) & {22{(~ exp_is_zero)}}) & {22{(~ input_is_nan_ff4)}})};\n\t\n\tinitial\n\t\tman_round_carry_p0 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_round_carry_p0 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   man_round_carry_p0 <= round_carry;\n\t\n\tinitial\n\t\tman_round_p = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_round_p <= 24'b0;\n\t\telse if  (clk_en == 1'b1)   man_round_p <= man_shift_full[24:1];\n\t\n\tinitial\n\t\tman_round_p0 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_round_p0 <= 24'b0;\n\t\telse if  (clk_en == 1'b1)   man_round_p0 <= man_round_p;\n\t\n\tinitial\n\t\tman_round_p2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_round_p2 <= 25'b0;\n\t\telse if  (clk_en == 1'b1)   man_round_p2 <= wire_man_round_adder_result;\n\t\n\tinitial\n\t\tround_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) round_dffe <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   round_dffe <= round_bit;\n\t\n\tinitial\n\t\tsign_node_ff0 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_node_ff0 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_node_ff0 <= (dataa[31] ^ datab[31]);\n\t\n\tinitial\n\t\tsign_node_ff1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_node_ff1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_node_ff1 <= sign_node_ff0[0:0];\n\t\n\tinitial\n\t\tsign_node_ff2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_node_ff2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_node_ff2 <= sign_node_ff1[0:0];\n\t\n\tinitial\n\t\tsign_node_ff3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_node_ff3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_node_ff3 <= sign_node_ff2[0:0];\n\t\n\tinitial\n\t\tsign_node_ff4 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_node_ff4 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_node_ff4 <= sign_node_ff3[0:0];\n\t\n\tinitial\n\t\tsign_node_ff5 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_node_ff5 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_node_ff5 <= sign_node_ff4[0:0];\n\t\n\tinitial\n\t\tsign_node_ff6 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_node_ff6 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_node_ff6 <= sign_node_ff5[0:0];\n\t\n\tinitial\n\t\tsign_node_ff7 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_node_ff7 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_node_ff7 <= sign_node_ff6[0:0];\n\t\n\tinitial\n\t\tsign_node_ff8 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_node_ff8 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_node_ff8 <= sign_node_ff7[0:0];\n\t\n\tinitial\n\t\tsign_node_ff9 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_node_ff9 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_node_ff9 <= sign_node_ff8[0:0];\n\t\n\tinitial\n\t\tsticky_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sticky_dffe <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sticky_dffe <= sticky_bit[22];\n\tlpm_add_sub   exp_add_adder\n\t( \n\t.aclr(aclr),\n\t.cin(1'b0),\n\t.clken(clk_en),\n\t.clock(clock),\n\t.cout(),\n\t.dataa({1'b0, dataa[30:23]}),\n\t.datab({1'b0, datab[30:23]}),\n\t.overflow(),\n\t.result(wire_exp_add_adder_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.add_sub(1'b1)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\texp_add_adder.lpm_pipeline = 1,\n\t\texp_add_adder.lpm_width = 9,\n\t\texp_add_adder.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   exp_adj_adder\n\t( \n\t.cin(1'b0),\n\t.cout(),\n\t.dataa(exp_adj_p1),\n\t.datab({expmod[9:0]}),\n\t.overflow(),\n\t.result(wire_exp_adj_adder_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\texp_adj_adder.lpm_pipeline = 0,\n\t\texp_adj_adder.lpm_width = 10,\n\t\texp_adj_adder.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   exp_bias_subtr\n\t( \n\t.cout(),\n\t.dataa({1'b0, exp_bias_p2}),\n\t.datab({bias[9:0]}),\n\t.overflow(),\n\t.result(wire_exp_bias_subtr_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.cin(),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\texp_bias_subtr.lpm_direction = \"SUB\",\n\t\texp_bias_subtr.lpm_pipeline = 0,\n\t\texp_bias_subtr.lpm_representation = \"UNSIGNED\",\n\t\texp_bias_subtr.lpm_width = 10,\n\t\texp_bias_subtr.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   man_round_adder\n\t( \n\t.cout(),\n\t.dataa({1'b0, man_round_p0}),\n\t.datab({{24{1'b0}}, man_round_carry_p0}),\n\t.overflow(),\n\t.result(wire_man_round_adder_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.cin(),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tman_round_adder.lpm_pipeline = 0,\n\t\tman_round_adder.lpm_width = 25,\n\t\tman_round_adder.lpm_type = \"lpm_add_sub\";\n\tlpm_mult   man_product2_mult\n\t( \n\t.aclr(aclr),\n\t.clken(clk_en),\n\t.clock(clock),\n\t.dataa({1'b1, dataa[22:0]}),\n\t.datab({1'b1, datab[22:0]}),\n\t.result(wire_man_product2_mult_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.sum({1{1'b0}})\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tman_product2_mult.lpm_pipeline = 5,\n\t\tman_product2_mult.lpm_representation = \"UNSIGNED\",\n\t\tman_product2_mult.lpm_widtha = 24,\n\t\tman_product2_mult.lpm_widthb = 24,\n\t\tman_product2_mult.lpm_widthp = 48,\n\t\tman_product2_mult.lpm_widths = 1,\n\t\tman_product2_mult.lpm_type = \"lpm_mult\",\n\t\tman_product2_mult.lpm_hint = \"DEDICATED_MULTIPLIER_CIRCUITRY=YES\";\n\tassign\n\t\tbias = {{3{1'b0}}, {7{1'b1}}},\n\t\tdataa_exp_all_one = {(dataa[30] & dataa_exp_all_one[6]), (dataa[29] & dataa_exp_all_one[5]), (dataa[28] & dataa_exp_all_one[4]), (dataa[27] & dataa_exp_all_one[3]), (dataa[26] & dataa_exp_all_one[2]), (dataa[25] & dataa_exp_all_one[1]), (dataa[24] & dataa_exp_all_one[0]), dataa[23]},\n\t\tdataa_exp_not_zero = {(dataa[30] | dataa_exp_not_zero[6]), (dataa[29] | dataa_exp_not_zero[5]), (dataa[28] | dataa_exp_not_zero[4]), (dataa[27] | dataa_exp_not_zero[3]), (dataa[26] | dataa_exp_not_zero[2]), (dataa[25] | dataa_exp_not_zero[1]), (dataa[24] | dataa_exp_not_zero[0]), dataa[23]},\n\t\tdataa_man_not_zero = {(dataa[22] | dataa_man_not_zero[21]), (dataa[21] | dataa_man_not_zero[20]), (dataa[20] | dataa_man_not_zero[19]), (dataa[19] | dataa_man_not_zero[18]), (dataa[18] | dataa_man_not_zero[17]), (dataa[17] | dataa_man_not_zero[16]), (dataa[16] | dataa_man_not_zero[15]), (dataa[15] | dataa_man_not_zero[14]), (dataa[14] | dataa_man_not_zero[13]), (dataa[13] | dataa_man_not_zero[12]), (dataa[12] | dataa_man_not_zero[11]), dataa[11], (dataa[10] | dataa_man_not_zero[9]), (dataa[9] | dataa_man_not_zero[8]), (dataa[8] | dataa_man_not_zero[7]), (dataa[7] | dataa_man_not_zero[6]), (dataa[6] | dataa_man_not_zero[5]), (dataa[5] | dataa_man_not_zero[4]), (dataa[4] | dataa_man_not_zero[3]), (dataa[3] | dataa_man_not_zero[2]), (dataa[2] | dataa_man_not_zero[1]), (dataa[1] | dataa_man_not_zero[0]), dataa[0]},\n\t\tdatab_exp_all_one = {(datab[30] & datab_exp_all_one[6]), (datab[29] & datab_exp_all_one[5]), (datab[28] & datab_exp_all_one[4]), (datab[27] & datab_exp_all_one[3]), (datab[26] & datab_exp_all_one[2]), (datab[25] & datab_exp_all_one[1]), (datab[24] & datab_exp_all_one[0]), datab[23]},\n\t\tdatab_exp_not_zero = {(datab[30] | datab_exp_not_zero[6]), (datab[29] | datab_exp_not_zero[5]), (datab[28] | datab_exp_not_zero[4]), (datab[27] | datab_exp_not_zero[3]), (datab[26] | datab_exp_not_zero[2]), (datab[25] | datab_exp_not_zero[1]), (datab[24] | datab_exp_not_zero[0]), datab[23]},\n\t\tdatab_man_not_zero = {(datab[22] | datab_man_not_zero[21]), (datab[21] | datab_man_not_zero[20]), (datab[20] | datab_man_not_zero[19]), (datab[19] | datab_man_not_zero[18]), (datab[18] | datab_man_not_zero[17]), (datab[17] | datab_man_not_zero[16]), (datab[16] | datab_man_not_zero[15]), (datab[15] | datab_man_not_zero[14]), (datab[14] | datab_man_not_zero[13]), (datab[13] | datab_man_not_zero[12]), (datab[12] | datab_man_not_zero[11]), datab[11], (datab[10] | datab_man_not_zero[9]), (datab[9] | datab_man_not_zero[8]), (datab[8] | datab_man_not_zero[7]), (datab[7] | datab_man_not_zero[6]), (datab[6] | datab_man_not_zero[5]), (datab[5] | datab_man_not_zero[4]), (datab[4] | datab_man_not_zero[3]), (datab[3] | datab_man_not_zero[2]), (datab[2] | datab_man_not_zero[1]), (datab[1] | datab_man_not_zero[0]), datab[0]},\n\t\texp_is_inf = (((~ exp_adj_p2[9]) & exp_adj_p2[8]) | ((~ exp_adj_p2[8]) & result_exp_all_one[7])),\n\t\texp_is_zero = (exp_adj_p2[9] | (~ result_exp_not_zero[8])),\n\t\texpmod = {{8{1'b0}}, (delay_man_product_msb2 & man_round_p2[24]), (delay_man_product_msb2 ^ man_round_p2[24])},\n\t\tinf_num = {8{1'b1}},\n\t\tlsb_bit = man_shift_full[1],\n\t\tman_shift_full = ((wire_man_product2_mult_result[46:22] & {25{(~ wire_man_product2_mult_result[47])}}) | (wire_man_product2_mult_result[47:23] & {25{wire_man_product2_mult_result[47]}})),\n\t\tresult = {sign_node_ff9[0:0], exp_result_ff[7:0], man_result_ff[22:0]},\n\t\tresult_exp_all_one = {(result_exp_all_one[6] & exp_adj_p2[7]), (result_exp_all_one[5] & exp_adj_p2[6]), (result_exp_all_one[4] & exp_adj_p2[5]), (result_exp_all_one[3] & exp_adj_p2[4]), (result_exp_all_one[2] & exp_adj_p2[3]), (result_exp_all_one[1] & exp_adj_p2[2]), (result_exp_all_one[0] & exp_adj_p2[1]), exp_adj_p2[0]},\n\t\tresult_exp_not_zero = {(result_exp_not_zero[7] | exp_adj_p2[8]), (result_exp_not_zero[6] | exp_adj_p2[7]), (result_exp_not_zero[5] | exp_adj_p2[6]), (result_exp_not_zero[4] | exp_adj_p2[5]), (result_exp_not_zero[3] | exp_adj_p2[4]), (result_exp_not_zero[2] | exp_adj_p2[3]), (result_exp_not_zero[1] | exp_adj_p2[2]), (result_exp_not_zero[0] | exp_adj_p2[1]), exp_adj_p2[0]},\n\t\tround_bit = man_shift_full[0],\n\t\tround_carry = (round_dffe & (lsb_dffe | sticky_dffe)),\n\t\tsticky_bit = {(sticky_bit[21] | (wire_man_product2_mult_result[47] & wire_man_product2_mult_result[22])), (sticky_bit[20] | wire_man_product2_mult_result[21]), (sticky_bit[19] | wire_man_product2_mult_result[20]), (sticky_bit[18] | wire_man_product2_mult_result[19]), (sticky_bit[17] | wire_man_product2_mult_result[18]), (sticky_bit[16] | wire_man_product2_mult_result[17]), (sticky_bit[15] | wire_man_product2_mult_result[16]), (sticky_bit[14] | wire_man_product2_mult_result[15]), (sticky_bit[13] | wire_man_product2_mult_result[14]), (sticky_bit[12] | wire_man_product2_mult_result[13]), (sticky_bit[11] | wire_man_product2_mult_result[12]), (sticky_bit[10] | wire_man_product2_mult_result[11]), (sticky_bit[9] | wire_man_product2_mult_result[10]), (sticky_bit[8] | wire_man_product2_mult_result[9]), (sticky_bit[7] | wire_man_product2_mult_result[8]), (sticky_bit[6] | wire_man_product2_mult_result[7]), (sticky_bit[5] | wire_man_product2_mult_result[6]), (sticky_bit[4] | wire_man_product2_mult_result[5]), (sticky_bit[3] | wire_man_product2_mult_result[4]), (sticky_bit[2] | wire_man_product2_mult_result[3]), (sticky_bit[1] | wire_man_product2_mult_result[2]), (sticky_bit[0] | wire_man_product2_mult_result[1]), wire_man_product2_mult_result[0]};\nendmodule \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_addsub_single_altbarrel_shift_fjg\n\t( \n\taclr,\n\tclk_en,\n\tclock,\n\tdata,\n\tdistance,\n\tresult) ;\n\tinput   aclr;\n\tinput   clk_en;\n\tinput   clock;\n\tinput   [25:0]  data;\n\tinput   [4:0]  distance;\n\toutput   [25:0]  result;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\ttri0   aclr;\n\ttri1   clk_en;\n\ttri0   clock;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\n\treg\t[0:0]\tdir_pipe;\n\treg\t[25:0]\tsbit_piper1d;\n\twire  [5:0]  dir_w;\n\twire  direction_w;\n\twire  [15:0]  pad_w;\n\twire  [155:0]  sbit_w;\n\twire  [4:0]  sel_w;\n\twire  [129:0]  smux_w;\n\n\t\n\tinitial\n\t\tdir_pipe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) dir_pipe <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   dir_pipe <= {dir_w[4]};\n\t\n\tinitial\n\t\tsbit_piper1d = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sbit_piper1d <= 26'b0;\n\t\telse if  (clk_en == 1'b1)   sbit_piper1d <= smux_w[129:104];\n\tassign\n\t\tdir_w = {dir_pipe[0], dir_w[3:0], direction_w},\n\t\tdirection_w = 1'b0,\n\t\tpad_w = {16{1'b0}},\n\t\tresult = sbit_w[155:130],\n\t\tsbit_w = {sbit_piper1d, smux_w[103:0], data},\n\t\tsel_w = {distance[4:0]},\n\t\tsmux_w = {((({26{(sel_w[4] & (~ dir_w[4]))}} & {sbit_w[113:104], pad_w[15:0]}) | ({26{(sel_w[4] & dir_w[4])}} & {pad_w[15:0], sbit_w[129:120]})) | ({26{(~ sel_w[4])}} & sbit_w[129:104])), ((({26{(sel_w[3] & (~ dir_w[3]))}} & {sbit_w[95:78], pad_w[7:0]}) | ({26{(sel_w[3] & dir_w[3])}} & {pad_w[7:0], sbit_w[103:86]})) | ({26{(~ sel_w[3])}} & sbit_w[103:78])), ((({26{(sel_w[2] & (~ dir_w[2]))}} & {sbit_w[73:52], pad_w[3:0]}) | ({26{(sel_w[2] & dir_w[2])}} & {pad_w[3:0], sbit_w[77:56]})) | ({26{(~ sel_w[2])}} & sbit_w[77:52])), ((({26{(sel_w[1] & (~ dir_w[1]))}} & {sbit_w[49:26], pad_w[1:0]}) | ({26{(sel_w[1] & dir_w[1])}} & {pad_w[1:0], sbit_w[51:28]})) | ({26{(~ sel_w[1])}} & sbit_w[51:26])), ((({26{(sel_w[0] & (~ dir_w[0]))}} & {sbit_w[24:0], pad_w[0]}) | ({26{(sel_w[0] & dir_w[0])}} & {pad_w[0], sbit_w[25:1]})) | ({26{(~ sel_w[0])}} & sbit_w[25:0]))};\nendmodule \n\n\n\n\n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_addsub_single_altbarrel_shift_44e\n\t( \n\tdata,\n\tdistance,\n\tresult) ;\n\tinput   [25:0]  data;\n\tinput   [4:0]  distance;\n\toutput   [25:0]  result;\n\n\twire  [5:0]  dir_w;\n\twire  direction_w;\n\twire  [15:0]  pad_w;\n\twire  [155:0]  sbit_w;\n\twire  [4:0]  sel_w;\n\twire  [129:0]  smux_w;\n\n\tassign\n\t\tdir_w = {dir_w[4:0], direction_w},\n\t\tdirection_w = 1'b1,\n\t\tpad_w = {16{1'b0}},\n\t\tresult = sbit_w[155:130],\n\t\tsbit_w = {smux_w[129:0], data},\n\t\tsel_w = {distance[4:0]},\n\t\tsmux_w = {((({26{(sel_w[4] & (~ dir_w[4]))}} & {sbit_w[113:104], pad_w[15:0]}) | ({26{(sel_w[4] & dir_w[4])}} & {pad_w[15:0], sbit_w[129:120]})) | ({26{(~ sel_w[4])}} & sbit_w[129:104])), ((({26{(sel_w[3] & (~ dir_w[3]))}} & {sbit_w[95:78], pad_w[7:0]}) | ({26{(sel_w[3] & dir_w[3])}} & {pad_w[7:0], sbit_w[103:86]})) | ({26{(~ sel_w[3])}} & sbit_w[103:78])), ((({26{(sel_w[2] & (~ dir_w[2]))}} & {sbit_w[73:52], pad_w[3:0]}) | ({26{(sel_w[2] & dir_w[2])}} & {pad_w[3:0], sbit_w[77:56]})) | ({26{(~ sel_w[2])}} & sbit_w[77:52])), ((({26{(sel_w[1] & (~ dir_w[1]))}} & {sbit_w[49:26], pad_w[1:0]}) | ({26{(sel_w[1] & dir_w[1])}} & {pad_w[1:0], sbit_w[51:28]})) | ({26{(~ sel_w[1])}} & sbit_w[51:26])), ((({26{(sel_w[0] & (~ dir_w[0]))}} & {sbit_w[24:0], pad_w[0]}) | ({26{(sel_w[0] & dir_w[0])}} & {pad_w[0], sbit_w[25:1]})) | ({26{(~ sel_w[0])}} & sbit_w[25:0]))};\nendmodule \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_addsub_single_altpriority_encoder_i0b\n\t( \n\tdata,\n\tq,\n\tzero) ;\n\tinput   [1:0]  data;\n\toutput   [0:0]  q;\n\toutput   zero;\n\n\n\tassign\n\t\tq = {data[1]},\n\t\tzero = (~ (data[0] | data[1]));\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_addsub_single_altpriority_encoder_l0b\n\t( \n\tdata,\n\tq,\n\tzero) ;\n\tinput   [3:0]  data;\n\toutput   [1:0]  q;\n\toutput   zero;\n\n\twire  [0:0]   wire_altpriority_encoder13_q;\n\twire  wire_altpriority_encoder13_zero;\n\twire  [0:0]   wire_altpriority_encoder14_q;\n\twire  wire_altpriority_encoder14_zero;\n\n\tfpoint_hw_qsys_addsub_single_altpriority_encoder_i0b   altpriority_encoder13\n\t( \n\t.data(data[1:0]),\n\t.q(wire_altpriority_encoder13_q),\n\t.zero(wire_altpriority_encoder13_zero));\n\tfpoint_hw_qsys_addsub_single_altpriority_encoder_i0b   altpriority_encoder14\n\t( \n\t.data(data[3:2]),\n\t.q(wire_altpriority_encoder14_q),\n\t.zero(wire_altpriority_encoder14_zero));\n\tassign\n\t\tq = {(~ wire_altpriority_encoder14_zero), ((wire_altpriority_encoder14_zero & wire_altpriority_encoder13_q) | ((~ wire_altpriority_encoder14_zero) & wire_altpriority_encoder14_q))},\n\t\tzero = (wire_altpriority_encoder13_zero & wire_altpriority_encoder14_zero);\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_addsub_single_altpriority_encoder_q0b\n\t( \n\tdata,\n\tq,\n\tzero) ;\n\tinput   [7:0]  data;\n\toutput   [2:0]  q;\n\toutput   zero;\n\n\twire  [1:0]   wire_altpriority_encoder11_q;\n\twire  wire_altpriority_encoder11_zero;\n\twire  [1:0]   wire_altpriority_encoder12_q;\n\twire  wire_altpriority_encoder12_zero;\n\n\tfpoint_hw_qsys_addsub_single_altpriority_encoder_l0b   altpriority_encoder11\n\t( \n\t.data(data[3:0]),\n\t.q(wire_altpriority_encoder11_q),\n\t.zero(wire_altpriority_encoder11_zero));\n\tfpoint_hw_qsys_addsub_single_altpriority_encoder_l0b   altpriority_encoder12\n\t( \n\t.data(data[7:4]),\n\t.q(wire_altpriority_encoder12_q),\n\t.zero(wire_altpriority_encoder12_zero));\n\tassign\n\t\tq = {(~ wire_altpriority_encoder12_zero), (({2{wire_altpriority_encoder12_zero}} & wire_altpriority_encoder11_q) | ({2{(~ wire_altpriority_encoder12_zero)}} & wire_altpriority_encoder12_q))},\n\t\tzero = (wire_altpriority_encoder11_zero & wire_altpriority_encoder12_zero);\nendmodule \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_addsub_single_altpriority_encoder_iha\n\t( \n\tdata,\n\tq) ;\n\tinput   [1:0]  data;\n\toutput   [0:0]  q;\n\n\n\tassign\n\t\tq = {data[1]};\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_addsub_single_altpriority_encoder_lha\n\t( \n\tdata,\n\tq) ;\n\tinput   [3:0]  data;\n\toutput   [1:0]  q;\n\n\twire  [0:0]   wire_altpriority_encoder17_q;\n\twire  [0:0]   wire_altpriority_encoder18_q;\n\twire  wire_altpriority_encoder18_zero;\n\n\tfpoint_hw_qsys_addsub_single_altpriority_encoder_iha   altpriority_encoder17\n\t( \n\t.data(data[1:0]),\n\t.q(wire_altpriority_encoder17_q));\n\tfpoint_hw_qsys_addsub_single_altpriority_encoder_i0b   altpriority_encoder18\n\t( \n\t.data(data[3:2]),\n\t.q(wire_altpriority_encoder18_q),\n\t.zero(wire_altpriority_encoder18_zero));\n\tassign\n\t\tq = {(~ wire_altpriority_encoder18_zero), ((wire_altpriority_encoder18_zero & wire_altpriority_encoder17_q) | ((~ wire_altpriority_encoder18_zero) & wire_altpriority_encoder18_q))};\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_addsub_single_altpriority_encoder_qha\n\t( \n\tdata,\n\tq) ;\n\tinput   [7:0]  data;\n\toutput   [2:0]  q;\n\n\twire  [1:0]   wire_altpriority_encoder15_q;\n\twire  [1:0]   wire_altpriority_encoder16_q;\n\twire  wire_altpriority_encoder16_zero;\n\n\tfpoint_hw_qsys_addsub_single_altpriority_encoder_lha   altpriority_encoder15\n\t( \n\t.data(data[3:0]),\n\t.q(wire_altpriority_encoder15_q));\n\tfpoint_hw_qsys_addsub_single_altpriority_encoder_l0b   altpriority_encoder16\n\t( \n\t.data(data[7:4]),\n\t.q(wire_altpriority_encoder16_q),\n\t.zero(wire_altpriority_encoder16_zero));\n\tassign\n\t\tq = {(~ wire_altpriority_encoder16_zero), (({2{wire_altpriority_encoder16_zero}} & wire_altpriority_encoder15_q) | ({2{(~ wire_altpriority_encoder16_zero)}} & wire_altpriority_encoder16_q))};\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_addsub_single_altpriority_encoder_aja\n\t( \n\tdata,\n\tq) ;\n\tinput   [15:0]  data;\n\toutput   [3:0]  q;\n\n\twire  [2:0]   wire_altpriority_encoder10_q;\n\twire  wire_altpriority_encoder10_zero;\n\twire  [2:0]   wire_altpriority_encoder9_q;\n\n\tfpoint_hw_qsys_addsub_single_altpriority_encoder_q0b   altpriority_encoder10\n\t( \n\t.data(data[15:8]),\n\t.q(wire_altpriority_encoder10_q),\n\t.zero(wire_altpriority_encoder10_zero));\n\tfpoint_hw_qsys_addsub_single_altpriority_encoder_qha   altpriority_encoder9\n\t( \n\t.data(data[7:0]),\n\t.q(wire_altpriority_encoder9_q));\n\tassign\n\t\tq = {(~ wire_altpriority_encoder10_zero), (({3{wire_altpriority_encoder10_zero}} & wire_altpriority_encoder9_q) | ({3{(~ wire_altpriority_encoder10_zero)}} & wire_altpriority_encoder10_q))};\nendmodule \n\n\n\n\n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_addsub_single_altpriority_encoder_a2b\n\t( \n\tdata,\n\tq,\n\tzero) ;\n\tinput   [15:0]  data;\n\toutput   [3:0]  q;\n\toutput   zero;\n\n\twire  [2:0]   wire_altpriority_encoder19_q;\n\twire  wire_altpriority_encoder19_zero;\n\twire  [2:0]   wire_altpriority_encoder20_q;\n\twire  wire_altpriority_encoder20_zero;\n\n\tfpoint_hw_qsys_addsub_single_altpriority_encoder_q0b   altpriority_encoder19\n\t( \n\t.data(data[7:0]),\n\t.q(wire_altpriority_encoder19_q),\n\t.zero(wire_altpriority_encoder19_zero));\n\tfpoint_hw_qsys_addsub_single_altpriority_encoder_q0b   altpriority_encoder20\n\t( \n\t.data(data[15:8]),\n\t.q(wire_altpriority_encoder20_q),\n\t.zero(wire_altpriority_encoder20_zero));\n\tassign\n\t\tq = {(~ wire_altpriority_encoder20_zero), (({3{wire_altpriority_encoder20_zero}} & wire_altpriority_encoder19_q) | ({3{(~ wire_altpriority_encoder20_zero)}} & wire_altpriority_encoder20_q))},\n\t\tzero = (wire_altpriority_encoder19_zero & wire_altpriority_encoder20_zero);\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_addsub_single_altpriority_encoder_9u8\n\t( \n\tdata,\n\tq) ;\n\tinput   [31:0]  data;\n\toutput   [4:0]  q;\n\n\twire  [3:0]   wire_altpriority_encoder7_q;\n\twire  [3:0]   wire_altpriority_encoder8_q;\n\twire  wire_altpriority_encoder8_zero;\n\n\tfpoint_hw_qsys_addsub_single_altpriority_encoder_aja   altpriority_encoder7\n\t( \n\t.data(data[15:0]),\n\t.q(wire_altpriority_encoder7_q));\n\tfpoint_hw_qsys_addsub_single_altpriority_encoder_a2b   altpriority_encoder8\n\t( \n\t.data(data[31:16]),\n\t.q(wire_altpriority_encoder8_q),\n\t.zero(wire_altpriority_encoder8_zero));\n\tassign\n\t\tq = {(~ wire_altpriority_encoder8_zero), (({4{wire_altpriority_encoder8_zero}} & wire_altpriority_encoder7_q) | ({4{(~ wire_altpriority_encoder8_zero)}} & wire_altpriority_encoder8_q))};\nendmodule \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_addsub_single_altpriority_encoder_64b\n\t( \n\tdata,\n\tq,\n\tzero) ;\n\tinput   [1:0]  data;\n\toutput   [0:0]  q;\n\toutput   zero;\n\n\n\tassign\n\t\tq = {(~ data[0])},\n\t\tzero = (~ (data[0] | data[1]));\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_addsub_single_altpriority_encoder_94b\n\t( \n\tdata,\n\tq,\n\tzero) ;\n\tinput   [3:0]  data;\n\toutput   [1:0]  q;\n\toutput   zero;\n\n\twire  [0:0]   wire_altpriority_encoder27_q;\n\twire  wire_altpriority_encoder27_zero;\n\twire  [0:0]   wire_altpriority_encoder28_q;\n\twire  wire_altpriority_encoder28_zero;\n\n\tfpoint_hw_qsys_addsub_single_altpriority_encoder_64b   altpriority_encoder27\n\t( \n\t.data(data[1:0]),\n\t.q(wire_altpriority_encoder27_q),\n\t.zero(wire_altpriority_encoder27_zero));\n\tfpoint_hw_qsys_addsub_single_altpriority_encoder_64b   altpriority_encoder28\n\t( \n\t.data(data[3:2]),\n\t.q(wire_altpriority_encoder28_q),\n\t.zero(wire_altpriority_encoder28_zero));\n\tassign\n\t\tq = {wire_altpriority_encoder27_zero, ((wire_altpriority_encoder27_zero & wire_altpriority_encoder28_q) | ((~ wire_altpriority_encoder27_zero) & wire_altpriority_encoder27_q))},\n\t\tzero = (wire_altpriority_encoder27_zero & wire_altpriority_encoder28_zero);\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_addsub_single_altpriority_encoder_e4b\n\t( \n\tdata,\n\tq,\n\tzero) ;\n\tinput   [7:0]  data;\n\toutput   [2:0]  q;\n\toutput   zero;\n\n\twire  [1:0]   wire_altpriority_encoder25_q;\n\twire  wire_altpriority_encoder25_zero;\n\twire  [1:0]   wire_altpriority_encoder26_q;\n\twire  wire_altpriority_encoder26_zero;\n\n\tfpoint_hw_qsys_addsub_single_altpriority_encoder_94b   altpriority_encoder25\n\t( \n\t.data(data[3:0]),\n\t.q(wire_altpriority_encoder25_q),\n\t.zero(wire_altpriority_encoder25_zero));\n\tfpoint_hw_qsys_addsub_single_altpriority_encoder_94b   altpriority_encoder26\n\t( \n\t.data(data[7:4]),\n\t.q(wire_altpriority_encoder26_q),\n\t.zero(wire_altpriority_encoder26_zero));\n\tassign\n\t\tq = {wire_altpriority_encoder25_zero, (({2{wire_altpriority_encoder25_zero}} & wire_altpriority_encoder26_q) | ({2{(~ wire_altpriority_encoder25_zero)}} & wire_altpriority_encoder25_q))},\n\t\tzero = (wire_altpriority_encoder25_zero & wire_altpriority_encoder26_zero);\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_addsub_single_altpriority_encoder_u5b\n\t( \n\tdata,\n\tq,\n\tzero) ;\n\tinput   [15:0]  data;\n\toutput   [3:0]  q;\n\toutput   zero;\n\n\twire  [2:0]   wire_altpriority_encoder23_q;\n\twire  wire_altpriority_encoder23_zero;\n\twire  [2:0]   wire_altpriority_encoder24_q;\n\twire  wire_altpriority_encoder24_zero;\n\n\tfpoint_hw_qsys_addsub_single_altpriority_encoder_e4b   altpriority_encoder23\n\t( \n\t.data(data[7:0]),\n\t.q(wire_altpriority_encoder23_q),\n\t.zero(wire_altpriority_encoder23_zero));\n\tfpoint_hw_qsys_addsub_single_altpriority_encoder_e4b   altpriority_encoder24\n\t( \n\t.data(data[15:8]),\n\t.q(wire_altpriority_encoder24_q),\n\t.zero(wire_altpriority_encoder24_zero));\n\tassign\n\t\tq = {wire_altpriority_encoder23_zero, (({3{wire_altpriority_encoder23_zero}} & wire_altpriority_encoder24_q) | ({3{(~ wire_altpriority_encoder23_zero)}} & wire_altpriority_encoder23_q))},\n\t\tzero = (wire_altpriority_encoder23_zero & wire_altpriority_encoder24_zero);\nendmodule \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_addsub_single_altpriority_encoder_6la\n\t( \n\tdata,\n\tq) ;\n\tinput   [1:0]  data;\n\toutput   [0:0]  q;\n\n\n\tassign\n\t\tq = {(~ data[0])};\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_addsub_single_altpriority_encoder_9la\n\t( \n\tdata,\n\tq) ;\n\tinput   [3:0]  data;\n\toutput   [1:0]  q;\n\n\twire  [0:0]   wire_altpriority_encoder33_q;\n\twire  wire_altpriority_encoder33_zero;\n\twire  [0:0]   wire_altpriority_encoder34_q;\n\n\tfpoint_hw_qsys_addsub_single_altpriority_encoder_64b   altpriority_encoder33\n\t( \n\t.data(data[1:0]),\n\t.q(wire_altpriority_encoder33_q),\n\t.zero(wire_altpriority_encoder33_zero));\n\tfpoint_hw_qsys_addsub_single_altpriority_encoder_6la   altpriority_encoder34\n\t( \n\t.data(data[3:2]),\n\t.q(wire_altpriority_encoder34_q));\n\tassign\n\t\tq = {wire_altpriority_encoder33_zero, ((wire_altpriority_encoder33_zero & wire_altpriority_encoder34_q) | ((~ wire_altpriority_encoder33_zero) & wire_altpriority_encoder33_q))};\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_addsub_single_altpriority_encoder_ela\n\t( \n\tdata,\n\tq) ;\n\tinput   [7:0]  data;\n\toutput   [2:0]  q;\n\n\twire  [1:0]   wire_altpriority_encoder31_q;\n\twire  wire_altpriority_encoder31_zero;\n\twire  [1:0]   wire_altpriority_encoder32_q;\n\n\tfpoint_hw_qsys_addsub_single_altpriority_encoder_94b   altpriority_encoder31\n\t( \n\t.data(data[3:0]),\n\t.q(wire_altpriority_encoder31_q),\n\t.zero(wire_altpriority_encoder31_zero));\n\tfpoint_hw_qsys_addsub_single_altpriority_encoder_9la   altpriority_encoder32\n\t( \n\t.data(data[7:4]),\n\t.q(wire_altpriority_encoder32_q));\n\tassign\n\t\tq = {wire_altpriority_encoder31_zero, (({2{wire_altpriority_encoder31_zero}} & wire_altpriority_encoder32_q) | ({2{(~ wire_altpriority_encoder31_zero)}} & wire_altpriority_encoder31_q))};\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_addsub_single_altpriority_encoder_uma\n\t( \n\tdata,\n\tq) ;\n\tinput   [15:0]  data;\n\toutput   [3:0]  q;\n\n\twire  [2:0]   wire_altpriority_encoder29_q;\n\twire  wire_altpriority_encoder29_zero;\n\twire  [2:0]   wire_altpriority_encoder30_q;\n\n\tfpoint_hw_qsys_addsub_single_altpriority_encoder_e4b   altpriority_encoder29\n\t( \n\t.data(data[7:0]),\n\t.q(wire_altpriority_encoder29_q),\n\t.zero(wire_altpriority_encoder29_zero));\n\tfpoint_hw_qsys_addsub_single_altpriority_encoder_ela   altpriority_encoder30\n\t( \n\t.data(data[15:8]),\n\t.q(wire_altpriority_encoder30_q));\n\tassign\n\t\tq = {wire_altpriority_encoder29_zero, (({3{wire_altpriority_encoder29_zero}} & wire_altpriority_encoder30_q) | ({3{(~ wire_altpriority_encoder29_zero)}} & wire_altpriority_encoder29_q))};\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_addsub_single_altpriority_encoder_tma\n\t( \n\tdata,\n\tq) ;\n\tinput   [31:0]  data;\n\toutput   [4:0]  q;\n\n\twire  [3:0]   wire_altpriority_encoder21_q;\n\twire  wire_altpriority_encoder21_zero;\n\twire  [3:0]   wire_altpriority_encoder22_q;\n\n\tfpoint_hw_qsys_addsub_single_altpriority_encoder_u5b   altpriority_encoder21\n\t( \n\t.data(data[15:0]),\n\t.q(wire_altpriority_encoder21_q),\n\t.zero(wire_altpriority_encoder21_zero));\n\tfpoint_hw_qsys_addsub_single_altpriority_encoder_uma   altpriority_encoder22\n\t( \n\t.data(data[31:16]),\n\t.q(wire_altpriority_encoder22_q));\n\tassign\n\t\tq = {wire_altpriority_encoder21_zero, (({4{wire_altpriority_encoder21_zero}} & wire_altpriority_encoder22_q) | ({4{(~ wire_altpriority_encoder21_zero)}} & wire_altpriority_encoder21_q))};\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_addsub_single\n\t( \n\taclr,\n\tadd_sub,\n\tclk_en,\n\tclock,\n\tdataa,\n\tdatab,\n\tresult) ;\n\tinput   aclr;\n\tinput   add_sub;\n\tinput   clk_en;\n\tinput   clock;\n\tinput   [31:0]  dataa;\n\tinput   [31:0]  datab;\n\toutput   [31:0]  result;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\ttri0   aclr;\n\ttri1   add_sub;\n\ttri1   clk_en;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\n\twire  [25:0]   wire_lbarrel_shift_result;\n\twire  [25:0]   wire_rbarrel_shift_result;\n\twire  [4:0]   wire_leading_zeroes_cnt_q;\n\twire  [4:0]   wire_trailing_zeros_cnt_q;\n\treg\tadd_sub_dffe1;\n\treg\tadd_sub_dffe12;\n\treg\t[8:0]\taligned_dataa_exp_dffe12;\n\treg\t[23:0]\taligned_dataa_man_dffe12;\n\treg\taligned_dataa_sign_dffe12;\n\treg\t[8:0]\taligned_datab_exp_dffe12;\n\treg\t[23:0]\taligned_datab_man_dffe12;\n\treg\taligned_datab_sign_dffe12;\n\treg\tboth_inputs_are_infinite_dffe1;\n\treg\t[7:0]\tdata_exp_dffe1;\n\treg\t[25:0]\tdataa_man_dffe1;\n\treg\tdataa_sign_dffe1;\n\treg\t[25:0]\tdatab_man_dffe1;\n\treg\tdatab_sign_dffe1;\n\treg\tdenormal_res_dffe3;\n\treg\tdenormal_res_dffe4;\n\treg\t[1:0]\texp_adj_dffe21;\n\treg\t[7:0]\texp_out_dffe5;\n\treg\t[7:0]\texp_res_dffe2;\n\treg\t[7:0]\texp_res_dffe21;\n\treg\t[7:0]\texp_res_dffe3;\n\treg\t[7:0]\texp_res_dffe4;\n\treg\tinfinite_output_sign_dffe1;\n\treg\tinfinite_output_sign_dffe2;\n\treg\tinfinite_output_sign_dffe21;\n\treg\tinfinite_output_sign_dffe3;\n\treg\tinfinite_output_sign_dffe31;\n\treg\tinfinite_output_sign_dffe4;\n\treg\tinfinite_res_dffe3;\n\treg\tinfinite_res_dffe4;\n\treg\tinfinity_magnitude_sub_dffe2;\n\treg\tinfinity_magnitude_sub_dffe21;\n\treg\tinfinity_magnitude_sub_dffe3;\n\treg\tinfinity_magnitude_sub_dffe31;\n\treg\tinfinity_magnitude_sub_dffe4;\n\treg\tinput_dataa_infinite_dffe12;\n\treg\tinput_dataa_nan_dffe12;\n\treg\tinput_datab_infinite_dffe12;\n\treg\tinput_datab_nan_dffe12;\n\treg\tinput_is_infinite_dffe1;\n\treg\tinput_is_infinite_dffe2;\n\treg\tinput_is_infinite_dffe21;\n\treg\tinput_is_infinite_dffe3;\n\treg\tinput_is_infinite_dffe31;\n\treg\tinput_is_infinite_dffe4;\n\treg\tinput_is_nan_dffe1;\n\treg\tinput_is_nan_dffe2;\n\treg\tinput_is_nan_dffe21;\n\treg\tinput_is_nan_dffe3;\n\treg\tinput_is_nan_dffe31;\n\treg\tinput_is_nan_dffe4;\n\treg\t[25:0]\tman_add_sub_res_mag_dffe21;\n\treg\tman_add_sub_res_sign_dffe21;\n\treg\t[25:0]\tman_dffe31;\n\treg\t[4:0]\tman_leading_zeros_dffe31;\n\treg\t[22:0]\tman_out_dffe5;\n\treg\t[22:0]\tman_res_dffe4;\n\treg\tman_res_is_not_zero_dffe3;\n\treg\tman_res_is_not_zero_dffe31;\n\treg\tman_res_is_not_zero_dffe4;\n\treg\tneed_complement_dffe2;\n\treg\tround_bit_dffe21;\n\treg\tround_bit_dffe3;\n\treg\tround_bit_dffe31;\n\treg\trounded_res_infinity_dffe4;\n\treg\tsign_dffe31;\n\treg\tsign_out_dffe5;\n\treg\tsign_res_dffe3;\n\treg\tsign_res_dffe4;\n\treg\tsticky_bit_dffe1;\n\treg\tsticky_bit_dffe2;\n\treg\tsticky_bit_dffe21;\n\treg\tsticky_bit_dffe3;\n\treg\tsticky_bit_dffe31;\n\treg\tzero_man_sign_dffe2;\n\treg\tzero_man_sign_dffe21;\n\twire  [8:0]   wire_add_sub1_result;\n\twire  [8:0]   wire_add_sub2_result;\n\twire  [5:0]   wire_add_sub3_result;\n\twire  [8:0]   wire_add_sub4_result;\n\twire  [8:0]   wire_add_sub5_result;\n\twire  [8:0]   wire_add_sub6_result;\n\twire  wire_man_2comp_res_lower_cout;\n\twire  [13:0]   wire_man_2comp_res_lower_result;\n\twire  [13:0]   wire_man_2comp_res_upper0_result;\n\twire  [13:0]   wire_man_2comp_res_upper1_result;\n\twire  wire_man_add_sub_lower_cout;\n\twire  [13:0]   wire_man_add_sub_lower_result;\n\twire  [13:0]   wire_man_add_sub_upper0_result;\n\twire  [13:0]   wire_man_add_sub_upper1_result;\n\twire  wire_man_res_rounding_add_sub_lower_cout;\n\twire  [12:0]   wire_man_res_rounding_add_sub_lower_result;\n\twire  [12:0]   wire_man_res_rounding_add_sub_upper1_result;\n\twire  wire_trailing_zeros_limit_comparator_agb;\n\twire  add_sub_dffe11_wi;\n\twire  add_sub_dffe11_wo;\n\twire  add_sub_dffe12_wi;\n\twire  add_sub_dffe12_wo;\n\twire  add_sub_dffe13_wi;\n\twire  add_sub_dffe13_wo;\n\twire  add_sub_dffe14_wi;\n\twire  add_sub_dffe14_wo;\n\twire  add_sub_dffe15_wi;\n\twire  add_sub_dffe15_wo;\n\twire  add_sub_dffe1_wi;\n\twire  add_sub_dffe1_wo;\n\twire  add_sub_dffe25_wi;\n\twire  add_sub_dffe25_wo;\n\twire  add_sub_w2;\n\twire  [12:0]  adder_upper_w;\n\twire  [8:0]  aligned_dataa_exp_dffe12_wi;\n\twire  [8:0]  aligned_dataa_exp_dffe12_wo;\n\twire  [8:0]  aligned_dataa_exp_dffe13_wi;\n\twire  [8:0]  aligned_dataa_exp_dffe13_wo;\n\twire  [8:0]  aligned_dataa_exp_dffe14_wi;\n\twire  [8:0]  aligned_dataa_exp_dffe14_wo;\n\twire  [8:0]  aligned_dataa_exp_dffe15_wi;\n\twire  [8:0]  aligned_dataa_exp_dffe15_wo;\n\twire  [8:0]  aligned_dataa_exp_w;\n\twire  [23:0]  aligned_dataa_man_dffe12_wi;\n\twire  [23:0]  aligned_dataa_man_dffe12_wo;\n\twire  [23:0]  aligned_dataa_man_dffe13_wi;\n\twire  [23:0]  aligned_dataa_man_dffe13_wo;\n\twire  [23:0]  aligned_dataa_man_dffe14_wi;\n\twire  [23:0]  aligned_dataa_man_dffe14_wo;\n\twire  [25:0]  aligned_dataa_man_dffe15_w;\n\twire  [23:0]  aligned_dataa_man_dffe15_wi;\n\twire  [23:0]  aligned_dataa_man_dffe15_wo;\n\twire  [25:0]  aligned_dataa_man_w;\n\twire  aligned_dataa_sign_dffe12_wi;\n\twire  aligned_dataa_sign_dffe12_wo;\n\twire  aligned_dataa_sign_dffe13_wi;\n\twire  aligned_dataa_sign_dffe13_wo;\n\twire  aligned_dataa_sign_dffe14_wi;\n\twire  aligned_dataa_sign_dffe14_wo;\n\twire  aligned_dataa_sign_dffe15_wi;\n\twire  aligned_dataa_sign_dffe15_wo;\n\twire  aligned_dataa_sign_w;\n\twire  [8:0]  aligned_datab_exp_dffe12_wi;\n\twire  [8:0]  aligned_datab_exp_dffe12_wo;\n\twire  [8:0]  aligned_datab_exp_dffe13_wi;\n\twire  [8:0]  aligned_datab_exp_dffe13_wo;\n\twire  [8:0]  aligned_datab_exp_dffe14_wi;\n\twire  [8:0]  aligned_datab_exp_dffe14_wo;\n\twire  [8:0]  aligned_datab_exp_dffe15_wi;\n\twire  [8:0]  aligned_datab_exp_dffe15_wo;\n\twire  [8:0]  aligned_datab_exp_w;\n\twire  [23:0]  aligned_datab_man_dffe12_wi;\n\twire  [23:0]  aligned_datab_man_dffe12_wo;\n\twire  [23:0]  aligned_datab_man_dffe13_wi;\n\twire  [23:0]  aligned_datab_man_dffe13_wo;\n\twire  [23:0]  aligned_datab_man_dffe14_wi;\n\twire  [23:0]  aligned_datab_man_dffe14_wo;\n\twire  [25:0]  aligned_datab_man_dffe15_w;\n\twire  [23:0]  aligned_datab_man_dffe15_wi;\n\twire  [23:0]  aligned_datab_man_dffe15_wo;\n\twire  [25:0]  aligned_datab_man_w;\n\twire  aligned_datab_sign_dffe12_wi;\n\twire  aligned_datab_sign_dffe12_wo;\n\twire  aligned_datab_sign_dffe13_wi;\n\twire  aligned_datab_sign_dffe13_wo;\n\twire  aligned_datab_sign_dffe14_wi;\n\twire  aligned_datab_sign_dffe14_wo;\n\twire  aligned_datab_sign_dffe15_wi;\n\twire  aligned_datab_sign_dffe15_wo;\n\twire  aligned_datab_sign_w;\n\twire  borrow_w;\n\twire  both_inputs_are_infinite_dffe1_wi;\n\twire  both_inputs_are_infinite_dffe1_wo;\n\twire  both_inputs_are_infinite_dffe25_wi;\n\twire  both_inputs_are_infinite_dffe25_wo;\n\twire  [7:0]  data_exp_dffe1_wi;\n\twire  [7:0]  data_exp_dffe1_wo;\n\twire  [31:0]  dataa_dffe11_wi;\n\twire  [31:0]  dataa_dffe11_wo;\n\twire  [25:0]  dataa_man_dffe1_wi;\n\twire  [25:0]  dataa_man_dffe1_wo;\n\twire  dataa_sign_dffe1_wi;\n\twire  dataa_sign_dffe1_wo;\n\twire  dataa_sign_dffe25_wi;\n\twire  dataa_sign_dffe25_wo;\n\twire  [31:0]  datab_dffe11_wi;\n\twire  [31:0]  datab_dffe11_wo;\n\twire  [25:0]  datab_man_dffe1_wi;\n\twire  [25:0]  datab_man_dffe1_wo;\n\twire  datab_sign_dffe1_wi;\n\twire  datab_sign_dffe1_wo;\n\twire  denormal_flag_w;\n\twire  denormal_res_dffe32_wi;\n\twire  denormal_res_dffe32_wo;\n\twire  denormal_res_dffe33_wi;\n\twire  denormal_res_dffe33_wo;\n\twire  denormal_res_dffe3_wi;\n\twire  denormal_res_dffe3_wo;\n\twire  denormal_res_dffe41_wi;\n\twire  denormal_res_dffe41_wo;\n\twire  denormal_res_dffe42_wi;\n\twire  denormal_res_dffe42_wo;\n\twire  denormal_res_dffe4_wi;\n\twire  denormal_res_dffe4_wo;\n\twire  denormal_result_w;\n\twire  [7:0]  exp_a_all_one_w;\n\twire  [7:0]  exp_a_not_zero_w;\n\twire  [6:0]  exp_adj_0pads;\n\twire  [1:0]  exp_adj_dffe21_wi;\n\twire  [1:0]  exp_adj_dffe21_wo;\n\twire  [1:0]  exp_adj_dffe23_wi;\n\twire  [1:0]  exp_adj_dffe23_wo;\n\twire  [1:0]  exp_adj_dffe26_wi;\n\twire  [1:0]  exp_adj_dffe26_wo;\n\twire  [1:0]  exp_adjust_by_add1;\n\twire  [1:0]  exp_adjust_by_add2;\n\twire  [8:0]  exp_adjustment2_add_sub_dataa_w;\n\twire  [8:0]  exp_adjustment2_add_sub_datab_w;\n\twire  [8:0]  exp_adjustment2_add_sub_w;\n\twire  [8:0]  exp_adjustment_add_sub_dataa_w;\n\twire  [8:0]  exp_adjustment_add_sub_datab_w;\n\twire  [8:0]  exp_adjustment_add_sub_w;\n\twire  [7:0]  exp_all_ones_w;\n\twire  [7:0]  exp_all_zeros_w;\n\twire  exp_amb_mux_dffe13_wi;\n\twire  exp_amb_mux_dffe13_wo;\n\twire  exp_amb_mux_dffe14_wi;\n\twire  exp_amb_mux_dffe14_wo;\n\twire  exp_amb_mux_dffe15_wi;\n\twire  exp_amb_mux_dffe15_wo;\n\twire  exp_amb_mux_w;\n\twire  [8:0]  exp_amb_w;\n\twire  [7:0]  exp_b_all_one_w;\n\twire  [7:0]  exp_b_not_zero_w;\n\twire  [8:0]  exp_bma_w;\n\twire  [2:0]  exp_diff_abs_exceed_max_w;\n\twire  [4:0]  exp_diff_abs_max_w;\n\twire  [7:0]  exp_diff_abs_w;\n\twire  [7:0]  exp_intermediate_res_dffe41_wi;\n\twire  [7:0]  exp_intermediate_res_dffe41_wo;\n\twire  [7:0]  exp_intermediate_res_dffe42_wi;\n\twire  [7:0]  exp_intermediate_res_dffe42_wo;\n\twire  [7:0]  exp_intermediate_res_w;\n\twire  [7:0]  exp_out_dffe5_wi;\n\twire  [7:0]  exp_out_dffe5_wo;\n\twire  [7:0]  exp_res_dffe21_wi;\n\twire  [7:0]  exp_res_dffe21_wo;\n\twire  [7:0]  exp_res_dffe22_wi;\n\twire  [7:0]  exp_res_dffe22_wo;\n\twire  [7:0]  exp_res_dffe23_wi;\n\twire  [7:0]  exp_res_dffe23_wo;\n\twire  [7:0]  exp_res_dffe25_wi;\n\twire  [7:0]  exp_res_dffe25_wo;\n\twire  [7:0]  exp_res_dffe26_wi;\n\twire  [7:0]  exp_res_dffe26_wo;\n\twire  [7:0]  exp_res_dffe27_wi;\n\twire  [7:0]  exp_res_dffe27_wo;\n\twire  [7:0]  exp_res_dffe2_wi;\n\twire  [7:0]  exp_res_dffe2_wo;\n\twire  [7:0]  exp_res_dffe32_wi;\n\twire  [7:0]  exp_res_dffe32_wo;\n\twire  [7:0]  exp_res_dffe33_wi;\n\twire  [7:0]  exp_res_dffe33_wo;\n\twire  [7:0]  exp_res_dffe3_wi;\n\twire  [7:0]  exp_res_dffe3_wo;\n\twire  [7:0]  exp_res_dffe4_wi;\n\twire  [7:0]  exp_res_dffe4_wo;\n\twire  [7:0]  exp_res_max_w;\n\twire  [8:0]  exp_res_not_zero_w;\n\twire  [8:0]  exp_res_rounding_adder_dataa_w;\n\twire  [8:0]  exp_res_rounding_adder_w;\n\twire  exp_rounded_res_infinity_w;\n\twire  [7:0]  exp_rounded_res_max_w;\n\twire  [7:0]  exp_rounded_res_w;\n\twire  [8:0]  exp_rounding_adjustment_w;\n\twire  [8:0]  exp_value;\n\twire  force_infinity_w;\n\twire  force_nan_w;\n\twire  force_zero_w;\n\twire  guard_bit_dffe3_wo;\n\twire  infinite_output_sign_dffe1_wi;\n\twire  infinite_output_sign_dffe1_wo;\n\twire  infinite_output_sign_dffe21_wi;\n\twire  infinite_output_sign_dffe21_wo;\n\twire  infinite_output_sign_dffe22_wi;\n\twire  infinite_output_sign_dffe22_wo;\n\twire  infinite_output_sign_dffe23_wi;\n\twire  infinite_output_sign_dffe23_wo;\n\twire  infinite_output_sign_dffe25_wi;\n\twire  infinite_output_sign_dffe25_wo;\n\twire  infinite_output_sign_dffe26_wi;\n\twire  infinite_output_sign_dffe26_wo;\n\twire  infinite_output_sign_dffe27_wi;\n\twire  infinite_output_sign_dffe27_wo;\n\twire  infinite_output_sign_dffe2_wi;\n\twire  infinite_output_sign_dffe2_wo;\n\twire  infinite_output_sign_dffe31_wi;\n\twire  infinite_output_sign_dffe31_wo;\n\twire  infinite_output_sign_dffe32_wi;\n\twire  infinite_output_sign_dffe32_wo;\n\twire  infinite_output_sign_dffe33_wi;\n\twire  infinite_output_sign_dffe33_wo;\n\twire  infinite_output_sign_dffe3_wi;\n\twire  infinite_output_sign_dffe3_wo;\n\twire  infinite_output_sign_dffe41_wi;\n\twire  infinite_output_sign_dffe41_wo;\n\twire  infinite_output_sign_dffe42_wi;\n\twire  infinite_output_sign_dffe42_wo;\n\twire  infinite_output_sign_dffe4_wi;\n\twire  infinite_output_sign_dffe4_wo;\n\twire  infinite_res_dff32_wi;\n\twire  infinite_res_dff32_wo;\n\twire  infinite_res_dff33_wi;\n\twire  infinite_res_dff33_wo;\n\twire  infinite_res_dffe3_wi;\n\twire  infinite_res_dffe3_wo;\n\twire  infinite_res_dffe41_wi;\n\twire  infinite_res_dffe41_wo;\n\twire  infinite_res_dffe42_wi;\n\twire  infinite_res_dffe42_wo;\n\twire  infinite_res_dffe4_wi;\n\twire  infinite_res_dffe4_wo;\n\twire  infinity_magnitude_sub_dffe21_wi;\n\twire  infinity_magnitude_sub_dffe21_wo;\n\twire  infinity_magnitude_sub_dffe22_wi;\n\twire  infinity_magnitude_sub_dffe22_wo;\n\twire  infinity_magnitude_sub_dffe23_wi;\n\twire  infinity_magnitude_sub_dffe23_wo;\n\twire  infinity_magnitude_sub_dffe26_wi;\n\twire  infinity_magnitude_sub_dffe26_wo;\n\twire  infinity_magnitude_sub_dffe27_wi;\n\twire  infinity_magnitude_sub_dffe27_wo;\n\twire  infinity_magnitude_sub_dffe2_wi;\n\twire  infinity_magnitude_sub_dffe2_wo;\n\twire  infinity_magnitude_sub_dffe31_wi;\n\twire  infinity_magnitude_sub_dffe31_wo;\n\twire  infinity_magnitude_sub_dffe32_wi;\n\twire  infinity_magnitude_sub_dffe32_wo;\n\twire  infinity_magnitude_sub_dffe33_wi;\n\twire  infinity_magnitude_sub_dffe33_wo;\n\twire  infinity_magnitude_sub_dffe3_wi;\n\twire  infinity_magnitude_sub_dffe3_wo;\n\twire  infinity_magnitude_sub_dffe41_wi;\n\twire  infinity_magnitude_sub_dffe41_wo;\n\twire  infinity_magnitude_sub_dffe42_wi;\n\twire  infinity_magnitude_sub_dffe42_wo;\n\twire  infinity_magnitude_sub_dffe4_wi;\n\twire  infinity_magnitude_sub_dffe4_wo;\n\twire  input_dataa_denormal_dffe11_wi;\n\twire  input_dataa_denormal_dffe11_wo;\n\twire  input_dataa_denormal_w;\n\twire  input_dataa_infinite_dffe11_wi;\n\twire  input_dataa_infinite_dffe11_wo;\n\twire  input_dataa_infinite_dffe12_wi;\n\twire  input_dataa_infinite_dffe12_wo;\n\twire  input_dataa_infinite_dffe13_wi;\n\twire  input_dataa_infinite_dffe13_wo;\n\twire  input_dataa_infinite_dffe14_wi;\n\twire  input_dataa_infinite_dffe14_wo;\n\twire  input_dataa_infinite_dffe15_wi;\n\twire  input_dataa_infinite_dffe15_wo;\n\twire  input_dataa_infinite_w;\n\twire  input_dataa_nan_dffe11_wi;\n\twire  input_dataa_nan_dffe11_wo;\n\twire  input_dataa_nan_dffe12_wi;\n\twire  input_dataa_nan_dffe12_wo;\n\twire  input_dataa_nan_w;\n\twire  input_dataa_zero_dffe11_wi;\n\twire  input_dataa_zero_dffe11_wo;\n\twire  input_dataa_zero_w;\n\twire  input_datab_denormal_dffe11_wi;\n\twire  input_datab_denormal_dffe11_wo;\n\twire  input_datab_denormal_w;\n\twire  input_datab_infinite_dffe11_wi;\n\twire  input_datab_infinite_dffe11_wo;\n\twire  input_datab_infinite_dffe12_wi;\n\twire  input_datab_infinite_dffe12_wo;\n\twire  input_datab_infinite_dffe13_wi;\n\twire  input_datab_infinite_dffe13_wo;\n\twire  input_datab_infinite_dffe14_wi;\n\twire  input_datab_infinite_dffe14_wo;\n\twire  input_datab_infinite_dffe15_wi;\n\twire  input_datab_infinite_dffe15_wo;\n\twire  input_datab_infinite_w;\n\twire  input_datab_nan_dffe11_wi;\n\twire  input_datab_nan_dffe11_wo;\n\twire  input_datab_nan_dffe12_wi;\n\twire  input_datab_nan_dffe12_wo;\n\twire  input_datab_nan_w;\n\twire  input_datab_zero_dffe11_wi;\n\twire  input_datab_zero_dffe11_wo;\n\twire  input_datab_zero_w;\n\twire  input_is_infinite_dffe1_wi;\n\twire  input_is_infinite_dffe1_wo;\n\twire  input_is_infinite_dffe21_wi;\n\twire  input_is_infinite_dffe21_wo;\n\twire  input_is_infinite_dffe22_wi;\n\twire  input_is_infinite_dffe22_wo;\n\twire  input_is_infinite_dffe23_wi;\n\twire  input_is_infinite_dffe23_wo;\n\twire  input_is_infinite_dffe25_wi;\n\twire  input_is_infinite_dffe25_wo;\n\twire  input_is_infinite_dffe26_wi;\n\twire  input_is_infinite_dffe26_wo;\n\twire  input_is_infinite_dffe27_wi;\n\twire  input_is_infinite_dffe27_wo;\n\twire  input_is_infinite_dffe2_wi;\n\twire  input_is_infinite_dffe2_wo;\n\twire  input_is_infinite_dffe31_wi;\n\twire  input_is_infinite_dffe31_wo;\n\twire  input_is_infinite_dffe32_wi;\n\twire  input_is_infinite_dffe32_wo;\n\twire  input_is_infinite_dffe33_wi;\n\twire  input_is_infinite_dffe33_wo;\n\twire  input_is_infinite_dffe3_wi;\n\twire  input_is_infinite_dffe3_wo;\n\twire  input_is_infinite_dffe41_wi;\n\twire  input_is_infinite_dffe41_wo;\n\twire  input_is_infinite_dffe42_wi;\n\twire  input_is_infinite_dffe42_wo;\n\twire  input_is_infinite_dffe4_wi;\n\twire  input_is_infinite_dffe4_wo;\n\twire  input_is_nan_dffe13_wi;\n\twire  input_is_nan_dffe13_wo;\n\twire  input_is_nan_dffe14_wi;\n\twire  input_is_nan_dffe14_wo;\n\twire  input_is_nan_dffe15_wi;\n\twire  input_is_nan_dffe15_wo;\n\twire  input_is_nan_dffe1_wi;\n\twire  input_is_nan_dffe1_wo;\n\twire  input_is_nan_dffe21_wi;\n\twire  input_is_nan_dffe21_wo;\n\twire  input_is_nan_dffe22_wi;\n\twire  input_is_nan_dffe22_wo;\n\twire  input_is_nan_dffe23_wi;\n\twire  input_is_nan_dffe23_wo;\n\twire  input_is_nan_dffe25_wi;\n\twire  input_is_nan_dffe25_wo;\n\twire  input_is_nan_dffe26_wi;\n\twire  input_is_nan_dffe26_wo;\n\twire  input_is_nan_dffe27_wi;\n\twire  input_is_nan_dffe27_wo;\n\twire  input_is_nan_dffe2_wi;\n\twire  input_is_nan_dffe2_wo;\n\twire  input_is_nan_dffe31_wi;\n\twire  input_is_nan_dffe31_wo;\n\twire  input_is_nan_dffe32_wi;\n\twire  input_is_nan_dffe32_wo;\n\twire  input_is_nan_dffe33_wi;\n\twire  input_is_nan_dffe33_wo;\n\twire  input_is_nan_dffe3_wi;\n\twire  input_is_nan_dffe3_wo;\n\twire  input_is_nan_dffe41_wi;\n\twire  input_is_nan_dffe41_wo;\n\twire  input_is_nan_dffe42_wi;\n\twire  input_is_nan_dffe42_wo;\n\twire  input_is_nan_dffe4_wi;\n\twire  input_is_nan_dffe4_wo;\n\twire  [27:0]  man_2comp_res_dataa_w;\n\twire  [27:0]  man_2comp_res_datab_w;\n\twire  [27:0]  man_2comp_res_w;\n\twire  [22:0]  man_a_not_zero_w;\n\twire  [27:0]  man_add_sub_dataa_w;\n\twire  [27:0]  man_add_sub_datab_w;\n\twire  [25:0]  man_add_sub_res_mag_dffe21_wi;\n\twire  [25:0]  man_add_sub_res_mag_dffe21_wo;\n\twire  [25:0]  man_add_sub_res_mag_dffe23_wi;\n\twire  [25:0]  man_add_sub_res_mag_dffe23_wo;\n\twire  [25:0]  man_add_sub_res_mag_dffe26_wi;\n\twire  [25:0]  man_add_sub_res_mag_dffe26_wo;\n\twire  [27:0]  man_add_sub_res_mag_dffe27_wi;\n\twire  [27:0]  man_add_sub_res_mag_dffe27_wo;\n\twire  [27:0]  man_add_sub_res_mag_w2;\n\twire  man_add_sub_res_sign_dffe21_wo;\n\twire  man_add_sub_res_sign_dffe23_wi;\n\twire  man_add_sub_res_sign_dffe23_wo;\n\twire  man_add_sub_res_sign_dffe26_wi;\n\twire  man_add_sub_res_sign_dffe26_wo;\n\twire  man_add_sub_res_sign_dffe27_wi;\n\twire  man_add_sub_res_sign_dffe27_wo;\n\twire  man_add_sub_res_sign_w2;\n\twire  [27:0]  man_add_sub_w;\n\twire  [22:0]  man_all_zeros_w;\n\twire  [22:0]  man_b_not_zero_w;\n\twire  [25:0]  man_dffe31_wo;\n\twire  [25:0]  man_intermediate_res_w;\n\twire  [4:0]  man_leading_zeros_cnt_w;\n\twire  [4:0]  man_leading_zeros_dffe31_wi;\n\twire  [4:0]  man_leading_zeros_dffe31_wo;\n\twire  [22:0]  man_nan_w;\n\twire  [22:0]  man_out_dffe5_wi;\n\twire  [22:0]  man_out_dffe5_wo;\n\twire  [22:0]  man_res_dffe4_wi;\n\twire  [22:0]  man_res_dffe4_wo;\n\twire  man_res_is_not_zero_dffe31_wi;\n\twire  man_res_is_not_zero_dffe31_wo;\n\twire  man_res_is_not_zero_dffe32_wi;\n\twire  man_res_is_not_zero_dffe32_wo;\n\twire  man_res_is_not_zero_dffe33_wi;\n\twire  man_res_is_not_zero_dffe33_wo;\n\twire  man_res_is_not_zero_dffe3_wi;\n\twire  man_res_is_not_zero_dffe3_wo;\n\twire  man_res_is_not_zero_dffe41_wi;\n\twire  man_res_is_not_zero_dffe41_wo;\n\twire  man_res_is_not_zero_dffe42_wi;\n\twire  man_res_is_not_zero_dffe42_wo;\n\twire  man_res_is_not_zero_dffe4_wi;\n\twire  man_res_is_not_zero_dffe4_wo;\n\twire  [25:0]  man_res_mag_w2;\n\twire  man_res_not_zero_dffe23_wi;\n\twire  man_res_not_zero_dffe23_wo;\n\twire  man_res_not_zero_dffe26_wi;\n\twire  man_res_not_zero_dffe26_wo;\n\twire  [24:0]  man_res_not_zero_w2;\n\twire  [25:0]  man_res_rounding_add_sub_datab_w;\n\twire  [25:0]  man_res_rounding_add_sub_w;\n\twire  [23:0]  man_res_w3;\n\twire  [22:0]  man_rounded_res_w;\n\twire  man_rounding_add_value_w;\n\twire  [23:0]  man_smaller_dffe13_wi;\n\twire  [23:0]  man_smaller_dffe13_wo;\n\twire  [23:0]  man_smaller_w;\n\twire  need_complement_dffe22_wi;\n\twire  need_complement_dffe22_wo;\n\twire  need_complement_dffe2_wi;\n\twire  need_complement_dffe2_wo;\n\twire  [1:0]  pos_sign_bit_ext;\n\twire  [3:0]  priority_encoder_1pads_w;\n\twire  round_bit_dffe21_wi;\n\twire  round_bit_dffe21_wo;\n\twire  round_bit_dffe23_wi;\n\twire  round_bit_dffe23_wo;\n\twire  round_bit_dffe26_wi;\n\twire  round_bit_dffe26_wo;\n\twire  round_bit_dffe31_wi;\n\twire  round_bit_dffe31_wo;\n\twire  round_bit_dffe32_wi;\n\twire  round_bit_dffe32_wo;\n\twire  round_bit_dffe33_wi;\n\twire  round_bit_dffe33_wo;\n\twire  round_bit_dffe3_wi;\n\twire  round_bit_dffe3_wo;\n\twire  round_bit_w;\n\twire  rounded_res_infinity_dffe4_wi;\n\twire  rounded_res_infinity_dffe4_wo;\n\twire  [4:0]  rshift_distance_dffe13_wi;\n\twire  [4:0]  rshift_distance_dffe13_wo;\n\twire  [4:0]  rshift_distance_dffe14_wi;\n\twire  [4:0]  rshift_distance_dffe14_wo;\n\twire  [4:0]  rshift_distance_dffe15_wi;\n\twire  [4:0]  rshift_distance_dffe15_wo;\n\twire  [4:0]  rshift_distance_w;\n\twire  sign_dffe31_wi;\n\twire  sign_dffe31_wo;\n\twire  sign_dffe32_wi;\n\twire  sign_dffe32_wo;\n\twire  sign_dffe33_wi;\n\twire  sign_dffe33_wo;\n\twire  sign_out_dffe5_wi;\n\twire  sign_out_dffe5_wo;\n\twire  sign_res_dffe3_wi;\n\twire  sign_res_dffe3_wo;\n\twire  sign_res_dffe41_wi;\n\twire  sign_res_dffe41_wo;\n\twire  sign_res_dffe42_wi;\n\twire  sign_res_dffe42_wo;\n\twire  sign_res_dffe4_wi;\n\twire  sign_res_dffe4_wo;\n\twire  [5:0]  sticky_bit_cnt_dataa_w;\n\twire  [5:0]  sticky_bit_cnt_datab_w;\n\twire  [5:0]  sticky_bit_cnt_res_w;\n\twire  sticky_bit_dffe1_wi;\n\twire  sticky_bit_dffe1_wo;\n\twire  sticky_bit_dffe21_wi;\n\twire  sticky_bit_dffe21_wo;\n\twire  sticky_bit_dffe22_wi;\n\twire  sticky_bit_dffe22_wo;\n\twire  sticky_bit_dffe23_wi;\n\twire  sticky_bit_dffe23_wo;\n\twire  sticky_bit_dffe25_wi;\n\twire  sticky_bit_dffe25_wo;\n\twire  sticky_bit_dffe26_wi;\n\twire  sticky_bit_dffe26_wo;\n\twire  sticky_bit_dffe27_wi;\n\twire  sticky_bit_dffe27_wo;\n\twire  sticky_bit_dffe2_wi;\n\twire  sticky_bit_dffe2_wo;\n\twire  sticky_bit_dffe31_wi;\n\twire  sticky_bit_dffe31_wo;\n\twire  sticky_bit_dffe32_wi;\n\twire  sticky_bit_dffe32_wo;\n\twire  sticky_bit_dffe33_wi;\n\twire  sticky_bit_dffe33_wo;\n\twire  sticky_bit_dffe3_wi;\n\twire  sticky_bit_dffe3_wo;\n\twire  sticky_bit_w;\n\twire  [5:0]  trailing_zeros_limit_w;\n\twire  zero_man_sign_dffe21_wi;\n\twire  zero_man_sign_dffe21_wo;\n\twire  zero_man_sign_dffe22_wi;\n\twire  zero_man_sign_dffe22_wo;\n\twire  zero_man_sign_dffe23_wi;\n\twire  zero_man_sign_dffe23_wo;\n\twire  zero_man_sign_dffe26_wi;\n\twire  zero_man_sign_dffe26_wo;\n\twire  zero_man_sign_dffe27_wi;\n\twire  zero_man_sign_dffe27_wo;\n\twire  zero_man_sign_dffe2_wi;\n\twire  zero_man_sign_dffe2_wo;\n\n\tfpoint_hw_qsys_addsub_single_altbarrel_shift_fjg   lbarrel_shift\n\t( \n\t.aclr(aclr),\n\t.clk_en(clk_en),\n\t.clock(clock),\n\t.data(man_dffe31_wo),\n\t.distance(man_leading_zeros_cnt_w),\n\t.result(wire_lbarrel_shift_result));\n\tfpoint_hw_qsys_addsub_single_altbarrel_shift_44e   rbarrel_shift\n\t( \n\t.data({man_smaller_dffe13_wo, {2{1'b0}}}),\n\t.distance(rshift_distance_dffe13_wo),\n\t.result(wire_rbarrel_shift_result));\n\tfpoint_hw_qsys_addsub_single_altpriority_encoder_9u8   leading_zeroes_cnt\n\t( \n\t.data({man_add_sub_res_mag_dffe21_wo[25:1], 1'b1, {6{1'b0}}}),\n\t.q(wire_leading_zeroes_cnt_q));\n\tfpoint_hw_qsys_addsub_single_altpriority_encoder_tma   trailing_zeros_cnt\n\t( \n\t.data({{9{1'b1}}, man_smaller_dffe13_wo[22:0]}),\n\t.q(wire_trailing_zeros_cnt_q));\n\t\n\tinitial\n\t\tadd_sub_dffe1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) add_sub_dffe1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   add_sub_dffe1 <= add_sub_dffe1_wi;\n\t\n\tinitial\n\t\tadd_sub_dffe12 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) add_sub_dffe12 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   add_sub_dffe12 <= add_sub_dffe12_wi;\n\t\n\tinitial\n\t\taligned_dataa_exp_dffe12 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) aligned_dataa_exp_dffe12 <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   aligned_dataa_exp_dffe12 <= aligned_dataa_exp_dffe12_wi;\n\t\n\tinitial\n\t\taligned_dataa_man_dffe12 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) aligned_dataa_man_dffe12 <= 24'b0;\n\t\telse if  (clk_en == 1'b1)   aligned_dataa_man_dffe12 <= aligned_dataa_man_dffe12_wi;\n\t\n\tinitial\n\t\taligned_dataa_sign_dffe12 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) aligned_dataa_sign_dffe12 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   aligned_dataa_sign_dffe12 <= aligned_dataa_sign_dffe12_wi;\n\t\n\tinitial\n\t\taligned_datab_exp_dffe12 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) aligned_datab_exp_dffe12 <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   aligned_datab_exp_dffe12 <= aligned_datab_exp_dffe12_wi;\n\t\n\tinitial\n\t\taligned_datab_man_dffe12 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) aligned_datab_man_dffe12 <= 24'b0;\n\t\telse if  (clk_en == 1'b1)   aligned_datab_man_dffe12 <= aligned_datab_man_dffe12_wi;\n\t\n\tinitial\n\t\taligned_datab_sign_dffe12 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) aligned_datab_sign_dffe12 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   aligned_datab_sign_dffe12 <= aligned_datab_sign_dffe12_wi;\n\t\n\tinitial\n\t\tboth_inputs_are_infinite_dffe1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) both_inputs_are_infinite_dffe1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   both_inputs_are_infinite_dffe1 <= both_inputs_are_infinite_dffe1_wi;\n\t\n\tinitial\n\t\tdata_exp_dffe1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) data_exp_dffe1 <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   data_exp_dffe1 <= data_exp_dffe1_wi;\n\t\n\tinitial\n\t\tdataa_man_dffe1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) dataa_man_dffe1 <= 26'b0;\n\t\telse if  (clk_en == 1'b1)   dataa_man_dffe1 <= dataa_man_dffe1_wi;\n\t\n\tinitial\n\t\tdataa_sign_dffe1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) dataa_sign_dffe1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   dataa_sign_dffe1 <= dataa_sign_dffe1_wi;\n\t\n\tinitial\n\t\tdatab_man_dffe1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) datab_man_dffe1 <= 26'b0;\n\t\telse if  (clk_en == 1'b1)   datab_man_dffe1 <= datab_man_dffe1_wi;\n\t\n\tinitial\n\t\tdatab_sign_dffe1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) datab_sign_dffe1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   datab_sign_dffe1 <= datab_sign_dffe1_wi;\n\t\n\tinitial\n\t\tdenormal_res_dffe3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) denormal_res_dffe3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   denormal_res_dffe3 <= denormal_res_dffe3_wi;\n\t\n\tinitial\n\t\tdenormal_res_dffe4 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) denormal_res_dffe4 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   denormal_res_dffe4 <= denormal_res_dffe4_wi;\n\t\n\tinitial\n\t\texp_adj_dffe21 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_adj_dffe21 <= 2'b0;\n\t\telse if  (clk_en == 1'b1)   exp_adj_dffe21 <= exp_adj_dffe21_wi;\n\t\n\tinitial\n\t\texp_out_dffe5 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_out_dffe5 <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   exp_out_dffe5 <= exp_out_dffe5_wi;\n\t\n\tinitial\n\t\texp_res_dffe2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_res_dffe2 <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   exp_res_dffe2 <= exp_res_dffe2_wi;\n\t\n\tinitial\n\t\texp_res_dffe21 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_res_dffe21 <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   exp_res_dffe21 <= exp_res_dffe21_wi;\n\t\n\tinitial\n\t\texp_res_dffe3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_res_dffe3 <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   exp_res_dffe3 <= exp_res_dffe3_wi;\n\t\n\tinitial\n\t\texp_res_dffe4 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_res_dffe4 <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   exp_res_dffe4 <= exp_res_dffe4_wi;\n\t\n\tinitial\n\t\tinfinite_output_sign_dffe1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) infinite_output_sign_dffe1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   infinite_output_sign_dffe1 <= infinite_output_sign_dffe1_wi;\n\t\n\tinitial\n\t\tinfinite_output_sign_dffe2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) infinite_output_sign_dffe2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   infinite_output_sign_dffe2 <= infinite_output_sign_dffe2_wi;\n\t\n\tinitial\n\t\tinfinite_output_sign_dffe21 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) infinite_output_sign_dffe21 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   infinite_output_sign_dffe21 <= infinite_output_sign_dffe21_wi;\n\t\n\tinitial\n\t\tinfinite_output_sign_dffe3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) infinite_output_sign_dffe3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   infinite_output_sign_dffe3 <= infinite_output_sign_dffe3_wi;\n\t\n\tinitial\n\t\tinfinite_output_sign_dffe31 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) infinite_output_sign_dffe31 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   infinite_output_sign_dffe31 <= infinite_output_sign_dffe31_wi;\n\t\n\tinitial\n\t\tinfinite_output_sign_dffe4 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) infinite_output_sign_dffe4 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   infinite_output_sign_dffe4 <= infinite_output_sign_dffe4_wi;\n\t\n\tinitial\n\t\tinfinite_res_dffe3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) infinite_res_dffe3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   infinite_res_dffe3 <= infinite_res_dffe3_wi;\n\t\n\tinitial\n\t\tinfinite_res_dffe4 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) infinite_res_dffe4 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   infinite_res_dffe4 <= infinite_res_dffe4_wi;\n\t\n\tinitial\n\t\tinfinity_magnitude_sub_dffe2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) infinity_magnitude_sub_dffe2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   infinity_magnitude_sub_dffe2 <= infinity_magnitude_sub_dffe2_wi;\n\t\n\tinitial\n\t\tinfinity_magnitude_sub_dffe21 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) infinity_magnitude_sub_dffe21 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   infinity_magnitude_sub_dffe21 <= infinity_magnitude_sub_dffe21_wi;\n\t\n\tinitial\n\t\tinfinity_magnitude_sub_dffe3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) infinity_magnitude_sub_dffe3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   infinity_magnitude_sub_dffe3 <= infinity_magnitude_sub_dffe3_wi;\n\t\n\tinitial\n\t\tinfinity_magnitude_sub_dffe31 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) infinity_magnitude_sub_dffe31 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   infinity_magnitude_sub_dffe31 <= infinity_magnitude_sub_dffe31_wi;\n\t\n\tinitial\n\t\tinfinity_magnitude_sub_dffe4 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) infinity_magnitude_sub_dffe4 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   infinity_magnitude_sub_dffe4 <= infinity_magnitude_sub_dffe4_wi;\n\t\n\tinitial\n\t\tinput_dataa_infinite_dffe12 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_dataa_infinite_dffe12 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_dataa_infinite_dffe12 <= input_dataa_infinite_dffe12_wi;\n\t\n\tinitial\n\t\tinput_dataa_nan_dffe12 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_dataa_nan_dffe12 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_dataa_nan_dffe12 <= input_dataa_nan_dffe12_wi;\n\t\n\tinitial\n\t\tinput_datab_infinite_dffe12 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_datab_infinite_dffe12 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_datab_infinite_dffe12 <= input_datab_infinite_dffe12_wi;\n\t\n\tinitial\n\t\tinput_datab_nan_dffe12 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_datab_nan_dffe12 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_datab_nan_dffe12 <= input_datab_nan_dffe12_wi;\n\t\n\tinitial\n\t\tinput_is_infinite_dffe1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_infinite_dffe1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_infinite_dffe1 <= input_is_infinite_dffe1_wi;\n\t\n\tinitial\n\t\tinput_is_infinite_dffe2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_infinite_dffe2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_infinite_dffe2 <= input_is_infinite_dffe2_wi;\n\t\n\tinitial\n\t\tinput_is_infinite_dffe21 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_infinite_dffe21 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_infinite_dffe21 <= input_is_infinite_dffe21_wi;\n\t\n\tinitial\n\t\tinput_is_infinite_dffe3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_infinite_dffe3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_infinite_dffe3 <= input_is_infinite_dffe3_wi;\n\t\n\tinitial\n\t\tinput_is_infinite_dffe31 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_infinite_dffe31 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_infinite_dffe31 <= input_is_infinite_dffe31_wi;\n\t\n\tinitial\n\t\tinput_is_infinite_dffe4 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_infinite_dffe4 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_infinite_dffe4 <= input_is_infinite_dffe4_wi;\n\t\n\tinitial\n\t\tinput_is_nan_dffe1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_nan_dffe1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_nan_dffe1 <= input_is_nan_dffe1_wi;\n\t\n\tinitial\n\t\tinput_is_nan_dffe2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_nan_dffe2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_nan_dffe2 <= input_is_nan_dffe2_wi;\n\t\n\tinitial\n\t\tinput_is_nan_dffe21 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_nan_dffe21 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_nan_dffe21 <= input_is_nan_dffe21_wi;\n\t\n\tinitial\n\t\tinput_is_nan_dffe3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_nan_dffe3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_nan_dffe3 <= input_is_nan_dffe3_wi;\n\t\n\tinitial\n\t\tinput_is_nan_dffe31 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_nan_dffe31 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_nan_dffe31 <= input_is_nan_dffe31_wi;\n\t\n\tinitial\n\t\tinput_is_nan_dffe4 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_nan_dffe4 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_nan_dffe4 <= input_is_nan_dffe4_wi;\n\t\n\tinitial\n\t\tman_add_sub_res_mag_dffe21 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_add_sub_res_mag_dffe21 <= 26'b0;\n\t\telse if  (clk_en == 1'b1)   man_add_sub_res_mag_dffe21 <= man_add_sub_res_mag_dffe21_wi;\n\t\n\tinitial\n\t\tman_add_sub_res_sign_dffe21 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_add_sub_res_sign_dffe21 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   man_add_sub_res_sign_dffe21 <= man_add_sub_res_sign_dffe27_wo;\n\t\n\tinitial\n\t\tman_dffe31 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_dffe31 <= 26'b0;\n\t\telse if  (clk_en == 1'b1)   man_dffe31 <= man_add_sub_res_mag_dffe26_wo;\n\t\n\tinitial\n\t\tman_leading_zeros_dffe31 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_leading_zeros_dffe31 <= 5'b0;\n\t\telse if  (clk_en == 1'b1)   man_leading_zeros_dffe31 <= man_leading_zeros_dffe31_wi;\n\t\n\tinitial\n\t\tman_out_dffe5 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_out_dffe5 <= 23'b0;\n\t\telse if  (clk_en == 1'b1)   man_out_dffe5 <= man_out_dffe5_wi;\n\t\n\tinitial\n\t\tman_res_dffe4 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_res_dffe4 <= 23'b0;\n\t\telse if  (clk_en == 1'b1)   man_res_dffe4 <= man_res_dffe4_wi;\n\t\n\tinitial\n\t\tman_res_is_not_zero_dffe3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_res_is_not_zero_dffe3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   man_res_is_not_zero_dffe3 <= man_res_is_not_zero_dffe3_wi;\n\t\n\tinitial\n\t\tman_res_is_not_zero_dffe31 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_res_is_not_zero_dffe31 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   man_res_is_not_zero_dffe31 <= man_res_is_not_zero_dffe31_wi;\n\t\n\tinitial\n\t\tman_res_is_not_zero_dffe4 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_res_is_not_zero_dffe4 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   man_res_is_not_zero_dffe4 <= man_res_is_not_zero_dffe4_wi;\n\t\n\tinitial\n\t\tneed_complement_dffe2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) need_complement_dffe2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   need_complement_dffe2 <= need_complement_dffe2_wi;\n\t\n\tinitial\n\t\tround_bit_dffe21 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) round_bit_dffe21 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   round_bit_dffe21 <= round_bit_dffe21_wi;\n\t\n\tinitial\n\t\tround_bit_dffe3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) round_bit_dffe3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   round_bit_dffe3 <= round_bit_dffe3_wi;\n\t\n\tinitial\n\t\tround_bit_dffe31 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) round_bit_dffe31 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   round_bit_dffe31 <= round_bit_dffe31_wi;\n\t\n\tinitial\n\t\trounded_res_infinity_dffe4 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) rounded_res_infinity_dffe4 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   rounded_res_infinity_dffe4 <= rounded_res_infinity_dffe4_wi;\n\t\n\tinitial\n\t\tsign_dffe31 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_dffe31 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_dffe31 <= sign_dffe31_wi;\n\t\n\tinitial\n\t\tsign_out_dffe5 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_out_dffe5 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_out_dffe5 <= sign_out_dffe5_wi;\n\t\n\tinitial\n\t\tsign_res_dffe3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_res_dffe3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_res_dffe3 <= sign_res_dffe3_wi;\n\t\n\tinitial\n\t\tsign_res_dffe4 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_res_dffe4 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_res_dffe4 <= sign_res_dffe4_wi;\n\t\n\tinitial\n\t\tsticky_bit_dffe1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sticky_bit_dffe1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sticky_bit_dffe1 <= sticky_bit_dffe1_wi;\n\t\n\tinitial\n\t\tsticky_bit_dffe2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sticky_bit_dffe2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sticky_bit_dffe2 <= sticky_bit_dffe2_wi;\n\t\n\tinitial\n\t\tsticky_bit_dffe21 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sticky_bit_dffe21 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sticky_bit_dffe21 <= sticky_bit_dffe21_wi;\n\t\n\tinitial\n\t\tsticky_bit_dffe3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sticky_bit_dffe3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sticky_bit_dffe3 <= sticky_bit_dffe3_wi;\n\t\n\tinitial\n\t\tsticky_bit_dffe31 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sticky_bit_dffe31 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sticky_bit_dffe31 <= sticky_bit_dffe31_wi;\n\t\n\tinitial\n\t\tzero_man_sign_dffe2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) zero_man_sign_dffe2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   zero_man_sign_dffe2 <= zero_man_sign_dffe2_wi;\n\t\n\tinitial\n\t\tzero_man_sign_dffe21 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) zero_man_sign_dffe21 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   zero_man_sign_dffe21 <= zero_man_sign_dffe21_wi;\n\tlpm_add_sub   add_sub1\n\t( \n\t.aclr(aclr),\n\t.clken(clk_en),\n\t.clock(clock),\n\t.cout(),\n\t.dataa(aligned_dataa_exp_w),\n\t.datab(aligned_datab_exp_w),\n\t.overflow(),\n\t.result(wire_add_sub1_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.add_sub(1'b1),\n\t.cin()\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tadd_sub1.lpm_direction = \"SUB\",\n\t\tadd_sub1.lpm_pipeline = 1,\n\t\tadd_sub1.lpm_representation = \"SIGNED\",\n\t\tadd_sub1.lpm_width = 9,\n\t\tadd_sub1.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   add_sub2\n\t( \n\t.aclr(aclr),\n\t.clken(clk_en),\n\t.clock(clock),\n\t.cout(),\n\t.dataa(aligned_datab_exp_w),\n\t.datab(aligned_dataa_exp_w),\n\t.overflow(),\n\t.result(wire_add_sub2_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.add_sub(1'b1),\n\t.cin()\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tadd_sub2.lpm_direction = \"SUB\",\n\t\tadd_sub2.lpm_pipeline = 1,\n\t\tadd_sub2.lpm_representation = \"SIGNED\",\n\t\tadd_sub2.lpm_width = 9,\n\t\tadd_sub2.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   add_sub3\n\t( \n\t.cout(),\n\t.dataa(sticky_bit_cnt_dataa_w),\n\t.datab(sticky_bit_cnt_datab_w),\n\t.overflow(),\n\t.result(wire_add_sub3_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.cin(),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tadd_sub3.lpm_direction = \"SUB\",\n\t\tadd_sub3.lpm_representation = \"SIGNED\",\n\t\tadd_sub3.lpm_width = 6,\n\t\tadd_sub3.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   add_sub4\n\t( \n\t.cout(),\n\t.dataa(exp_adjustment_add_sub_dataa_w),\n\t.datab(exp_adjustment_add_sub_datab_w),\n\t.overflow(),\n\t.result(wire_add_sub4_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.cin(),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tadd_sub4.lpm_direction = \"ADD\",\n\t\tadd_sub4.lpm_representation = \"SIGNED\",\n\t\tadd_sub4.lpm_width = 9,\n\t\tadd_sub4.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   add_sub5\n\t( \n\t.aclr(aclr),\n\t.clken(clk_en),\n\t.clock(clock),\n\t.cout(),\n\t.dataa(exp_adjustment2_add_sub_dataa_w),\n\t.datab(exp_adjustment2_add_sub_datab_w),\n\t.overflow(),\n\t.result(wire_add_sub5_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.add_sub(1'b1),\n\t.cin()\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tadd_sub5.lpm_direction = \"ADD\",\n\t\tadd_sub5.lpm_pipeline = 1,\n\t\tadd_sub5.lpm_representation = \"SIGNED\",\n\t\tadd_sub5.lpm_width = 9,\n\t\tadd_sub5.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   add_sub6\n\t( \n\t.cout(),\n\t.dataa(exp_res_rounding_adder_dataa_w),\n\t.datab(exp_rounding_adjustment_w),\n\t.overflow(),\n\t.result(wire_add_sub6_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.cin(),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tadd_sub6.lpm_direction = \"ADD\",\n\t\tadd_sub6.lpm_representation = \"SIGNED\",\n\t\tadd_sub6.lpm_width = 9,\n\t\tadd_sub6.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   man_2comp_res_lower\n\t( \n\t.aclr(aclr),\n\t.add_sub(add_sub_w2),\n\t.cin(borrow_w),\n\t.clken(clk_en),\n\t.clock(clock),\n\t.cout(wire_man_2comp_res_lower_cout),\n\t.dataa(man_2comp_res_dataa_w[13:0]),\n\t.datab(man_2comp_res_datab_w[13:0]),\n\t.overflow(),\n\t.result(wire_man_2comp_res_lower_result));\n\tdefparam\n\t\tman_2comp_res_lower.lpm_pipeline = 1,\n\t\tman_2comp_res_lower.lpm_representation = \"SIGNED\",\n\t\tman_2comp_res_lower.lpm_width = 14,\n\t\tman_2comp_res_lower.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   man_2comp_res_upper0\n\t( \n\t.aclr(aclr),\n\t.add_sub(add_sub_w2),\n\t.cin(1'b0),\n\t.clken(clk_en),\n\t.clock(clock),\n\t.cout(),\n\t.dataa(man_2comp_res_dataa_w[27:14]),\n\t.datab(man_2comp_res_datab_w[27:14]),\n\t.overflow(),\n\t.result(wire_man_2comp_res_upper0_result));\n\tdefparam\n\t\tman_2comp_res_upper0.lpm_pipeline = 1,\n\t\tman_2comp_res_upper0.lpm_representation = \"SIGNED\",\n\t\tman_2comp_res_upper0.lpm_width = 14,\n\t\tman_2comp_res_upper0.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   man_2comp_res_upper1\n\t( \n\t.aclr(aclr),\n\t.add_sub(add_sub_w2),\n\t.cin(1'b1),\n\t.clken(clk_en),\n\t.clock(clock),\n\t.cout(),\n\t.dataa(man_2comp_res_dataa_w[27:14]),\n\t.datab(man_2comp_res_datab_w[27:14]),\n\t.overflow(),\n\t.result(wire_man_2comp_res_upper1_result));\n\tdefparam\n\t\tman_2comp_res_upper1.lpm_pipeline = 1,\n\t\tman_2comp_res_upper1.lpm_representation = \"SIGNED\",\n\t\tman_2comp_res_upper1.lpm_width = 14,\n\t\tman_2comp_res_upper1.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   man_add_sub_lower\n\t( \n\t.aclr(aclr),\n\t.add_sub(add_sub_w2),\n\t.cin(borrow_w),\n\t.clken(clk_en),\n\t.clock(clock),\n\t.cout(wire_man_add_sub_lower_cout),\n\t.dataa(man_add_sub_dataa_w[13:0]),\n\t.datab(man_add_sub_datab_w[13:0]),\n\t.overflow(),\n\t.result(wire_man_add_sub_lower_result));\n\tdefparam\n\t\tman_add_sub_lower.lpm_pipeline = 1,\n\t\tman_add_sub_lower.lpm_representation = \"SIGNED\",\n\t\tman_add_sub_lower.lpm_width = 14,\n\t\tman_add_sub_lower.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   man_add_sub_upper0\n\t( \n\t.aclr(aclr),\n\t.add_sub(add_sub_w2),\n\t.cin(1'b0),\n\t.clken(clk_en),\n\t.clock(clock),\n\t.cout(),\n\t.dataa(man_add_sub_dataa_w[27:14]),\n\t.datab(man_add_sub_datab_w[27:14]),\n\t.overflow(),\n\t.result(wire_man_add_sub_upper0_result));\n\tdefparam\n\t\tman_add_sub_upper0.lpm_pipeline = 1,\n\t\tman_add_sub_upper0.lpm_representation = \"SIGNED\",\n\t\tman_add_sub_upper0.lpm_width = 14,\n\t\tman_add_sub_upper0.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   man_add_sub_upper1\n\t( \n\t.aclr(aclr),\n\t.add_sub(add_sub_w2),\n\t.cin(1'b1),\n\t.clken(clk_en),\n\t.clock(clock),\n\t.cout(),\n\t.dataa(man_add_sub_dataa_w[27:14]),\n\t.datab(man_add_sub_datab_w[27:14]),\n\t.overflow(),\n\t.result(wire_man_add_sub_upper1_result));\n\tdefparam\n\t\tman_add_sub_upper1.lpm_pipeline = 1,\n\t\tman_add_sub_upper1.lpm_representation = \"SIGNED\",\n\t\tman_add_sub_upper1.lpm_width = 14,\n\t\tman_add_sub_upper1.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   man_res_rounding_add_sub_lower\n\t( \n\t.cout(wire_man_res_rounding_add_sub_lower_cout),\n\t.dataa(man_intermediate_res_w[12:0]),\n\t.datab(man_res_rounding_add_sub_datab_w[12:0]),\n\t.overflow(),\n\t.result(wire_man_res_rounding_add_sub_lower_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.cin(),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tman_res_rounding_add_sub_lower.lpm_direction = \"ADD\",\n\t\tman_res_rounding_add_sub_lower.lpm_representation = \"SIGNED\",\n\t\tman_res_rounding_add_sub_lower.lpm_width = 13,\n\t\tman_res_rounding_add_sub_lower.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   man_res_rounding_add_sub_upper1\n\t( \n\t.cin(1'b1),\n\t.cout(),\n\t.dataa(man_intermediate_res_w[25:13]),\n\t.datab(man_res_rounding_add_sub_datab_w[25:13]),\n\t.overflow(),\n\t.result(wire_man_res_rounding_add_sub_upper1_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tman_res_rounding_add_sub_upper1.lpm_direction = \"ADD\",\n\t\tman_res_rounding_add_sub_upper1.lpm_representation = \"SIGNED\",\n\t\tman_res_rounding_add_sub_upper1.lpm_width = 13,\n\t\tman_res_rounding_add_sub_upper1.lpm_type = \"lpm_add_sub\";\n\tlpm_compare   trailing_zeros_limit_comparator\n\t( \n\t.aeb(),\n\t.agb(wire_trailing_zeros_limit_comparator_agb),\n\t.ageb(),\n\t.alb(),\n\t.aleb(),\n\t.aneb(),\n\t.dataa(sticky_bit_cnt_res_w),\n\t.datab(trailing_zeros_limit_w)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\ttrailing_zeros_limit_comparator.lpm_representation = \"SIGNED\",\n\t\ttrailing_zeros_limit_comparator.lpm_width = 6,\n\t\ttrailing_zeros_limit_comparator.lpm_type = \"lpm_compare\";\n\tassign\n\t\tadd_sub_dffe11_wi = add_sub,\n\t\tadd_sub_dffe11_wo = add_sub_dffe11_wi,\n\t\tadd_sub_dffe12_wi = add_sub_dffe11_wo,\n\t\tadd_sub_dffe12_wo = add_sub_dffe12,\n\t\tadd_sub_dffe13_wi = add_sub_dffe12_wo,\n\t\tadd_sub_dffe13_wo = add_sub_dffe13_wi,\n\t\tadd_sub_dffe14_wi = add_sub_dffe13_wo,\n\t\tadd_sub_dffe14_wo = add_sub_dffe14_wi,\n\t\tadd_sub_dffe15_wi = add_sub_dffe14_wo,\n\t\tadd_sub_dffe15_wo = add_sub_dffe15_wi,\n\t\tadd_sub_dffe1_wi = add_sub_dffe15_wo,\n\t\tadd_sub_dffe1_wo = add_sub_dffe1,\n\t\tadd_sub_dffe25_wi = add_sub_w2,\n\t\tadd_sub_dffe25_wo = add_sub_dffe25_wi,\n\t\tadd_sub_w2 = (((((dataa_sign_dffe1_wo & (~ datab_sign_dffe1_wo)) & (~ add_sub_dffe1_wo)) | (((~ dataa_sign_dffe1_wo) & (~ datab_sign_dffe1_wo)) & add_sub_dffe1_wo)) | (((~ dataa_sign_dffe1_wo) & datab_sign_dffe1_wo) & (~ add_sub_dffe1_wo))) | ((dataa_sign_dffe1_wo & datab_sign_dffe1_wo) & add_sub_dffe1_wo)),\n\t\tadder_upper_w = man_intermediate_res_w[25:13],\n\t\taligned_dataa_exp_dffe12_wi = aligned_dataa_exp_w,\n\t\taligned_dataa_exp_dffe12_wo = aligned_dataa_exp_dffe12,\n\t\taligned_dataa_exp_dffe13_wi = aligned_dataa_exp_dffe12_wo,\n\t\taligned_dataa_exp_dffe13_wo = aligned_dataa_exp_dffe13_wi,\n\t\taligned_dataa_exp_dffe14_wi = aligned_dataa_exp_dffe13_wo,\n\t\taligned_dataa_exp_dffe14_wo = aligned_dataa_exp_dffe14_wi,\n\t\taligned_dataa_exp_dffe15_wi = aligned_dataa_exp_dffe14_wo,\n\t\taligned_dataa_exp_dffe15_wo = aligned_dataa_exp_dffe15_wi,\n\t\taligned_dataa_exp_w = {1'b0, ({8{(~ input_dataa_denormal_dffe11_wo)}} & dataa_dffe11_wo[30:23])},\n\t\taligned_dataa_man_dffe12_wi = aligned_dataa_man_w[25:2],\n\t\taligned_dataa_man_dffe12_wo = aligned_dataa_man_dffe12,\n\t\taligned_dataa_man_dffe13_wi = aligned_dataa_man_dffe12_wo,\n\t\taligned_dataa_man_dffe13_wo = aligned_dataa_man_dffe13_wi,\n\t\taligned_dataa_man_dffe14_wi = aligned_dataa_man_dffe13_wo,\n\t\taligned_dataa_man_dffe14_wo = aligned_dataa_man_dffe14_wi,\n\t\taligned_dataa_man_dffe15_w = {aligned_dataa_man_dffe15_wo, {2{1'b0}}},\n\t\taligned_dataa_man_dffe15_wi = aligned_dataa_man_dffe14_wo,\n\t\taligned_dataa_man_dffe15_wo = aligned_dataa_man_dffe15_wi,\n\t\taligned_dataa_man_w = {(((~ input_dataa_infinite_dffe11_wo) & (~ input_dataa_denormal_dffe11_wo)) & (~ input_dataa_zero_dffe11_wo)), ({23{(~ input_dataa_denormal_dffe11_wo)}} & dataa_dffe11_wo[22:0]), {2{1'b0}}},\n\t\taligned_dataa_sign_dffe12_wi = aligned_dataa_sign_w,\n\t\taligned_dataa_sign_dffe12_wo = aligned_dataa_sign_dffe12,\n\t\taligned_dataa_sign_dffe13_wi = aligned_dataa_sign_dffe12_wo,\n\t\taligned_dataa_sign_dffe13_wo = aligned_dataa_sign_dffe13_wi,\n\t\taligned_dataa_sign_dffe14_wi = aligned_dataa_sign_dffe13_wo,\n\t\taligned_dataa_sign_dffe14_wo = aligned_dataa_sign_dffe14_wi,\n\t\taligned_dataa_sign_dffe15_wi = aligned_dataa_sign_dffe14_wo,\n\t\taligned_dataa_sign_dffe15_wo = aligned_dataa_sign_dffe15_wi,\n\t\taligned_dataa_sign_w = dataa_dffe11_wo[31],\n\t\taligned_datab_exp_dffe12_wi = aligned_datab_exp_w,\n\t\taligned_datab_exp_dffe12_wo = aligned_datab_exp_dffe12,\n\t\taligned_datab_exp_dffe13_wi = aligned_datab_exp_dffe12_wo,\n\t\taligned_datab_exp_dffe13_wo = aligned_datab_exp_dffe13_wi,\n\t\taligned_datab_exp_dffe14_wi = aligned_datab_exp_dffe13_wo,\n\t\taligned_datab_exp_dffe14_wo = aligned_datab_exp_dffe14_wi,\n\t\taligned_datab_exp_dffe15_wi = aligned_datab_exp_dffe14_wo,\n\t\taligned_datab_exp_dffe15_wo = aligned_datab_exp_dffe15_wi,\n\t\taligned_datab_exp_w = {1'b0, ({8{(~ input_datab_denormal_dffe11_wo)}} & datab_dffe11_wo[30:23])},\n\t\taligned_datab_man_dffe12_wi = aligned_datab_man_w[25:2],\n\t\taligned_datab_man_dffe12_wo = aligned_datab_man_dffe12,\n\t\taligned_datab_man_dffe13_wi = aligned_datab_man_dffe12_wo,\n\t\taligned_datab_man_dffe13_wo = aligned_datab_man_dffe13_wi,\n\t\taligned_datab_man_dffe14_wi = aligned_datab_man_dffe13_wo,\n\t\taligned_datab_man_dffe14_wo = aligned_datab_man_dffe14_wi,\n\t\taligned_datab_man_dffe15_w = {aligned_datab_man_dffe15_wo, {2{1'b0}}},\n\t\taligned_datab_man_dffe15_wi = aligned_datab_man_dffe14_wo,\n\t\taligned_datab_man_dffe15_wo = aligned_datab_man_dffe15_wi,\n\t\taligned_datab_man_w = {(((~ input_datab_infinite_dffe11_wo) & (~ input_datab_denormal_dffe11_wo)) & (~ input_datab_zero_dffe11_wo)), ({23{(~ input_datab_denormal_dffe11_wo)}} & datab_dffe11_wo[22:0]), {2{1'b0}}},\n\t\taligned_datab_sign_dffe12_wi = aligned_datab_sign_w,\n\t\taligned_datab_sign_dffe12_wo = aligned_datab_sign_dffe12,\n\t\taligned_datab_sign_dffe13_wi = aligned_datab_sign_dffe12_wo,\n\t\taligned_datab_sign_dffe13_wo = aligned_datab_sign_dffe13_wi,\n\t\taligned_datab_sign_dffe14_wi = aligned_datab_sign_dffe13_wo,\n\t\taligned_datab_sign_dffe14_wo = aligned_datab_sign_dffe14_wi,\n\t\taligned_datab_sign_dffe15_wi = aligned_datab_sign_dffe14_wo,\n\t\taligned_datab_sign_dffe15_wo = aligned_datab_sign_dffe15_wi,\n\t\taligned_datab_sign_w = datab_dffe11_wo[31],\n\t\tborrow_w = ((~ sticky_bit_dffe1_wo) & (~ add_sub_w2)),\n\t\tboth_inputs_are_infinite_dffe1_wi = (input_dataa_infinite_dffe15_wo & input_datab_infinite_dffe15_wo),\n\t\tboth_inputs_are_infinite_dffe1_wo = both_inputs_are_infinite_dffe1,\n\t\tboth_inputs_are_infinite_dffe25_wi = both_inputs_are_infinite_dffe1_wo,\n\t\tboth_inputs_are_infinite_dffe25_wo = both_inputs_are_infinite_dffe25_wi,\n\t\tdata_exp_dffe1_wi = (({8{(~ exp_amb_mux_dffe15_wo)}} & aligned_dataa_exp_dffe15_wo[7:0]) | ({8{exp_amb_mux_dffe15_wo}} & aligned_datab_exp_dffe15_wo[7:0])),\n\t\tdata_exp_dffe1_wo = data_exp_dffe1,\n\t\tdataa_dffe11_wi = dataa,\n\t\tdataa_dffe11_wo = dataa_dffe11_wi,\n\t\tdataa_man_dffe1_wi = (({26{(~ exp_amb_mux_dffe15_wo)}} & aligned_dataa_man_dffe15_w) | ({26{exp_amb_mux_dffe15_wo}} & wire_rbarrel_shift_result)),\n\t\tdataa_man_dffe1_wo = dataa_man_dffe1,\n\t\tdataa_sign_dffe1_wi = aligned_dataa_sign_dffe15_wo,\n\t\tdataa_sign_dffe1_wo = dataa_sign_dffe1,\n\t\tdataa_sign_dffe25_wi = dataa_sign_dffe1_wo,\n\t\tdataa_sign_dffe25_wo = dataa_sign_dffe25_wi,\n\t\tdatab_dffe11_wi = datab,\n\t\tdatab_dffe11_wo = datab_dffe11_wi,\n\t\tdatab_man_dffe1_wi = (({26{(~ exp_amb_mux_dffe15_wo)}} & wire_rbarrel_shift_result) | ({26{exp_amb_mux_dffe15_wo}} & aligned_datab_man_dffe15_w)),\n\t\tdatab_man_dffe1_wo = datab_man_dffe1,\n\t\tdatab_sign_dffe1_wi = aligned_datab_sign_dffe15_wo,\n\t\tdatab_sign_dffe1_wo = datab_sign_dffe1,\n\t\tdenormal_flag_w = ((((~ force_nan_w) & (~ force_infinity_w)) & (~ force_zero_w)) & denormal_res_dffe4_wo),\n\t\tdenormal_res_dffe32_wi = denormal_result_w,\n\t\tdenormal_res_dffe32_wo = denormal_res_dffe32_wi,\n\t\tdenormal_res_dffe33_wi = denormal_res_dffe32_wo,\n\t\tdenormal_res_dffe33_wo = denormal_res_dffe33_wi,\n\t\tdenormal_res_dffe3_wi = denormal_res_dffe33_wo,\n\t\tdenormal_res_dffe3_wo = denormal_res_dffe3,\n\t\tdenormal_res_dffe41_wi = denormal_res_dffe42_wo,\n\t\tdenormal_res_dffe41_wo = denormal_res_dffe41_wi,\n\t\tdenormal_res_dffe42_wi = denormal_res_dffe3_wo,\n\t\tdenormal_res_dffe42_wo = denormal_res_dffe42_wi,\n\t\tdenormal_res_dffe4_wi = denormal_res_dffe41_wo,\n\t\tdenormal_res_dffe4_wo = denormal_res_dffe4,\n\t\tdenormal_result_w = ((~ exp_res_not_zero_w[8]) | exp_adjustment2_add_sub_w[8]),\n\t\texp_a_all_one_w = {(dataa[30] & exp_a_all_one_w[6]), (dataa[29] & exp_a_all_one_w[5]), (dataa[28] & exp_a_all_one_w[4]), (dataa[27] & exp_a_all_one_w[3]), (dataa[26] & exp_a_all_one_w[2]), (dataa[25] & exp_a_all_one_w[1]), (dataa[24] & exp_a_all_one_w[0]), dataa[23]},\n\t\texp_a_not_zero_w = {(dataa[30] | exp_a_not_zero_w[6]), (dataa[29] | exp_a_not_zero_w[5]), (dataa[28] | exp_a_not_zero_w[4]), (dataa[27] | exp_a_not_zero_w[3]), (dataa[26] | exp_a_not_zero_w[2]), (dataa[25] | exp_a_not_zero_w[1]), (dataa[24] | exp_a_not_zero_w[0]), dataa[23]},\n\t\texp_adj_0pads = {7{1'b0}},\n\t\texp_adj_dffe21_wi = (({2{man_add_sub_res_mag_dffe27_wo[26]}} & exp_adjust_by_add2) | ({2{(~ man_add_sub_res_mag_dffe27_wo[26])}} & exp_adjust_by_add1)),\n\t\texp_adj_dffe21_wo = exp_adj_dffe21,\n\t\texp_adj_dffe23_wi = exp_adj_dffe21_wo,\n\t\texp_adj_dffe23_wo = exp_adj_dffe23_wi,\n\t\texp_adj_dffe26_wi = exp_adj_dffe23_wo,\n\t\texp_adj_dffe26_wo = exp_adj_dffe26_wi,\n\t\texp_adjust_by_add1 = 2'b01,\n\t\texp_adjust_by_add2 = 2'b10,\n\t\texp_adjustment2_add_sub_dataa_w = exp_value,\n\t\texp_adjustment2_add_sub_datab_w = exp_adjustment_add_sub_w,\n\t\texp_adjustment2_add_sub_w = wire_add_sub5_result,\n\t\texp_adjustment_add_sub_dataa_w = {priority_encoder_1pads_w, wire_leading_zeroes_cnt_q},\n\t\texp_adjustment_add_sub_datab_w = {exp_adj_0pads, exp_adj_dffe26_wo},\n\t\texp_adjustment_add_sub_w = wire_add_sub4_result,\n\t\texp_all_ones_w = {8{1'b1}},\n\t\texp_all_zeros_w = {8{1'b0}},\n\t\texp_amb_mux_dffe13_wi = exp_amb_mux_w,\n\t\texp_amb_mux_dffe13_wo = exp_amb_mux_dffe13_wi,\n\t\texp_amb_mux_dffe14_wi = exp_amb_mux_dffe13_wo,\n\t\texp_amb_mux_dffe14_wo = exp_amb_mux_dffe14_wi,\n\t\texp_amb_mux_dffe15_wi = exp_amb_mux_dffe14_wo,\n\t\texp_amb_mux_dffe15_wo = exp_amb_mux_dffe15_wi,\n\t\texp_amb_mux_w = exp_amb_w[8],\n\t\texp_amb_w = wire_add_sub1_result,\n\t\texp_b_all_one_w = {(datab[30] & exp_b_all_one_w[6]), (datab[29] & exp_b_all_one_w[5]), (datab[28] & exp_b_all_one_w[4]), (datab[27] & exp_b_all_one_w[3]), (datab[26] & exp_b_all_one_w[2]), (datab[25] & exp_b_all_one_w[1]), (datab[24] & exp_b_all_one_w[0]), datab[23]},\n\t\texp_b_not_zero_w = {(datab[30] | exp_b_not_zero_w[6]), (datab[29] | exp_b_not_zero_w[5]), (datab[28] | exp_b_not_zero_w[4]), (datab[27] | exp_b_not_zero_w[3]), (datab[26] | exp_b_not_zero_w[2]), (datab[25] | exp_b_not_zero_w[1]), (datab[24] | exp_b_not_zero_w[0]), datab[23]},\n\t\texp_bma_w = wire_add_sub2_result,\n\t\texp_diff_abs_exceed_max_w = {(exp_diff_abs_exceed_max_w[1] | exp_diff_abs_w[7]), (exp_diff_abs_exceed_max_w[0] | exp_diff_abs_w[6]), exp_diff_abs_w[5]},\n\t\texp_diff_abs_max_w = {5{1'b1}},\n\t\texp_diff_abs_w = (({8{(~ exp_amb_mux_w)}} & exp_amb_w[7:0]) | ({8{exp_amb_mux_w}} & exp_bma_w[7:0])),\n\t\texp_intermediate_res_dffe41_wi = exp_intermediate_res_dffe42_wo,\n\t\texp_intermediate_res_dffe41_wo = exp_intermediate_res_dffe41_wi,\n\t\texp_intermediate_res_dffe42_wi = exp_intermediate_res_w,\n\t\texp_intermediate_res_dffe42_wo = exp_intermediate_res_dffe42_wi,\n\t\texp_intermediate_res_w = exp_res_dffe3_wo,\n\t\texp_out_dffe5_wi = (({8{force_nan_w}} & exp_all_ones_w) | ({8{(~ force_nan_w)}} & (({8{force_infinity_w}} & exp_all_ones_w) | ({8{(~ force_infinity_w)}} & (({8{(force_zero_w | denormal_flag_w)}} & exp_all_zeros_w) | ({8{(~ (force_zero_w | denormal_flag_w))}} & exp_res_dffe4_wo)))))),\n\t\texp_out_dffe5_wo = exp_out_dffe5,\n\t\texp_res_dffe21_wi = exp_res_dffe27_wo,\n\t\texp_res_dffe21_wo = exp_res_dffe21,\n\t\texp_res_dffe22_wi = exp_res_dffe2_wo,\n\t\texp_res_dffe22_wo = exp_res_dffe22_wi,\n\t\texp_res_dffe23_wi = exp_res_dffe21_wo,\n\t\texp_res_dffe23_wo = exp_res_dffe23_wi,\n\t\texp_res_dffe25_wi = data_exp_dffe1_wo,\n\t\texp_res_dffe25_wo = exp_res_dffe25_wi,\n\t\texp_res_dffe26_wi = exp_res_dffe23_wo,\n\t\texp_res_dffe26_wo = exp_res_dffe26_wi,\n\t\texp_res_dffe27_wi = exp_res_dffe22_wo,\n\t\texp_res_dffe27_wo = exp_res_dffe27_wi,\n\t\texp_res_dffe2_wi = exp_res_dffe25_wo,\n\t\texp_res_dffe2_wo = exp_res_dffe2,\n\t\texp_res_dffe32_wi = ({8{(~ denormal_result_w)}} & exp_adjustment2_add_sub_w[7:0]),\n\t\texp_res_dffe32_wo = exp_res_dffe32_wi,\n\t\texp_res_dffe33_wi = exp_res_dffe32_wo,\n\t\texp_res_dffe33_wo = exp_res_dffe33_wi,\n\t\texp_res_dffe3_wi = exp_res_dffe33_wo,\n\t\texp_res_dffe3_wo = exp_res_dffe3,\n\t\texp_res_dffe4_wi = exp_rounded_res_w,\n\t\texp_res_dffe4_wo = exp_res_dffe4,\n\t\texp_res_max_w = {(exp_res_max_w[6] & exp_adjustment2_add_sub_w[7]), (exp_res_max_w[5] & exp_adjustment2_add_sub_w[6]), (exp_res_max_w[4] & exp_adjustment2_add_sub_w[5]), (exp_res_max_w[3] & exp_adjustment2_add_sub_w[4]), (exp_res_max_w[2] & exp_adjustment2_add_sub_w[3]), (exp_res_max_w[1] & exp_adjustment2_add_sub_w[2]), (exp_res_max_w[0] & exp_adjustment2_add_sub_w[1]), exp_adjustment2_add_sub_w[0]},\n\t\texp_res_not_zero_w = {(exp_res_not_zero_w[7] | exp_adjustment2_add_sub_w[8]), (exp_res_not_zero_w[6] | exp_adjustment2_add_sub_w[7]), (exp_res_not_zero_w[5] | exp_adjustment2_add_sub_w[6]), (exp_res_not_zero_w[4] | exp_adjustment2_add_sub_w[5]), (exp_res_not_zero_w[3] | exp_adjustment2_add_sub_w[4]), (exp_res_not_zero_w[2] | exp_adjustment2_add_sub_w[3]), (exp_res_not_zero_w[1] | exp_adjustment2_add_sub_w[2]), (exp_res_not_zero_w[0] | exp_adjustment2_add_sub_w[1]), exp_adjustment2_add_sub_w[0]},\n\t\texp_res_rounding_adder_dataa_w = {1'b0, exp_intermediate_res_dffe41_wo},\n\t\texp_res_rounding_adder_w = wire_add_sub6_result,\n\t\texp_rounded_res_infinity_w = exp_rounded_res_max_w[7],\n\t\texp_rounded_res_max_w = {(exp_rounded_res_max_w[6] & exp_rounded_res_w[7]), (exp_rounded_res_max_w[5] & exp_rounded_res_w[6]), (exp_rounded_res_max_w[4] & exp_rounded_res_w[5]), (exp_rounded_res_max_w[3] & exp_rounded_res_w[4]), (exp_rounded_res_max_w[2] & exp_rounded_res_w[3]), (exp_rounded_res_max_w[1] & exp_rounded_res_w[2]), (exp_rounded_res_max_w[0] & exp_rounded_res_w[1]), exp_rounded_res_w[0]},\n\t\texp_rounded_res_w = exp_res_rounding_adder_w[7:0],\n\t\texp_rounding_adjustment_w = {{8{1'b0}}, man_res_rounding_add_sub_w[24]},\n\t\texp_value = {1'b0, exp_res_dffe26_wo},\n\t\tforce_infinity_w = ((input_is_infinite_dffe4_wo | rounded_res_infinity_dffe4_wo) | infinite_res_dffe4_wo),\n\t\tforce_nan_w = (infinity_magnitude_sub_dffe4_wo | input_is_nan_dffe4_wo),\n\t\tforce_zero_w = (~ man_res_is_not_zero_dffe4_wo),\n\t\tguard_bit_dffe3_wo = man_res_w3[0],\n\t\tinfinite_output_sign_dffe1_wi = (((~ input_datab_infinite_dffe15_wo) & aligned_dataa_sign_dffe15_wo) | (input_datab_infinite_dffe15_wo & (~ (aligned_datab_sign_dffe15_wo ^ add_sub_dffe15_wo)))),\n\t\tinfinite_output_sign_dffe1_wo = infinite_output_sign_dffe1,\n\t\tinfinite_output_sign_dffe21_wi = infinite_output_sign_dffe27_wo,\n\t\tinfinite_output_sign_dffe21_wo = infinite_output_sign_dffe21,\n\t\tinfinite_output_sign_dffe22_wi = infinite_output_sign_dffe2_wo,\n\t\tinfinite_output_sign_dffe22_wo = infinite_output_sign_dffe22_wi,\n\t\tinfinite_output_sign_dffe23_wi = infinite_output_sign_dffe21_wo,\n\t\tinfinite_output_sign_dffe23_wo = infinite_output_sign_dffe23_wi,\n\t\tinfinite_output_sign_dffe25_wi = infinite_output_sign_dffe1_wo,\n\t\tinfinite_output_sign_dffe25_wo = infinite_output_sign_dffe25_wi,\n\t\tinfinite_output_sign_dffe26_wi = infinite_output_sign_dffe23_wo,\n\t\tinfinite_output_sign_dffe26_wo = infinite_output_sign_dffe26_wi,\n\t\tinfinite_output_sign_dffe27_wi = infinite_output_sign_dffe22_wo,\n\t\tinfinite_output_sign_dffe27_wo = infinite_output_sign_dffe27_wi,\n\t\tinfinite_output_sign_dffe2_wi = infinite_output_sign_dffe25_wo,\n\t\tinfinite_output_sign_dffe2_wo = infinite_output_sign_dffe2,\n\t\tinfinite_output_sign_dffe31_wi = infinite_output_sign_dffe26_wo,\n\t\tinfinite_output_sign_dffe31_wo = infinite_output_sign_dffe31,\n\t\tinfinite_output_sign_dffe32_wi = infinite_output_sign_dffe31_wo,\n\t\tinfinite_output_sign_dffe32_wo = infinite_output_sign_dffe32_wi,\n\t\tinfinite_output_sign_dffe33_wi = infinite_output_sign_dffe32_wo,\n\t\tinfinite_output_sign_dffe33_wo = infinite_output_sign_dffe33_wi,\n\t\tinfinite_output_sign_dffe3_wi = infinite_output_sign_dffe33_wo,\n\t\tinfinite_output_sign_dffe3_wo = infinite_output_sign_dffe3,\n\t\tinfinite_output_sign_dffe41_wi = infinite_output_sign_dffe42_wo,\n\t\tinfinite_output_sign_dffe41_wo = infinite_output_sign_dffe41_wi,\n\t\tinfinite_output_sign_dffe42_wi = infinite_output_sign_dffe3_wo,\n\t\tinfinite_output_sign_dffe42_wo = infinite_output_sign_dffe42_wi,\n\t\tinfinite_output_sign_dffe4_wi = infinite_output_sign_dffe41_wo,\n\t\tinfinite_output_sign_dffe4_wo = infinite_output_sign_dffe4,\n\t\tinfinite_res_dff32_wi = (exp_res_max_w[7] & (~ exp_adjustment2_add_sub_w[8])),\n\t\tinfinite_res_dff32_wo = infinite_res_dff32_wi,\n\t\tinfinite_res_dff33_wi = infinite_res_dff32_wo,\n\t\tinfinite_res_dff33_wo = infinite_res_dff33_wi,\n\t\tinfinite_res_dffe3_wi = infinite_res_dff33_wo,\n\t\tinfinite_res_dffe3_wo = infinite_res_dffe3,\n\t\tinfinite_res_dffe41_wi = infinite_res_dffe42_wo,\n\t\tinfinite_res_dffe41_wo = infinite_res_dffe41_wi,\n\t\tinfinite_res_dffe42_wi = infinite_res_dffe3_wo,\n\t\tinfinite_res_dffe42_wo = infinite_res_dffe42_wi,\n\t\tinfinite_res_dffe4_wi = infinite_res_dffe41_wo,\n\t\tinfinite_res_dffe4_wo = infinite_res_dffe4,\n\t\tinfinity_magnitude_sub_dffe21_wi = infinity_magnitude_sub_dffe27_wo,\n\t\tinfinity_magnitude_sub_dffe21_wo = infinity_magnitude_sub_dffe21,\n\t\tinfinity_magnitude_sub_dffe22_wi = infinity_magnitude_sub_dffe2_wo,\n\t\tinfinity_magnitude_sub_dffe22_wo = infinity_magnitude_sub_dffe22_wi,\n\t\tinfinity_magnitude_sub_dffe23_wi = infinity_magnitude_sub_dffe21_wo,\n\t\tinfinity_magnitude_sub_dffe23_wo = infinity_magnitude_sub_dffe23_wi,\n\t\tinfinity_magnitude_sub_dffe26_wi = infinity_magnitude_sub_dffe23_wo,\n\t\tinfinity_magnitude_sub_dffe26_wo = infinity_magnitude_sub_dffe26_wi,\n\t\tinfinity_magnitude_sub_dffe27_wi = infinity_magnitude_sub_dffe22_wo,\n\t\tinfinity_magnitude_sub_dffe27_wo = infinity_magnitude_sub_dffe27_wi,\n\t\tinfinity_magnitude_sub_dffe2_wi = ((~ add_sub_dffe25_wo) & both_inputs_are_infinite_dffe25_wo),\n\t\tinfinity_magnitude_sub_dffe2_wo = infinity_magnitude_sub_dffe2,\n\t\tinfinity_magnitude_sub_dffe31_wi = infinity_magnitude_sub_dffe26_wo,\n\t\tinfinity_magnitude_sub_dffe31_wo = infinity_magnitude_sub_dffe31,\n\t\tinfinity_magnitude_sub_dffe32_wi = infinity_magnitude_sub_dffe31_wo,\n\t\tinfinity_magnitude_sub_dffe32_wo = infinity_magnitude_sub_dffe32_wi,\n\t\tinfinity_magnitude_sub_dffe33_wi = infinity_magnitude_sub_dffe32_wo,\n\t\tinfinity_magnitude_sub_dffe33_wo = infinity_magnitude_sub_dffe33_wi,\n\t\tinfinity_magnitude_sub_dffe3_wi = infinity_magnitude_sub_dffe33_wo,\n\t\tinfinity_magnitude_sub_dffe3_wo = infinity_magnitude_sub_dffe3,\n\t\tinfinity_magnitude_sub_dffe41_wi = infinity_magnitude_sub_dffe42_wo,\n\t\tinfinity_magnitude_sub_dffe41_wo = infinity_magnitude_sub_dffe41_wi,\n\t\tinfinity_magnitude_sub_dffe42_wi = infinity_magnitude_sub_dffe3_wo,\n\t\tinfinity_magnitude_sub_dffe42_wo = infinity_magnitude_sub_dffe42_wi,\n\t\tinfinity_magnitude_sub_dffe4_wi = infinity_magnitude_sub_dffe41_wo,\n\t\tinfinity_magnitude_sub_dffe4_wo = infinity_magnitude_sub_dffe4,\n\t\tinput_dataa_denormal_dffe11_wi = input_dataa_denormal_w,\n\t\tinput_dataa_denormal_dffe11_wo = input_dataa_denormal_dffe11_wi,\n\t\tinput_dataa_denormal_w = ((~ exp_a_not_zero_w[7]) & man_a_not_zero_w[22]),\n\t\tinput_dataa_infinite_dffe11_wi = input_dataa_infinite_w,\n\t\tinput_dataa_infinite_dffe11_wo = input_dataa_infinite_dffe11_wi,\n\t\tinput_dataa_infinite_dffe12_wi = input_dataa_infinite_dffe11_wo,\n\t\tinput_dataa_infinite_dffe12_wo = input_dataa_infinite_dffe12,\n\t\tinput_dataa_infinite_dffe13_wi = input_dataa_infinite_dffe12_wo,\n\t\tinput_dataa_infinite_dffe13_wo = input_dataa_infinite_dffe13_wi,\n\t\tinput_dataa_infinite_dffe14_wi = input_dataa_infinite_dffe13_wo,\n\t\tinput_dataa_infinite_dffe14_wo = input_dataa_infinite_dffe14_wi,\n\t\tinput_dataa_infinite_dffe15_wi = input_dataa_infinite_dffe14_wo,\n\t\tinput_dataa_infinite_dffe15_wo = input_dataa_infinite_dffe15_wi,\n\t\tinput_dataa_infinite_w = (exp_a_all_one_w[7] & (~ man_a_not_zero_w[22])),\n\t\tinput_dataa_nan_dffe11_wi = input_dataa_nan_w,\n\t\tinput_dataa_nan_dffe11_wo = input_dataa_nan_dffe11_wi,\n\t\tinput_dataa_nan_dffe12_wi = input_dataa_nan_dffe11_wo,\n\t\tinput_dataa_nan_dffe12_wo = input_dataa_nan_dffe12,\n\t\tinput_dataa_nan_w = (exp_a_all_one_w[7] & man_a_not_zero_w[22]),\n\t\tinput_dataa_zero_dffe11_wi = input_dataa_zero_w,\n\t\tinput_dataa_zero_dffe11_wo = input_dataa_zero_dffe11_wi,\n\t\tinput_dataa_zero_w = ((~ exp_a_not_zero_w[7]) & (~ man_a_not_zero_w[22])),\n\t\tinput_datab_denormal_dffe11_wi = input_datab_denormal_w,\n\t\tinput_datab_denormal_dffe11_wo = input_datab_denormal_dffe11_wi,\n\t\tinput_datab_denormal_w = ((~ exp_b_not_zero_w[7]) & man_b_not_zero_w[22]),\n\t\tinput_datab_infinite_dffe11_wi = input_datab_infinite_w,\n\t\tinput_datab_infinite_dffe11_wo = input_datab_infinite_dffe11_wi,\n\t\tinput_datab_infinite_dffe12_wi = input_datab_infinite_dffe11_wo,\n\t\tinput_datab_infinite_dffe12_wo = input_datab_infinite_dffe12,\n\t\tinput_datab_infinite_dffe13_wi = input_datab_infinite_dffe12_wo,\n\t\tinput_datab_infinite_dffe13_wo = input_datab_infinite_dffe13_wi,\n\t\tinput_datab_infinite_dffe14_wi = input_datab_infinite_dffe13_wo,\n\t\tinput_datab_infinite_dffe14_wo = input_datab_infinite_dffe14_wi,\n\t\tinput_datab_infinite_dffe15_wi = input_datab_infinite_dffe14_wo,\n\t\tinput_datab_infinite_dffe15_wo = input_datab_infinite_dffe15_wi,\n\t\tinput_datab_infinite_w = (exp_b_all_one_w[7] & (~ man_b_not_zero_w[22])),\n\t\tinput_datab_nan_dffe11_wi = input_datab_nan_w,\n\t\tinput_datab_nan_dffe11_wo = input_datab_nan_dffe11_wi,\n\t\tinput_datab_nan_dffe12_wi = input_datab_nan_dffe11_wo,\n\t\tinput_datab_nan_dffe12_wo = input_datab_nan_dffe12,\n\t\tinput_datab_nan_w = (exp_b_all_one_w[7] & man_b_not_zero_w[22]),\n\t\tinput_datab_zero_dffe11_wi = input_datab_zero_w,\n\t\tinput_datab_zero_dffe11_wo = input_datab_zero_dffe11_wi,\n\t\tinput_datab_zero_w = ((~ exp_b_not_zero_w[7]) & (~ man_b_not_zero_w[22])),\n\t\tinput_is_infinite_dffe1_wi = (input_dataa_infinite_dffe15_wo | input_datab_infinite_dffe15_wo),\n\t\tinput_is_infinite_dffe1_wo = input_is_infinite_dffe1,\n\t\tinput_is_infinite_dffe21_wi = input_is_infinite_dffe27_wo,\n\t\tinput_is_infinite_dffe21_wo = input_is_infinite_dffe21,\n\t\tinput_is_infinite_dffe22_wi = input_is_infinite_dffe2_wo,\n\t\tinput_is_infinite_dffe22_wo = input_is_infinite_dffe22_wi,\n\t\tinput_is_infinite_dffe23_wi = input_is_infinite_dffe21_wo,\n\t\tinput_is_infinite_dffe23_wo = input_is_infinite_dffe23_wi,\n\t\tinput_is_infinite_dffe25_wi = input_is_infinite_dffe1_wo,\n\t\tinput_is_infinite_dffe25_wo = input_is_infinite_dffe25_wi,\n\t\tinput_is_infinite_dffe26_wi = input_is_infinite_dffe23_wo,\n\t\tinput_is_infinite_dffe26_wo = input_is_infinite_dffe26_wi,\n\t\tinput_is_infinite_dffe27_wi = input_is_infinite_dffe22_wo,\n\t\tinput_is_infinite_dffe27_wo = input_is_infinite_dffe27_wi,\n\t\tinput_is_infinite_dffe2_wi = input_is_infinite_dffe25_wo,\n\t\tinput_is_infinite_dffe2_wo = input_is_infinite_dffe2,\n\t\tinput_is_infinite_dffe31_wi = input_is_infinite_dffe26_wo,\n\t\tinput_is_infinite_dffe31_wo = input_is_infinite_dffe31,\n\t\tinput_is_infinite_dffe32_wi = input_is_infinite_dffe31_wo,\n\t\tinput_is_infinite_dffe32_wo = input_is_infinite_dffe32_wi,\n\t\tinput_is_infinite_dffe33_wi = input_is_infinite_dffe32_wo,\n\t\tinput_is_infinite_dffe33_wo = input_is_infinite_dffe33_wi,\n\t\tinput_is_infinite_dffe3_wi = input_is_infinite_dffe33_wo,\n\t\tinput_is_infinite_dffe3_wo = input_is_infinite_dffe3,\n\t\tinput_is_infinite_dffe41_wi = input_is_infinite_dffe42_wo,\n\t\tinput_is_infinite_dffe41_wo = input_is_infinite_dffe41_wi,\n\t\tinput_is_infinite_dffe42_wi = input_is_infinite_dffe3_wo,\n\t\tinput_is_infinite_dffe42_wo = input_is_infinite_dffe42_wi,\n\t\tinput_is_infinite_dffe4_wi = input_is_infinite_dffe41_wo,\n\t\tinput_is_infinite_dffe4_wo = input_is_infinite_dffe4,\n\t\tinput_is_nan_dffe13_wi = (input_dataa_nan_dffe12_wo | input_datab_nan_dffe12_wo),\n\t\tinput_is_nan_dffe13_wo = input_is_nan_dffe13_wi,\n\t\tinput_is_nan_dffe14_wi = input_is_nan_dffe13_wo,\n\t\tinput_is_nan_dffe14_wo = input_is_nan_dffe14_wi,\n\t\tinput_is_nan_dffe15_wi = input_is_nan_dffe14_wo,\n\t\tinput_is_nan_dffe15_wo = input_is_nan_dffe15_wi,\n\t\tinput_is_nan_dffe1_wi = input_is_nan_dffe15_wo,\n\t\tinput_is_nan_dffe1_wo = input_is_nan_dffe1,\n\t\tinput_is_nan_dffe21_wi = input_is_nan_dffe27_wo,\n\t\tinput_is_nan_dffe21_wo = input_is_nan_dffe21,\n\t\tinput_is_nan_dffe22_wi = input_is_nan_dffe2_wo,\n\t\tinput_is_nan_dffe22_wo = input_is_nan_dffe22_wi,\n\t\tinput_is_nan_dffe23_wi = input_is_nan_dffe21_wo,\n\t\tinput_is_nan_dffe23_wo = input_is_nan_dffe23_wi,\n\t\tinput_is_nan_dffe25_wi = input_is_nan_dffe1_wo,\n\t\tinput_is_nan_dffe25_wo = input_is_nan_dffe25_wi,\n\t\tinput_is_nan_dffe26_wi = input_is_nan_dffe23_wo,\n\t\tinput_is_nan_dffe26_wo = input_is_nan_dffe26_wi,\n\t\tinput_is_nan_dffe27_wi = input_is_nan_dffe22_wo,\n\t\tinput_is_nan_dffe27_wo = input_is_nan_dffe27_wi,\n\t\tinput_is_nan_dffe2_wi = input_is_nan_dffe25_wo,\n\t\tinput_is_nan_dffe2_wo = input_is_nan_dffe2,\n\t\tinput_is_nan_dffe31_wi = input_is_nan_dffe26_wo,\n\t\tinput_is_nan_dffe31_wo = input_is_nan_dffe31,\n\t\tinput_is_nan_dffe32_wi = input_is_nan_dffe31_wo,\n\t\tinput_is_nan_dffe32_wo = input_is_nan_dffe32_wi,\n\t\tinput_is_nan_dffe33_wi = input_is_nan_dffe32_wo,\n\t\tinput_is_nan_dffe33_wo = input_is_nan_dffe33_wi,\n\t\tinput_is_nan_dffe3_wi = input_is_nan_dffe33_wo,\n\t\tinput_is_nan_dffe3_wo = input_is_nan_dffe3,\n\t\tinput_is_nan_dffe41_wi = input_is_nan_dffe42_wo,\n\t\tinput_is_nan_dffe41_wo = input_is_nan_dffe41_wi,\n\t\tinput_is_nan_dffe42_wi = input_is_nan_dffe3_wo,\n\t\tinput_is_nan_dffe42_wo = input_is_nan_dffe42_wi,\n\t\tinput_is_nan_dffe4_wi = input_is_nan_dffe41_wo,\n\t\tinput_is_nan_dffe4_wo = input_is_nan_dffe4,\n\t\tman_2comp_res_dataa_w = {pos_sign_bit_ext, datab_man_dffe1_wo},\n\t\tman_2comp_res_datab_w = {pos_sign_bit_ext, dataa_man_dffe1_wo},\n\t\tman_2comp_res_w = {(({14{(~ wire_man_2comp_res_lower_cout)}} & wire_man_2comp_res_upper0_result) | ({14{wire_man_2comp_res_lower_cout}} & wire_man_2comp_res_upper1_result)), wire_man_2comp_res_lower_result},\n\t\tman_a_not_zero_w = {(dataa[22] | man_a_not_zero_w[21]), (dataa[21] | man_a_not_zero_w[20]), (dataa[20] | man_a_not_zero_w[19]), (dataa[19] | man_a_not_zero_w[18]), (dataa[18] | man_a_not_zero_w[17]), (dataa[17] | man_a_not_zero_w[16]), (dataa[16] | man_a_not_zero_w[15]), (dataa[15] | man_a_not_zero_w[14]), (dataa[14] | man_a_not_zero_w[13]), (dataa[13] | man_a_not_zero_w[12]), (dataa[12] | man_a_not_zero_w[11]), (dataa[11] | man_a_not_zero_w[10]), (dataa[10] | man_a_not_zero_w[9]), (dataa[9] | man_a_not_zero_w[8]), (dataa[8] | man_a_not_zero_w[7]), (dataa[7] | man_a_not_zero_w[6]), (dataa[6] | man_a_not_zero_w[5]), (dataa[5] | man_a_not_zero_w[4]), (dataa[4] | man_a_not_zero_w[3]), (dataa[3] | man_a_not_zero_w[2]), (dataa[2] | man_a_not_zero_w[1]), (dataa[1] | man_a_not_zero_w[0]), dataa[0]},\n\t\tman_add_sub_dataa_w = {pos_sign_bit_ext, dataa_man_dffe1_wo},\n\t\tman_add_sub_datab_w = {pos_sign_bit_ext, datab_man_dffe1_wo},\n\t\tman_add_sub_res_mag_dffe21_wi = man_res_mag_w2,\n\t\tman_add_sub_res_mag_dffe21_wo = man_add_sub_res_mag_dffe21,\n\t\tman_add_sub_res_mag_dffe23_wi = man_add_sub_res_mag_dffe21_wo,\n\t\tman_add_sub_res_mag_dffe23_wo = man_add_sub_res_mag_dffe23_wi,\n\t\tman_add_sub_res_mag_dffe26_wi = man_add_sub_res_mag_dffe23_wo,\n\t\tman_add_sub_res_mag_dffe26_wo = man_add_sub_res_mag_dffe26_wi,\n\t\tman_add_sub_res_mag_dffe27_wi = man_add_sub_res_mag_w2,\n\t\tman_add_sub_res_mag_dffe27_wo = man_add_sub_res_mag_dffe27_wi,\n\t\tman_add_sub_res_mag_w2 = (({28{man_add_sub_w[27]}} & man_2comp_res_w) | ({28{(~ man_add_sub_w[27])}} & man_add_sub_w)),\n\t\tman_add_sub_res_sign_dffe21_wo = man_add_sub_res_sign_dffe21,\n\t\tman_add_sub_res_sign_dffe23_wi = man_add_sub_res_sign_dffe21_wo,\n\t\tman_add_sub_res_sign_dffe23_wo = man_add_sub_res_sign_dffe23_wi,\n\t\tman_add_sub_res_sign_dffe26_wi = man_add_sub_res_sign_dffe23_wo,\n\t\tman_add_sub_res_sign_dffe26_wo = man_add_sub_res_sign_dffe26_wi,\n\t\tman_add_sub_res_sign_dffe27_wi = man_add_sub_res_sign_w2,\n\t\tman_add_sub_res_sign_dffe27_wo = man_add_sub_res_sign_dffe27_wi,\n\t\tman_add_sub_res_sign_w2 = ((need_complement_dffe22_wo & (~ man_add_sub_w[27])) | ((~ need_complement_dffe22_wo) & man_add_sub_w[27])),\n\t\tman_add_sub_w = {(({14{(~ wire_man_add_sub_lower_cout)}} & wire_man_add_sub_upper0_result) | ({14{wire_man_add_sub_lower_cout}} & wire_man_add_sub_upper1_result)), wire_man_add_sub_lower_result},\n\t\tman_all_zeros_w = {23{1'b0}},\n\t\tman_b_not_zero_w = {(datab[22] | man_b_not_zero_w[21]), (datab[21] | man_b_not_zero_w[20]), (datab[20] | man_b_not_zero_w[19]), (datab[19] | man_b_not_zero_w[18]), (datab[18] | man_b_not_zero_w[17]), (datab[17] | man_b_not_zero_w[16]), (datab[16] | man_b_not_zero_w[15]), (datab[15] | man_b_not_zero_w[14]), (datab[14] | man_b_not_zero_w[13]), (datab[13] | man_b_not_zero_w[12]), (datab[12] | man_b_not_zero_w[11]), (datab[11] | man_b_not_zero_w[10]), (datab[10] | man_b_not_zero_w[9]), (datab[9] | man_b_not_zero_w[8]), (datab[8] | man_b_not_zero_w[7]), (datab[7] | man_b_not_zero_w[6]), (datab[6] | man_b_not_zero_w[5]), (datab[5] | man_b_not_zero_w[4]), (datab[4] | man_b_not_zero_w[3]), (datab[3] | man_b_not_zero_w[2]), (datab[2] | man_b_not_zero_w[1]), (datab[1] | man_b_not_zero_w[0]), datab[0]},\n\t\tman_dffe31_wo = man_dffe31,\n\t\tman_intermediate_res_w = {{2{1'b0}}, man_res_w3},\n\t\tman_leading_zeros_cnt_w = man_leading_zeros_dffe31_wo,\n\t\tman_leading_zeros_dffe31_wi = (~ wire_leading_zeroes_cnt_q),\n\t\tman_leading_zeros_dffe31_wo = man_leading_zeros_dffe31,\n\t\tman_nan_w = 23'b10000000000000000000000,\n\t\tman_out_dffe5_wi = (({23{force_nan_w}} & man_nan_w) | ({23{(~ force_nan_w)}} & (({23{force_infinity_w}} & man_all_zeros_w) | ({23{(~ force_infinity_w)}} & (({23{(force_zero_w | denormal_flag_w)}} & man_all_zeros_w) | ({23{(~ (force_zero_w | denormal_flag_w))}} & man_res_dffe4_wo)))))),\n\t\tman_out_dffe5_wo = man_out_dffe5,\n\t\tman_res_dffe4_wi = man_rounded_res_w,\n\t\tman_res_dffe4_wo = man_res_dffe4,\n\t\tman_res_is_not_zero_dffe31_wi = man_res_not_zero_dffe26_wo,\n\t\tman_res_is_not_zero_dffe31_wo = man_res_is_not_zero_dffe31,\n\t\tman_res_is_not_zero_dffe32_wi = man_res_is_not_zero_dffe31_wo,\n\t\tman_res_is_not_zero_dffe32_wo = man_res_is_not_zero_dffe32_wi,\n\t\tman_res_is_not_zero_dffe33_wi = man_res_is_not_zero_dffe32_wo,\n\t\tman_res_is_not_zero_dffe33_wo = man_res_is_not_zero_dffe33_wi,\n\t\tman_res_is_not_zero_dffe3_wi = man_res_is_not_zero_dffe33_wo,\n\t\tman_res_is_not_zero_dffe3_wo = man_res_is_not_zero_dffe3,\n\t\tman_res_is_not_zero_dffe41_wi = man_res_is_not_zero_dffe42_wo,\n\t\tman_res_is_not_zero_dffe41_wo = man_res_is_not_zero_dffe41_wi,\n\t\tman_res_is_not_zero_dffe42_wi = man_res_is_not_zero_dffe3_wo,\n\t\tman_res_is_not_zero_dffe42_wo = man_res_is_not_zero_dffe42_wi,\n\t\tman_res_is_not_zero_dffe4_wi = man_res_is_not_zero_dffe41_wo,\n\t\tman_res_is_not_zero_dffe4_wo = man_res_is_not_zero_dffe4,\n\t\tman_res_mag_w2 = (({26{man_add_sub_res_mag_dffe27_wo[26]}} & man_add_sub_res_mag_dffe27_wo[26:1]) | ({26{(~ man_add_sub_res_mag_dffe27_wo[26])}} & man_add_sub_res_mag_dffe27_wo[25:0])),\n\t\tman_res_not_zero_dffe23_wi = man_res_not_zero_w2[24],\n\t\tman_res_not_zero_dffe23_wo = man_res_not_zero_dffe23_wi,\n\t\tman_res_not_zero_dffe26_wi = man_res_not_zero_dffe23_wo,\n\t\tman_res_not_zero_dffe26_wo = man_res_not_zero_dffe26_wi,\n\t\tman_res_not_zero_w2 = {(man_res_not_zero_w2[23] | man_add_sub_res_mag_dffe21_wo[25]), (man_res_not_zero_w2[22] | man_add_sub_res_mag_dffe21_wo[24]), (man_res_not_zero_w2[21] | man_add_sub_res_mag_dffe21_wo[23]), (man_res_not_zero_w2[20] | man_add_sub_res_mag_dffe21_wo[22]), (man_res_not_zero_w2[19] | man_add_sub_res_mag_dffe21_wo[21]), (man_res_not_zero_w2[18] | man_add_sub_res_mag_dffe21_wo[20]), (man_res_not_zero_w2[17] | man_add_sub_res_mag_dffe21_wo[19]), (man_res_not_zero_w2[16] | man_add_sub_res_mag_dffe21_wo[18]), (man_res_not_zero_w2[15] | man_add_sub_res_mag_dffe21_wo[17]), (man_res_not_zero_w2[14] | man_add_sub_res_mag_dffe21_wo[16]), (man_res_not_zero_w2[13] | man_add_sub_res_mag_dffe21_wo[15]), (man_res_not_zero_w2[12] | man_add_sub_res_mag_dffe21_wo[14]), (man_res_not_zero_w2[11] | man_add_sub_res_mag_dffe21_wo[13]), (man_res_not_zero_w2[10] | man_add_sub_res_mag_dffe21_wo[12]), (man_res_not_zero_w2[9] | man_add_sub_res_mag_dffe21_wo[11]), (man_res_not_zero_w2[8] | man_add_sub_res_mag_dffe21_wo[10]), (man_res_not_zero_w2[7] | man_add_sub_res_mag_dffe21_wo[9]), (man_res_not_zero_w2[6] | man_add_sub_res_mag_dffe21_wo[8]), (man_res_not_zero_w2[5] | man_add_sub_res_mag_dffe21_wo[7]), (man_res_not_zero_w2[4] | man_add_sub_res_mag_dffe21_wo[6]), (man_res_not_zero_w2[3] | man_add_sub_res_mag_dffe21_wo[5]), (man_res_not_zero_w2[2] | man_add_sub_res_mag_dffe21_wo[4]), (man_res_not_zero_w2[1] | man_add_sub_res_mag_dffe21_wo[3]), (man_res_not_zero_w2[0] | man_add_sub_res_mag_dffe21_wo[2]), man_add_sub_res_mag_dffe21_wo[1]},\n\t\tman_res_rounding_add_sub_datab_w = {{25{1'b0}}, man_rounding_add_value_w},\n\t\tman_res_rounding_add_sub_w = {(({13{(~ wire_man_res_rounding_add_sub_lower_cout)}} & adder_upper_w) | ({13{wire_man_res_rounding_add_sub_lower_cout}} & wire_man_res_rounding_add_sub_upper1_result)), wire_man_res_rounding_add_sub_lower_result},\n\t\tman_res_w3 = wire_lbarrel_shift_result[25:2],\n\t\tman_rounded_res_w = (({23{man_res_rounding_add_sub_w[24]}} & man_res_rounding_add_sub_w[23:1]) | ({23{(~ man_res_rounding_add_sub_w[24])}} & man_res_rounding_add_sub_w[22:0])),\n\t\tman_rounding_add_value_w = (round_bit_dffe3_wo & (sticky_bit_dffe3_wo | guard_bit_dffe3_wo)),\n\t\tman_smaller_dffe13_wi = man_smaller_w,\n\t\tman_smaller_dffe13_wo = man_smaller_dffe13_wi,\n\t\tman_smaller_w = (({24{exp_amb_mux_w}} & aligned_dataa_man_dffe12_wo) | ({24{(~ exp_amb_mux_w)}} & aligned_datab_man_dffe12_wo)),\n\t\tneed_complement_dffe22_wi = need_complement_dffe2_wo,\n\t\tneed_complement_dffe22_wo = need_complement_dffe22_wi,\n\t\tneed_complement_dffe2_wi = dataa_sign_dffe25_wo,\n\t\tneed_complement_dffe2_wo = need_complement_dffe2,\n\t\tpos_sign_bit_ext = {2{1'b0}},\n\t\tpriority_encoder_1pads_w = {4{1'b1}},\n\t\tresult = {sign_out_dffe5_wo, exp_out_dffe5_wo, man_out_dffe5_wo},\n\t\tround_bit_dffe21_wi = round_bit_w,\n\t\tround_bit_dffe21_wo = round_bit_dffe21,\n\t\tround_bit_dffe23_wi = round_bit_dffe21_wo,\n\t\tround_bit_dffe23_wo = round_bit_dffe23_wi,\n\t\tround_bit_dffe26_wi = round_bit_dffe23_wo,\n\t\tround_bit_dffe26_wo = round_bit_dffe26_wi,\n\t\tround_bit_dffe31_wi = round_bit_dffe26_wo,\n\t\tround_bit_dffe31_wo = round_bit_dffe31,\n\t\tround_bit_dffe32_wi = round_bit_dffe31_wo,\n\t\tround_bit_dffe32_wo = round_bit_dffe32_wi,\n\t\tround_bit_dffe33_wi = round_bit_dffe32_wo,\n\t\tround_bit_dffe33_wo = round_bit_dffe33_wi,\n\t\tround_bit_dffe3_wi = round_bit_dffe33_wo,\n\t\tround_bit_dffe3_wo = round_bit_dffe3,\n\t\tround_bit_w = ((((((~ man_add_sub_res_mag_dffe27_wo[26]) & (~ man_add_sub_res_mag_dffe27_wo[25])) & man_add_sub_res_mag_dffe27_wo[0]) | (((~ man_add_sub_res_mag_dffe27_wo[26]) & man_add_sub_res_mag_dffe27_wo[25]) & man_add_sub_res_mag_dffe27_wo[1])) | ((man_add_sub_res_mag_dffe27_wo[26] & (~ man_add_sub_res_mag_dffe27_wo[25])) & man_add_sub_res_mag_dffe27_wo[2])) | ((man_add_sub_res_mag_dffe27_wo[26] & man_add_sub_res_mag_dffe27_wo[25]) & man_add_sub_res_mag_dffe27_wo[2])),\n\t\trounded_res_infinity_dffe4_wi = exp_rounded_res_infinity_w,\n\t\trounded_res_infinity_dffe4_wo = rounded_res_infinity_dffe4,\n\t\trshift_distance_dffe13_wi = rshift_distance_w,\n\t\trshift_distance_dffe13_wo = rshift_distance_dffe13_wi,\n\t\trshift_distance_dffe14_wi = rshift_distance_dffe13_wo,\n\t\trshift_distance_dffe14_wo = rshift_distance_dffe14_wi,\n\t\trshift_distance_dffe15_wi = rshift_distance_dffe14_wo,\n\t\trshift_distance_dffe15_wo = rshift_distance_dffe15_wi,\n\t\trshift_distance_w = (({5{exp_diff_abs_exceed_max_w[2]}} & exp_diff_abs_max_w) | ({5{(~ exp_diff_abs_exceed_max_w[2])}} & exp_diff_abs_w[4:0])),\n\t\tsign_dffe31_wi = ((man_res_not_zero_dffe26_wo & man_add_sub_res_sign_dffe26_wo) | ((~ man_res_not_zero_dffe26_wo) & zero_man_sign_dffe26_wo)),\n\t\tsign_dffe31_wo = sign_dffe31,\n\t\tsign_dffe32_wi = sign_dffe31_wo,\n\t\tsign_dffe32_wo = sign_dffe32_wi,\n\t\tsign_dffe33_wi = sign_dffe32_wo,\n\t\tsign_dffe33_wo = sign_dffe33_wi,\n\t\tsign_out_dffe5_wi = ((~ force_nan_w) & ((force_infinity_w & infinite_output_sign_dffe4_wo) | ((~ force_infinity_w) & sign_res_dffe4_wo))),\n\t\tsign_out_dffe5_wo = sign_out_dffe5,\n\t\tsign_res_dffe3_wi = sign_dffe33_wo,\n\t\tsign_res_dffe3_wo = sign_res_dffe3,\n\t\tsign_res_dffe41_wi = sign_res_dffe42_wo,\n\t\tsign_res_dffe41_wo = sign_res_dffe41_wi,\n\t\tsign_res_dffe42_wi = sign_res_dffe3_wo,\n\t\tsign_res_dffe42_wo = sign_res_dffe42_wi,\n\t\tsign_res_dffe4_wi = sign_res_dffe41_wo,\n\t\tsign_res_dffe4_wo = sign_res_dffe4,\n\t\tsticky_bit_cnt_dataa_w = {1'b0, rshift_distance_dffe15_wo},\n\t\tsticky_bit_cnt_datab_w = {1'b0, wire_trailing_zeros_cnt_q},\n\t\tsticky_bit_cnt_res_w = wire_add_sub3_result,\n\t\tsticky_bit_dffe1_wi = wire_trailing_zeros_limit_comparator_agb,\n\t\tsticky_bit_dffe1_wo = sticky_bit_dffe1,\n\t\tsticky_bit_dffe21_wi = sticky_bit_w,\n\t\tsticky_bit_dffe21_wo = sticky_bit_dffe21,\n\t\tsticky_bit_dffe22_wi = sticky_bit_dffe2_wo,\n\t\tsticky_bit_dffe22_wo = sticky_bit_dffe22_wi,\n\t\tsticky_bit_dffe23_wi = sticky_bit_dffe21_wo,\n\t\tsticky_bit_dffe23_wo = sticky_bit_dffe23_wi,\n\t\tsticky_bit_dffe25_wi = sticky_bit_dffe1_wo,\n\t\tsticky_bit_dffe25_wo = sticky_bit_dffe25_wi,\n\t\tsticky_bit_dffe26_wi = sticky_bit_dffe23_wo,\n\t\tsticky_bit_dffe26_wo = sticky_bit_dffe26_wi,\n\t\tsticky_bit_dffe27_wi = sticky_bit_dffe22_wo,\n\t\tsticky_bit_dffe27_wo = sticky_bit_dffe27_wi,\n\t\tsticky_bit_dffe2_wi = sticky_bit_dffe25_wo,\n\t\tsticky_bit_dffe2_wo = sticky_bit_dffe2,\n\t\tsticky_bit_dffe31_wi = sticky_bit_dffe26_wo,\n\t\tsticky_bit_dffe31_wo = sticky_bit_dffe31,\n\t\tsticky_bit_dffe32_wi = sticky_bit_dffe31_wo,\n\t\tsticky_bit_dffe32_wo = sticky_bit_dffe32_wi,\n\t\tsticky_bit_dffe33_wi = sticky_bit_dffe32_wo,\n\t\tsticky_bit_dffe33_wo = sticky_bit_dffe33_wi,\n\t\tsticky_bit_dffe3_wi = sticky_bit_dffe33_wo,\n\t\tsticky_bit_dffe3_wo = sticky_bit_dffe3,\n\t\tsticky_bit_w = ((((((~ man_add_sub_res_mag_dffe27_wo[26]) & (~ man_add_sub_res_mag_dffe27_wo[25])) & sticky_bit_dffe27_wo) | (((~ man_add_sub_res_mag_dffe27_wo[26]) & man_add_sub_res_mag_dffe27_wo[25]) & (sticky_bit_dffe27_wo | man_add_sub_res_mag_dffe27_wo[0]))) | ((man_add_sub_res_mag_dffe27_wo[26] & (~ man_add_sub_res_mag_dffe27_wo[25])) & ((sticky_bit_dffe27_wo | man_add_sub_res_mag_dffe27_wo[0]) | man_add_sub_res_mag_dffe27_wo[1]))) | ((man_add_sub_res_mag_dffe27_wo[26] & man_add_sub_res_mag_dffe27_wo[25]) & ((sticky_bit_dffe27_wo | man_add_sub_res_mag_dffe27_wo[0]) | man_add_sub_res_mag_dffe27_wo[1]))),\n\t\ttrailing_zeros_limit_w = 6'b000010,\n\t\tzero_man_sign_dffe21_wi = zero_man_sign_dffe27_wo,\n\t\tzero_man_sign_dffe21_wo = zero_man_sign_dffe21,\n\t\tzero_man_sign_dffe22_wi = zero_man_sign_dffe2_wo,\n\t\tzero_man_sign_dffe22_wo = zero_man_sign_dffe22_wi,\n\t\tzero_man_sign_dffe23_wi = zero_man_sign_dffe21_wo,\n\t\tzero_man_sign_dffe23_wo = zero_man_sign_dffe23_wi,\n\t\tzero_man_sign_dffe26_wi = zero_man_sign_dffe23_wo,\n\t\tzero_man_sign_dffe26_wo = zero_man_sign_dffe26_wi,\n\t\tzero_man_sign_dffe27_wi = zero_man_sign_dffe22_wo,\n\t\tzero_man_sign_dffe27_wo = zero_man_sign_dffe27_wi,\n\t\tzero_man_sign_dffe2_wi = (dataa_sign_dffe25_wo & add_sub_dffe25_wo),\n\t\tzero_man_sign_dffe2_wo = zero_man_sign_dffe2;\nendmodule \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_div_single_altfp_div_csa_vhf\n\t( \n\tcin,\n\tcout,\n\tdataa,\n\tdatab,\n\tresult) ;\n\tinput   cin;\n\toutput   cout;\n\tinput   [23:0]  dataa;\n\tinput   [23:0]  datab;\n\toutput   [23:0]  result;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\ttri0   cin;\n\ttri0   [23:0]  dataa;\n\ttri0   [23:0]  datab;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\n\twire  wire_csa_lower_cout;\n\twire  [11:0]   wire_csa_lower_result;\n\twire  wire_csa_upper1_cout;\n\twire  [11:0]   wire_csa_upper1_result;\n\twire  [11:0]  adder_upper_w;\n\twire  cout_w;\n\twire  [23:0]  result_w;\n\n\tlpm_add_sub   csa_lower\n\t( \n\t.cin(cin),\n\t.cout(wire_csa_lower_cout),\n\t.dataa(dataa[11:0]),\n\t.datab(datab[11:0]),\n\t.overflow(),\n\t.result(wire_csa_lower_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcsa_lower.lpm_direction = \"ADD\",\n\t\tcsa_lower.lpm_representation = \"SIGNED\",\n\t\tcsa_lower.lpm_width = 12,\n\t\tcsa_lower.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   csa_upper1\n\t( \n\t.cin(1'b1),\n\t.cout(wire_csa_upper1_cout),\n\t.dataa(dataa[23:12]),\n\t.datab(datab[23:12]),\n\t.overflow(),\n\t.result(wire_csa_upper1_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcsa_upper1.lpm_direction = \"ADD\",\n\t\tcsa_upper1.lpm_representation = \"SIGNED\",\n\t\tcsa_upper1.lpm_width = 12,\n\t\tcsa_upper1.lpm_type = \"lpm_add_sub\";\n\tassign\n\t\tadder_upper_w = dataa[23:12],\n\t\tcout = cout_w,\n\t\tcout_w = (wire_csa_lower_cout & wire_csa_upper1_cout),\n\t\tresult = result_w,\n\t\tresult_w = {(({12{(~ wire_csa_lower_cout)}} & adder_upper_w) | ({12{wire_csa_lower_cout}} & wire_csa_upper1_result)), wire_csa_lower_result};\nendmodule \n\n\n\n\n\n\n\n\n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_div_single_altfp_div_csa_mke\n\t( \n\tdataa,\n\tdatab,\n\tresult) ;\n\tinput   [23:0]  dataa;\n\tinput   [23:0]  datab;\n\toutput   [23:0]  result;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\ttri0   [23:0]  dataa;\n\ttri0   [23:0]  datab;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\n\twire  wire_csa_lower_cout;\n\twire  [11:0]   wire_csa_lower_result;\n\twire  [11:0]   wire_csa_upper0_result;\n\twire  [11:0]   wire_csa_upper1_result;\n\twire  [23:0]  result_w;\n\n\tlpm_add_sub   csa_lower\n\t( \n\t.cout(wire_csa_lower_cout),\n\t.dataa(dataa[11:0]),\n\t.datab(datab[11:0]),\n\t.overflow(),\n\t.result(wire_csa_lower_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.cin(),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcsa_lower.lpm_direction = \"ADD\",\n\t\tcsa_lower.lpm_representation = \"SIGNED\",\n\t\tcsa_lower.lpm_width = 12,\n\t\tcsa_lower.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   csa_upper0\n\t( \n\t.cin(1'b0),\n\t.cout(),\n\t.dataa(dataa[23:12]),\n\t.datab(datab[23:12]),\n\t.overflow(),\n\t.result(wire_csa_upper0_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcsa_upper0.lpm_direction = \"ADD\",\n\t\tcsa_upper0.lpm_representation = \"SIGNED\",\n\t\tcsa_upper0.lpm_width = 12,\n\t\tcsa_upper0.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   csa_upper1\n\t( \n\t.cin(1'b1),\n\t.cout(),\n\t.dataa(dataa[23:12]),\n\t.datab(datab[23:12]),\n\t.overflow(),\n\t.result(wire_csa_upper1_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcsa_upper1.lpm_direction = \"ADD\",\n\t\tcsa_upper1.lpm_representation = \"SIGNED\",\n\t\tcsa_upper1.lpm_width = 12,\n\t\tcsa_upper1.lpm_type = \"lpm_add_sub\";\n\tassign\n\t\tresult = result_w,\n\t\tresult_w = {(({12{(~ wire_csa_lower_cout)}} & wire_csa_upper0_result) | ({12{wire_csa_lower_cout}} & wire_csa_upper1_result)), wire_csa_lower_result};\nendmodule \n\n\n\n\n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_div_single_altfp_div_csa_2jh\n\t( \n\taclr,\n\tclken,\n\tclock,\n\tdataa,\n\tdatab,\n\tresult) ;\n\tinput   aclr;\n\tinput   clken;\n\tinput   clock;\n\tinput   [27:0]  dataa;\n\tinput   [27:0]  datab;\n\toutput   [27:0]  result;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\ttri0   aclr;\n\ttri1   clken;\n\ttri0   clock;\n\ttri0   [27:0]  dataa;\n\ttri0   [27:0]  datab;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\n\twire  wire_csa_lower_cout;\n\twire  [13:0]   wire_csa_lower_result;\n\twire  [13:0]   wire_csa_upper0_result;\n\twire  [13:0]   wire_csa_upper1_result;\n\twire  [27:0]  result_w;\n\n\tlpm_add_sub   csa_lower\n\t( \n\t.aclr(aclr),\n\t.clken(clken),\n\t.clock(clock),\n\t.cout(wire_csa_lower_cout),\n\t.dataa(dataa[13:0]),\n\t.datab(datab[13:0]),\n\t.overflow(),\n\t.result(wire_csa_lower_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.add_sub(1'b1),\n\t.cin()\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcsa_lower.lpm_direction = \"SUB\",\n\t\tcsa_lower.lpm_pipeline = 1,\n\t\tcsa_lower.lpm_representation = \"SIGNED\",\n\t\tcsa_lower.lpm_width = 14,\n\t\tcsa_lower.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   csa_upper0\n\t( \n\t.aclr(aclr),\n\t.cin(1'b0),\n\t.clken(clken),\n\t.clock(clock),\n\t.cout(),\n\t.dataa(dataa[27:14]),\n\t.datab(datab[27:14]),\n\t.overflow(),\n\t.result(wire_csa_upper0_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.add_sub(1'b1)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcsa_upper0.lpm_direction = \"SUB\",\n\t\tcsa_upper0.lpm_pipeline = 1,\n\t\tcsa_upper0.lpm_representation = \"SIGNED\",\n\t\tcsa_upper0.lpm_width = 14,\n\t\tcsa_upper0.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   csa_upper1\n\t( \n\t.aclr(aclr),\n\t.cin(1'b1),\n\t.clken(clken),\n\t.clock(clock),\n\t.cout(),\n\t.dataa(dataa[27:14]),\n\t.datab(datab[27:14]),\n\t.overflow(),\n\t.result(wire_csa_upper1_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.add_sub(1'b1)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcsa_upper1.lpm_direction = \"SUB\",\n\t\tcsa_upper1.lpm_pipeline = 1,\n\t\tcsa_upper1.lpm_representation = \"SIGNED\",\n\t\tcsa_upper1.lpm_width = 14,\n\t\tcsa_upper1.lpm_type = \"lpm_add_sub\";\n\tassign\n\t\tresult = result_w,\n\t\tresult_w = {(({14{(~ wire_csa_lower_cout)}} & wire_csa_upper0_result) | ({14{wire_csa_lower_cout}} & wire_csa_upper1_result)), wire_csa_lower_result};\nendmodule \n\n\n\n\n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_div_single_altfp_div_csa_rle\n\t( \n\tdataa,\n\tdatab,\n\tresult) ;\n\tinput   [27:0]  dataa;\n\tinput   [27:0]  datab;\n\toutput   [27:0]  result;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\ttri0   [27:0]  dataa;\n\ttri0   [27:0]  datab;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\n\twire  wire_csa_lower_cout;\n\twire  [13:0]   wire_csa_lower_result;\n\twire  [13:0]   wire_csa_upper0_result;\n\twire  [13:0]   wire_csa_upper1_result;\n\twire  [27:0]  result_w;\n\n\tlpm_add_sub   csa_lower\n\t( \n\t.cout(wire_csa_lower_cout),\n\t.dataa(dataa[13:0]),\n\t.datab(datab[13:0]),\n\t.overflow(),\n\t.result(wire_csa_lower_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.cin(),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcsa_lower.lpm_direction = \"SUB\",\n\t\tcsa_lower.lpm_representation = \"SIGNED\",\n\t\tcsa_lower.lpm_width = 14,\n\t\tcsa_lower.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   csa_upper0\n\t( \n\t.cin(1'b0),\n\t.cout(),\n\t.dataa(dataa[27:14]),\n\t.datab(datab[27:14]),\n\t.overflow(),\n\t.result(wire_csa_upper0_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcsa_upper0.lpm_direction = \"SUB\",\n\t\tcsa_upper0.lpm_representation = \"SIGNED\",\n\t\tcsa_upper0.lpm_width = 14,\n\t\tcsa_upper0.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   csa_upper1\n\t( \n\t.cin(1'b1),\n\t.cout(),\n\t.dataa(dataa[27:14]),\n\t.datab(datab[27:14]),\n\t.overflow(),\n\t.result(wire_csa_upper1_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcsa_upper1.lpm_direction = \"SUB\",\n\t\tcsa_upper1.lpm_representation = \"SIGNED\",\n\t\tcsa_upper1.lpm_width = 14,\n\t\tcsa_upper1.lpm_type = \"lpm_add_sub\";\n\tassign\n\t\tresult = result_w,\n\t\tresult_w = {(({14{(~ wire_csa_lower_cout)}} & wire_csa_upper0_result) | ({14{wire_csa_lower_cout}} & wire_csa_upper1_result)), wire_csa_lower_result};\nendmodule \n\n\n\n\n\n\n\n\n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_div_single_altfp_div_csa_pke\n\t( \n\tdataa,\n\tdatab,\n\tresult) ;\n\tinput   [26:0]  dataa;\n\tinput   [26:0]  datab;\n\toutput   [26:0]  result;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\ttri0   [26:0]  dataa;\n\ttri0   [26:0]  datab;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\n\twire  wire_csa_lower_cout;\n\twire  [13:0]   wire_csa_lower_result;\n\twire  [12:0]   wire_csa_upper0_result;\n\twire  [12:0]   wire_csa_upper1_result;\n\twire  [26:0]  result_w;\n\n\tlpm_add_sub   csa_lower\n\t( \n\t.cout(wire_csa_lower_cout),\n\t.dataa(dataa[13:0]),\n\t.datab(datab[13:0]),\n\t.overflow(),\n\t.result(wire_csa_lower_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.cin(),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcsa_lower.lpm_direction = \"ADD\",\n\t\tcsa_lower.lpm_representation = \"SIGNED\",\n\t\tcsa_lower.lpm_width = 14,\n\t\tcsa_lower.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   csa_upper0\n\t( \n\t.cin(1'b0),\n\t.cout(),\n\t.dataa(dataa[26:14]),\n\t.datab(datab[26:14]),\n\t.overflow(),\n\t.result(wire_csa_upper0_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcsa_upper0.lpm_direction = \"ADD\",\n\t\tcsa_upper0.lpm_representation = \"SIGNED\",\n\t\tcsa_upper0.lpm_width = 13,\n\t\tcsa_upper0.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   csa_upper1\n\t( \n\t.cin(1'b1),\n\t.cout(),\n\t.dataa(dataa[26:14]),\n\t.datab(datab[26:14]),\n\t.overflow(),\n\t.result(wire_csa_upper1_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcsa_upper1.lpm_direction = \"ADD\",\n\t\tcsa_upper1.lpm_representation = \"SIGNED\",\n\t\tcsa_upper1.lpm_width = 13,\n\t\tcsa_upper1.lpm_type = \"lpm_add_sub\";\n\tassign\n\t\tresult = result_w,\n\t\tresult_w = {(({13{(~ wire_csa_lower_cout)}} & wire_csa_upper0_result) | ({13{wire_csa_lower_cout}} & wire_csa_upper1_result)), wire_csa_lower_result};\nendmodule \n\n\n\n\n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_div_single_altfp_div_csa_qle\n\t( \n\tdataa,\n\tdatab,\n\tresult) ;\n\tinput   [26:0]  dataa;\n\tinput   [26:0]  datab;\n\toutput   [26:0]  result;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\ttri0   [26:0]  dataa;\n\ttri0   [26:0]  datab;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\n\twire  wire_csa_lower_cout;\n\twire  [13:0]   wire_csa_lower_result;\n\twire  [12:0]   wire_csa_upper0_result;\n\twire  [12:0]   wire_csa_upper1_result;\n\twire  [26:0]  result_w;\n\n\tlpm_add_sub   csa_lower\n\t( \n\t.cout(wire_csa_lower_cout),\n\t.dataa(dataa[13:0]),\n\t.datab(datab[13:0]),\n\t.overflow(),\n\t.result(wire_csa_lower_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.cin(),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcsa_lower.lpm_direction = \"SUB\",\n\t\tcsa_lower.lpm_representation = \"SIGNED\",\n\t\tcsa_lower.lpm_width = 14,\n\t\tcsa_lower.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   csa_upper0\n\t( \n\t.cin(1'b0),\n\t.cout(),\n\t.dataa(dataa[26:14]),\n\t.datab(datab[26:14]),\n\t.overflow(),\n\t.result(wire_csa_upper0_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcsa_upper0.lpm_direction = \"SUB\",\n\t\tcsa_upper0.lpm_representation = \"SIGNED\",\n\t\tcsa_upper0.lpm_width = 13,\n\t\tcsa_upper0.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   csa_upper1\n\t( \n\t.cin(1'b1),\n\t.cout(),\n\t.dataa(dataa[26:14]),\n\t.datab(datab[26:14]),\n\t.overflow(),\n\t.result(wire_csa_upper1_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcsa_upper1.lpm_direction = \"SUB\",\n\t\tcsa_upper1.lpm_representation = \"SIGNED\",\n\t\tcsa_upper1.lpm_width = 13,\n\t\tcsa_upper1.lpm_type = \"lpm_add_sub\";\n\tassign\n\t\tresult = result_w,\n\t\tresult_w = {(({13{(~ wire_csa_lower_cout)}} & wire_csa_upper0_result) | ({13{wire_csa_lower_cout}} & wire_csa_upper1_result)), wire_csa_lower_result};\nendmodule \n\n\n\n\n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_div_single_qds_block_mab\n\t( \n\taclr,\n\tclken,\n\tclock,\n\tdecoder_bus,\n\tdecoder_output) ;\n\tinput   aclr;\n\tinput   clken;\n\tinput   clock;\n\tinput   [11:0]  decoder_bus;\n\toutput   [2:0]  decoder_output;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\ttri0   aclr;\n\ttri1   clken;\n\ttri0   clock;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\n\treg\t[1:0]\tq_next_dffe;\n\twire  wire_cmpr35_aleb;\n\twire  wire_cmpr36_aleb;\n\twire  wire_cmpr37_aleb;\n\twire  wire_cmpr38_aleb;\n\twire  [31:0]   wire_mux34_result;\n\twire  [2:0]  decoder_output_w;\n\twire  [3:0]  Div_w;\n\twire  [3:0]  k_comp_w;\n\twire  [511:0]  mk_bus_const_w;\n\twire  [31:0]  mk_bus_w;\n\twire  [8:0]  mk_neg1_w;\n\twire  [8:0]  mk_pos0_w;\n\twire  [8:0]  mk_pos1_w;\n\twire  [8:0]  mk_pos2_w;\n\twire  [2:0]  q_next_w;\n\twire  [8:0]  Rk_in_w;\n\twire  [8:0]  Rk_w;\n\n\t\n\tinitial\n\t\tq_next_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) q_next_dffe <= 2'b0;\n\t\telse if  (clken == 1'b1)   q_next_dffe <= q_next_w[1:0];\n\tlpm_compare   cmpr35\n\t( \n\t.aeb(),\n\t.agb(),\n\t.ageb(),\n\t.alb(),\n\t.aleb(wire_cmpr35_aleb),\n\t.aneb(),\n\t.dataa(Rk_w),\n\t.datab(mk_neg1_w)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcmpr35.lpm_representation = \"SIGNED\",\n\t\tcmpr35.lpm_width = 9,\n\t\tcmpr35.lpm_type = \"lpm_compare\";\n\tlpm_compare   cmpr36\n\t( \n\t.aeb(),\n\t.agb(),\n\t.ageb(),\n\t.alb(),\n\t.aleb(wire_cmpr36_aleb),\n\t.aneb(),\n\t.dataa(Rk_w),\n\t.datab(mk_pos0_w)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcmpr36.lpm_representation = \"SIGNED\",\n\t\tcmpr36.lpm_width = 9,\n\t\tcmpr36.lpm_type = \"lpm_compare\";\n\tlpm_compare   cmpr37\n\t( \n\t.aeb(),\n\t.agb(),\n\t.ageb(),\n\t.alb(),\n\t.aleb(wire_cmpr37_aleb),\n\t.aneb(),\n\t.dataa(Rk_w),\n\t.datab(mk_pos1_w)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcmpr37.lpm_representation = \"SIGNED\",\n\t\tcmpr37.lpm_width = 9,\n\t\tcmpr37.lpm_type = \"lpm_compare\";\n\tlpm_compare   cmpr38\n\t( \n\t.aeb(),\n\t.agb(),\n\t.ageb(),\n\t.alb(),\n\t.aleb(wire_cmpr38_aleb),\n\t.aneb(),\n\t.dataa(Rk_w),\n\t.datab(mk_pos2_w)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcmpr38.lpm_representation = \"SIGNED\",\n\t\tcmpr38.lpm_width = 9,\n\t\tcmpr38.lpm_type = \"lpm_compare\";\n\tlpm_mux   mux34\n\t( \n\t.data(mk_bus_const_w),\n\t.result(wire_mux34_result),\n\t.sel(Div_w)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tmux34.lpm_size = 16,\n\t\tmux34.lpm_width = 32,\n\t\tmux34.lpm_widths = 4,\n\t\tmux34.lpm_type = \"lpm_mux\";\n\tassign\n\t\tdecoder_output = decoder_output_w,\n\t\tdecoder_output_w = {1'b0, q_next_dffe},\n\t\tDiv_w = decoder_bus[3:0],\n\t\tk_comp_w = {wire_cmpr38_aleb, wire_cmpr37_aleb, wire_cmpr36_aleb, wire_cmpr35_aleb},\n\t\tmk_bus_const_w = {32'b01011101000111111110000110100011, 32'b01011010000111101110001010100110, 32'b01010111000111011110001110101001, 32'b01010100000111001110010010101100, 32'b01010001000110111110010110101111, 32'b01001110000110101110011010110010, 32'b01001011000110011110011110110101, 32'b01001000000110001110100010111000, 32'b01000101000101111110100110111011, 32'b01000010000101101110101010111110, 32'b00111111000101011110101111000001, 32'b00111100000101001110110011000100, 32'b00111001000100111110110111000111, 32'b00110110000100101110111011001010, 32'b00110011000100011110111111001101, 32'b00110000000100001111000011010000},\n\t\tmk_bus_w = wire_mux34_result,\n\t\tmk_neg1_w = {mk_bus_w[7], mk_bus_w[7:0]},\n\t\tmk_pos0_w = {mk_bus_w[15], mk_bus_w[15:8]},\n\t\tmk_pos1_w = {mk_bus_w[23], mk_bus_w[23:16]},\n\t\tmk_pos2_w = {mk_bus_w[31], mk_bus_w[31:24]},\n\t\tq_next_w = {k_comp_w[1], ((~ k_comp_w[3]) | k_comp_w[0]), ((k_comp_w[3] & (~ k_comp_w[2])) | (k_comp_w[1] & (~ k_comp_w[0])))},\n\t\tRk_in_w = {decoder_bus[11:4], 1'b0},\n\t\tRk_w = Rk_in_w;\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_div_single_srt_block_int_02n\n\t( \n\taclr,\n\tclken,\n\tclock,\n\tdivider,\n\tdivider_reg,\n\tRk,\n\tRk_next,\n\trom) ;\n\tinput   aclr;\n\tinput   clken;\n\tinput   clock;\n\tinput   [23:0]  divider;\n\toutput   [23:0]  divider_reg;\n\tinput   [23:0]  Rk;\n\toutput   [24:0]  Rk_next;\n\toutput   [2:0]  rom;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\ttri0   aclr;\n\ttri1   clken;\n\ttri0   clock;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\n\twire  [26:0]   wire_altfp_div_csa29_result;\n\twire  [26:0]   wire_altfp_div_csa30_result;\n\twire  [26:0]   wire_altfp_div_csa31_result;\n\twire  [26:0]   wire_altfp_div_csa32_result;\n\treg\t[22:0]\tdivider_dffe;\n\treg\t[22:0]\tdivider_dffe_1a;\n\treg\t[24:0]\tneg_qk1d_dffe;\n\treg\t[24:0]\tneg_qk2d_dffe;\n\treg\t[24:0]\tpos_qk1d_dffe;\n\treg\t[24:0]\tpos_qk2d_dffe;\n\treg\t[20:0]\tRk_adder_padded_dffe;\n\treg\t[24:0]\tRk_next_dffe;\n\treg\t[2:0]\trom_out_dffe;\n\twire  [24:0]   wire_mux33_result;\n\twire  [2:0]   wire_qds_block28_decoder_output;\n\twire  [26:0]  divider_1D_w;\n\twire  [26:0]  divider_2D_w;\n\twire  [22:0]  divider_dffe_1a_w;\n\twire  [23:0]  divider_dffe_w;\n\twire  [23:0]  divider_in_w;\n\twire  [24:0]  neg_qk1d_int_w;\n\twire  [24:0]  neg_qk2d_int_w;\n\twire  [1:0]  padded_2_zeros_w;\n\twire  [2:0]  padded_3_zeros_w;\n\twire  [24:0]  pos_qk0d_int_w;\n\twire  [24:0]  pos_qk1d_int_w;\n\twire  [24:0]  pos_qk2d_int_w;\n\twire  [199:0]  qkd_mux_input_w;\n\twire  [24:0]  qkd_mux_w;\n\twire  [26:0]  Rk_adder_padded_w;\n\twire  [23:0]  Rk_dffe_1a_w;\n\twire  [23:0]  Rk_in_w;\n\twire  [24:0]  Rk_next_dffe_w;\n\twire  [11:0]  rom_add_w;\n\twire  [2:0]  rom_mux_w;\n\twire  [2:0]  rom_out_1a_w;\n\twire  [2:0]  rom_out_dffe_w;\n\n\tfpoint_hw_qsys_div_single_altfp_div_csa_pke   altfp_div_csa29\n\t( \n\t.dataa(Rk_adder_padded_w),\n\t.datab(divider_1D_w),\n\t.result(wire_altfp_div_csa29_result));\n\tfpoint_hw_qsys_div_single_altfp_div_csa_pke   altfp_div_csa30\n\t( \n\t.dataa(Rk_adder_padded_w),\n\t.datab(divider_2D_w),\n\t.result(wire_altfp_div_csa30_result));\n\tfpoint_hw_qsys_div_single_altfp_div_csa_qle   altfp_div_csa31\n\t( \n\t.dataa(Rk_adder_padded_w),\n\t.datab(divider_1D_w),\n\t.result(wire_altfp_div_csa31_result));\n\tfpoint_hw_qsys_div_single_altfp_div_csa_qle   altfp_div_csa32\n\t( \n\t.dataa(Rk_adder_padded_w),\n\t.datab(divider_2D_w),\n\t.result(wire_altfp_div_csa32_result));\n\t\n\tinitial\n\t\tdivider_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) divider_dffe <= 23'b0;\n\t\telse if  (clken == 1'b1)   divider_dffe <= divider_dffe_1a_w;\n\t\n\tinitial\n\t\tdivider_dffe_1a = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) divider_dffe_1a <= 23'b0;\n\t\telse if  (clken == 1'b1)   divider_dffe_1a <= divider_in_w[22:0];\n\t\n\tinitial\n\t\tneg_qk1d_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) neg_qk1d_dffe <= 25'b0;\n\t\telse if  (clken == 1'b1)   neg_qk1d_dffe <= wire_altfp_div_csa31_result[24:0];\n\t\n\tinitial\n\t\tneg_qk2d_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) neg_qk2d_dffe <= 25'b0;\n\t\telse if  (clken == 1'b1)   neg_qk2d_dffe <= wire_altfp_div_csa32_result[24:0];\n\t\n\tinitial\n\t\tpos_qk1d_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) pos_qk1d_dffe <= 25'b0;\n\t\telse if  (clken == 1'b1)   pos_qk1d_dffe <= wire_altfp_div_csa29_result[24:0];\n\t\n\tinitial\n\t\tpos_qk2d_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) pos_qk2d_dffe <= 25'b0;\n\t\telse if  (clken == 1'b1)   pos_qk2d_dffe <= wire_altfp_div_csa30_result[24:0];\n\t\n\tinitial\n\t\tRk_adder_padded_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) Rk_adder_padded_dffe <= 21'b0;\n\t\telse if  (clken == 1'b1)   Rk_adder_padded_dffe <= Rk_adder_padded_w[20:0];\n\t\n\tinitial\n\t\tRk_next_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) Rk_next_dffe <= 25'b0;\n\t\telse if  (clken == 1'b1)   Rk_next_dffe <= qkd_mux_w;\n\t\n\tinitial\n\t\trom_out_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) rom_out_dffe <= 3'b0;\n\t\telse if  (clken == 1'b1)   rom_out_dffe <= rom_out_1a_w;\n\tlpm_mux   mux33\n\t( \n\t.data(qkd_mux_input_w),\n\t.result(wire_mux33_result),\n\t.sel(rom_mux_w)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tmux33.lpm_size = 8,\n\t\tmux33.lpm_width = 25,\n\t\tmux33.lpm_widths = 3,\n\t\tmux33.lpm_type = \"lpm_mux\";\n\tfpoint_hw_qsys_div_single_qds_block_mab   qds_block28\n\t( \n\t.aclr(aclr),\n\t.clken(clken),\n\t.clock(clock),\n\t.decoder_bus(rom_add_w),\n\t.decoder_output(wire_qds_block28_decoder_output));\n\tassign\n\t\tdivider_1D_w = {padded_3_zeros_w, divider_in_w},\n\t\tdivider_2D_w = {padded_2_zeros_w, divider_in_w, 1'b0},\n\t\tdivider_dffe_1a_w = divider_dffe_1a,\n\t\tdivider_dffe_w = {1'b1, divider_dffe},\n\t\tdivider_in_w = divider,\n\t\tdivider_reg = divider_dffe_w,\n\t\tneg_qk1d_int_w = neg_qk1d_dffe,\n\t\tneg_qk2d_int_w = neg_qk2d_dffe,\n\t\tpadded_2_zeros_w = {2{1'b0}},\n\t\tpadded_3_zeros_w = {3{1'b0}},\n\t\tpos_qk0d_int_w = {padded_3_zeros_w, 1'b1, Rk_adder_padded_dffe[20:0]},\n\t\tpos_qk1d_int_w = pos_qk1d_dffe,\n\t\tpos_qk2d_int_w = pos_qk2d_dffe,\n\t\tqkd_mux_input_w = {{2{pos_qk2d_int_w}}, pos_qk1d_int_w, pos_qk0d_int_w, {2{neg_qk2d_int_w}}, neg_qk1d_int_w, pos_qk0d_int_w},\n\t\tqkd_mux_w = wire_mux33_result[24:0],\n\t\tRk_adder_padded_w = {padded_3_zeros_w, Rk_dffe_1a_w},\n\t\tRk_dffe_1a_w = Rk_in_w,\n\t\tRk_in_w = Rk,\n\t\tRk_next = Rk_next_dffe_w,\n\t\tRk_next_dffe_w = Rk_next_dffe,\n\t\trom = rom_out_dffe_w,\n\t\trom_add_w = {padded_3_zeros_w, Rk_in_w[23:19], divider_in_w[22:19]},\n\t\trom_mux_w = rom_out_1a_w,\n\t\trom_out_1a_w = wire_qds_block28_decoder_output,\n\t\trom_out_dffe_w = rom_out_dffe;\nendmodule \n\n\n\n\n\n\n\n\n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_div_single_qds_block_ls9\n\t( \n\taclr,\n\tclken,\n\tclock,\n\tdecoder_bus,\n\tdecoder_output) ;\n\tinput   aclr;\n\tinput   clken;\n\tinput   clock;\n\tinput   [11:0]  decoder_bus;\n\toutput   [2:0]  decoder_output;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\ttri0   aclr;\n\ttri1   clken;\n\ttri0   clock;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\n\treg\t[2:0]\tq_next_dffe;\n\twire  wire_cmpr46_aleb;\n\twire  wire_cmpr47_aleb;\n\twire  wire_cmpr48_aleb;\n\twire  wire_cmpr49_aleb;\n\twire  [31:0]   wire_mux45_result;\n\twire  [2:0]  decoder_output_w;\n\twire  [3:0]  Div_w;\n\twire  [3:0]  k_comp_w;\n\twire  [511:0]  mk_bus_const_w;\n\twire  [31:0]  mk_bus_w;\n\twire  [8:0]  mk_neg1_w;\n\twire  [8:0]  mk_pos0_w;\n\twire  [8:0]  mk_pos1_w;\n\twire  [8:0]  mk_pos2_w;\n\twire  [2:0]  q_next_w;\n\twire  [8:0]  Rk_in_w;\n\twire  [8:0]  Rk_w;\n\n\t\n\tinitial\n\t\tq_next_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) q_next_dffe <= 3'b0;\n\t\telse if  (clken == 1'b1)   q_next_dffe <= q_next_w;\n\tlpm_compare   cmpr46\n\t( \n\t.aeb(),\n\t.agb(),\n\t.ageb(),\n\t.alb(),\n\t.aleb(wire_cmpr46_aleb),\n\t.aneb(),\n\t.dataa(Rk_w),\n\t.datab(mk_neg1_w)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcmpr46.lpm_representation = \"SIGNED\",\n\t\tcmpr46.lpm_width = 9,\n\t\tcmpr46.lpm_type = \"lpm_compare\";\n\tlpm_compare   cmpr47\n\t( \n\t.aeb(),\n\t.agb(),\n\t.ageb(),\n\t.alb(),\n\t.aleb(wire_cmpr47_aleb),\n\t.aneb(),\n\t.dataa(Rk_w),\n\t.datab(mk_pos0_w)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcmpr47.lpm_representation = \"SIGNED\",\n\t\tcmpr47.lpm_width = 9,\n\t\tcmpr47.lpm_type = \"lpm_compare\";\n\tlpm_compare   cmpr48\n\t( \n\t.aeb(),\n\t.agb(),\n\t.ageb(),\n\t.alb(),\n\t.aleb(wire_cmpr48_aleb),\n\t.aneb(),\n\t.dataa(Rk_w),\n\t.datab(mk_pos1_w)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcmpr48.lpm_representation = \"SIGNED\",\n\t\tcmpr48.lpm_width = 9,\n\t\tcmpr48.lpm_type = \"lpm_compare\";\n\tlpm_compare   cmpr49\n\t( \n\t.aeb(),\n\t.agb(),\n\t.ageb(),\n\t.alb(),\n\t.aleb(wire_cmpr49_aleb),\n\t.aneb(),\n\t.dataa(Rk_w),\n\t.datab(mk_pos2_w)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcmpr49.lpm_representation = \"SIGNED\",\n\t\tcmpr49.lpm_width = 9,\n\t\tcmpr49.lpm_type = \"lpm_compare\";\n\tlpm_mux   mux45\n\t( \n\t.data(mk_bus_const_w),\n\t.result(wire_mux45_result),\n\t.sel(Div_w)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tmux45.lpm_size = 16,\n\t\tmux45.lpm_width = 32,\n\t\tmux45.lpm_widths = 4,\n\t\tmux45.lpm_type = \"lpm_mux\";\n\tassign\n\t\tdecoder_output = decoder_output_w,\n\t\tdecoder_output_w = q_next_dffe,\n\t\tDiv_w = decoder_bus[3:0],\n\t\tk_comp_w = {wire_cmpr49_aleb, wire_cmpr48_aleb, wire_cmpr47_aleb, wire_cmpr46_aleb},\n\t\tmk_bus_const_w = {32'b01011101000111111110000110100011, 32'b01011010000111101110001010100110, 32'b01010111000111011110001110101001, 32'b01010100000111001110010010101100, 32'b01010001000110111110010110101111, 32'b01001110000110101110011010110010, 32'b01001011000110011110011110110101, 32'b01001000000110001110100010111000, 32'b01000101000101111110100110111011, 32'b01000010000101101110101010111110, 32'b00111111000101011110101111000001, 32'b00111100000101001110110011000100, 32'b00111001000100111110110111000111, 32'b00110110000100101110111011001010, 32'b00110011000100011110111111001101, 32'b00110000000100001111000011010000},\n\t\tmk_bus_w = wire_mux45_result,\n\t\tmk_neg1_w = {mk_bus_w[7], mk_bus_w[7:0]},\n\t\tmk_pos0_w = {mk_bus_w[15], mk_bus_w[15:8]},\n\t\tmk_pos1_w = {mk_bus_w[23], mk_bus_w[23:16]},\n\t\tmk_pos2_w = {mk_bus_w[31], mk_bus_w[31:24]},\n\t\tq_next_w = {k_comp_w[1], ((~ k_comp_w[3]) | k_comp_w[0]), ((k_comp_w[3] & (~ k_comp_w[2])) | (k_comp_w[1] & (~ k_comp_w[0])))},\n\t\tRk_in_w = {decoder_bus[11:4], 1'b0},\n\t\tRk_w = Rk_in_w;\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_div_single_srt_block_int_84n\n\t( \n\taclr,\n\tclken,\n\tclock,\n\tdivider,\n\tdivider_reg,\n\tRk,\n\tRk_next,\n\trom) ;\n\tinput   aclr;\n\tinput   clken;\n\tinput   clock;\n\tinput   [23:0]  divider;\n\toutput   [23:0]  divider_reg;\n\tinput   [24:0]  Rk;\n\toutput   [24:0]  Rk_next;\n\toutput   [2:0]  rom;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\ttri0   aclr;\n\ttri1   clken;\n\ttri0   clock;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\n\twire  [26:0]   wire_altfp_div_csa40_result;\n\twire  [26:0]   wire_altfp_div_csa41_result;\n\twire  [26:0]   wire_altfp_div_csa42_result;\n\twire  [26:0]   wire_altfp_div_csa43_result;\n\treg\t[22:0]\tdivider_dffe;\n\treg\t[22:0]\tdivider_dffe_1a;\n\treg\t[24:0]\tneg_qk1d_dffe;\n\treg\t[23:0]\tneg_qk2d_dffe;\n\treg\t[24:0]\tpos_qk1d_dffe;\n\treg\t[23:0]\tpos_qk2d_dffe;\n\treg\t[24:0]\tRk_adder_padded_dffe;\n\treg\t[24:0]\tRk_next_dffe;\n\treg\t[2:0]\trom_out_dffe;\n\twire  [24:0]   wire_mux44_result;\n\twire  [2:0]   wire_qds_block39_decoder_output;\n\twire  [26:0]  divider_1D_w;\n\twire  [26:0]  divider_2D_w;\n\twire  [22:0]  divider_dffe_1a_w;\n\twire  [23:0]  divider_dffe_w;\n\twire  [23:0]  divider_in_w;\n\twire  [24:0]  neg_qk1d_int_w;\n\twire  [24:0]  neg_qk2d_int_w;\n\twire  [1:0]  padded_2_zeros_w;\n\twire  [2:0]  padded_3_zeros_w;\n\twire  [24:0]  pos_qk0d_int_w;\n\twire  [24:0]  pos_qk1d_int_w;\n\twire  [24:0]  pos_qk2d_int_w;\n\twire  [199:0]  qkd_mux_input_w;\n\twire  [24:0]  qkd_mux_w;\n\twire  [26:0]  Rk_adder_padded_w;\n\twire  [24:0]  Rk_dffe_1a_w;\n\twire  [24:0]  Rk_in_w;\n\twire  [24:0]  Rk_next_dffe_w;\n\twire  [11:0]  rom_add_w;\n\twire  [2:0]  rom_mux_w;\n\twire  [2:0]  rom_out_1a_w;\n\twire  [2:0]  rom_out_dffe_w;\n\n\tfpoint_hw_qsys_div_single_altfp_div_csa_pke   altfp_div_csa40\n\t( \n\t.dataa(Rk_adder_padded_w),\n\t.datab(divider_1D_w),\n\t.result(wire_altfp_div_csa40_result));\n\tfpoint_hw_qsys_div_single_altfp_div_csa_pke   altfp_div_csa41\n\t( \n\t.dataa(Rk_adder_padded_w),\n\t.datab(divider_2D_w),\n\t.result(wire_altfp_div_csa41_result));\n\tfpoint_hw_qsys_div_single_altfp_div_csa_qle   altfp_div_csa42\n\t( \n\t.dataa(Rk_adder_padded_w),\n\t.datab(divider_1D_w),\n\t.result(wire_altfp_div_csa42_result));\n\tfpoint_hw_qsys_div_single_altfp_div_csa_qle   altfp_div_csa43\n\t( \n\t.dataa(Rk_adder_padded_w),\n\t.datab(divider_2D_w),\n\t.result(wire_altfp_div_csa43_result));\n\t\n\tinitial\n\t\tdivider_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) divider_dffe <= 23'b0;\n\t\telse if  (clken == 1'b1)   divider_dffe <= divider_dffe_1a_w;\n\t\n\tinitial\n\t\tdivider_dffe_1a = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) divider_dffe_1a <= 23'b0;\n\t\telse if  (clken == 1'b1)   divider_dffe_1a <= divider_in_w[22:0];\n\t\n\tinitial\n\t\tneg_qk1d_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) neg_qk1d_dffe <= 25'b0;\n\t\telse if  (clken == 1'b1)   neg_qk1d_dffe <= wire_altfp_div_csa42_result[24:0];\n\t\n\tinitial\n\t\tneg_qk2d_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) neg_qk2d_dffe <= 24'b0;\n\t\telse if  (clken == 1'b1)   neg_qk2d_dffe <= wire_altfp_div_csa43_result[24:1];\n\t\n\tinitial\n\t\tpos_qk1d_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) pos_qk1d_dffe <= 25'b0;\n\t\telse if  (clken == 1'b1)   pos_qk1d_dffe <= wire_altfp_div_csa40_result[24:0];\n\t\n\tinitial\n\t\tpos_qk2d_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) pos_qk2d_dffe <= 24'b0;\n\t\telse if  (clken == 1'b1)   pos_qk2d_dffe <= wire_altfp_div_csa41_result[24:1];\n\t\n\tinitial\n\t\tRk_adder_padded_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) Rk_adder_padded_dffe <= 25'b0;\n\t\telse if  (clken == 1'b1)   Rk_adder_padded_dffe <= Rk_adder_padded_w[26:2];\n\t\n\tinitial\n\t\tRk_next_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) Rk_next_dffe <= 25'b0;\n\t\telse if  (clken == 1'b1)   Rk_next_dffe <= qkd_mux_w;\n\t\n\tinitial\n\t\trom_out_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) rom_out_dffe <= 3'b0;\n\t\telse if  (clken == 1'b1)   rom_out_dffe <= rom_out_1a_w;\n\tlpm_mux   mux44\n\t( \n\t.data(qkd_mux_input_w),\n\t.result(wire_mux44_result),\n\t.sel(rom_mux_w)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tmux44.lpm_size = 8,\n\t\tmux44.lpm_width = 25,\n\t\tmux44.lpm_widths = 3,\n\t\tmux44.lpm_type = \"lpm_mux\";\n\tfpoint_hw_qsys_div_single_qds_block_ls9   qds_block39\n\t( \n\t.aclr(aclr),\n\t.clken(clken),\n\t.clock(clock),\n\t.decoder_bus(rom_add_w),\n\t.decoder_output(wire_qds_block39_decoder_output));\n\tassign\n\t\tdivider_1D_w = {padded_3_zeros_w, divider_in_w},\n\t\tdivider_2D_w = {padded_2_zeros_w, divider_in_w, 1'b0},\n\t\tdivider_dffe_1a_w = divider_dffe_1a,\n\t\tdivider_dffe_w = {1'b1, divider_dffe},\n\t\tdivider_in_w = divider,\n\t\tdivider_reg = divider_dffe_w,\n\t\tneg_qk1d_int_w = neg_qk1d_dffe,\n\t\tneg_qk2d_int_w = {neg_qk2d_dffe, 1'b0},\n\t\tpadded_2_zeros_w = {2{1'b0}},\n\t\tpadded_3_zeros_w = {3{1'b0}},\n\t\tpos_qk0d_int_w = {Rk_adder_padded_dffe[22:0], padded_2_zeros_w},\n\t\tpos_qk1d_int_w = pos_qk1d_dffe,\n\t\tpos_qk2d_int_w = {pos_qk2d_dffe, 1'b0},\n\t\tqkd_mux_input_w = {{2{pos_qk2d_int_w}}, pos_qk1d_int_w, pos_qk0d_int_w, {2{neg_qk2d_int_w}}, neg_qk1d_int_w, pos_qk0d_int_w},\n\t\tqkd_mux_w = wire_mux44_result[24:0],\n\t\tRk_adder_padded_w = {Rk_dffe_1a_w, padded_2_zeros_w},\n\t\tRk_dffe_1a_w = Rk_in_w,\n\t\tRk_in_w = Rk,\n\t\tRk_next = Rk_next_dffe_w,\n\t\tRk_next_dffe_w = Rk_next_dffe,\n\t\trom = rom_out_dffe_w,\n\t\trom_add_w = {Rk_in_w[24:17], divider_in_w[22:19]},\n\t\trom_mux_w = rom_out_1a_w,\n\t\trom_out_1a_w = wire_qds_block39_decoder_output,\n\t\trom_out_dffe_w = rom_out_dffe;\nendmodule \n\n\n\n\n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_div_single_srt_block_int_fum\n\t( \n\taclr,\n\tclken,\n\tclock,\n\tdivider,\n\tdivider_reg,\n\tRk,\n\tRk_next,\n\trom) ;\n\tinput   aclr;\n\tinput   clken;\n\tinput   clock;\n\tinput   [23:0]  divider;\n\toutput   [23:0]  divider_reg;\n\tinput   [24:0]  Rk;\n\toutput   [26:0]  Rk_next;\n\toutput   [2:0]  rom;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\ttri0   aclr;\n\ttri1   clken;\n\ttri0   clock;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\n\twire  [26:0]   wire_altfp_div_csa51_result;\n\twire  [26:0]   wire_altfp_div_csa52_result;\n\twire  [26:0]   wire_altfp_div_csa53_result;\n\twire  [26:0]   wire_altfp_div_csa54_result;\n\treg\t[22:0]\tdivider_dffe_1a;\n\treg\t[26:0]\tneg_qk1d_dffe;\n\treg\t[26:0]\tneg_qk2d_dffe;\n\treg\t[26:0]\tpos_qk1d_dffe;\n\treg\t[26:0]\tpos_qk2d_dffe;\n\treg\t[24:0]\tRk_adder_padded_dffe;\n\twire  [26:0]   wire_mux55_result;\n\twire  [2:0]   wire_qds_block50_decoder_output;\n\twire  [26:0]  divider_1D_w;\n\twire  [26:0]  divider_2D_w;\n\twire  [22:0]  divider_dffe_1a_w;\n\twire  [23:0]  divider_dffe_w;\n\twire  [23:0]  divider_in_w;\n\twire  [26:0]  neg_qk1d_int_w;\n\twire  [26:0]  neg_qk2d_int_w;\n\twire  [1:0]  padded_2_zeros_w;\n\twire  [2:0]  padded_3_zeros_w;\n\twire  [26:0]  pos_qk0d_int_w;\n\twire  [26:0]  pos_qk1d_int_w;\n\twire  [26:0]  pos_qk2d_int_w;\n\twire  [215:0]  qkd_mux_input_w;\n\twire  [26:0]  qkd_mux_w;\n\twire  [26:0]  Rk_adder_padded_w;\n\twire  [24:0]  Rk_dffe_1a_w;\n\twire  [24:0]  Rk_in_w;\n\twire  [26:0]  Rk_next_dffe_w;\n\twire  [11:0]  rom_add_w;\n\twire  [2:0]  rom_mux_w;\n\twire  [2:0]  rom_out_1a_w;\n\twire  [2:0]  rom_out_dffe_w;\n\n\tfpoint_hw_qsys_div_single_altfp_div_csa_pke   altfp_div_csa51\n\t( \n\t.dataa(Rk_adder_padded_w),\n\t.datab(divider_1D_w),\n\t.result(wire_altfp_div_csa51_result));\n\tfpoint_hw_qsys_div_single_altfp_div_csa_pke   altfp_div_csa52\n\t( \n\t.dataa(Rk_adder_padded_w),\n\t.datab(divider_2D_w),\n\t.result(wire_altfp_div_csa52_result));\n\tfpoint_hw_qsys_div_single_altfp_div_csa_qle   altfp_div_csa53\n\t( \n\t.dataa(Rk_adder_padded_w),\n\t.datab(divider_1D_w),\n\t.result(wire_altfp_div_csa53_result));\n\tfpoint_hw_qsys_div_single_altfp_div_csa_qle   altfp_div_csa54\n\t( \n\t.dataa(Rk_adder_padded_w),\n\t.datab(divider_2D_w),\n\t.result(wire_altfp_div_csa54_result));\n\t\n\tinitial\n\t\tdivider_dffe_1a = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) divider_dffe_1a <= 23'b0;\n\t\telse if  (clken == 1'b1)   divider_dffe_1a <= divider_in_w[22:0];\n\t\n\tinitial\n\t\tneg_qk1d_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) neg_qk1d_dffe <= 27'b0;\n\t\telse if  (clken == 1'b1)   neg_qk1d_dffe <= wire_altfp_div_csa53_result[26:0];\n\t\n\tinitial\n\t\tneg_qk2d_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) neg_qk2d_dffe <= 27'b0;\n\t\telse if  (clken == 1'b1)   neg_qk2d_dffe <= wire_altfp_div_csa54_result[26:0];\n\t\n\tinitial\n\t\tpos_qk1d_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) pos_qk1d_dffe <= 27'b0;\n\t\telse if  (clken == 1'b1)   pos_qk1d_dffe <= wire_altfp_div_csa51_result[26:0];\n\t\n\tinitial\n\t\tpos_qk2d_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) pos_qk2d_dffe <= 27'b0;\n\t\telse if  (clken == 1'b1)   pos_qk2d_dffe <= wire_altfp_div_csa52_result[26:0];\n\t\n\tinitial\n\t\tRk_adder_padded_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) Rk_adder_padded_dffe <= 25'b0;\n\t\telse if  (clken == 1'b1)   Rk_adder_padded_dffe <= Rk_adder_padded_w[26:2];\n\tlpm_mux   mux55\n\t( \n\t.data(qkd_mux_input_w),\n\t.result(wire_mux55_result),\n\t.sel(rom_mux_w)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tmux55.lpm_size = 8,\n\t\tmux55.lpm_width = 27,\n\t\tmux55.lpm_widths = 3,\n\t\tmux55.lpm_type = \"lpm_mux\";\n\tfpoint_hw_qsys_div_single_qds_block_ls9   qds_block50\n\t( \n\t.aclr(aclr),\n\t.clken(clken),\n\t.clock(clock),\n\t.decoder_bus(rom_add_w),\n\t.decoder_output(wire_qds_block50_decoder_output));\n\tassign\n\t\tdivider_1D_w = {padded_3_zeros_w, divider_in_w},\n\t\tdivider_2D_w = {padded_2_zeros_w, divider_in_w, 1'b0},\n\t\tdivider_dffe_1a_w = divider_dffe_1a,\n\t\tdivider_dffe_w = {1'b1, divider_dffe_1a_w},\n\t\tdivider_in_w = divider,\n\t\tdivider_reg = divider_dffe_w,\n\t\tneg_qk1d_int_w = neg_qk1d_dffe,\n\t\tneg_qk2d_int_w = neg_qk2d_dffe,\n\t\tpadded_2_zeros_w = {2{1'b0}},\n\t\tpadded_3_zeros_w = {3{1'b0}},\n\t\tpos_qk0d_int_w = {Rk_adder_padded_dffe[24:0], padded_2_zeros_w},\n\t\tpos_qk1d_int_w = pos_qk1d_dffe,\n\t\tpos_qk2d_int_w = pos_qk2d_dffe,\n\t\tqkd_mux_input_w = {{2{pos_qk2d_int_w}}, pos_qk1d_int_w, pos_qk0d_int_w, {2{neg_qk2d_int_w}}, neg_qk1d_int_w, pos_qk0d_int_w},\n\t\tqkd_mux_w = wire_mux55_result[26:0],\n\t\tRk_adder_padded_w = {Rk_dffe_1a_w, padded_2_zeros_w},\n\t\tRk_dffe_1a_w = Rk_in_w,\n\t\tRk_in_w = Rk,\n\t\tRk_next = Rk_next_dffe_w,\n\t\tRk_next_dffe_w = qkd_mux_w,\n\t\trom = rom_out_dffe_w,\n\t\trom_add_w = {Rk_in_w[24:17], divider_in_w[22:19]},\n\t\trom_mux_w = rom_out_1a_w,\n\t\trom_out_1a_w = wire_qds_block50_decoder_output,\n\t\trom_out_dffe_w = rom_out_1a_w;\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_div_single_altfp_div_srt_ext_5mh\n\t( \n\taclr,\n\tclken,\n\tclock,\n\tdenom,\n\tdivider,\n\tnumer,\n\tquotient,\n\tremain) ;\n\tinput   aclr;\n\tinput   clken;\n\tinput   clock;\n\tinput   [23:0]  denom;\n\toutput   [23:0]  divider;\n\tinput   [23:0]  numer;\n\toutput   [27:0]  quotient;\n\toutput   [23:0]  remain;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\ttri0   aclr;\n\ttri1   clken;\n\ttri0   clock;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\n\twire  [23:0]   wire_altfp_div_csa25_result;\n\twire  [27:0]   wire_altfp_div_csa26_result;\n\twire  [27:0]   wire_altfp_div_csa27_result;\n\treg\t[23:0]\tdivider_next_special_dffe;\n\treg\t[26:0]\tRk_remainder_special_dffe;\n\treg\t[49:0]\trom_reg_dffe0c;\n\treg\t[14:0]\trom_reg_dffe10c;\n\treg\t[8:0]\trom_reg_dffe11c;\n\treg\t[2:0]\trom_reg_dffe12c;\n\treg\t[68:0]\trom_reg_dffe1c;\n\treg\t[62:0]\trom_reg_dffe2c;\n\treg\t[56:0]\trom_reg_dffe3c;\n\treg\t[50:0]\trom_reg_dffe4c;\n\treg\t[44:0]\trom_reg_dffe5c;\n\treg\t[38:0]\trom_reg_dffe6c;\n\treg\t[32:0]\trom_reg_dffe7c;\n\treg\t[26:0]\trom_reg_dffe8c;\n\treg\t[20:0]\trom_reg_dffe9c;\n\twire  [23:0]   wire_srt_block_int11_divider_reg;\n\twire  [24:0]   wire_srt_block_int11_Rk_next;\n\twire  [2:0]   wire_srt_block_int11_rom;\n\twire  [23:0]   wire_srt_block_int12_divider_reg;\n\twire  [24:0]   wire_srt_block_int12_Rk_next;\n\twire  [2:0]   wire_srt_block_int12_rom;\n\twire  [23:0]   wire_srt_block_int13_divider_reg;\n\twire  [24:0]   wire_srt_block_int13_Rk_next;\n\twire  [2:0]   wire_srt_block_int13_rom;\n\twire  [23:0]   wire_srt_block_int14_divider_reg;\n\twire  [24:0]   wire_srt_block_int14_Rk_next;\n\twire  [2:0]   wire_srt_block_int14_rom;\n\twire  [23:0]   wire_srt_block_int15_divider_reg;\n\twire  [24:0]   wire_srt_block_int15_Rk_next;\n\twire  [2:0]   wire_srt_block_int15_rom;\n\twire  [23:0]   wire_srt_block_int16_divider_reg;\n\twire  [24:0]   wire_srt_block_int16_Rk_next;\n\twire  [2:0]   wire_srt_block_int16_rom;\n\twire  [23:0]   wire_srt_block_int17_divider_reg;\n\twire  [24:0]   wire_srt_block_int17_Rk_next;\n\twire  [2:0]   wire_srt_block_int17_rom;\n\twire  [23:0]   wire_srt_block_int18_divider_reg;\n\twire  [24:0]   wire_srt_block_int18_Rk_next;\n\twire  [2:0]   wire_srt_block_int18_rom;\n\twire  [23:0]   wire_srt_block_int19_divider_reg;\n\twire  [24:0]   wire_srt_block_int19_Rk_next;\n\twire  [2:0]   wire_srt_block_int19_rom;\n\twire  [23:0]   wire_srt_block_int20_divider_reg;\n\twire  [24:0]   wire_srt_block_int20_Rk_next;\n\twire  [2:0]   wire_srt_block_int20_rom;\n\twire  [23:0]   wire_srt_block_int21_divider_reg;\n\twire  [24:0]   wire_srt_block_int21_Rk_next;\n\twire  [2:0]   wire_srt_block_int21_rom;\n\twire  [23:0]   wire_srt_block_int22_divider_reg;\n\twire  [24:0]   wire_srt_block_int22_Rk_next;\n\twire  [2:0]   wire_srt_block_int22_rom;\n\twire  [23:0]   wire_srt_block_int23_divider_reg;\n\twire  [24:0]   wire_srt_block_int23_Rk_next;\n\twire  [2:0]   wire_srt_block_int23_rom;\n\twire  [23:0]   wire_srt_block_int24_divider_reg;\n\twire  [26:0]   wire_srt_block_int24_Rk_next;\n\twire  [2:0]   wire_srt_block_int24_rom;\n\twire  [23:0]  added_remainder_w;\n\twire  [23:0]  divider_dffe_w;\n\twire  [23:0]  divider_next_special_w;\n\twire  [23:0]  divider_next_w0c;\n\twire  [23:0]  divider_next_w10c;\n\twire  [23:0]  divider_next_w11c;\n\twire  [23:0]  divider_next_w12c;\n\twire  [23:0]  divider_next_w13c;\n\twire  [23:0]  divider_next_w1c;\n\twire  [23:0]  divider_next_w2c;\n\twire  [23:0]  divider_next_w3c;\n\twire  [23:0]  divider_next_w4c;\n\twire  [23:0]  divider_next_w5c;\n\twire  [23:0]  divider_next_w6c;\n\twire  [23:0]  divider_next_w7c;\n\twire  [23:0]  divider_next_w8c;\n\twire  [23:0]  divider_next_w9c;\n\twire  [23:0]  divider_w;\n\twire  [27:0]  full_neg_rom_w;\n\twire  [27:0]  full_pos_rom_w;\n\twire  mux_remainder_w;\n\twire  [1:0]  neg_rom_w0c;\n\twire  [1:0]  neg_rom_w10c;\n\twire  [1:0]  neg_rom_w11c;\n\twire  [1:0]  neg_rom_w12c;\n\twire  [1:0]  neg_rom_w13c;\n\twire  [1:0]  neg_rom_w1c;\n\twire  [1:0]  neg_rom_w2c;\n\twire  [1:0]  neg_rom_w3c;\n\twire  [1:0]  neg_rom_w4c;\n\twire  [1:0]  neg_rom_w5c;\n\twire  [1:0]  neg_rom_w6c;\n\twire  [1:0]  neg_rom_w7c;\n\twire  [1:0]  neg_rom_w8c;\n\twire  [1:0]  neg_rom_w9c;\n\twire  [1:0]  pos_rom_w0c;\n\twire  [1:0]  pos_rom_w10c;\n\twire  [1:0]  pos_rom_w11c;\n\twire  [1:0]  pos_rom_w12c;\n\twire  [1:0]  pos_rom_w13c;\n\twire  [1:0]  pos_rom_w1c;\n\twire  [1:0]  pos_rom_w2c;\n\twire  [1:0]  pos_rom_w3c;\n\twire  [1:0]  pos_rom_w4c;\n\twire  [1:0]  pos_rom_w5c;\n\twire  [1:0]  pos_rom_w6c;\n\twire  [1:0]  pos_rom_w7c;\n\twire  [1:0]  pos_rom_w8c;\n\twire  [1:0]  pos_rom_w9c;\n\twire  [24:0]  Rk_next0_w;\n\twire  [24:0]  Rk_next_w0c;\n\twire  [24:0]  Rk_next_w10c;\n\twire  [24:0]  Rk_next_w11c;\n\twire  [24:0]  Rk_next_w12c;\n\twire  [26:0]  Rk_next_w13c;\n\twire  [24:0]  Rk_next_w1c;\n\twire  [24:0]  Rk_next_w2c;\n\twire  [24:0]  Rk_next_w3c;\n\twire  [24:0]  Rk_next_w4c;\n\twire  [24:0]  Rk_next_w5c;\n\twire  [24:0]  Rk_next_w6c;\n\twire  [24:0]  Rk_next_w7c;\n\twire  [24:0]  Rk_next_w8c;\n\twire  [24:0]  Rk_next_w9c;\n\twire  [26:0]  Rk_remainder_special_w;\n\twire  [23:0]  Rk_remainder_w;\n\twire  [23:0]  Rk_w;\n\twire  [2:0]  rom_dffe_w0c;\n\twire  [2:0]  rom_dffe_w10c;\n\twire  [2:0]  rom_dffe_w11c;\n\twire  [2:0]  rom_dffe_w12c;\n\twire  [2:0]  rom_dffe_w13c;\n\twire  [2:0]  rom_dffe_w1c;\n\twire  [2:0]  rom_dffe_w2c;\n\twire  [2:0]  rom_dffe_w3c;\n\twire  [2:0]  rom_dffe_w4c;\n\twire  [2:0]  rom_dffe_w5c;\n\twire  [2:0]  rom_dffe_w6c;\n\twire  [2:0]  rom_dffe_w7c;\n\twire  [2:0]  rom_dffe_w8c;\n\twire  [2:0]  rom_dffe_w9c;\n\twire  [13:0]  rom_mux_w;\n\twire  [2:0]  rom_out_1a_w;\n\twire  [2:0]  rom_out_w0c;\n\twire  [2:0]  rom_out_w10c;\n\twire  [2:0]  rom_out_w11c;\n\twire  [2:0]  rom_out_w12c;\n\twire  [2:0]  rom_out_w13c;\n\twire  [2:0]  rom_out_w1c;\n\twire  [2:0]  rom_out_w2c;\n\twire  [2:0]  rom_out_w3c;\n\twire  [2:0]  rom_out_w4c;\n\twire  [2:0]  rom_out_w5c;\n\twire  [2:0]  rom_out_w6c;\n\twire  [2:0]  rom_out_w7c;\n\twire  [2:0]  rom_out_w8c;\n\twire  [2:0]  rom_out_w9c;\n\twire  [27:0]  srt_adjust_w;\n\twire  [27:0]  srt_adjusted_w;\n\twire  [27:0]  true_quotient_w;\n\twire  [27:0]  value_one_w;\n\twire  [1:0]  zero_quotient_w;\n\n\tfpoint_hw_qsys_div_single_altfp_div_csa_mke   altfp_div_csa25\n\t( \n\t.dataa(Rk_remainder_special_w[23:0]),\n\t.datab(divider_next_special_w),\n\t.result(wire_altfp_div_csa25_result));\n\tfpoint_hw_qsys_div_single_altfp_div_csa_2jh   altfp_div_csa26\n\t( \n\t.aclr(aclr),\n\t.clken(clken),\n\t.clock(clock),\n\t.dataa(full_pos_rom_w),\n\t.datab(full_neg_rom_w),\n\t.result(wire_altfp_div_csa26_result));\n\tfpoint_hw_qsys_div_single_altfp_div_csa_rle   altfp_div_csa27\n\t( \n\t.dataa(srt_adjust_w),\n\t.datab(value_one_w),\n\t.result(wire_altfp_div_csa27_result));\n\t\n\tinitial\n\t\tdivider_next_special_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) divider_next_special_dffe <= 24'b0;\n\t\telse if  (clken == 1'b1)   divider_next_special_dffe <= divider_next_w13c;\n\t\n\tinitial\n\t\tRk_remainder_special_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) Rk_remainder_special_dffe <= 27'b0;\n\t\telse if  (clken == 1'b1)   Rk_remainder_special_dffe <= Rk_next_w13c;\n\t\n\tinitial\n\t\trom_reg_dffe0c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) rom_reg_dffe0c <= 50'b0;\n\t\telse if  (clken == 1'b1)   rom_reg_dffe0c <= {rom_reg_dffe0c[47:0], rom_out_w0c[1:0]};\n\t\n\tinitial\n\t\trom_reg_dffe10c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) rom_reg_dffe10c <= 15'b0;\n\t\telse if  (clken == 1'b1)   rom_reg_dffe10c <= {rom_reg_dffe10c[11:0], rom_out_w10c};\n\t\n\tinitial\n\t\trom_reg_dffe11c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) rom_reg_dffe11c <= 9'b0;\n\t\telse if  (clken == 1'b1)   rom_reg_dffe11c <= {rom_reg_dffe11c[5:0], rom_out_w11c};\n\t\n\tinitial\n\t\trom_reg_dffe12c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) rom_reg_dffe12c <= 3'b0;\n\t\telse if  (clken == 1'b1)   rom_reg_dffe12c <= {rom_out_w12c};\n\t\n\tinitial\n\t\trom_reg_dffe1c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) rom_reg_dffe1c <= 69'b0;\n\t\telse if  (clken == 1'b1)   rom_reg_dffe1c <= {rom_reg_dffe1c[65:0], rom_out_w1c};\n\t\n\tinitial\n\t\trom_reg_dffe2c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) rom_reg_dffe2c <= 63'b0;\n\t\telse if  (clken == 1'b1)   rom_reg_dffe2c <= {rom_reg_dffe2c[59:0], rom_out_w2c};\n\t\n\tinitial\n\t\trom_reg_dffe3c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) rom_reg_dffe3c <= 57'b0;\n\t\telse if  (clken == 1'b1)   rom_reg_dffe3c <= {rom_reg_dffe3c[53:0], rom_out_w3c};\n\t\n\tinitial\n\t\trom_reg_dffe4c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) rom_reg_dffe4c <= 51'b0;\n\t\telse if  (clken == 1'b1)   rom_reg_dffe4c <= {rom_reg_dffe4c[47:0], rom_out_w4c};\n\t\n\tinitial\n\t\trom_reg_dffe5c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) rom_reg_dffe5c <= 45'b0;\n\t\telse if  (clken == 1'b1)   rom_reg_dffe5c <= {rom_reg_dffe5c[41:0], rom_out_w5c};\n\t\n\tinitial\n\t\trom_reg_dffe6c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) rom_reg_dffe6c <= 39'b0;\n\t\telse if  (clken == 1'b1)   rom_reg_dffe6c <= {rom_reg_dffe6c[35:0], rom_out_w6c};\n\t\n\tinitial\n\t\trom_reg_dffe7c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) rom_reg_dffe7c <= 33'b0;\n\t\telse if  (clken == 1'b1)   rom_reg_dffe7c <= {rom_reg_dffe7c[29:0], rom_out_w7c};\n\t\n\tinitial\n\t\trom_reg_dffe8c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) rom_reg_dffe8c <= 27'b0;\n\t\telse if  (clken == 1'b1)   rom_reg_dffe8c <= {rom_reg_dffe8c[23:0], rom_out_w8c};\n\t\n\tinitial\n\t\trom_reg_dffe9c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) rom_reg_dffe9c <= 21'b0;\n\t\telse if  (clken == 1'b1)   rom_reg_dffe9c <= {rom_reg_dffe9c[17:0], rom_out_w9c};\n\tfpoint_hw_qsys_div_single_srt_block_int_02n   srt_block_int11\n\t( \n\t.aclr(aclr),\n\t.clken(clken),\n\t.clock(clock),\n\t.divider(divider_w),\n\t.divider_reg(wire_srt_block_int11_divider_reg),\n\t.Rk(Rk_w),\n\t.Rk_next(wire_srt_block_int11_Rk_next),\n\t.rom(wire_srt_block_int11_rom));\n\tfpoint_hw_qsys_div_single_srt_block_int_84n   srt_block_int12\n\t( \n\t.aclr(aclr),\n\t.clken(clken),\n\t.clock(clock),\n\t.divider(divider_next_w0c),\n\t.divider_reg(wire_srt_block_int12_divider_reg),\n\t.Rk(Rk_next_w0c),\n\t.Rk_next(wire_srt_block_int12_Rk_next),\n\t.rom(wire_srt_block_int12_rom));\n\tfpoint_hw_qsys_div_single_srt_block_int_84n   srt_block_int13\n\t( \n\t.aclr(aclr),\n\t.clken(clken),\n\t.clock(clock),\n\t.divider(divider_next_w1c),\n\t.divider_reg(wire_srt_block_int13_divider_reg),\n\t.Rk(Rk_next_w1c),\n\t.Rk_next(wire_srt_block_int13_Rk_next),\n\t.rom(wire_srt_block_int13_rom));\n\tfpoint_hw_qsys_div_single_srt_block_int_84n   srt_block_int14\n\t( \n\t.aclr(aclr),\n\t.clken(clken),\n\t.clock(clock),\n\t.divider(divider_next_w2c),\n\t.divider_reg(wire_srt_block_int14_divider_reg),\n\t.Rk(Rk_next_w2c),\n\t.Rk_next(wire_srt_block_int14_Rk_next),\n\t.rom(wire_srt_block_int14_rom));\n\tfpoint_hw_qsys_div_single_srt_block_int_84n   srt_block_int15\n\t( \n\t.aclr(aclr),\n\t.clken(clken),\n\t.clock(clock),\n\t.divider(divider_next_w3c),\n\t.divider_reg(wire_srt_block_int15_divider_reg),\n\t.Rk(Rk_next_w3c),\n\t.Rk_next(wire_srt_block_int15_Rk_next),\n\t.rom(wire_srt_block_int15_rom));\n\tfpoint_hw_qsys_div_single_srt_block_int_84n   srt_block_int16\n\t( \n\t.aclr(aclr),\n\t.clken(clken),\n\t.clock(clock),\n\t.divider(divider_next_w4c),\n\t.divider_reg(wire_srt_block_int16_divider_reg),\n\t.Rk(Rk_next_w4c),\n\t.Rk_next(wire_srt_block_int16_Rk_next),\n\t.rom(wire_srt_block_int16_rom));\n\tfpoint_hw_qsys_div_single_srt_block_int_84n   srt_block_int17\n\t( \n\t.aclr(aclr),\n\t.clken(clken),\n\t.clock(clock),\n\t.divider(divider_next_w5c),\n\t.divider_reg(wire_srt_block_int17_divider_reg),\n\t.Rk(Rk_next_w5c),\n\t.Rk_next(wire_srt_block_int17_Rk_next),\n\t.rom(wire_srt_block_int17_rom));\n\tfpoint_hw_qsys_div_single_srt_block_int_84n   srt_block_int18\n\t( \n\t.aclr(aclr),\n\t.clken(clken),\n\t.clock(clock),\n\t.divider(divider_next_w6c),\n\t.divider_reg(wire_srt_block_int18_divider_reg),\n\t.Rk(Rk_next_w6c),\n\t.Rk_next(wire_srt_block_int18_Rk_next),\n\t.rom(wire_srt_block_int18_rom));\n\tfpoint_hw_qsys_div_single_srt_block_int_84n   srt_block_int19\n\t( \n\t.aclr(aclr),\n\t.clken(clken),\n\t.clock(clock),\n\t.divider(divider_next_w7c),\n\t.divider_reg(wire_srt_block_int19_divider_reg),\n\t.Rk(Rk_next_w7c),\n\t.Rk_next(wire_srt_block_int19_Rk_next),\n\t.rom(wire_srt_block_int19_rom));\n\tfpoint_hw_qsys_div_single_srt_block_int_84n   srt_block_int20\n\t( \n\t.aclr(aclr),\n\t.clken(clken),\n\t.clock(clock),\n\t.divider(divider_next_w8c),\n\t.divider_reg(wire_srt_block_int20_divider_reg),\n\t.Rk(Rk_next_w8c),\n\t.Rk_next(wire_srt_block_int20_Rk_next),\n\t.rom(wire_srt_block_int20_rom));\n\tfpoint_hw_qsys_div_single_srt_block_int_84n   srt_block_int21\n\t( \n\t.aclr(aclr),\n\t.clken(clken),\n\t.clock(clock),\n\t.divider(divider_next_w9c),\n\t.divider_reg(wire_srt_block_int21_divider_reg),\n\t.Rk(Rk_next_w9c),\n\t.Rk_next(wire_srt_block_int21_Rk_next),\n\t.rom(wire_srt_block_int21_rom));\n\tfpoint_hw_qsys_div_single_srt_block_int_84n   srt_block_int22\n\t( \n\t.aclr(aclr),\n\t.clken(clken),\n\t.clock(clock),\n\t.divider(divider_next_w10c),\n\t.divider_reg(wire_srt_block_int22_divider_reg),\n\t.Rk(Rk_next_w10c),\n\t.Rk_next(wire_srt_block_int22_Rk_next),\n\t.rom(wire_srt_block_int22_rom));\n\tfpoint_hw_qsys_div_single_srt_block_int_84n   srt_block_int23\n\t( \n\t.aclr(aclr),\n\t.clken(clken),\n\t.clock(clock),\n\t.divider(divider_next_w11c),\n\t.divider_reg(wire_srt_block_int23_divider_reg),\n\t.Rk(Rk_next_w11c),\n\t.Rk_next(wire_srt_block_int23_Rk_next),\n\t.rom(wire_srt_block_int23_rom));\n\tfpoint_hw_qsys_div_single_srt_block_int_fum   srt_block_int24\n\t( \n\t.aclr(aclr),\n\t.clken(clken),\n\t.clock(clock),\n\t.divider(divider_next_w12c),\n\t.divider_reg(wire_srt_block_int24_divider_reg),\n\t.Rk(Rk_next_w12c),\n\t.Rk_next(wire_srt_block_int24_Rk_next),\n\t.rom(wire_srt_block_int24_rom));\n\tassign\n\t\tadded_remainder_w = wire_altfp_div_csa25_result,\n\t\tdivider = divider_next_special_w,\n\t\tdivider_dffe_w = wire_srt_block_int11_divider_reg,\n\t\tdivider_next_special_w = divider_next_special_dffe,\n\t\tdivider_next_w0c = divider_dffe_w,\n\t\tdivider_next_w10c = wire_srt_block_int21_divider_reg,\n\t\tdivider_next_w11c = wire_srt_block_int22_divider_reg,\n\t\tdivider_next_w12c = wire_srt_block_int23_divider_reg,\n\t\tdivider_next_w13c = wire_srt_block_int24_divider_reg,\n\t\tdivider_next_w1c = wire_srt_block_int12_divider_reg,\n\t\tdivider_next_w2c = wire_srt_block_int13_divider_reg,\n\t\tdivider_next_w3c = wire_srt_block_int14_divider_reg,\n\t\tdivider_next_w4c = wire_srt_block_int15_divider_reg,\n\t\tdivider_next_w5c = wire_srt_block_int16_divider_reg,\n\t\tdivider_next_w6c = wire_srt_block_int17_divider_reg,\n\t\tdivider_next_w7c = wire_srt_block_int18_divider_reg,\n\t\tdivider_next_w8c = wire_srt_block_int19_divider_reg,\n\t\tdivider_next_w9c = wire_srt_block_int20_divider_reg,\n\t\tdivider_w = denom,\n\t\tfull_neg_rom_w = {neg_rom_w0c, neg_rom_w1c, neg_rom_w2c, neg_rom_w3c, neg_rom_w4c, neg_rom_w5c, neg_rom_w6c, neg_rom_w7c, neg_rom_w8c, neg_rom_w9c, neg_rom_w10c, neg_rom_w11c, neg_rom_w12c, neg_rom_w13c},\n\t\tfull_pos_rom_w = {pos_rom_w0c, pos_rom_w1c, pos_rom_w2c, pos_rom_w3c, pos_rom_w4c, pos_rom_w5c, pos_rom_w6c, pos_rom_w7c, pos_rom_w8c, pos_rom_w9c, pos_rom_w10c, pos_rom_w11c, pos_rom_w12c, pos_rom_w13c},\n\t\tmux_remainder_w = ((Rk_remainder_special_w[26] | Rk_remainder_special_w[25]) | Rk_remainder_special_w[24]),\n\t\tneg_rom_w0c = (({2{(~ rom_mux_w[0])}} & zero_quotient_w) | ({2{rom_mux_w[0]}} & rom_dffe_w0c[1:0])),\n\t\tneg_rom_w10c = (({2{(~ rom_mux_w[10])}} & zero_quotient_w) | ({2{rom_mux_w[10]}} & rom_dffe_w10c[1:0])),\n\t\tneg_rom_w11c = (({2{(~ rom_mux_w[11])}} & zero_quotient_w) | ({2{rom_mux_w[11]}} & rom_dffe_w11c[1:0])),\n\t\tneg_rom_w12c = (({2{(~ rom_mux_w[12])}} & zero_quotient_w) | ({2{rom_mux_w[12]}} & rom_dffe_w12c[1:0])),\n\t\tneg_rom_w13c = (({2{(~ rom_mux_w[13])}} & zero_quotient_w) | ({2{rom_mux_w[13]}} & rom_dffe_w13c[1:0])),\n\t\tneg_rom_w1c = (({2{(~ rom_mux_w[1])}} & zero_quotient_w) | ({2{rom_mux_w[1]}} & rom_dffe_w1c[1:0])),\n\t\tneg_rom_w2c = (({2{(~ rom_mux_w[2])}} & zero_quotient_w) | ({2{rom_mux_w[2]}} & rom_dffe_w2c[1:0])),\n\t\tneg_rom_w3c = (({2{(~ rom_mux_w[3])}} & zero_quotient_w) | ({2{rom_mux_w[3]}} & rom_dffe_w3c[1:0])),\n\t\tneg_rom_w4c = (({2{(~ rom_mux_w[4])}} & zero_quotient_w) | ({2{rom_mux_w[4]}} & rom_dffe_w4c[1:0])),\n\t\tneg_rom_w5c = (({2{(~ rom_mux_w[5])}} & zero_quotient_w) | ({2{rom_mux_w[5]}} & rom_dffe_w5c[1:0])),\n\t\tneg_rom_w6c = (({2{(~ rom_mux_w[6])}} & zero_quotient_w) | ({2{rom_mux_w[6]}} & rom_dffe_w6c[1:0])),\n\t\tneg_rom_w7c = (({2{(~ rom_mux_w[7])}} & zero_quotient_w) | ({2{rom_mux_w[7]}} & rom_dffe_w7c[1:0])),\n\t\tneg_rom_w8c = (({2{(~ rom_mux_w[8])}} & zero_quotient_w) | ({2{rom_mux_w[8]}} & rom_dffe_w8c[1:0])),\n\t\tneg_rom_w9c = (({2{(~ rom_mux_w[9])}} & zero_quotient_w) | ({2{rom_mux_w[9]}} & rom_dffe_w9c[1:0])),\n\t\tpos_rom_w0c = (({2{rom_mux_w[0]}} & zero_quotient_w) | ({2{(~ rom_mux_w[0])}} & rom_dffe_w0c[1:0])),\n\t\tpos_rom_w10c = (({2{rom_mux_w[10]}} & zero_quotient_w) | ({2{(~ rom_mux_w[10])}} & rom_dffe_w10c[1:0])),\n\t\tpos_rom_w11c = (({2{rom_mux_w[11]}} & zero_quotient_w) | ({2{(~ rom_mux_w[11])}} & rom_dffe_w11c[1:0])),\n\t\tpos_rom_w12c = (({2{rom_mux_w[12]}} & zero_quotient_w) | ({2{(~ rom_mux_w[12])}} & rom_dffe_w12c[1:0])),\n\t\tpos_rom_w13c = (({2{rom_mux_w[13]}} & zero_quotient_w) | ({2{(~ rom_mux_w[13])}} & rom_dffe_w13c[1:0])),\n\t\tpos_rom_w1c = (({2{rom_mux_w[1]}} & zero_quotient_w) | ({2{(~ rom_mux_w[1])}} & rom_dffe_w1c[1:0])),\n\t\tpos_rom_w2c = (({2{rom_mux_w[2]}} & zero_quotient_w) | ({2{(~ rom_mux_w[2])}} & rom_dffe_w2c[1:0])),\n\t\tpos_rom_w3c = (({2{rom_mux_w[3]}} & zero_quotient_w) | ({2{(~ rom_mux_w[3])}} & rom_dffe_w3c[1:0])),\n\t\tpos_rom_w4c = (({2{rom_mux_w[4]}} & zero_quotient_w) | ({2{(~ rom_mux_w[4])}} & rom_dffe_w4c[1:0])),\n\t\tpos_rom_w5c = (({2{rom_mux_w[5]}} & zero_quotient_w) | ({2{(~ rom_mux_w[5])}} & rom_dffe_w5c[1:0])),\n\t\tpos_rom_w6c = (({2{rom_mux_w[6]}} & zero_quotient_w) | ({2{(~ rom_mux_w[6])}} & rom_dffe_w6c[1:0])),\n\t\tpos_rom_w7c = (({2{rom_mux_w[7]}} & zero_quotient_w) | ({2{(~ rom_mux_w[7])}} & rom_dffe_w7c[1:0])),\n\t\tpos_rom_w8c = (({2{rom_mux_w[8]}} & zero_quotient_w) | ({2{(~ rom_mux_w[8])}} & rom_dffe_w8c[1:0])),\n\t\tpos_rom_w9c = (({2{rom_mux_w[9]}} & zero_quotient_w) | ({2{(~ rom_mux_w[9])}} & rom_dffe_w9c[1:0])),\n\t\tquotient = true_quotient_w,\n\t\tremain = Rk_remainder_w,\n\t\tRk_next0_w = wire_srt_block_int11_Rk_next,\n\t\tRk_next_w0c = Rk_next0_w,\n\t\tRk_next_w10c = wire_srt_block_int21_Rk_next,\n\t\tRk_next_w11c = wire_srt_block_int22_Rk_next,\n\t\tRk_next_w12c = wire_srt_block_int23_Rk_next,\n\t\tRk_next_w13c = wire_srt_block_int24_Rk_next,\n\t\tRk_next_w1c = wire_srt_block_int12_Rk_next,\n\t\tRk_next_w2c = wire_srt_block_int13_Rk_next,\n\t\tRk_next_w3c = wire_srt_block_int14_Rk_next,\n\t\tRk_next_w4c = wire_srt_block_int15_Rk_next,\n\t\tRk_next_w5c = wire_srt_block_int16_Rk_next,\n\t\tRk_next_w6c = wire_srt_block_int17_Rk_next,\n\t\tRk_next_w7c = wire_srt_block_int18_Rk_next,\n\t\tRk_next_w8c = wire_srt_block_int19_Rk_next,\n\t\tRk_next_w9c = wire_srt_block_int20_Rk_next,\n\t\tRk_remainder_special_w = Rk_remainder_special_dffe,\n\t\tRk_remainder_w = (({24{(~ mux_remainder_w)}} & Rk_remainder_special_w[23:0]) | ({24{mux_remainder_w}} & added_remainder_w)),\n\t\tRk_w = numer,\n\t\trom_dffe_w0c = {1'b0, rom_reg_dffe0c[49:48]},\n\t\trom_dffe_w10c = rom_reg_dffe10c[14:12],\n\t\trom_dffe_w11c = rom_reg_dffe11c[8:6],\n\t\trom_dffe_w12c = rom_reg_dffe12c[2:0],\n\t\trom_dffe_w13c = rom_out_w13c,\n\t\trom_dffe_w1c = rom_reg_dffe1c[68:66],\n\t\trom_dffe_w2c = rom_reg_dffe2c[62:60],\n\t\trom_dffe_w3c = rom_reg_dffe3c[56:54],\n\t\trom_dffe_w4c = rom_reg_dffe4c[50:48],\n\t\trom_dffe_w5c = rom_reg_dffe5c[44:42],\n\t\trom_dffe_w6c = rom_reg_dffe6c[38:36],\n\t\trom_dffe_w7c = rom_reg_dffe7c[32:30],\n\t\trom_dffe_w8c = rom_reg_dffe8c[26:24],\n\t\trom_dffe_w9c = rom_reg_dffe9c[20:18],\n\t\trom_mux_w = {rom_dffe_w13c[2], rom_dffe_w12c[2], rom_dffe_w11c[2], rom_dffe_w10c[2], rom_dffe_w9c[2], rom_dffe_w8c[2], rom_dffe_w7c[2], rom_dffe_w6c[2], rom_dffe_w5c[2], rom_dffe_w4c[2], rom_dffe_w3c[2], rom_dffe_w2c[2], rom_dffe_w1c[2], rom_dffe_w0c[2]},\n\t\trom_out_1a_w = wire_srt_block_int11_rom,\n\t\trom_out_w0c = rom_out_1a_w,\n\t\trom_out_w10c = wire_srt_block_int21_rom,\n\t\trom_out_w11c = wire_srt_block_int22_rom,\n\t\trom_out_w12c = wire_srt_block_int23_rom,\n\t\trom_out_w13c = wire_srt_block_int24_rom,\n\t\trom_out_w1c = wire_srt_block_int12_rom,\n\t\trom_out_w2c = wire_srt_block_int13_rom,\n\t\trom_out_w3c = wire_srt_block_int14_rom,\n\t\trom_out_w4c = wire_srt_block_int15_rom,\n\t\trom_out_w5c = wire_srt_block_int16_rom,\n\t\trom_out_w6c = wire_srt_block_int17_rom,\n\t\trom_out_w7c = wire_srt_block_int18_rom,\n\t\trom_out_w8c = wire_srt_block_int19_rom,\n\t\trom_out_w9c = wire_srt_block_int20_rom,\n\t\tsrt_adjust_w = wire_altfp_div_csa26_result,\n\t\tsrt_adjusted_w = wire_altfp_div_csa27_result,\n\t\ttrue_quotient_w = (({28{(~ mux_remainder_w)}} & srt_adjust_w) | ({28{mux_remainder_w}} & srt_adjusted_w)),\n\t\tvalue_one_w = 28'b0000000000000000000000000001,\n\t\tzero_quotient_w = {2{1'b0}};\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_div_single\n\t( \n\taclr,\n\tclk_en,\n\tclock,\n\tdataa,\n\tdatab,\n\tresult) ;\n\tinput   aclr;\n\tinput   clk_en;\n\tinput   clock;\n\tinput   [31:0]  dataa;\n\tinput   [31:0]  datab;\n\toutput   [31:0]  result;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\ttri0   aclr;\n\ttri1   clk_en;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\n\twire  wire_altfp_div_csa8_cout;\n\twire  [23:0]   wire_altfp_div_csa8_result;\n\twire  [23:0]   wire_altfp_div_srt_ext1_divider;\n\twire  [27:0]   wire_altfp_div_srt_ext1_quotient;\n\twire  [23:0]   wire_altfp_div_srt_ext1_remain;\n\treg\t[7:0]\tand_or_dffe;\n\treg\t[7:0]\tand_or_dffe1a;\n\treg\t[7:0]\tand_or_dffe3a;\n\treg\t[7:0]\tand_or_pipeline0c;\n\treg\t[7:0]\tand_or_pipeline10c;\n\treg\t[7:0]\tand_or_pipeline11c;\n\treg\t[7:0]\tand_or_pipeline12c;\n\treg\t[7:0]\tand_or_pipeline13c;\n\treg\t[7:0]\tand_or_pipeline14c;\n\treg\t[7:0]\tand_or_pipeline15c;\n\treg\t[7:0]\tand_or_pipeline16c;\n\treg\t[7:0]\tand_or_pipeline17c;\n\treg\t[7:0]\tand_or_pipeline18c;\n\treg\t[7:0]\tand_or_pipeline19c;\n\treg\t[7:0]\tand_or_pipeline1c;\n\treg\t[7:0]\tand_or_pipeline20c;\n\treg\t[7:0]\tand_or_pipeline21c;\n\treg\t[7:0]\tand_or_pipeline22c;\n\treg\t[7:0]\tand_or_pipeline23c;\n\treg\t[7:0]\tand_or_pipeline24c;\n\treg\t[7:0]\tand_or_pipeline25c;\n\treg\t[7:0]\tand_or_pipeline26c;\n\treg\t[7:0]\tand_or_pipeline27c;\n\treg\t[7:0]\tand_or_pipeline2c;\n\treg\t[7:0]\tand_or_pipeline3c;\n\treg\t[7:0]\tand_or_pipeline4c;\n\treg\t[7:0]\tand_or_pipeline5c;\n\treg\t[7:0]\tand_or_pipeline6c;\n\treg\t[7:0]\tand_or_pipeline7c;\n\treg\t[7:0]\tand_or_pipeline8c;\n\treg\t[7:0]\tand_or_pipeline9c;\n\treg\tbias_addition_overf_dffe;\n\treg\t[23:0]\tdivider_pipe1a;\n\treg\texp_a_and_dffe;\n\treg\texp_a_b_dffe;\n\treg\t[7:0]\texp_a_dffe;\n\treg\texp_a_or_dffe;\n\treg\texp_b_and_dffe;\n\treg\t[7:0]\texp_b_dffe;\n\treg\texp_b_or_dffe;\n\treg\t[8:0]\texp_dffe1a;\n\treg\t[8:0]\texp_dffe2a;\n\treg\t[8:0]\texp_pipeline0c;\n\treg\t[8:0]\texp_pipeline10c;\n\treg\t[8:0]\texp_pipeline11c;\n\treg\t[8:0]\texp_pipeline12c;\n\treg\t[8:0]\texp_pipeline13c;\n\treg\t[8:0]\texp_pipeline14c;\n\treg\t[8:0]\texp_pipeline15c;\n\treg\t[8:0]\texp_pipeline16c;\n\treg\t[8:0]\texp_pipeline17c;\n\treg\t[8:0]\texp_pipeline18c;\n\treg\t[8:0]\texp_pipeline19c;\n\treg\t[8:0]\texp_pipeline1c;\n\treg\t[8:0]\texp_pipeline20c;\n\treg\t[8:0]\texp_pipeline21c;\n\treg\t[8:0]\texp_pipeline22c;\n\treg\t[8:0]\texp_pipeline23c;\n\treg\t[8:0]\texp_pipeline24c;\n\treg\t[8:0]\texp_pipeline25c;\n\treg\t[8:0]\texp_pipeline26c;\n\treg\t[8:0]\texp_pipeline2c;\n\treg\t[8:0]\texp_pipeline3c;\n\treg\t[8:0]\texp_pipeline4c;\n\treg\t[8:0]\texp_pipeline5c;\n\treg\t[8:0]\texp_pipeline6c;\n\treg\t[8:0]\texp_pipeline7c;\n\treg\t[8:0]\texp_pipeline8c;\n\treg\t[8:0]\texp_pipeline9c;\n\treg\t[7:0]\texp_res_pipe3;\n\treg\timplied_bit;\n\treg\timplied_bit2a;\n\treg\tman_a_and_dffe;\n\treg\t[22:0]\tman_a_dffe;\n\treg\tman_a_or_dffe;\n\treg\tman_b_and_dffe;\n\treg\t[22:0]\tman_b_dffe;\n\treg\tman_b_or_dffe;\n\treg\t[23:0]\tman_res_pipe3;\n\treg\t[27:0]\tquotient_pipe1a;\n\treg\t[23:0]\tremainder_pipe1a;\n\treg\t[31:0]\tresult_output_dffe;\n\treg\trnd_overflow_dffe;\n\treg\t[23:0]\trnded_man_pipe2a;\n\treg\tsign_a_dffe;\n\treg\tsign_b_dffe;\n\treg\tsign_div_pipeline0c;\n\treg\tsign_div_pipeline10c;\n\treg\tsign_div_pipeline11c;\n\treg\tsign_div_pipeline12c;\n\treg\tsign_div_pipeline13c;\n\treg\tsign_div_pipeline14c;\n\treg\tsign_div_pipeline15c;\n\treg\tsign_div_pipeline16c;\n\treg\tsign_div_pipeline17c;\n\treg\tsign_div_pipeline18c;\n\treg\tsign_div_pipeline19c;\n\treg\tsign_div_pipeline1c;\n\treg\tsign_div_pipeline20c;\n\treg\tsign_div_pipeline21c;\n\treg\tsign_div_pipeline22c;\n\treg\tsign_div_pipeline23c;\n\treg\tsign_div_pipeline24c;\n\treg\tsign_div_pipeline25c;\n\treg\tsign_div_pipeline26c;\n\treg\tsign_div_pipeline27c;\n\treg\tsign_div_pipeline2c;\n\treg\tsign_div_pipeline3c;\n\treg\tsign_div_pipeline4c;\n\treg\tsign_div_pipeline5c;\n\treg\tsign_div_pipeline6c;\n\treg\tsign_div_pipeline7c;\n\treg\tsign_div_pipeline8c;\n\treg\tsign_div_pipeline9c;\n\treg\tsign_pipe1a;\n\treg\tsign_pipe2a;\n\treg\tsign_pipe3a;\n\twire  wire_add_sub10_overflow;\n\twire  [8:0]   wire_add_sub10_result;\n\twire  [8:0]   wire_add_sub9_result;\n\twire  wire_cmpr2_aeb;\n\twire  wire_cmpr2_agb;\n\twire  wire_cmpr3_aeb;\n\twire  wire_cmpr3_agb;\n\twire  wire_cmpr4_aeb;\n\twire  wire_cmpr4_agb;\n\twire  wire_cmpr5_ageb;\n\twire  wire_cmpr6_aeb;\n\twire  wire_cmpr6_agb;\n\twire  wire_cmpr7_ageb;\n\twire  [23:0]  add_1_dataa_w;\n\twire  [23:0]  add_1_datab_w;\n\twire  add_1_w;\n\twire  [23:0]  add_one_process_w;\n\twire  [7:0]  and_or_dffe1a_w;\n\twire  [7:0]  and_or_dffe3a_w;\n\twire  [7:0]  and_or_dffe_w;\n\twire  [7:0]  and_or_int_w;\n\twire  [7:0]  and_or_pipeline_w;\n\twire  [8:0]  bias_add_w;\n\twire  bias_addition_overf_w;\n\twire  [7:0]  bias_addition_w;\n\twire  [8:0]  bias_value_w;\n\twire  [23:0]  checked_quotient_dffe1a_w;\n\twire  [23:0]  checked_quotient_w;\n\twire  [7:0]  dataa_exp_bus_w;\n\twire  [31:0]  dataa_int;\n\twire  [22:0]  dataa_man_bus_w;\n\twire  dataa_S0;\n\twire  [7:0]  datab_exp_bus_w;\n\twire  [31:0]  datab_int;\n\twire  [22:0]  datab_man_bus_w;\n\twire  datab_S0;\n\twire  [23:0]  divider_srt_w;\n\twire  exp_a_and_msb2_w;\n\twire  exp_a_and_msb_w;\n\twire  exp_a_and_mux_w;\n\twire  [7:0]  exp_a_and_w;\n\twire  exp_a_b_w;\n\twire  [7:0]  exp_a_bus_w;\n\twire  exp_a_non_zero_w;\n\twire  exp_a_one_w;\n\twire  exp_a_or_msb2_w;\n\twire  exp_a_or_msb_w;\n\twire  exp_a_or_mux_w;\n\twire  [7:0]  exp_a_or_w;\n\twire  [7:0]  exp_a_w;\n\twire  exp_a_zero_w;\n\twire  exp_b_and_msb2_w;\n\twire  exp_b_and_msb_w;\n\twire  exp_b_and_mux_w;\n\twire  [7:0]  exp_b_and_w;\n\twire  [7:0]  exp_b_bus_w;\n\twire  exp_b_non_zero_w;\n\twire  exp_b_one_w;\n\twire  exp_b_or_msb2_w;\n\twire  exp_b_or_msb_w;\n\twire  exp_b_or_mux_w;\n\twire  [7:0]  exp_b_or_w;\n\twire  [7:0]  exp_b_w;\n\twire  exp_b_zero_w;\n\twire  exp_bias_and_res_w;\n\twire  [7:0]  exp_bias_and_w;\n\twire  [7:0]  exp_bias_bus_w;\n\twire  [8:0]  exp_dffe1a_w;\n\twire  [8:0]  exp_dffe2a_w;\n\twire  [7:0]  exp_exc_ones_w;\n\twire  [7:0]  exp_exc_zeros_w;\n\twire  [1:0]  exp_higher_bit;\n\twire  [1:0]  exp_higher_or;\n\twire  exp_infi_bus_w;\n\twire  [7:0]  exp_man_and_or_w;\n\twire  exp_or_result_w;\n\twire  [8:0]  exp_pipeline_w;\n\twire  [7:0]  exp_res_and_w;\n\twire  [7:0]  exp_res_bus_w;\n\twire  [7:0]  exp_res_int2_bus_w;\n\twire  [7:0]  exp_res_int2_or_w;\n\twire  [7:0]  exp_res_int2_w;\n\twire  [7:0]  exp_res_int_w;\n\twire  [7:0]  exp_res_w;\n\twire  exp_sign_w;\n\twire  [8:0]  exp_sub_a_w;\n\twire  [8:0]  exp_sub_b_w;\n\twire  [8:0]  exp_sub_w;\n\twire  exp_zero_bus_w;\n\twire  guard_bit_dffe1a_w;\n\twire  guard_bit_quo_msb_m1;\n\twire  guard_bit_quo_msb_m2;\n\twire  guard_bit_w;\n\twire  infi_combi_w;\n\twire  infi_dataa_w;\n\twire  infi_datab_w;\n\twire  [31:0]  infi_res_w;\n\twire  infinite_int_w;\n\twire  infinite_w;\n\twire  [23:0]  man_24_zeros_w;\n\twire  man_a_and_msb2_w;\n\twire  man_a_and_msb_w;\n\twire  man_a_and_mux_w;\n\twire  [22:0]  man_a_and_w;\n\twire  [22:0]  man_a_bus_w;\n\twire  [22:0]  man_a_int_w;\n\twire  man_a_non_zero_w;\n\twire  man_a_one_w;\n\twire  man_a_or_msb2_w;\n\twire  man_a_or_msb_w;\n\twire  man_a_or_mux_w;\n\twire  [22:0]  man_a_or_w;\n\twire  [23:0]  man_a_w;\n\twire  man_a_zero_w;\n\twire  man_b_and_msb2_w;\n\twire  man_b_and_msb_w;\n\twire  man_b_and_mux_w;\n\twire  [22:0]  man_b_and_w;\n\twire  [22:0]  man_b_bus_w;\n\twire  [22:0]  man_b_int_w;\n\twire  man_b_non_zero_w;\n\twire  man_b_one_w;\n\twire  man_b_or_msb2_w;\n\twire  man_b_or_msb_w;\n\twire  man_b_or_mux_w;\n\twire  [22:0]  man_b_or_w;\n\twire  [23:0]  man_b_w;\n\twire  man_b_zero_w;\n\twire  [22:0]  man_exc_nan_w;\n\twire  [22:0]  man_exc_zeros_w;\n\twire  [22:0]  man_res_bus_w;\n\twire  [23:0]  man_res_int2_w;\n\twire  [23:0]  man_res_int_w;\n\twire  [22:0]  man_res_or_w;\n\twire  [23:0]  man_res_w;\n\twire  mux1_exp_s0a;\n\twire  mux1_exp_s1a;\n\twire  [31:0]  mux_1_res_w;\n\twire  [31:0]  mux_2_res_w;\n\twire  [31:0]  mux_3_res_w;\n\twire  mux_zero_non_zero_S0;\n\twire  [23:0]  mux_zero_non_zero_w;\n\twire  nan_dataa_w;\n\twire  nan_datab_w;\n\twire  [31:0]  nan_res_w;\n\twire  nan_w;\n\twire  norm_dataa_w;\n\twire  norm_datab_w;\n\twire  [7:0]  norm_infi_and_w;\n\twire  [7:0]  norm_infi_bus_w;\n\twire  [31:0]  norm_res_int_w;\n\twire  [7:0]  norm_zero_bus_w;\n\twire  [7:0]  norm_zero_or_w;\n\twire  [7:0]  not_bias_addition_w;\n\twire  not_exp_res_int2_or_res_w;\n\twire  overflow_int_w;\n\twire  [23:0]  overflow_man_w;\n\twire  [7:0]  overflow_ones_w;\n\twire  [52:0]  quo_msb_m1_compare_dataa;\n\twire  [52:0]  quo_msb_m1_compare_datab;\n\twire  quo_msb_m1_compare_w;\n\twire  quo_msb_m1_w;\n\twire  [53:0]  quo_msb_m2_compare_dataa;\n\twire  [53:0]  quo_msb_m2_compare_datab;\n\twire  quo_msb_m2_compare_w;\n\twire  [23:0]  quotient_msb_m1_w;\n\twire  [23:0]  quotient_msb_m2_w;\n\twire  [27:0]  quotient_w;\n\twire  [23:0]  remainder_srt_w;\n\twire  [23:0]  res_rnded_man_w;\n\twire  rnd_add_overf_w;\n\twire  rnd_overflow;\n\twire  [23:0]  rnded_man_w;\n\twire  round_bit_dffe1a_w;\n\twire  round_bit_quo_msb_m1;\n\twire  round_bit_quo_msb_m2;\n\twire  round_bit_w;\n\twire  sign_a_w;\n\twire  sign_b_w;\n\twire  sign_div;\n\twire  sign_div_pipeline_w;\n\twire  sign_exc_bit_w;\n\twire  signed_N_exp_h_or;\n\twire  sticky_bit_dffe1a_w;\n\twire  sticky_bit_quo_msb_m1;\n\twire  [1:0]  sticky_bit_quo_msb_m1_bit;\n\twire  [1:0]  sticky_bit_quo_msb_m1_or;\n\twire  [1:0]  sticky_bit_quo_msb_m1_tmp;\n\twire  sticky_bit_quo_msb_m2;\n\twire  [0:0]  sticky_bit_quo_msb_m2_bit;\n\twire  [0:0]  sticky_bit_quo_msb_m2_or;\n\twire  [0:0]  sticky_bit_quo_msb_m2_tmp;\n\twire  sticky_bit_w;\n\twire  sticky_quo_msb_m1_comparator_lower_lower_ageb_w;\n\twire  sticky_quo_msb_m1_comparator_lower_upper_aeb_w;\n\twire  sticky_quo_msb_m1_comparator_lower_upper_agb_w;\n\twire  sticky_quo_msb_m1_comparator_upper_lower_aeb_w;\n\twire  sticky_quo_msb_m1_comparator_upper_lower_agb_w;\n\twire  sticky_quo_msb_m1_comparator_upper_upper_aeb_w;\n\twire  sticky_quo_msb_m1_comparator_upper_upper_agb_w;\n\twire  sticky_quo_msb_m2_comparator_lower_ageb_w;\n\twire  sticky_quo_msb_m2_comparator_upper_aeb_w;\n\twire  sticky_quo_msb_m2_comparator_upper_agb_w;\n\twire  [7:0]  underflow_zeros_w;\n\twire  [8:0]  value_add_1_w;\n\twire  [8:0]  value_minus_1_w;\n\twire  [8:0]  value_normal_w;\n\twire  [8:0]  value_zero_w;\n\twire  [23:0]  zero_bit_23_w;\n\twire  [30:0]  zero_bit_31_w;\n\twire  [7:0]  zero_bit_8_w;\n\twire  zero_bit_w;\n\twire  zero_dataa_w;\n\twire  zero_datab_w;\n\twire  [31:0]  zero_res_w;\n\twire  zero_w;\n\n\tfpoint_hw_qsys_div_single_altfp_div_csa_vhf   altfp_div_csa8\n\t( \n\t.cin(add_1_w),\n\t.cout(wire_altfp_div_csa8_cout),\n\t.dataa(add_1_dataa_w),\n\t.datab(add_1_datab_w),\n\t.result(wire_altfp_div_csa8_result));\n\tfpoint_hw_qsys_div_single_altfp_div_srt_ext_5mh   altfp_div_srt_ext1\n\t( \n\t.aclr(aclr),\n\t.clken(clk_en),\n\t.clock(clock),\n\t.denom(man_b_w),\n\t.divider(wire_altfp_div_srt_ext1_divider),\n\t.numer(man_a_w),\n\t.quotient(wire_altfp_div_srt_ext1_quotient),\n\t.remain(wire_altfp_div_srt_ext1_remain));\n\t\n\tinitial\n\t\tand_or_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_dffe <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_dffe <= exp_man_and_or_w;\n\t\n\tinitial\n\t\tand_or_dffe1a = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_dffe1a <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_dffe1a <= and_or_pipeline_w;\n\t\n\tinitial\n\t\tand_or_dffe3a = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_dffe3a <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_dffe3a <= and_or_int_w;\n\t\n\tinitial\n\t\tand_or_pipeline0c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_pipeline0c <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_pipeline0c <= and_or_dffe_w;\n\t\n\tinitial\n\t\tand_or_pipeline10c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_pipeline10c <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_pipeline10c <= and_or_pipeline9c;\n\t\n\tinitial\n\t\tand_or_pipeline11c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_pipeline11c <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_pipeline11c <= and_or_pipeline10c;\n\t\n\tinitial\n\t\tand_or_pipeline12c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_pipeline12c <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_pipeline12c <= and_or_pipeline11c;\n\t\n\tinitial\n\t\tand_or_pipeline13c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_pipeline13c <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_pipeline13c <= and_or_pipeline12c;\n\t\n\tinitial\n\t\tand_or_pipeline14c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_pipeline14c <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_pipeline14c <= and_or_pipeline13c;\n\t\n\tinitial\n\t\tand_or_pipeline15c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_pipeline15c <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_pipeline15c <= and_or_pipeline14c;\n\t\n\tinitial\n\t\tand_or_pipeline16c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_pipeline16c <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_pipeline16c <= and_or_pipeline15c;\n\t\n\tinitial\n\t\tand_or_pipeline17c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_pipeline17c <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_pipeline17c <= and_or_pipeline16c;\n\t\n\tinitial\n\t\tand_or_pipeline18c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_pipeline18c <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_pipeline18c <= and_or_pipeline17c;\n\t\n\tinitial\n\t\tand_or_pipeline19c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_pipeline19c <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_pipeline19c <= and_or_pipeline18c;\n\t\n\tinitial\n\t\tand_or_pipeline1c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_pipeline1c <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_pipeline1c <= and_or_pipeline0c;\n\t\n\tinitial\n\t\tand_or_pipeline20c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_pipeline20c <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_pipeline20c <= and_or_pipeline19c;\n\t\n\tinitial\n\t\tand_or_pipeline21c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_pipeline21c <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_pipeline21c <= and_or_pipeline20c;\n\t\n\tinitial\n\t\tand_or_pipeline22c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_pipeline22c <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_pipeline22c <= and_or_pipeline21c;\n\t\n\tinitial\n\t\tand_or_pipeline23c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_pipeline23c <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_pipeline23c <= and_or_pipeline22c;\n\t\n\tinitial\n\t\tand_or_pipeline24c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_pipeline24c <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_pipeline24c <= and_or_pipeline23c;\n\t\n\tinitial\n\t\tand_or_pipeline25c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_pipeline25c <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_pipeline25c <= and_or_pipeline24c;\n\t\n\tinitial\n\t\tand_or_pipeline26c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_pipeline26c <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_pipeline26c <= and_or_pipeline25c;\n\t\n\tinitial\n\t\tand_or_pipeline27c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_pipeline27c <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_pipeline27c <= and_or_pipeline26c;\n\t\n\tinitial\n\t\tand_or_pipeline2c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_pipeline2c <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_pipeline2c <= and_or_pipeline1c;\n\t\n\tinitial\n\t\tand_or_pipeline3c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_pipeline3c <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_pipeline3c <= and_or_pipeline2c;\n\t\n\tinitial\n\t\tand_or_pipeline4c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_pipeline4c <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_pipeline4c <= and_or_pipeline3c;\n\t\n\tinitial\n\t\tand_or_pipeline5c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_pipeline5c <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_pipeline5c <= and_or_pipeline4c;\n\t\n\tinitial\n\t\tand_or_pipeline6c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_pipeline6c <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_pipeline6c <= and_or_pipeline5c;\n\t\n\tinitial\n\t\tand_or_pipeline7c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_pipeline7c <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_pipeline7c <= and_or_pipeline6c;\n\t\n\tinitial\n\t\tand_or_pipeline8c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_pipeline8c <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_pipeline8c <= and_or_pipeline7c;\n\t\n\tinitial\n\t\tand_or_pipeline9c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_pipeline9c <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_pipeline9c <= and_or_pipeline8c;\n\t\n\tinitial\n\t\tbias_addition_overf_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) bias_addition_overf_dffe <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   bias_addition_overf_dffe <= bias_addition_overf_w;\n\t\n\tinitial\n\t\tdivider_pipe1a = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) divider_pipe1a <= 24'b0;\n\t\telse if  (clk_en == 1'b1)   divider_pipe1a <= wire_altfp_div_srt_ext1_divider;\n\t\n\tinitial\n\t\texp_a_and_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_a_and_dffe <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   exp_a_and_dffe <= exp_a_and_msb2_w;\n\t\n\tinitial\n\t\texp_a_b_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_a_b_dffe <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   exp_a_b_dffe <= exp_or_result_w;\n\t\n\tinitial\n\t\texp_a_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_a_dffe <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   exp_a_dffe <= dataa_int[30:23];\n\t\n\tinitial\n\t\texp_a_or_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_a_or_dffe <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   exp_a_or_dffe <= exp_a_or_msb2_w;\n\t\n\tinitial\n\t\texp_b_and_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_b_and_dffe <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   exp_b_and_dffe <= exp_b_and_msb2_w;\n\t\n\tinitial\n\t\texp_b_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_b_dffe <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   exp_b_dffe <= datab_int[30:23];\n\t\n\tinitial\n\t\texp_b_or_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_b_or_dffe <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   exp_b_or_dffe <= exp_b_or_msb2_w;\n\t\n\tinitial\n\t\texp_dffe1a = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_dffe1a <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_dffe1a <= exp_pipeline_w;\n\t\n\tinitial\n\t\texp_dffe2a = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_dffe2a <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_dffe2a <= exp_dffe1a_w;\n\t\n\tinitial\n\t\texp_pipeline0c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_pipeline0c <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_pipeline0c <= exp_sub_w;\n\t\n\tinitial\n\t\texp_pipeline10c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_pipeline10c <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_pipeline10c <= exp_pipeline9c;\n\t\n\tinitial\n\t\texp_pipeline11c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_pipeline11c <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_pipeline11c <= exp_pipeline10c;\n\t\n\tinitial\n\t\texp_pipeline12c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_pipeline12c <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_pipeline12c <= exp_pipeline11c;\n\t\n\tinitial\n\t\texp_pipeline13c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_pipeline13c <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_pipeline13c <= exp_pipeline12c;\n\t\n\tinitial\n\t\texp_pipeline14c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_pipeline14c <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_pipeline14c <= exp_pipeline13c;\n\t\n\tinitial\n\t\texp_pipeline15c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_pipeline15c <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_pipeline15c <= exp_pipeline14c;\n\t\n\tinitial\n\t\texp_pipeline16c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_pipeline16c <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_pipeline16c <= exp_pipeline15c;\n\t\n\tinitial\n\t\texp_pipeline17c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_pipeline17c <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_pipeline17c <= exp_pipeline16c;\n\t\n\tinitial\n\t\texp_pipeline18c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_pipeline18c <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_pipeline18c <= exp_pipeline17c;\n\t\n\tinitial\n\t\texp_pipeline19c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_pipeline19c <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_pipeline19c <= exp_pipeline18c;\n\t\n\tinitial\n\t\texp_pipeline1c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_pipeline1c <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_pipeline1c <= exp_pipeline0c;\n\t\n\tinitial\n\t\texp_pipeline20c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_pipeline20c <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_pipeline20c <= exp_pipeline19c;\n\t\n\tinitial\n\t\texp_pipeline21c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_pipeline21c <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_pipeline21c <= exp_pipeline20c;\n\t\n\tinitial\n\t\texp_pipeline22c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_pipeline22c <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_pipeline22c <= exp_pipeline21c;\n\t\n\tinitial\n\t\texp_pipeline23c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_pipeline23c <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_pipeline23c <= exp_pipeline22c;\n\t\n\tinitial\n\t\texp_pipeline24c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_pipeline24c <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_pipeline24c <= exp_pipeline23c;\n\t\n\tinitial\n\t\texp_pipeline25c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_pipeline25c <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_pipeline25c <= exp_pipeline24c;\n\t\n\tinitial\n\t\texp_pipeline26c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_pipeline26c <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_pipeline26c <= exp_pipeline25c;\n\t\n\tinitial\n\t\texp_pipeline2c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_pipeline2c <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_pipeline2c <= exp_pipeline1c;\n\t\n\tinitial\n\t\texp_pipeline3c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_pipeline3c <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_pipeline3c <= exp_pipeline2c;\n\t\n\tinitial\n\t\texp_pipeline4c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_pipeline4c <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_pipeline4c <= exp_pipeline3c;\n\t\n\tinitial\n\t\texp_pipeline5c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_pipeline5c <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_pipeline5c <= exp_pipeline4c;\n\t\n\tinitial\n\t\texp_pipeline6c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_pipeline6c <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_pipeline6c <= exp_pipeline5c;\n\t\n\tinitial\n\t\texp_pipeline7c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_pipeline7c <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_pipeline7c <= exp_pipeline6c;\n\t\n\tinitial\n\t\texp_pipeline8c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_pipeline8c <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_pipeline8c <= exp_pipeline7c;\n\t\n\tinitial\n\t\texp_pipeline9c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_pipeline9c <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_pipeline9c <= exp_pipeline8c;\n\t\n\tinitial\n\t\texp_res_pipe3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_res_pipe3 <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   exp_res_pipe3 <= exp_res_int_w;\n\t\n\tinitial\n\t\timplied_bit = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) implied_bit <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   implied_bit <= wire_altfp_div_srt_ext1_quotient[26];\n\t\n\tinitial\n\t\timplied_bit2a = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) implied_bit2a <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   implied_bit2a <= implied_bit;\n\t\n\tinitial\n\t\tman_a_and_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_a_and_dffe <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   man_a_and_dffe <= man_a_and_msb2_w;\n\t\n\tinitial\n\t\tman_a_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_a_dffe <= 23'b0;\n\t\telse if  (clk_en == 1'b1)   man_a_dffe <= dataa_int[22:0];\n\t\n\tinitial\n\t\tman_a_or_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_a_or_dffe <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   man_a_or_dffe <= man_a_or_msb2_w;\n\t\n\tinitial\n\t\tman_b_and_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_b_and_dffe <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   man_b_and_dffe <= man_b_and_msb2_w;\n\t\n\tinitial\n\t\tman_b_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_b_dffe <= 23'b0;\n\t\telse if  (clk_en == 1'b1)   man_b_dffe <= datab_int[22:0];\n\t\n\tinitial\n\t\tman_b_or_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_b_or_dffe <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   man_b_or_dffe <= man_b_or_msb2_w;\n\t\n\tinitial\n\t\tman_res_pipe3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_res_pipe3 <= 24'b0;\n\t\telse if  (clk_en == 1'b1)   man_res_pipe3 <= man_res_int_w;\n\t\n\tinitial\n\t\tquotient_pipe1a = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) quotient_pipe1a <= 28'b0;\n\t\telse if  (clk_en == 1'b1)   quotient_pipe1a <= wire_altfp_div_srt_ext1_quotient;\n\t\n\tinitial\n\t\tremainder_pipe1a = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) remainder_pipe1a <= 24'b0;\n\t\telse if  (clk_en == 1'b1)   remainder_pipe1a <= wire_altfp_div_srt_ext1_remain;\n\t\n\tinitial\n\t\tresult_output_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) result_output_dffe <= 32'b0;\n\t\telse if  (clk_en == 1'b1)   result_output_dffe <= mux_3_res_w;\n\t\n\tinitial\n\t\trnd_overflow_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) rnd_overflow_dffe <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   rnd_overflow_dffe <= rnd_overflow;\n\t\n\tinitial\n\t\trnded_man_pipe2a = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) rnded_man_pipe2a <= 24'b0;\n\t\telse if  (clk_en == 1'b1)   rnded_man_pipe2a <= rnded_man_w;\n\t\n\tinitial\n\t\tsign_a_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_a_dffe <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_a_dffe <= dataa_int[31];\n\t\n\tinitial\n\t\tsign_b_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_b_dffe <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_b_dffe <= datab_int[31];\n\t\n\tinitial\n\t\tsign_div_pipeline0c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_div_pipeline0c <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_div_pipeline0c <= sign_div;\n\t\n\tinitial\n\t\tsign_div_pipeline10c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_div_pipeline10c <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_div_pipeline10c <= sign_div_pipeline9c;\n\t\n\tinitial\n\t\tsign_div_pipeline11c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_div_pipeline11c <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_div_pipeline11c <= sign_div_pipeline10c;\n\t\n\tinitial\n\t\tsign_div_pipeline12c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_div_pipeline12c <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_div_pipeline12c <= sign_div_pipeline11c;\n\t\n\tinitial\n\t\tsign_div_pipeline13c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_div_pipeline13c <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_div_pipeline13c <= sign_div_pipeline12c;\n\t\n\tinitial\n\t\tsign_div_pipeline14c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_div_pipeline14c <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_div_pipeline14c <= sign_div_pipeline13c;\n\t\n\tinitial\n\t\tsign_div_pipeline15c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_div_pipeline15c <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_div_pipeline15c <= sign_div_pipeline14c;\n\t\n\tinitial\n\t\tsign_div_pipeline16c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_div_pipeline16c <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_div_pipeline16c <= sign_div_pipeline15c;\n\t\n\tinitial\n\t\tsign_div_pipeline17c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_div_pipeline17c <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_div_pipeline17c <= sign_div_pipeline16c;\n\t\n\tinitial\n\t\tsign_div_pipeline18c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_div_pipeline18c <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_div_pipeline18c <= sign_div_pipeline17c;\n\t\n\tinitial\n\t\tsign_div_pipeline19c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_div_pipeline19c <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_div_pipeline19c <= sign_div_pipeline18c;\n\t\n\tinitial\n\t\tsign_div_pipeline1c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_div_pipeline1c <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_div_pipeline1c <= sign_div_pipeline0c;\n\t\n\tinitial\n\t\tsign_div_pipeline20c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_div_pipeline20c <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_div_pipeline20c <= sign_div_pipeline19c;\n\t\n\tinitial\n\t\tsign_div_pipeline21c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_div_pipeline21c <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_div_pipeline21c <= sign_div_pipeline20c;\n\t\n\tinitial\n\t\tsign_div_pipeline22c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_div_pipeline22c <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_div_pipeline22c <= sign_div_pipeline21c;\n\t\n\tinitial\n\t\tsign_div_pipeline23c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_div_pipeline23c <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_div_pipeline23c <= sign_div_pipeline22c;\n\t\n\tinitial\n\t\tsign_div_pipeline24c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_div_pipeline24c <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_div_pipeline24c <= sign_div_pipeline23c;\n\t\n\tinitial\n\t\tsign_div_pipeline25c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_div_pipeline25c <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_div_pipeline25c <= sign_div_pipeline24c;\n\t\n\tinitial\n\t\tsign_div_pipeline26c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_div_pipeline26c <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_div_pipeline26c <= sign_div_pipeline25c;\n\t\n\tinitial\n\t\tsign_div_pipeline27c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_div_pipeline27c <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_div_pipeline27c <= sign_div_pipeline26c;\n\t\n\tinitial\n\t\tsign_div_pipeline2c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_div_pipeline2c <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_div_pipeline2c <= sign_div_pipeline1c;\n\t\n\tinitial\n\t\tsign_div_pipeline3c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_div_pipeline3c <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_div_pipeline3c <= sign_div_pipeline2c;\n\t\n\tinitial\n\t\tsign_div_pipeline4c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_div_pipeline4c <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_div_pipeline4c <= sign_div_pipeline3c;\n\t\n\tinitial\n\t\tsign_div_pipeline5c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_div_pipeline5c <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_div_pipeline5c <= sign_div_pipeline4c;\n\t\n\tinitial\n\t\tsign_div_pipeline6c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_div_pipeline6c <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_div_pipeline6c <= sign_div_pipeline5c;\n\t\n\tinitial\n\t\tsign_div_pipeline7c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_div_pipeline7c <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_div_pipeline7c <= sign_div_pipeline6c;\n\t\n\tinitial\n\t\tsign_div_pipeline8c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_div_pipeline8c <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_div_pipeline8c <= sign_div_pipeline7c;\n\t\n\tinitial\n\t\tsign_div_pipeline9c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_div_pipeline9c <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_div_pipeline9c <= sign_div_pipeline8c;\n\t\n\tinitial\n\t\tsign_pipe1a = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_pipe1a <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_pipe1a <= sign_div_pipeline_w;\n\t\n\tinitial\n\t\tsign_pipe2a = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_pipe2a <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_pipe2a <= sign_pipe1a;\n\t\n\tinitial\n\t\tsign_pipe3a = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_pipe3a <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_pipe3a <= sign_pipe2a;\n\tlpm_add_sub   add_sub10\n\t( \n\t.cout(),\n\t.dataa(exp_dffe2a_w),\n\t.datab(bias_add_w),\n\t.overflow(wire_add_sub10_overflow),\n\t.result(wire_add_sub10_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.cin(),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tadd_sub10.lpm_direction = \"ADD\",\n\t\tadd_sub10.lpm_representation = \"SIGNED\",\n\t\tadd_sub10.lpm_width = 9,\n\t\tadd_sub10.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   add_sub9\n\t( \n\t.aclr(aclr),\n\t.clken(clk_en),\n\t.clock(clock),\n\t.cout(),\n\t.dataa(exp_sub_a_w),\n\t.datab(exp_sub_b_w),\n\t.overflow(),\n\t.result(wire_add_sub9_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.add_sub(1'b1),\n\t.cin()\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tadd_sub9.lpm_direction = \"SUB\",\n\t\tadd_sub9.lpm_pipeline = 1,\n\t\tadd_sub9.lpm_representation = \"SIGNED\",\n\t\tadd_sub9.lpm_width = 9,\n\t\tadd_sub9.lpm_type = \"lpm_add_sub\";\n\tlpm_compare   cmpr2\n\t( \n\t.aeb(wire_cmpr2_aeb),\n\t.agb(wire_cmpr2_agb),\n\t.ageb(),\n\t.alb(),\n\t.aleb(),\n\t.aneb(),\n\t.dataa(quo_msb_m1_compare_dataa[52:39]),\n\t.datab(quo_msb_m1_compare_datab[52:39])\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcmpr2.lpm_representation = \"UNSIGNED\",\n\t\tcmpr2.lpm_width = 14,\n\t\tcmpr2.lpm_type = \"lpm_compare\";\n\tlpm_compare   cmpr3\n\t( \n\t.aeb(wire_cmpr3_aeb),\n\t.agb(wire_cmpr3_agb),\n\t.ageb(),\n\t.alb(),\n\t.aleb(),\n\t.aneb(),\n\t.dataa(quo_msb_m1_compare_dataa[38:26]),\n\t.datab(quo_msb_m1_compare_datab[38:26])\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcmpr3.lpm_representation = \"UNSIGNED\",\n\t\tcmpr3.lpm_width = 13,\n\t\tcmpr3.lpm_type = \"lpm_compare\";\n\tlpm_compare   cmpr4\n\t( \n\t.aeb(wire_cmpr4_aeb),\n\t.agb(wire_cmpr4_agb),\n\t.ageb(),\n\t.alb(),\n\t.aleb(),\n\t.aneb(),\n\t.dataa(quo_msb_m1_compare_dataa[25:13]),\n\t.datab(quo_msb_m1_compare_datab[25:13])\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcmpr4.lpm_representation = \"UNSIGNED\",\n\t\tcmpr4.lpm_width = 13,\n\t\tcmpr4.lpm_type = \"lpm_compare\";\n\tlpm_compare   cmpr5\n\t( \n\t.aeb(),\n\t.agb(),\n\t.ageb(wire_cmpr5_ageb),\n\t.alb(),\n\t.aleb(),\n\t.aneb(),\n\t.dataa(quo_msb_m1_compare_dataa[12:0]),\n\t.datab(quo_msb_m1_compare_datab[12:0])\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcmpr5.lpm_representation = \"UNSIGNED\",\n\t\tcmpr5.lpm_width = 13,\n\t\tcmpr5.lpm_type = \"lpm_compare\";\n\tlpm_compare   cmpr6\n\t( \n\t.aeb(wire_cmpr6_aeb),\n\t.agb(wire_cmpr6_agb),\n\t.ageb(),\n\t.alb(),\n\t.aleb(),\n\t.aneb(),\n\t.dataa(quo_msb_m2_compare_dataa[53:27]),\n\t.datab(quo_msb_m2_compare_datab[53:27])\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcmpr6.lpm_representation = \"UNSIGNED\",\n\t\tcmpr6.lpm_width = 27,\n\t\tcmpr6.lpm_type = \"lpm_compare\";\n\tlpm_compare   cmpr7\n\t( \n\t.aeb(),\n\t.agb(),\n\t.ageb(wire_cmpr7_ageb),\n\t.alb(),\n\t.aleb(),\n\t.aneb(),\n\t.dataa(quo_msb_m2_compare_dataa[26:0]),\n\t.datab(quo_msb_m2_compare_datab[26:0])\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcmpr7.lpm_representation = \"UNSIGNED\",\n\t\tcmpr7.lpm_width = 27,\n\t\tcmpr7.lpm_type = \"lpm_compare\";\n\tassign\n\t\tadd_1_dataa_w = {checked_quotient_dffe1a_w},\n\t\tadd_1_datab_w = {24{1'b0}},\n\t\tadd_1_w = ((((~ guard_bit_dffe1a_w) & round_bit_dffe1a_w) & sticky_bit_dffe1a_w) | (guard_bit_dffe1a_w & round_bit_dffe1a_w)),\n\t\tadd_one_process_w = wire_altfp_div_csa8_result,\n\t\tand_or_dffe1a_w = and_or_dffe1a,\n\t\tand_or_dffe3a_w = and_or_dffe3a,\n\t\tand_or_dffe_w = and_or_dffe,\n\t\tand_or_int_w = and_or_dffe1a,\n\t\tand_or_pipeline_w = and_or_pipeline27c,\n\t\tbias_add_w = (({9{(~ exp_a_b_w)}} & value_zero_w) | ({9{exp_a_b_w}} & bias_value_w)),\n\t\tbias_addition_overf_w = (wire_add_sub10_overflow | ((~ exp_sign_w) & exp_bias_and_res_w)),\n\t\tbias_addition_w = wire_add_sub10_result[7:0],\n\t\tbias_value_w = (((({9{((~ mux1_exp_s1a) & (~ mux1_exp_s0a))}} & value_minus_1_w) | ({9{((~ mux1_exp_s1a) & mux1_exp_s0a)}} & value_normal_w)) | ({9{(mux1_exp_s1a & (~ mux1_exp_s0a))}} & value_normal_w)) | ({9{(mux1_exp_s1a & mux1_exp_s0a)}} & value_add_1_w)),\n\t\tchecked_quotient_dffe1a_w = checked_quotient_w,\n\t\tchecked_quotient_w = (({24{quo_msb_m1_w}} & quotient_msb_m1_w) | ({24{(~ quo_msb_m1_w)}} & quotient_msb_m2_w)),\n\t\tdataa_exp_bus_w = dataa[30:23],\n\t\tdataa_int = {dataa[31], (({31{dataa_S0}} & zero_bit_31_w) | ({31{(~ dataa_S0)}} & dataa[30:0]))},\n\t\tdataa_man_bus_w = dataa[22:0],\n\t\tdataa_S0 = ((~ exp_a_or_msb_w) & man_a_or_msb_w),\n\t\tdatab_exp_bus_w = datab[30:23],\n\t\tdatab_int = {datab[31], (({31{datab_S0}} & zero_bit_31_w) | ({31{(~ datab_S0)}} & datab[30:0]))},\n\t\tdatab_man_bus_w = datab[22:0],\n\t\tdatab_S0 = ((~ exp_b_or_msb_w) & man_b_or_msb_w),\n\t\tdivider_srt_w = divider_pipe1a,\n\t\texp_a_and_msb2_w = and_or_dffe3a_w[6],\n\t\texp_a_and_msb_w = exp_a_and_w[7],\n\t\texp_a_and_mux_w = ((dataa_S0 & zero_bit_w) | ((~ dataa_S0) & exp_a_and_msb_w)),\n\t\texp_a_and_w = {(exp_a_and_w[6] & exp_a_bus_w[7]), (exp_a_and_w[5] & exp_a_bus_w[6]), (exp_a_and_w[4] & exp_a_bus_w[5]), (exp_a_and_w[3] & exp_a_bus_w[4]), (exp_a_and_w[2] & exp_a_bus_w[3]), (exp_a_and_w[1] & exp_a_bus_w[2]), (exp_a_and_w[0] & exp_a_bus_w[1]), exp_a_bus_w[0]},\n\t\texp_a_b_w = exp_a_b_dffe,\n\t\texp_a_bus_w = dataa_exp_bus_w,\n\t\texp_a_non_zero_w = exp_a_or_dffe,\n\t\texp_a_one_w = exp_a_and_dffe,\n\t\texp_a_or_msb2_w = and_or_dffe3a_w[7],\n\t\texp_a_or_msb_w = exp_a_or_w[7],\n\t\texp_a_or_mux_w = ((dataa_S0 & zero_bit_w) | ((~ dataa_S0) & exp_a_or_msb_w)),\n\t\texp_a_or_w = {(exp_a_or_w[6] | exp_a_bus_w[7]), (exp_a_or_w[5] | exp_a_bus_w[6]), (exp_a_or_w[4] | exp_a_bus_w[5]), (exp_a_or_w[3] | exp_a_bus_w[4]), (exp_a_or_w[2] | exp_a_bus_w[3]), (exp_a_or_w[1] | exp_a_bus_w[2]), (exp_a_or_w[0] | exp_a_bus_w[1]), exp_a_bus_w[0]},\n\t\texp_a_w = exp_a_dffe,\n\t\texp_a_zero_w = (~ exp_a_or_dffe),\n\t\texp_b_and_msb2_w = and_or_dffe3a_w[2],\n\t\texp_b_and_msb_w = exp_b_and_w[7],\n\t\texp_b_and_mux_w = ((datab_S0 & zero_bit_w) | ((~ datab_S0) & exp_b_and_msb_w)),\n\t\texp_b_and_w = {(exp_b_and_w[6] & exp_b_bus_w[7]), (exp_b_and_w[5] & exp_b_bus_w[6]), (exp_b_and_w[4] & exp_b_bus_w[5]), (exp_b_and_w[3] & exp_b_bus_w[4]), (exp_b_and_w[2] & exp_b_bus_w[3]), (exp_b_and_w[1] & exp_b_bus_w[2]), (exp_b_and_w[0] & exp_b_bus_w[1]), exp_b_bus_w[0]},\n\t\texp_b_bus_w = datab_exp_bus_w,\n\t\texp_b_non_zero_w = exp_b_or_dffe,\n\t\texp_b_one_w = exp_b_and_dffe,\n\t\texp_b_or_msb2_w = and_or_dffe3a_w[3],\n\t\texp_b_or_msb_w = exp_b_or_w[7],\n\t\texp_b_or_mux_w = ((datab_S0 & zero_bit_w) | ((~ datab_S0) & exp_b_or_msb_w)),\n\t\texp_b_or_w = {(exp_b_or_w[6] | exp_b_bus_w[7]), (exp_b_or_w[5] | exp_b_bus_w[6]), (exp_b_or_w[4] | exp_b_bus_w[5]), (exp_b_or_w[3] | exp_b_bus_w[4]), (exp_b_or_w[2] | exp_b_bus_w[3]), (exp_b_or_w[1] | exp_b_bus_w[2]), (exp_b_or_w[0] | exp_b_bus_w[1]), exp_b_bus_w[0]},\n\t\texp_b_w = exp_b_dffe,\n\t\texp_b_zero_w = (~ exp_b_or_dffe),\n\t\texp_bias_and_res_w = exp_bias_and_w[7],\n\t\texp_bias_and_w = {(exp_bias_and_w[6] & exp_bias_bus_w[7]), (exp_bias_and_w[5] & exp_bias_bus_w[6]), (exp_bias_and_w[4] & exp_bias_bus_w[5]), (exp_bias_and_w[3] & exp_bias_bus_w[4]), (exp_bias_and_w[2] & exp_bias_bus_w[3]), (exp_bias_and_w[1] & exp_bias_bus_w[2]), (exp_bias_and_w[0] & exp_bias_bus_w[1]), exp_bias_bus_w[0]},\n\t\texp_bias_bus_w = wire_add_sub10_result[7:0],\n\t\texp_dffe1a_w = exp_dffe1a,\n\t\texp_dffe2a_w = exp_dffe2a,\n\t\texp_exc_ones_w = {8{1'b1}},\n\t\texp_exc_zeros_w = {8{1'b0}},\n\t\texp_higher_bit = not_bias_addition_w[7:6],\n\t\texp_higher_or = {(exp_higher_or[0] | exp_higher_bit[1]), exp_higher_bit[0]},\n\t\texp_infi_bus_w = norm_infi_and_w[7],\n\t\texp_man_and_or_w = {exp_a_or_mux_w, exp_a_and_mux_w, man_a_or_mux_w, man_a_and_mux_w, exp_b_or_mux_w, exp_b_and_mux_w, man_b_or_mux_w, man_b_and_mux_w},\n\t\texp_or_result_w = (and_or_dffe1a_w[7] | and_or_dffe1a_w[3]),\n\t\texp_pipeline_w = exp_pipeline26c,\n\t\texp_res_and_w = {(exp_res_and_w[6] & exp_res_bus_w[7]), (exp_res_and_w[5] & exp_res_bus_w[6]), (exp_res_and_w[4] & exp_res_bus_w[5]), (exp_res_and_w[3] & exp_res_bus_w[4]), (exp_res_and_w[2] & exp_res_bus_w[3]), (exp_res_and_w[1] & exp_res_bus_w[2]), (exp_res_and_w[0] & exp_res_bus_w[1]), exp_res_bus_w[0]},\n\t\texp_res_bus_w = exp_res_w,\n\t\texp_res_int2_bus_w = exp_res_int2_w,\n\t\texp_res_int2_or_w = {(exp_res_int2_or_w[6] | exp_res_int2_bus_w[7]), (exp_res_int2_or_w[5] | exp_res_int2_bus_w[6]), (exp_res_int2_or_w[4] | exp_res_int2_bus_w[5]), (exp_res_int2_or_w[3] | exp_res_int2_bus_w[4]), (exp_res_int2_or_w[2] | exp_res_int2_bus_w[3]), (exp_res_int2_or_w[1] | exp_res_int2_bus_w[2]), (exp_res_int2_or_w[0] | exp_res_int2_bus_w[1]), exp_res_int2_bus_w[0]},\n\t\texp_res_int2_w = exp_res_pipe3,\n\t\texp_res_int_w = ((({8{((~ bias_addition_overf_w) & (~ exp_sign_w))}} & bias_addition_w) | ({8{((~ bias_addition_overf_w) & exp_sign_w)}} & underflow_zeros_w)) | ({8{(bias_addition_overf_w & (~ exp_sign_w))}} & overflow_ones_w)),\n\t\texp_res_w = (({8{not_exp_res_int2_or_res_w}} & zero_bit_8_w) | ({8{(~ not_exp_res_int2_or_res_w)}} & exp_res_int2_w)),\n\t\texp_sign_w = wire_add_sub10_result[8],\n\t\texp_sub_a_w = {1'b0, exp_a_w},\n\t\texp_sub_b_w = {1'b0, exp_b_w},\n\t\texp_sub_w = wire_add_sub9_result,\n\t\texp_zero_bus_w = (~ norm_zero_or_w[7]),\n\t\tguard_bit_dffe1a_w = guard_bit_w,\n\t\tguard_bit_quo_msb_m1 = quotient_w[3],\n\t\tguard_bit_quo_msb_m2 = quotient_w[2],\n\t\tguard_bit_w = ((quo_msb_m1_w & guard_bit_quo_msb_m1) | ((~ quo_msb_m1_w) & guard_bit_quo_msb_m2)),\n\t\tinfi_combi_w = (((infi_dataa_w & norm_datab_w) | (norm_dataa_w & zero_datab_w)) | (infi_dataa_w & zero_datab_w)),\n\t\tinfi_dataa_w = (exp_a_one_w & man_a_zero_w),\n\t\tinfi_datab_w = (exp_b_one_w & man_b_zero_w),\n\t\tinfi_res_w = {sign_exc_bit_w, exp_exc_ones_w, man_exc_zeros_w},\n\t\tinfinite_int_w = (infi_combi_w | overflow_int_w),\n\t\tinfinite_w = infinite_int_w,\n\t\tman_24_zeros_w = {24{1'b0}},\n\t\tman_a_and_msb2_w = and_or_dffe3a_w[4],\n\t\tman_a_and_msb_w = man_a_and_w[22],\n\t\tman_a_and_mux_w = ((dataa_S0 & zero_bit_w) | ((~ dataa_S0) & man_a_and_msb_w)),\n\t\tman_a_and_w = {(man_a_and_w[21] & man_a_bus_w[22]), (man_a_and_w[20] & man_a_bus_w[21]), (man_a_and_w[19] & man_a_bus_w[20]), (man_a_and_w[18] & man_a_bus_w[19]), (man_a_and_w[17] & man_a_bus_w[18]), (man_a_and_w[16] & man_a_bus_w[17]), (man_a_and_w[15] & man_a_bus_w[16]), (man_a_and_w[14] & man_a_bus_w[15]), (man_a_and_w[13] & man_a_bus_w[14]), (man_a_and_w[12] & man_a_bus_w[13]), (man_a_and_w[11] & man_a_bus_w[12]), (man_a_and_w[10] & man_a_bus_w[11]), (man_a_and_w[9] & man_a_bus_w[10]), (man_a_and_w[8] & man_a_bus_w[9]), (man_a_and_w[7] & man_a_bus_w[8]), (man_a_and_w[6] & man_a_bus_w[7]), (man_a_and_w[5] & man_a_bus_w[6]), (man_a_and_w[4] & man_a_bus_w[5]), (man_a_and_w[3] & man_a_bus_w[4]), (man_a_and_w[2] & man_a_bus_w[3]), (man_a_and_w[1] & man_a_bus_w[2]), (man_a_and_w[0] & man_a_bus_w[1]), man_a_bus_w[0]},\n\t\tman_a_bus_w = dataa_man_bus_w,\n\t\tman_a_int_w = man_a_dffe,\n\t\tman_a_non_zero_w = man_a_or_dffe,\n\t\tman_a_one_w = man_a_and_dffe,\n\t\tman_a_or_msb2_w = and_or_dffe3a_w[5],\n\t\tman_a_or_msb_w = man_a_or_w[22],\n\t\tman_a_or_mux_w = ((dataa_S0 & zero_bit_w) | ((~ dataa_S0) & man_a_or_msb_w)),\n\t\tman_a_or_w = {(man_a_or_w[21] | man_a_bus_w[22]), (man_a_or_w[20] | man_a_bus_w[21]), (man_a_or_w[19] | man_a_bus_w[20]), (man_a_or_w[18] | man_a_bus_w[19]), (man_a_or_w[17] | man_a_bus_w[18]), (man_a_or_w[16] | man_a_bus_w[17]), (man_a_or_w[15] | man_a_bus_w[16]), (man_a_or_w[14] | man_a_bus_w[15]), (man_a_or_w[13] | man_a_bus_w[14]), (man_a_or_w[12] | man_a_bus_w[13]), (man_a_or_w[11] | man_a_bus_w[12]), (man_a_or_w[10] | man_a_bus_w[11]), (man_a_or_w[9] | man_a_bus_w[10]), (man_a_or_w[8] | man_a_bus_w[9]), (man_a_or_w[7] | man_a_bus_w[8]), (man_a_or_w[6] | man_a_bus_w[7]), (man_a_or_w[5] | man_a_bus_w[6]), (man_a_or_w[4] | man_a_bus_w[5]), (man_a_or_w[3] | man_a_bus_w[4]), (man_a_or_w[2] | man_a_bus_w[3]), (man_a_or_w[1] | man_a_bus_w[2]), (man_a_or_w[0] | man_a_bus_w[1]), man_a_bus_w[0]},\n\t\tman_a_w = {1'b1, man_a_int_w},\n\t\tman_a_zero_w = (~ man_a_or_dffe),\n\t\tman_b_and_msb2_w = and_or_dffe3a_w[0],\n\t\tman_b_and_msb_w = man_b_and_w[22],\n\t\tman_b_and_mux_w = ((datab_S0 & zero_bit_w) | ((~ datab_S0) & man_b_and_msb_w)),\n\t\tman_b_and_w = {(man_b_and_w[21] & man_b_bus_w[22]), (man_b_and_w[20] & man_b_bus_w[21]), (man_b_and_w[19] & man_b_bus_w[20]), (man_b_and_w[18] & man_b_bus_w[19]), (man_b_and_w[17] & man_b_bus_w[18]), (man_b_and_w[16] & man_b_bus_w[17]), (man_b_and_w[15] & man_b_bus_w[16]), (man_b_and_w[14] & man_b_bus_w[15]), (man_b_and_w[13] & man_b_bus_w[14]), (man_b_and_w[12] & man_b_bus_w[13]), (man_b_and_w[11] & man_b_bus_w[12]), (man_b_and_w[10] & man_b_bus_w[11]), (man_b_and_w[9] & man_b_bus_w[10]), (man_b_and_w[8] & man_b_bus_w[9]), (man_b_and_w[7] & man_b_bus_w[8]), (man_b_and_w[6] & man_b_bus_w[7]), (man_b_and_w[5] & man_b_bus_w[6]), (man_b_and_w[4] & man_b_bus_w[5]), (man_b_and_w[3] & man_b_bus_w[4]), (man_b_and_w[2] & man_b_bus_w[3]), (man_b_and_w[1] & man_b_bus_w[2]), (man_b_and_w[0] & man_b_bus_w[1]), man_b_bus_w[0]},\n\t\tman_b_bus_w = datab_man_bus_w,\n\t\tman_b_int_w = man_b_dffe,\n\t\tman_b_non_zero_w = man_b_or_dffe,\n\t\tman_b_one_w = man_b_and_dffe,\n\t\tman_b_or_msb2_w = and_or_dffe3a_w[1],\n\t\tman_b_or_msb_w = man_b_or_w[22],\n\t\tman_b_or_mux_w = ((datab_S0 & zero_bit_w) | ((~ datab_S0) & man_b_or_msb_w)),\n\t\tman_b_or_w = {(man_b_or_w[21] | man_b_bus_w[22]), (man_b_or_w[20] | man_b_bus_w[21]), (man_b_or_w[19] | man_b_bus_w[20]), (man_b_or_w[18] | man_b_bus_w[19]), (man_b_or_w[17] | man_b_bus_w[18]), (man_b_or_w[16] | man_b_bus_w[17]), (man_b_or_w[15] | man_b_bus_w[16]), (man_b_or_w[14] | man_b_bus_w[15]), (man_b_or_w[13] | man_b_bus_w[14]), (man_b_or_w[12] | man_b_bus_w[13]), (man_b_or_w[11] | man_b_bus_w[12]), (man_b_or_w[10] | man_b_bus_w[11]), (man_b_or_w[9] | man_b_bus_w[10]), (man_b_or_w[8] | man_b_bus_w[9]), (man_b_or_w[7] | man_b_bus_w[8]), (man_b_or_w[6] | man_b_bus_w[7]), (man_b_or_w[5] | man_b_bus_w[6]), (man_b_or_w[4] | man_b_bus_w[5]), (man_b_or_w[3] | man_b_bus_w[4]), (man_b_or_w[2] | man_b_bus_w[3]), (man_b_or_w[1] | man_b_bus_w[2]), (man_b_or_w[0] | man_b_bus_w[1]), man_b_bus_w[0]},\n\t\tman_b_w = {1'b1, man_b_int_w},\n\t\tman_b_zero_w = (~ man_b_or_dffe),\n\t\tman_exc_nan_w = {1'b1, man_exc_zeros_w[21:0]},\n\t\tman_exc_zeros_w = {23{1'b0}},\n\t\tman_res_bus_w = man_res_w[22:0],\n\t\tman_res_int2_w = man_res_pipe3,\n\t\tman_res_int_w = mux_zero_non_zero_w,\n\t\tman_res_or_w = {(man_res_or_w[21] | man_res_bus_w[22]), (man_res_or_w[20] | man_res_bus_w[21]), (man_res_or_w[19] | man_res_bus_w[20]), (man_res_or_w[18] | man_res_bus_w[19]), (man_res_or_w[17] | man_res_bus_w[18]), (man_res_or_w[16] | man_res_bus_w[17]), (man_res_or_w[15] | man_res_bus_w[16]), (man_res_or_w[14] | man_res_bus_w[15]), (man_res_or_w[13] | man_res_bus_w[14]), (man_res_or_w[12] | man_res_bus_w[13]), (man_res_or_w[11] | man_res_bus_w[12]), (man_res_or_w[10] | man_res_bus_w[11]), (man_res_or_w[9] | man_res_bus_w[10]), (man_res_or_w[8] | man_res_bus_w[9]), (man_res_or_w[7] | man_res_bus_w[8]), (man_res_or_w[6] | man_res_bus_w[7]), (man_res_or_w[5] | man_res_bus_w[6]), (man_res_or_w[4] | man_res_bus_w[5]), (man_res_or_w[3] | man_res_bus_w[4]), (man_res_or_w[2] | man_res_bus_w[3]), (man_res_or_w[1] | man_res_bus_w[2]), (man_res_or_w[0] | man_res_bus_w[1]), man_res_bus_w[0]},\n\t\tman_res_w = (({24{not_exp_res_int2_or_res_w}} & zero_bit_23_w) | ({24{(~ not_exp_res_int2_or_res_w)}} & man_res_int2_w)),\n\t\tmux1_exp_s0a = rnd_add_overf_w,\n\t\tmux1_exp_s1a = implied_bit2a,\n\t\tmux_1_res_w = (({32{infinite_w}} & infi_res_w) | ({32{(~ infinite_w)}} & norm_res_int_w)),\n\t\tmux_2_res_w = (({32{zero_w}} & zero_res_w) | ({32{(~ zero_w)}} & mux_1_res_w)),\n\t\tmux_3_res_w = (({32{nan_w}} & nan_res_w) | ({32{(~ nan_w)}} & mux_2_res_w)),\n\t\tmux_zero_non_zero_S0 = (((exp_zero_bus_w | signed_N_exp_h_or) | bias_addition_overf_w) | (exp_infi_bus_w & (~ exp_sign_w))),\n\t\tmux_zero_non_zero_w = (({24{mux_zero_non_zero_S0}} & man_24_zeros_w) | ({24{(~ mux_zero_non_zero_S0)}} & res_rnded_man_w)),\n\t\tnan_dataa_w = (exp_a_one_w & (man_a_non_zero_w | man_a_one_w)),\n\t\tnan_datab_w = (exp_b_one_w & (man_b_non_zero_w | man_b_one_w)),\n\t\tnan_res_w = {sign_exc_bit_w, exp_exc_ones_w, man_exc_nan_w},\n\t\tnan_w = (((nan_dataa_w | nan_datab_w) | (zero_dataa_w & zero_datab_w)) | (infi_dataa_w & infi_datab_w)),\n\t\tnorm_dataa_w = ((exp_a_non_zero_w & ((man_a_zero_w | man_a_non_zero_w) | man_a_one_w)) & (~ exp_a_one_w)),\n\t\tnorm_datab_w = ((exp_b_non_zero_w & ((man_b_zero_w | man_b_non_zero_w) | man_b_one_w)) & (~ exp_b_one_w)),\n\t\tnorm_infi_and_w = {(norm_infi_and_w[6] & norm_infi_bus_w[7]), (norm_infi_and_w[5] & norm_infi_bus_w[6]), (norm_infi_and_w[4] & norm_infi_bus_w[5]), (norm_infi_and_w[3] & norm_infi_bus_w[4]), (norm_infi_and_w[2] & norm_infi_bus_w[3]), (norm_infi_and_w[1] & norm_infi_bus_w[2]), (norm_infi_and_w[0] & norm_infi_bus_w[1]), norm_infi_bus_w[0]},\n\t\tnorm_infi_bus_w = bias_addition_w,\n\t\tnorm_res_int_w = {sign_pipe3a, exp_res_w[7:0], man_res_w[22:0]},\n\t\tnorm_zero_bus_w = bias_addition_w,\n\t\tnorm_zero_or_w = {(norm_zero_or_w[6] | norm_zero_bus_w[7]), (norm_zero_or_w[5] | norm_zero_bus_w[6]), (norm_zero_or_w[4] | norm_zero_bus_w[5]), (norm_zero_or_w[3] | norm_zero_bus_w[4]), (norm_zero_or_w[2] | norm_zero_bus_w[3]), (norm_zero_or_w[1] | norm_zero_bus_w[2]), (norm_zero_or_w[0] | norm_zero_bus_w[1]), norm_zero_bus_w[0]},\n\t\tnot_bias_addition_w = (~ bias_addition_w),\n\t\tnot_exp_res_int2_or_res_w = (~ exp_res_int2_or_w[7]),\n\t\toverflow_int_w = (((bias_addition_overf_dffe & (~ nan_w)) & (~ infi_combi_w)) & (~ ((norm_dataa_w & (~ zero_dataa_w)) & zero_datab_w))),\n\t\toverflow_man_w = {1'b1, {23{1'b0}}},\n\t\toverflow_ones_w = {8{1'b1}},\n\t\tquo_msb_m1_compare_dataa = {remainder_srt_w, {29{1'b0}}},\n\t\tquo_msb_m1_compare_datab = {{29{1'b0}}, divider_srt_w},\n\t\tquo_msb_m1_compare_w = (((sticky_quo_msb_m1_comparator_upper_upper_agb_w | (sticky_quo_msb_m1_comparator_upper_upper_aeb_w & sticky_quo_msb_m1_comparator_upper_lower_agb_w)) | (sticky_quo_msb_m1_comparator_upper_lower_aeb_w & sticky_quo_msb_m1_comparator_lower_upper_agb_w)) | (sticky_quo_msb_m1_comparator_lower_upper_aeb_w & sticky_quo_msb_m1_comparator_lower_lower_ageb_w)),\n\t\tquo_msb_m1_w = quotient_w[26],\n\t\tquo_msb_m2_compare_dataa = {remainder_srt_w, {30{1'b0}}},\n\t\tquo_msb_m2_compare_datab = {{30{1'b0}}, divider_srt_w},\n\t\tquo_msb_m2_compare_w = (sticky_quo_msb_m2_comparator_upper_agb_w | (sticky_quo_msb_m2_comparator_upper_aeb_w & sticky_quo_msb_m2_comparator_lower_ageb_w)),\n\t\tquotient_msb_m1_w = quotient_w[26:3],\n\t\tquotient_msb_m2_w = quotient_w[25:2],\n\t\tquotient_w = quotient_pipe1a,\n\t\tremainder_srt_w = remainder_pipe1a,\n\t\tres_rnded_man_w = rnded_man_pipe2a,\n\t\tresult = result_output_dffe,\n\t\trnd_add_overf_w = rnd_overflow_dffe,\n\t\trnd_overflow = wire_altfp_div_csa8_cout,\n\t\trnded_man_w = (({24{rnd_overflow}} & overflow_man_w) | ({24{(~ rnd_overflow)}} & add_one_process_w)),\n\t\tround_bit_dffe1a_w = round_bit_w,\n\t\tround_bit_quo_msb_m1 = quotient_w[2],\n\t\tround_bit_quo_msb_m2 = quotient_w[1],\n\t\tround_bit_w = ((quo_msb_m1_w & round_bit_quo_msb_m1) | ((~ quo_msb_m1_w) & round_bit_quo_msb_m2)),\n\t\tsign_a_w = sign_a_dffe,\n\t\tsign_b_w = sign_b_dffe,\n\t\tsign_div = (sign_a_w ^ sign_b_w),\n\t\tsign_div_pipeline_w = sign_div_pipeline27c,\n\t\tsign_exc_bit_w = sign_pipe3a,\n\t\tsigned_N_exp_h_or = (exp_sign_w & exp_higher_or[1]),\n\t\tsticky_bit_dffe1a_w = sticky_bit_w,\n\t\tsticky_bit_quo_msb_m1 = (quo_msb_m1_compare_w | sticky_bit_quo_msb_m1_or[1]),\n\t\tsticky_bit_quo_msb_m1_bit = sticky_bit_quo_msb_m1_tmp,\n\t\tsticky_bit_quo_msb_m1_or = {(sticky_bit_quo_msb_m1_or[0] | sticky_bit_quo_msb_m1_bit[1]), sticky_bit_quo_msb_m1_bit[0]},\n\t\tsticky_bit_quo_msb_m1_tmp = quotient_w[1:0],\n\t\tsticky_bit_quo_msb_m2 = (quo_msb_m2_compare_w | sticky_bit_quo_msb_m2_or[0]),\n\t\tsticky_bit_quo_msb_m2_bit = sticky_bit_quo_msb_m2_tmp,\n\t\tsticky_bit_quo_msb_m2_or = {sticky_bit_quo_msb_m2_bit[0]},\n\t\tsticky_bit_quo_msb_m2_tmp = quotient_w[0],\n\t\tsticky_bit_w = ((quo_msb_m1_w & sticky_bit_quo_msb_m1) | ((~ quo_msb_m1_w) & sticky_bit_quo_msb_m2)),\n\t\tsticky_quo_msb_m1_comparator_lower_lower_ageb_w = wire_cmpr5_ageb,\n\t\tsticky_quo_msb_m1_comparator_lower_upper_aeb_w = wire_cmpr4_aeb,\n\t\tsticky_quo_msb_m1_comparator_lower_upper_agb_w = wire_cmpr4_agb,\n\t\tsticky_quo_msb_m1_comparator_upper_lower_aeb_w = wire_cmpr3_aeb,\n\t\tsticky_quo_msb_m1_comparator_upper_lower_agb_w = wire_cmpr3_agb,\n\t\tsticky_quo_msb_m1_comparator_upper_upper_aeb_w = wire_cmpr2_aeb,\n\t\tsticky_quo_msb_m1_comparator_upper_upper_agb_w = wire_cmpr2_agb,\n\t\tsticky_quo_msb_m2_comparator_lower_ageb_w = wire_cmpr7_ageb,\n\t\tsticky_quo_msb_m2_comparator_upper_aeb_w = wire_cmpr6_aeb,\n\t\tsticky_quo_msb_m2_comparator_upper_agb_w = wire_cmpr6_agb,\n\t\tunderflow_zeros_w = {8{1'b0}},\n\t\tvalue_add_1_w = 9'b010000000,\n\t\tvalue_minus_1_w = 9'b001111110,\n\t\tvalue_normal_w = 9'b001111111,\n\t\tvalue_zero_w = {9{1'b0}},\n\t\tzero_bit_23_w = {24{1'b0}},\n\t\tzero_bit_31_w = {31{1'b0}},\n\t\tzero_bit_8_w = {8{1'b0}},\n\t\tzero_bit_w = 1'b0,\n\t\tzero_dataa_w = (exp_a_zero_w & man_a_zero_w),\n\t\tzero_datab_w = (exp_b_zero_w & man_b_zero_w),\n\t\tzero_res_w = {sign_exc_bit_w, exp_exc_zeros_w, man_exc_zeros_w},\n\t\tzero_w = (((zero_dataa_w & norm_datab_w) | (norm_dataa_w & infi_datab_w)) | (zero_dataa_w & infi_datab_w));\nendmodule \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n`timescale 1ns / 1ps\n\n\n\n\n\n\nmodule fpoint_hw_qsys (\n                        \n                         clk,\n                         clk_en,\n                         dataa,\n                         datab,\n                         n,\n                         reset,\n                         start,\n\n                        \n                         done,\n                         result\n                      )\n;\n\n  output           done;\n  output  [ 31: 0] result;\n  input            clk;\n  input            clk_en;\n  input   [ 31: 0] dataa;\n  input   [ 31: 0] datab;\n  input   [  1: 0] n;\n  input            reset;\n  input            start;\n\n  wire             add_sub;\n  wire    [  5: 0] counter_in;\n  reg     [  5: 0] counter_out;\n  reg     [ 31: 0] dataa_regout;\n  reg     [ 31: 0] datab_regout;\n  wire             done;\n  wire    [  5: 0] load_data;\n  wire             local_reset_n;\n  wire    [ 31: 0] result;\n  wire    [ 31: 0] result_addsub;\n  wire    [ 31: 0] result_div;\n  wire    [ 31: 0] result_mult;\n  \n  always @(posedge clk or negedge local_reset_n)\n    begin\n      if (local_reset_n == 0)\n          dataa_regout <= 0;\n      else if (clk_en)\n          dataa_regout <= dataa;\n    end\n\n\n  \n  always @(posedge clk or negedge local_reset_n)\n    begin\n      if (local_reset_n == 0)\n          datab_regout <= 0;\n      else if (clk_en)\n          datab_regout <= datab;\n    end\n\n\n  fpoint_hw_qsys_mult_single the_fp_mult\n    (\n      .aclr (reset),\n      .clk_en (clk_en),\n      .clock (clk),\n      .dataa (dataa_regout),\n      .datab (datab_regout),\n      .result (result_mult)\n    );\n\n\n  fpoint_hw_qsys_addsub_single the_fp_addsub\n    (\n      .aclr (reset),\n      .add_sub (add_sub),\n      .clk_en (clk_en),\n      .clock (clk),\n      .dataa (dataa_regout),\n      .datab (datab_regout),\n      .result (result_addsub)\n    );\n\n\n  fpoint_hw_qsys_div_single the_fp_div\n    (\n      .aclr (reset),\n      .clk_en (clk_en),\n      .clock (clk),\n      .dataa (dataa_regout),\n      .datab (datab_regout),\n      .result (result_div)\n    );\n\n\n  \n  \n  always @(posedge clk or negedge local_reset_n)\n    begin\n      if (local_reset_n == 0)\n          counter_out <= 6'd33;\n      else if (clk_en)\n          counter_out <= counter_in;\n    end\n\n\n  \n  assign counter_in = (start == 0)? counter_out - 1'b1 :\n    load_data;\n\n  assign add_sub = n[0];\n  assign local_reset_n = ~reset;\n  assign done = clk_en & ~|counter_out & ~start;\n  \n  assign load_data = (n == 0)? 10 :\n    (n == 1)? 8 :\n    (n == 2)? 8 :\n    33;\n\n  \n  assign result = (n == 0)? result_mult :\n    (n == 1)? result_addsub :\n    (n == 2)? result_addsub :\n    result_div;\n\n\nendmodule\n\n```"
        },
        {
            "role": "user",
            "content": "Based on the provided original Verilog code, its comments and above answers, generate a detailed specification for the module. Include the following information in a single, concise paragraph:\n1. The name of the module.\n2. A simple explanation of the module's functionality.\n3. The input and output ports, along with a brief explanation of each.\n4. The internal signals used within the module, with a brief explanation of their purpose.\n5. An overview of the different blocks or sections in the code and their functions.\nEnsure that the specification is clear and accurately reflects the details from the code and comments.\nYour answer should be structured and well-organized, providing a comprehensive and detailed overview of the module's design and operation.\nPlease provide your answer in the following format:\nModule name: [module name]. Module specification: [module specification]."
        },
        {
            "role": "assistant",
            "content": "Module name: fpoint_hw_qsys. Module specification: This module is a floating-point arithmetic unit that can perform multiplication, addition/subtraction, and division operations on 32-bit IEEE 754 single-precision floating-point numbers. It takes two input operands (dataa and datab), a 2-bit operation selector (n), and control signals (clk, clk_en, reset, start) as inputs. The module outputs a 32-bit result and a done signal. Internally, it uses registers to store input operands and a counter for operation timing. The module contains three main sub-modules: a floating-point multiplier, an adder/subtractor, and a divider. The operation is selected using the 'n' input, where 0 is multiply, 1/2 is add/subtract, and 3 is divide. The module uses a counter to control the"
        }
    ],
    "claude-message": [
        {
            "role": "user",
            "content": [
                {
                    "type": "text",
                    "text": "You are an expert in hardware design with a deep understanding of Verilog RTL codes. Now I want to train a large language model for code comment generation tasks specifically focused on Verilog RTL codes. And I want you to help me process the raw data, transforming it into suitable formats that can serve as inputs and outputs for the model."
                },
                {
                    "type": "text",
                    "text": "Name of the module and its functionality is as follows: \nModule name: fpoint_hw_qsys\n\nExplanation: This module appears to be a floating-point arithmetic unit that can perform multiplication, addition/subtraction, and division operations on 32-bit IEEE 754 single-precision floating-point numbers. It takes two input operands (dataa and datab), a 2-bit operation selector (n), and control signals (clk, clk_en, reset, start). The module includes separate sub-modules for multiplication, addition/subtraction, and division. It uses a counter to control the operation timing and generates a 'done' signal when the operation is complete. The result of the selected operation is output as a 32-bit floating-point number."
                },
                {
                    "type": "text",
                    "text": "Input and output ports and their explanation is as follows: \nInput ports: clk, clk_en, dataa, datab, n, reset, start. \n\nExplanation:\n- clk: Clock input for synchronous operations\n- clk_en: Clock enable signal\n- dataa: 32-bit input operand A\n- datab: 32-bit input operand B\n- n: 2-bit operation selector (00: multiply, 01/10: add/subtract, 11: divide)\n- reset: Reset signal to initialize the module\n- start: Signal to begin a new operation\n\nOutput ports: done, result.\n\nExplanation:\n- done: Signal indicating the completion of the selected operation\n- result: 32-bit output containing the result of the floating-point operation"
                },
                {
                    "type": "text",
                    "text": "Internal signals and their explanation is as follows: \nBased on the provided code, here are the internal signals and their explanations:\n\nInternal signals: add_sub, counter_in, counter_out, dataa_regout, datab_regout, load_data, local_reset_n, result_addsub, result_div, result_mult.\n\nExplanation:\n- add_sub: Determines whether addition or subtraction is performed in the addsub unit.\n- counter_in: Input value for the operation counter.\n- counter_out: Current value of the operation counter.\n- dataa_regout: Registered version of input operand A.\n- datab_regout: Registered version of input operand B.\n- load_data: Initial counter value based on the selected operation.\n- local_reset_n: Inverted reset signal for internal use.\n- result_addsub: Output from the addition/subtraction unit.\n- result_div: Output from the division unit.\n- result_mult: Output from the multiplication unit.\n\nThese internal signals are used to control the flow of data, manage operation timing, and store intermediate results within the floating-point arithmetic module."
                },
                {
                    "type": "text",
                    "text": "Original Verilog code is as follows: \n<code>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_mult_single\n\t( \n\taclr,\n\tclk_en,\n\tclock,\n\tdataa,\n\tdatab,\n\tresult) ;\n\tinput   aclr;\n\tinput   clk_en;\n\tinput   clock;\n\tinput   [31:0]  dataa;\n\tinput   [31:0]  datab;\n\toutput   [31:0]  result;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\ttri0   aclr;\n\ttri1   clk_en;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\n\treg\tdataa_exp_all_one_ff_p1;\n\treg\tdataa_exp_not_zero_ff_p1;\n\treg\tdataa_man_not_zero_ff_p1;\n\treg\tdataa_man_not_zero_ff_p2;\n\treg\tdatab_exp_all_one_ff_p1;\n\treg\tdatab_exp_not_zero_ff_p1;\n\treg\tdatab_man_not_zero_ff_p1;\n\treg\tdatab_man_not_zero_ff_p2;\n\treg\t[9:0]\tdelay_exp2_bias;\n\treg\t[9:0]\tdelay_exp3_bias;\n\treg\t[9:0]\tdelay_exp_bias;\n\treg\tdelay_man_product_msb;\n\treg\tdelay_man_product_msb2;\n\treg\tdelay_man_product_msb_p0;\n\treg\t[23:0]\tdelay_round;\n\treg\t[8:0]\texp_add_p1;\n\treg\t[9:0]\texp_adj_p1;\n\treg\t[9:0]\texp_adj_p2;\n\treg\t[8:0]\texp_bias_p1;\n\treg\t[8:0]\texp_bias_p2;\n\treg\t[7:0]\texp_result_ff;\n\treg\tinput_is_infinity_dffe_0;\n\treg\tinput_is_infinity_dffe_1;\n\treg\tinput_is_infinity_dffe_2;\n\treg\tinput_is_infinity_dffe_3;\n\treg\tinput_is_infinity_ff1;\n\treg\tinput_is_infinity_ff2;\n\treg\tinput_is_infinity_ff3;\n\treg\tinput_is_infinity_ff4;\n\treg\tinput_is_nan_dffe_0;\n\treg\tinput_is_nan_dffe_1;\n\treg\tinput_is_nan_dffe_2;\n\treg\tinput_is_nan_dffe_3;\n\treg\tinput_is_nan_ff1;\n\treg\tinput_is_nan_ff2;\n\treg\tinput_is_nan_ff3;\n\treg\tinput_is_nan_ff4;\n\treg\tinput_not_zero_dffe_0;\n\treg\tinput_not_zero_dffe_1;\n\treg\tinput_not_zero_dffe_2;\n\treg\tinput_not_zero_dffe_3;\n\treg\tinput_not_zero_ff1;\n\treg\tinput_not_zero_ff2;\n\treg\tinput_not_zero_ff3;\n\treg\tinput_not_zero_ff4;\n\treg\tlsb_dffe;\n\treg\t[22:0]\tman_result_ff;\n\treg\tman_round_carry_p0;\n\treg\t[23:0]\tman_round_p;\n\treg\t[23:0]\tman_round_p0;\n\treg\t[24:0]\tman_round_p2;\n\treg\tround_dffe;\n\treg\t[0:0]\tsign_node_ff0;\n\treg\t[0:0]\tsign_node_ff1;\n\treg\t[0:0]\tsign_node_ff2;\n\treg\t[0:0]\tsign_node_ff3;\n\treg\t[0:0]\tsign_node_ff4;\n\treg\t[0:0]\tsign_node_ff5;\n\treg\t[0:0]\tsign_node_ff6;\n\treg\t[0:0]\tsign_node_ff7;\n\treg\t[0:0]\tsign_node_ff8;\n\treg\t[0:0]\tsign_node_ff9;\n\treg\tsticky_dffe;\n\twire  [8:0]   wire_exp_add_adder_result;\n\twire  [9:0]   wire_exp_adj_adder_result;\n\twire  [9:0]   wire_exp_bias_subtr_result;\n\twire  [24:0]   wire_man_round_adder_result;\n\twire  [47:0]   wire_man_product2_mult_result;\n\twire  [9:0]  bias;\n\twire  [7:0]  dataa_exp_all_one;\n\twire  [7:0]  dataa_exp_not_zero;\n\twire  [22:0]  dataa_man_not_zero;\n\twire  [7:0]  datab_exp_all_one;\n\twire  [7:0]  datab_exp_not_zero;\n\twire  [22:0]  datab_man_not_zero;\n\twire  exp_is_inf;\n\twire  exp_is_zero;\n\twire  [9:0]  expmod;\n\twire  [7:0]  inf_num;\n\twire  lsb_bit;\n\twire  [24:0]  man_shift_full;\n\twire  [7:0]  result_exp_all_one;\n\twire  [8:0]  result_exp_not_zero;\n\twire  round_bit;\n\twire  round_carry;\n\twire  [22:0]  sticky_bit;\n\n\t\n\tinitial\n\t\tdataa_exp_all_one_ff_p1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) dataa_exp_all_one_ff_p1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   dataa_exp_all_one_ff_p1 <= dataa_exp_all_one[7];\n\t\n\tinitial\n\t\tdataa_exp_not_zero_ff_p1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) dataa_exp_not_zero_ff_p1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   dataa_exp_not_zero_ff_p1 <= dataa_exp_not_zero[7];\n\t\n\tinitial\n\t\tdataa_man_not_zero_ff_p1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) dataa_man_not_zero_ff_p1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   dataa_man_not_zero_ff_p1 <= dataa_man_not_zero[10];\n\t\n\tinitial\n\t\tdataa_man_not_zero_ff_p2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) dataa_man_not_zero_ff_p2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   dataa_man_not_zero_ff_p2 <= dataa_man_not_zero[22];\n\t\n\tinitial\n\t\tdatab_exp_all_one_ff_p1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) datab_exp_all_one_ff_p1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   datab_exp_all_one_ff_p1 <= datab_exp_all_one[7];\n\t\n\tinitial\n\t\tdatab_exp_not_zero_ff_p1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) datab_exp_not_zero_ff_p1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   datab_exp_not_zero_ff_p1 <= datab_exp_not_zero[7];\n\t\n\tinitial\n\t\tdatab_man_not_zero_ff_p1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) datab_man_not_zero_ff_p1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   datab_man_not_zero_ff_p1 <= datab_man_not_zero[10];\n\t\n\tinitial\n\t\tdatab_man_not_zero_ff_p2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) datab_man_not_zero_ff_p2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   datab_man_not_zero_ff_p2 <= datab_man_not_zero[22];\n\t\n\tinitial\n\t\tdelay_exp2_bias = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) delay_exp2_bias <= 10'b0;\n\t\telse if  (clk_en == 1'b1)   delay_exp2_bias <= delay_exp_bias;\n\t\n\tinitial\n\t\tdelay_exp3_bias = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) delay_exp3_bias <= 10'b0;\n\t\telse if  (clk_en == 1'b1)   delay_exp3_bias <= delay_exp2_bias;\n\t\n\tinitial\n\t\tdelay_exp_bias = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) delay_exp_bias <= 10'b0;\n\t\telse if  (clk_en == 1'b1)   delay_exp_bias <= wire_exp_bias_subtr_result;\n\t\n\tinitial\n\t\tdelay_man_product_msb = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) delay_man_product_msb <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   delay_man_product_msb <= delay_man_product_msb_p0;\n\t\n\tinitial\n\t\tdelay_man_product_msb2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) delay_man_product_msb2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   delay_man_product_msb2 <= delay_man_product_msb;\n\t\n\tinitial\n\t\tdelay_man_product_msb_p0 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) delay_man_product_msb_p0 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   delay_man_product_msb_p0 <= wire_man_product2_mult_result[47];\n\t\n\tinitial\n\t\tdelay_round = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) delay_round <= 24'b0;\n\t\telse if  (clk_en == 1'b1)   delay_round <= ((man_round_p2[23:0] & {24{(~ man_round_p2[24])}}) | (man_round_p2[24:1] & {24{man_round_p2[24]}}));\n\t\n\tinitial\n\t\texp_add_p1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_add_p1 <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_add_p1 <= wire_exp_add_adder_result;\n\t\n\tinitial\n\t\texp_adj_p1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_adj_p1 <= 10'b0;\n\t\telse if  (clk_en == 1'b1)   exp_adj_p1 <= delay_exp3_bias;\n\t\n\tinitial\n\t\texp_adj_p2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_adj_p2 <= 10'b0;\n\t\telse if  (clk_en == 1'b1)   exp_adj_p2 <= wire_exp_adj_adder_result;\n\t\n\tinitial\n\t\texp_bias_p1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_bias_p1 <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_bias_p1 <= exp_add_p1[8:0];\n\t\n\tinitial\n\t\texp_bias_p2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_bias_p2 <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_bias_p2 <= exp_bias_p1;\n\t\n\tinitial\n\t\texp_result_ff = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_result_ff <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   exp_result_ff <= ((inf_num & {8{((exp_is_inf | input_is_infinity_ff4) | input_is_nan_ff4)}}) | ((exp_adj_p2[7:0] & {8{(~ exp_is_zero)}}) & {8{input_not_zero_ff4}}));\n\t\n\tinitial\n\t\tinput_is_infinity_dffe_0 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_infinity_dffe_0 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_infinity_dffe_0 <= ((dataa_exp_all_one_ff_p1 & (~ (dataa_man_not_zero_ff_p1 | dataa_man_not_zero_ff_p2))) | (datab_exp_all_one_ff_p1 & (~ (datab_man_not_zero_ff_p1 | datab_man_not_zero_ff_p2))));\n\t\n\tinitial\n\t\tinput_is_infinity_dffe_1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_infinity_dffe_1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_infinity_dffe_1 <= input_is_infinity_dffe_0;\n\t\n\tinitial\n\t\tinput_is_infinity_dffe_2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_infinity_dffe_2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_infinity_dffe_2 <= input_is_infinity_dffe_1;\n\t\n\tinitial\n\t\tinput_is_infinity_dffe_3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_infinity_dffe_3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_infinity_dffe_3 <= input_is_infinity_dffe_2;\n\t\n\tinitial\n\t\tinput_is_infinity_ff1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_infinity_ff1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_infinity_ff1 <= input_is_infinity_dffe_3;\n\t\n\tinitial\n\t\tinput_is_infinity_ff2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_infinity_ff2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_infinity_ff2 <= input_is_infinity_ff1;\n\t\n\tinitial\n\t\tinput_is_infinity_ff3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_infinity_ff3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_infinity_ff3 <= input_is_infinity_ff2;\n\t\n\tinitial\n\t\tinput_is_infinity_ff4 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_infinity_ff4 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_infinity_ff4 <= input_is_infinity_ff3;\n\t\n\tinitial\n\t\tinput_is_nan_dffe_0 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_nan_dffe_0 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_nan_dffe_0 <= ((dataa_exp_all_one_ff_p1 & (dataa_man_not_zero_ff_p1 | dataa_man_not_zero_ff_p2)) | (datab_exp_all_one_ff_p1 & (datab_man_not_zero_ff_p1 | datab_man_not_zero_ff_p2)));\n\t\n\tinitial\n\t\tinput_is_nan_dffe_1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_nan_dffe_1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_nan_dffe_1 <= input_is_nan_dffe_0;\n\t\n\tinitial\n\t\tinput_is_nan_dffe_2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_nan_dffe_2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_nan_dffe_2 <= input_is_nan_dffe_1;\n\t\n\tinitial\n\t\tinput_is_nan_dffe_3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_nan_dffe_3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_nan_dffe_3 <= input_is_nan_dffe_2;\n\t\n\tinitial\n\t\tinput_is_nan_ff1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_nan_ff1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_nan_ff1 <= input_is_nan_dffe_3;\n\t\n\tinitial\n\t\tinput_is_nan_ff2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_nan_ff2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_nan_ff2 <= input_is_nan_ff1;\n\t\n\tinitial\n\t\tinput_is_nan_ff3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_nan_ff3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_nan_ff3 <= input_is_nan_ff2;\n\t\n\tinitial\n\t\tinput_is_nan_ff4 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_nan_ff4 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_nan_ff4 <= input_is_nan_ff3;\n\t\n\tinitial\n\t\tinput_not_zero_dffe_0 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_not_zero_dffe_0 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_not_zero_dffe_0 <= (dataa_exp_not_zero_ff_p1 & datab_exp_not_zero_ff_p1);\n\t\n\tinitial\n\t\tinput_not_zero_dffe_1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_not_zero_dffe_1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_not_zero_dffe_1 <= input_not_zero_dffe_0;\n\t\n\tinitial\n\t\tinput_not_zero_dffe_2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_not_zero_dffe_2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_not_zero_dffe_2 <= input_not_zero_dffe_1;\n\t\n\tinitial\n\t\tinput_not_zero_dffe_3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_not_zero_dffe_3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_not_zero_dffe_3 <= input_not_zero_dffe_2;\n\t\n\tinitial\n\t\tinput_not_zero_ff1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_not_zero_ff1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_not_zero_ff1 <= input_not_zero_dffe_3;\n\t\n\tinitial\n\t\tinput_not_zero_ff2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_not_zero_ff2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_not_zero_ff2 <= input_not_zero_ff1;\n\t\n\tinitial\n\t\tinput_not_zero_ff3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_not_zero_ff3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_not_zero_ff3 <= input_not_zero_ff2;\n\t\n\tinitial\n\t\tinput_not_zero_ff4 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_not_zero_ff4 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_not_zero_ff4 <= input_not_zero_ff3;\n\t\n\tinitial\n\t\tlsb_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) lsb_dffe <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   lsb_dffe <= lsb_bit;\n\t\n\tinitial\n\t\tman_result_ff = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_result_ff <= 23'b0;\n\t\telse if  (clk_en == 1'b1)   man_result_ff <= {((((((delay_round[22] & input_not_zero_ff4) & (~ input_is_infinity_ff4)) & (~ exp_is_inf)) & (~ exp_is_zero)) | (input_is_infinity_ff4 & (~ input_not_zero_ff4))) | input_is_nan_ff4), (((((delay_round[21:0] & {22{input_not_zero_ff4}}) & {22{(~ input_is_infinity_ff4)}}) & {22{(~ exp_is_inf)}}) & {22{(~ exp_is_zero)}}) & {22{(~ input_is_nan_ff4)}})};\n\t\n\tinitial\n\t\tman_round_carry_p0 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_round_carry_p0 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   man_round_carry_p0 <= round_carry;\n\t\n\tinitial\n\t\tman_round_p = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_round_p <= 24'b0;\n\t\telse if  (clk_en == 1'b1)   man_round_p <= man_shift_full[24:1];\n\t\n\tinitial\n\t\tman_round_p0 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_round_p0 <= 24'b0;\n\t\telse if  (clk_en == 1'b1)   man_round_p0 <= man_round_p;\n\t\n\tinitial\n\t\tman_round_p2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_round_p2 <= 25'b0;\n\t\telse if  (clk_en == 1'b1)   man_round_p2 <= wire_man_round_adder_result;\n\t\n\tinitial\n\t\tround_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) round_dffe <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   round_dffe <= round_bit;\n\t\n\tinitial\n\t\tsign_node_ff0 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_node_ff0 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_node_ff0 <= (dataa[31] ^ datab[31]);\n\t\n\tinitial\n\t\tsign_node_ff1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_node_ff1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_node_ff1 <= sign_node_ff0[0:0];\n\t\n\tinitial\n\t\tsign_node_ff2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_node_ff2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_node_ff2 <= sign_node_ff1[0:0];\n\t\n\tinitial\n\t\tsign_node_ff3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_node_ff3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_node_ff3 <= sign_node_ff2[0:0];\n\t\n\tinitial\n\t\tsign_node_ff4 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_node_ff4 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_node_ff4 <= sign_node_ff3[0:0];\n\t\n\tinitial\n\t\tsign_node_ff5 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_node_ff5 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_node_ff5 <= sign_node_ff4[0:0];\n\t\n\tinitial\n\t\tsign_node_ff6 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_node_ff6 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_node_ff6 <= sign_node_ff5[0:0];\n\t\n\tinitial\n\t\tsign_node_ff7 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_node_ff7 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_node_ff7 <= sign_node_ff6[0:0];\n\t\n\tinitial\n\t\tsign_node_ff8 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_node_ff8 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_node_ff8 <= sign_node_ff7[0:0];\n\t\n\tinitial\n\t\tsign_node_ff9 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_node_ff9 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_node_ff9 <= sign_node_ff8[0:0];\n\t\n\tinitial\n\t\tsticky_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sticky_dffe <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sticky_dffe <= sticky_bit[22];\n\tlpm_add_sub   exp_add_adder\n\t( \n\t.aclr(aclr),\n\t.cin(1'b0),\n\t.clken(clk_en),\n\t.clock(clock),\n\t.cout(),\n\t.dataa({1'b0, dataa[30:23]}),\n\t.datab({1'b0, datab[30:23]}),\n\t.overflow(),\n\t.result(wire_exp_add_adder_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.add_sub(1'b1)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\texp_add_adder.lpm_pipeline = 1,\n\t\texp_add_adder.lpm_width = 9,\n\t\texp_add_adder.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   exp_adj_adder\n\t( \n\t.cin(1'b0),\n\t.cout(),\n\t.dataa(exp_adj_p1),\n\t.datab({expmod[9:0]}),\n\t.overflow(),\n\t.result(wire_exp_adj_adder_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\texp_adj_adder.lpm_pipeline = 0,\n\t\texp_adj_adder.lpm_width = 10,\n\t\texp_adj_adder.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   exp_bias_subtr\n\t( \n\t.cout(),\n\t.dataa({1'b0, exp_bias_p2}),\n\t.datab({bias[9:0]}),\n\t.overflow(),\n\t.result(wire_exp_bias_subtr_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.cin(),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\texp_bias_subtr.lpm_direction = \"SUB\",\n\t\texp_bias_subtr.lpm_pipeline = 0,\n\t\texp_bias_subtr.lpm_representation = \"UNSIGNED\",\n\t\texp_bias_subtr.lpm_width = 10,\n\t\texp_bias_subtr.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   man_round_adder\n\t( \n\t.cout(),\n\t.dataa({1'b0, man_round_p0}),\n\t.datab({{24{1'b0}}, man_round_carry_p0}),\n\t.overflow(),\n\t.result(wire_man_round_adder_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.cin(),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tman_round_adder.lpm_pipeline = 0,\n\t\tman_round_adder.lpm_width = 25,\n\t\tman_round_adder.lpm_type = \"lpm_add_sub\";\n\tlpm_mult   man_product2_mult\n\t( \n\t.aclr(aclr),\n\t.clken(clk_en),\n\t.clock(clock),\n\t.dataa({1'b1, dataa[22:0]}),\n\t.datab({1'b1, datab[22:0]}),\n\t.result(wire_man_product2_mult_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.sum({1{1'b0}})\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tman_product2_mult.lpm_pipeline = 5,\n\t\tman_product2_mult.lpm_representation = \"UNSIGNED\",\n\t\tman_product2_mult.lpm_widtha = 24,\n\t\tman_product2_mult.lpm_widthb = 24,\n\t\tman_product2_mult.lpm_widthp = 48,\n\t\tman_product2_mult.lpm_widths = 1,\n\t\tman_product2_mult.lpm_type = \"lpm_mult\",\n\t\tman_product2_mult.lpm_hint = \"DEDICATED_MULTIPLIER_CIRCUITRY=YES\";\n\tassign\n\t\tbias = {{3{1'b0}}, {7{1'b1}}},\n\t\tdataa_exp_all_one = {(dataa[30] & dataa_exp_all_one[6]), (dataa[29] & dataa_exp_all_one[5]), (dataa[28] & dataa_exp_all_one[4]), (dataa[27] & dataa_exp_all_one[3]), (dataa[26] & dataa_exp_all_one[2]), (dataa[25] & dataa_exp_all_one[1]), (dataa[24] & dataa_exp_all_one[0]), dataa[23]},\n\t\tdataa_exp_not_zero = {(dataa[30] | dataa_exp_not_zero[6]), (dataa[29] | dataa_exp_not_zero[5]), (dataa[28] | dataa_exp_not_zero[4]), (dataa[27] | dataa_exp_not_zero[3]), (dataa[26] | dataa_exp_not_zero[2]), (dataa[25] | dataa_exp_not_zero[1]), (dataa[24] | dataa_exp_not_zero[0]), dataa[23]},\n\t\tdataa_man_not_zero = {(dataa[22] | dataa_man_not_zero[21]), (dataa[21] | dataa_man_not_zero[20]), (dataa[20] | dataa_man_not_zero[19]), (dataa[19] | dataa_man_not_zero[18]), (dataa[18] | dataa_man_not_zero[17]), (dataa[17] | dataa_man_not_zero[16]), (dataa[16] | dataa_man_not_zero[15]), (dataa[15] | dataa_man_not_zero[14]), (dataa[14] | dataa_man_not_zero[13]), (dataa[13] | dataa_man_not_zero[12]), (dataa[12] | dataa_man_not_zero[11]), dataa[11], (dataa[10] | dataa_man_not_zero[9]), (dataa[9] | dataa_man_not_zero[8]), (dataa[8] | dataa_man_not_zero[7]), (dataa[7] | dataa_man_not_zero[6]), (dataa[6] | dataa_man_not_zero[5]), (dataa[5] | dataa_man_not_zero[4]), (dataa[4] | dataa_man_not_zero[3]), (dataa[3] | dataa_man_not_zero[2]), (dataa[2] | dataa_man_not_zero[1]), (dataa[1] | dataa_man_not_zero[0]), dataa[0]},\n\t\tdatab_exp_all_one = {(datab[30] & datab_exp_all_one[6]), (datab[29] & datab_exp_all_one[5]), (datab[28] & datab_exp_all_one[4]), (datab[27] & datab_exp_all_one[3]), (datab[26] & datab_exp_all_one[2]), (datab[25] & datab_exp_all_one[1]), (datab[24] & datab_exp_all_one[0]), datab[23]},\n\t\tdatab_exp_not_zero = {(datab[30] | datab_exp_not_zero[6]), (datab[29] | datab_exp_not_zero[5]), (datab[28] | datab_exp_not_zero[4]), (datab[27] | datab_exp_not_zero[3]), (datab[26] | datab_exp_not_zero[2]), (datab[25] | datab_exp_not_zero[1]), (datab[24] | datab_exp_not_zero[0]), datab[23]},\n\t\tdatab_man_not_zero = {(datab[22] | datab_man_not_zero[21]), (datab[21] | datab_man_not_zero[20]), (datab[20] | datab_man_not_zero[19]), (datab[19] | datab_man_not_zero[18]), (datab[18] | datab_man_not_zero[17]), (datab[17] | datab_man_not_zero[16]), (datab[16] | datab_man_not_zero[15]), (datab[15] | datab_man_not_zero[14]), (datab[14] | datab_man_not_zero[13]), (datab[13] | datab_man_not_zero[12]), (datab[12] | datab_man_not_zero[11]), datab[11], (datab[10] | datab_man_not_zero[9]), (datab[9] | datab_man_not_zero[8]), (datab[8] | datab_man_not_zero[7]), (datab[7] | datab_man_not_zero[6]), (datab[6] | datab_man_not_zero[5]), (datab[5] | datab_man_not_zero[4]), (datab[4] | datab_man_not_zero[3]), (datab[3] | datab_man_not_zero[2]), (datab[2] | datab_man_not_zero[1]), (datab[1] | datab_man_not_zero[0]), datab[0]},\n\t\texp_is_inf = (((~ exp_adj_p2[9]) & exp_adj_p2[8]) | ((~ exp_adj_p2[8]) & result_exp_all_one[7])),\n\t\texp_is_zero = (exp_adj_p2[9] | (~ result_exp_not_zero[8])),\n\t\texpmod = {{8{1'b0}}, (delay_man_product_msb2 & man_round_p2[24]), (delay_man_product_msb2 ^ man_round_p2[24])},\n\t\tinf_num = {8{1'b1}},\n\t\tlsb_bit = man_shift_full[1],\n\t\tman_shift_full = ((wire_man_product2_mult_result[46:22] & {25{(~ wire_man_product2_mult_result[47])}}) | (wire_man_product2_mult_result[47:23] & {25{wire_man_product2_mult_result[47]}})),\n\t\tresult = {sign_node_ff9[0:0], exp_result_ff[7:0], man_result_ff[22:0]},\n\t\tresult_exp_all_one = {(result_exp_all_one[6] & exp_adj_p2[7]), (result_exp_all_one[5] & exp_adj_p2[6]), (result_exp_all_one[4] & exp_adj_p2[5]), (result_exp_all_one[3] & exp_adj_p2[4]), (result_exp_all_one[2] & exp_adj_p2[3]), (result_exp_all_one[1] & exp_adj_p2[2]), (result_exp_all_one[0] & exp_adj_p2[1]), exp_adj_p2[0]},\n\t\tresult_exp_not_zero = {(result_exp_not_zero[7] | exp_adj_p2[8]), (result_exp_not_zero[6] | exp_adj_p2[7]), (result_exp_not_zero[5] | exp_adj_p2[6]), (result_exp_not_zero[4] | exp_adj_p2[5]), (result_exp_not_zero[3] | exp_adj_p2[4]), (result_exp_not_zero[2] | exp_adj_p2[3]), (result_exp_not_zero[1] | exp_adj_p2[2]), (result_exp_not_zero[0] | exp_adj_p2[1]), exp_adj_p2[0]},\n\t\tround_bit = man_shift_full[0],\n\t\tround_carry = (round_dffe & (lsb_dffe | sticky_dffe)),\n\t\tsticky_bit = {(sticky_bit[21] | (wire_man_product2_mult_result[47] & wire_man_product2_mult_result[22])), (sticky_bit[20] | wire_man_product2_mult_result[21]), (sticky_bit[19] | wire_man_product2_mult_result[20]), (sticky_bit[18] | wire_man_product2_mult_result[19]), (sticky_bit[17] | wire_man_product2_mult_result[18]), (sticky_bit[16] | wire_man_product2_mult_result[17]), (sticky_bit[15] | wire_man_product2_mult_result[16]), (sticky_bit[14] | wire_man_product2_mult_result[15]), (sticky_bit[13] | wire_man_product2_mult_result[14]), (sticky_bit[12] | wire_man_product2_mult_result[13]), (sticky_bit[11] | wire_man_product2_mult_result[12]), (sticky_bit[10] | wire_man_product2_mult_result[11]), (sticky_bit[9] | wire_man_product2_mult_result[10]), (sticky_bit[8] | wire_man_product2_mult_result[9]), (sticky_bit[7] | wire_man_product2_mult_result[8]), (sticky_bit[6] | wire_man_product2_mult_result[7]), (sticky_bit[5] | wire_man_product2_mult_result[6]), (sticky_bit[4] | wire_man_product2_mult_result[5]), (sticky_bit[3] | wire_man_product2_mult_result[4]), (sticky_bit[2] | wire_man_product2_mult_result[3]), (sticky_bit[1] | wire_man_product2_mult_result[2]), (sticky_bit[0] | wire_man_product2_mult_result[1]), wire_man_product2_mult_result[0]};\nendmodule \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_addsub_single_altbarrel_shift_fjg\n\t( \n\taclr,\n\tclk_en,\n\tclock,\n\tdata,\n\tdistance,\n\tresult) ;\n\tinput   aclr;\n\tinput   clk_en;\n\tinput   clock;\n\tinput   [25:0]  data;\n\tinput   [4:0]  distance;\n\toutput   [25:0]  result;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\ttri0   aclr;\n\ttri1   clk_en;\n\ttri0   clock;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\n\treg\t[0:0]\tdir_pipe;\n\treg\t[25:0]\tsbit_piper1d;\n\twire  [5:0]  dir_w;\n\twire  direction_w;\n\twire  [15:0]  pad_w;\n\twire  [155:0]  sbit_w;\n\twire  [4:0]  sel_w;\n\twire  [129:0]  smux_w;\n\n\t\n\tinitial\n\t\tdir_pipe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) dir_pipe <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   dir_pipe <= {dir_w[4]};\n\t\n\tinitial\n\t\tsbit_piper1d = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sbit_piper1d <= 26'b0;\n\t\telse if  (clk_en == 1'b1)   sbit_piper1d <= smux_w[129:104];\n\tassign\n\t\tdir_w = {dir_pipe[0], dir_w[3:0], direction_w},\n\t\tdirection_w = 1'b0,\n\t\tpad_w = {16{1'b0}},\n\t\tresult = sbit_w[155:130],\n\t\tsbit_w = {sbit_piper1d, smux_w[103:0], data},\n\t\tsel_w = {distance[4:0]},\n\t\tsmux_w = {((({26{(sel_w[4] & (~ dir_w[4]))}} & {sbit_w[113:104], pad_w[15:0]}) | ({26{(sel_w[4] & dir_w[4])}} & {pad_w[15:0], sbit_w[129:120]})) | ({26{(~ sel_w[4])}} & sbit_w[129:104])), ((({26{(sel_w[3] & (~ dir_w[3]))}} & {sbit_w[95:78], pad_w[7:0]}) | ({26{(sel_w[3] & dir_w[3])}} & {pad_w[7:0], sbit_w[103:86]})) | ({26{(~ sel_w[3])}} & sbit_w[103:78])), ((({26{(sel_w[2] & (~ dir_w[2]))}} & {sbit_w[73:52], pad_w[3:0]}) | ({26{(sel_w[2] & dir_w[2])}} & {pad_w[3:0], sbit_w[77:56]})) | ({26{(~ sel_w[2])}} & sbit_w[77:52])), ((({26{(sel_w[1] & (~ dir_w[1]))}} & {sbit_w[49:26], pad_w[1:0]}) | ({26{(sel_w[1] & dir_w[1])}} & {pad_w[1:0], sbit_w[51:28]})) | ({26{(~ sel_w[1])}} & sbit_w[51:26])), ((({26{(sel_w[0] & (~ dir_w[0]))}} & {sbit_w[24:0], pad_w[0]}) | ({26{(sel_w[0] & dir_w[0])}} & {pad_w[0], sbit_w[25:1]})) | ({26{(~ sel_w[0])}} & sbit_w[25:0]))};\nendmodule \n\n\n\n\n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_addsub_single_altbarrel_shift_44e\n\t( \n\tdata,\n\tdistance,\n\tresult) ;\n\tinput   [25:0]  data;\n\tinput   [4:0]  distance;\n\toutput   [25:0]  result;\n\n\twire  [5:0]  dir_w;\n\twire  direction_w;\n\twire  [15:0]  pad_w;\n\twire  [155:0]  sbit_w;\n\twire  [4:0]  sel_w;\n\twire  [129:0]  smux_w;\n\n\tassign\n\t\tdir_w = {dir_w[4:0], direction_w},\n\t\tdirection_w = 1'b1,\n\t\tpad_w = {16{1'b0}},\n\t\tresult = sbit_w[155:130],\n\t\tsbit_w = {smux_w[129:0], data},\n\t\tsel_w = {distance[4:0]},\n\t\tsmux_w = {((({26{(sel_w[4] & (~ dir_w[4]))}} & {sbit_w[113:104], pad_w[15:0]}) | ({26{(sel_w[4] & dir_w[4])}} & {pad_w[15:0], sbit_w[129:120]})) | ({26{(~ sel_w[4])}} & sbit_w[129:104])), ((({26{(sel_w[3] & (~ dir_w[3]))}} & {sbit_w[95:78], pad_w[7:0]}) | ({26{(sel_w[3] & dir_w[3])}} & {pad_w[7:0], sbit_w[103:86]})) | ({26{(~ sel_w[3])}} & sbit_w[103:78])), ((({26{(sel_w[2] & (~ dir_w[2]))}} & {sbit_w[73:52], pad_w[3:0]}) | ({26{(sel_w[2] & dir_w[2])}} & {pad_w[3:0], sbit_w[77:56]})) | ({26{(~ sel_w[2])}} & sbit_w[77:52])), ((({26{(sel_w[1] & (~ dir_w[1]))}} & {sbit_w[49:26], pad_w[1:0]}) | ({26{(sel_w[1] & dir_w[1])}} & {pad_w[1:0], sbit_w[51:28]})) | ({26{(~ sel_w[1])}} & sbit_w[51:26])), ((({26{(sel_w[0] & (~ dir_w[0]))}} & {sbit_w[24:0], pad_w[0]}) | ({26{(sel_w[0] & dir_w[0])}} & {pad_w[0], sbit_w[25:1]})) | ({26{(~ sel_w[0])}} & sbit_w[25:0]))};\nendmodule \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_addsub_single_altpriority_encoder_i0b\n\t( \n\tdata,\n\tq,\n\tzero) ;\n\tinput   [1:0]  data;\n\toutput   [0:0]  q;\n\toutput   zero;\n\n\n\tassign\n\t\tq = {data[1]},\n\t\tzero = (~ (data[0] | data[1]));\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_addsub_single_altpriority_encoder_l0b\n\t( \n\tdata,\n\tq,\n\tzero) ;\n\tinput   [3:0]  data;\n\toutput   [1:0]  q;\n\toutput   zero;\n\n\twire  [0:0]   wire_altpriority_encoder13_q;\n\twire  wire_altpriority_encoder13_zero;\n\twire  [0:0]   wire_altpriority_encoder14_q;\n\twire  wire_altpriority_encoder14_zero;\n\n\tfpoint_hw_qsys_addsub_single_altpriority_encoder_i0b   altpriority_encoder13\n\t( \n\t.data(data[1:0]),\n\t.q(wire_altpriority_encoder13_q),\n\t.zero(wire_altpriority_encoder13_zero));\n\tfpoint_hw_qsys_addsub_single_altpriority_encoder_i0b   altpriority_encoder14\n\t( \n\t.data(data[3:2]),\n\t.q(wire_altpriority_encoder14_q),\n\t.zero(wire_altpriority_encoder14_zero));\n\tassign\n\t\tq = {(~ wire_altpriority_encoder14_zero), ((wire_altpriority_encoder14_zero & wire_altpriority_encoder13_q) | ((~ wire_altpriority_encoder14_zero) & wire_altpriority_encoder14_q))},\n\t\tzero = (wire_altpriority_encoder13_zero & wire_altpriority_encoder14_zero);\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_addsub_single_altpriority_encoder_q0b\n\t( \n\tdata,\n\tq,\n\tzero) ;\n\tinput   [7:0]  data;\n\toutput   [2:0]  q;\n\toutput   zero;\n\n\twire  [1:0]   wire_altpriority_encoder11_q;\n\twire  wire_altpriority_encoder11_zero;\n\twire  [1:0]   wire_altpriority_encoder12_q;\n\twire  wire_altpriority_encoder12_zero;\n\n\tfpoint_hw_qsys_addsub_single_altpriority_encoder_l0b   altpriority_encoder11\n\t( \n\t.data(data[3:0]),\n\t.q(wire_altpriority_encoder11_q),\n\t.zero(wire_altpriority_encoder11_zero));\n\tfpoint_hw_qsys_addsub_single_altpriority_encoder_l0b   altpriority_encoder12\n\t( \n\t.data(data[7:4]),\n\t.q(wire_altpriority_encoder12_q),\n\t.zero(wire_altpriority_encoder12_zero));\n\tassign\n\t\tq = {(~ wire_altpriority_encoder12_zero), (({2{wire_altpriority_encoder12_zero}} & wire_altpriority_encoder11_q) | ({2{(~ wire_altpriority_encoder12_zero)}} & wire_altpriority_encoder12_q))},\n\t\tzero = (wire_altpriority_encoder11_zero & wire_altpriority_encoder12_zero);\nendmodule \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_addsub_single_altpriority_encoder_iha\n\t( \n\tdata,\n\tq) ;\n\tinput   [1:0]  data;\n\toutput   [0:0]  q;\n\n\n\tassign\n\t\tq = {data[1]};\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_addsub_single_altpriority_encoder_lha\n\t( \n\tdata,\n\tq) ;\n\tinput   [3:0]  data;\n\toutput   [1:0]  q;\n\n\twire  [0:0]   wire_altpriority_encoder17_q;\n\twire  [0:0]   wire_altpriority_encoder18_q;\n\twire  wire_altpriority_encoder18_zero;\n\n\tfpoint_hw_qsys_addsub_single_altpriority_encoder_iha   altpriority_encoder17\n\t( \n\t.data(data[1:0]),\n\t.q(wire_altpriority_encoder17_q));\n\tfpoint_hw_qsys_addsub_single_altpriority_encoder_i0b   altpriority_encoder18\n\t( \n\t.data(data[3:2]),\n\t.q(wire_altpriority_encoder18_q),\n\t.zero(wire_altpriority_encoder18_zero));\n\tassign\n\t\tq = {(~ wire_altpriority_encoder18_zero), ((wire_altpriority_encoder18_zero & wire_altpriority_encoder17_q) | ((~ wire_altpriority_encoder18_zero) & wire_altpriority_encoder18_q))};\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_addsub_single_altpriority_encoder_qha\n\t( \n\tdata,\n\tq) ;\n\tinput   [7:0]  data;\n\toutput   [2:0]  q;\n\n\twire  [1:0]   wire_altpriority_encoder15_q;\n\twire  [1:0]   wire_altpriority_encoder16_q;\n\twire  wire_altpriority_encoder16_zero;\n\n\tfpoint_hw_qsys_addsub_single_altpriority_encoder_lha   altpriority_encoder15\n\t( \n\t.data(data[3:0]),\n\t.q(wire_altpriority_encoder15_q));\n\tfpoint_hw_qsys_addsub_single_altpriority_encoder_l0b   altpriority_encoder16\n\t( \n\t.data(data[7:4]),\n\t.q(wire_altpriority_encoder16_q),\n\t.zero(wire_altpriority_encoder16_zero));\n\tassign\n\t\tq = {(~ wire_altpriority_encoder16_zero), (({2{wire_altpriority_encoder16_zero}} & wire_altpriority_encoder15_q) | ({2{(~ wire_altpriority_encoder16_zero)}} & wire_altpriority_encoder16_q))};\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_addsub_single_altpriority_encoder_aja\n\t( \n\tdata,\n\tq) ;\n\tinput   [15:0]  data;\n\toutput   [3:0]  q;\n\n\twire  [2:0]   wire_altpriority_encoder10_q;\n\twire  wire_altpriority_encoder10_zero;\n\twire  [2:0]   wire_altpriority_encoder9_q;\n\n\tfpoint_hw_qsys_addsub_single_altpriority_encoder_q0b   altpriority_encoder10\n\t( \n\t.data(data[15:8]),\n\t.q(wire_altpriority_encoder10_q),\n\t.zero(wire_altpriority_encoder10_zero));\n\tfpoint_hw_qsys_addsub_single_altpriority_encoder_qha   altpriority_encoder9\n\t( \n\t.data(data[7:0]),\n\t.q(wire_altpriority_encoder9_q));\n\tassign\n\t\tq = {(~ wire_altpriority_encoder10_zero), (({3{wire_altpriority_encoder10_zero}} & wire_altpriority_encoder9_q) | ({3{(~ wire_altpriority_encoder10_zero)}} & wire_altpriority_encoder10_q))};\nendmodule \n\n\n\n\n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_addsub_single_altpriority_encoder_a2b\n\t( \n\tdata,\n\tq,\n\tzero) ;\n\tinput   [15:0]  data;\n\toutput   [3:0]  q;\n\toutput   zero;\n\n\twire  [2:0]   wire_altpriority_encoder19_q;\n\twire  wire_altpriority_encoder19_zero;\n\twire  [2:0]   wire_altpriority_encoder20_q;\n\twire  wire_altpriority_encoder20_zero;\n\n\tfpoint_hw_qsys_addsub_single_altpriority_encoder_q0b   altpriority_encoder19\n\t( \n\t.data(data[7:0]),\n\t.q(wire_altpriority_encoder19_q),\n\t.zero(wire_altpriority_encoder19_zero));\n\tfpoint_hw_qsys_addsub_single_altpriority_encoder_q0b   altpriority_encoder20\n\t( \n\t.data(data[15:8]),\n\t.q(wire_altpriority_encoder20_q),\n\t.zero(wire_altpriority_encoder20_zero));\n\tassign\n\t\tq = {(~ wire_altpriority_encoder20_zero), (({3{wire_altpriority_encoder20_zero}} & wire_altpriority_encoder19_q) | ({3{(~ wire_altpriority_encoder20_zero)}} & wire_altpriority_encoder20_q))},\n\t\tzero = (wire_altpriority_encoder19_zero & wire_altpriority_encoder20_zero);\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_addsub_single_altpriority_encoder_9u8\n\t( \n\tdata,\n\tq) ;\n\tinput   [31:0]  data;\n\toutput   [4:0]  q;\n\n\twire  [3:0]   wire_altpriority_encoder7_q;\n\twire  [3:0]   wire_altpriority_encoder8_q;\n\twire  wire_altpriority_encoder8_zero;\n\n\tfpoint_hw_qsys_addsub_single_altpriority_encoder_aja   altpriority_encoder7\n\t( \n\t.data(data[15:0]),\n\t.q(wire_altpriority_encoder7_q));\n\tfpoint_hw_qsys_addsub_single_altpriority_encoder_a2b   altpriority_encoder8\n\t( \n\t.data(data[31:16]),\n\t.q(wire_altpriority_encoder8_q),\n\t.zero(wire_altpriority_encoder8_zero));\n\tassign\n\t\tq = {(~ wire_altpriority_encoder8_zero), (({4{wire_altpriority_encoder8_zero}} & wire_altpriority_encoder7_q) | ({4{(~ wire_altpriority_encoder8_zero)}} & wire_altpriority_encoder8_q))};\nendmodule \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_addsub_single_altpriority_encoder_64b\n\t( \n\tdata,\n\tq,\n\tzero) ;\n\tinput   [1:0]  data;\n\toutput   [0:0]  q;\n\toutput   zero;\n\n\n\tassign\n\t\tq = {(~ data[0])},\n\t\tzero = (~ (data[0] | data[1]));\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_addsub_single_altpriority_encoder_94b\n\t( \n\tdata,\n\tq,\n\tzero) ;\n\tinput   [3:0]  data;\n\toutput   [1:0]  q;\n\toutput   zero;\n\n\twire  [0:0]   wire_altpriority_encoder27_q;\n\twire  wire_altpriority_encoder27_zero;\n\twire  [0:0]   wire_altpriority_encoder28_q;\n\twire  wire_altpriority_encoder28_zero;\n\n\tfpoint_hw_qsys_addsub_single_altpriority_encoder_64b   altpriority_encoder27\n\t( \n\t.data(data[1:0]),\n\t.q(wire_altpriority_encoder27_q),\n\t.zero(wire_altpriority_encoder27_zero));\n\tfpoint_hw_qsys_addsub_single_altpriority_encoder_64b   altpriority_encoder28\n\t( \n\t.data(data[3:2]),\n\t.q(wire_altpriority_encoder28_q),\n\t.zero(wire_altpriority_encoder28_zero));\n\tassign\n\t\tq = {wire_altpriority_encoder27_zero, ((wire_altpriority_encoder27_zero & wire_altpriority_encoder28_q) | ((~ wire_altpriority_encoder27_zero) & wire_altpriority_encoder27_q))},\n\t\tzero = (wire_altpriority_encoder27_zero & wire_altpriority_encoder28_zero);\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_addsub_single_altpriority_encoder_e4b\n\t( \n\tdata,\n\tq,\n\tzero) ;\n\tinput   [7:0]  data;\n\toutput   [2:0]  q;\n\toutput   zero;\n\n\twire  [1:0]   wire_altpriority_encoder25_q;\n\twire  wire_altpriority_encoder25_zero;\n\twire  [1:0]   wire_altpriority_encoder26_q;\n\twire  wire_altpriority_encoder26_zero;\n\n\tfpoint_hw_qsys_addsub_single_altpriority_encoder_94b   altpriority_encoder25\n\t( \n\t.data(data[3:0]),\n\t.q(wire_altpriority_encoder25_q),\n\t.zero(wire_altpriority_encoder25_zero));\n\tfpoint_hw_qsys_addsub_single_altpriority_encoder_94b   altpriority_encoder26\n\t( \n\t.data(data[7:4]),\n\t.q(wire_altpriority_encoder26_q),\n\t.zero(wire_altpriority_encoder26_zero));\n\tassign\n\t\tq = {wire_altpriority_encoder25_zero, (({2{wire_altpriority_encoder25_zero}} & wire_altpriority_encoder26_q) | ({2{(~ wire_altpriority_encoder25_zero)}} & wire_altpriority_encoder25_q))},\n\t\tzero = (wire_altpriority_encoder25_zero & wire_altpriority_encoder26_zero);\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_addsub_single_altpriority_encoder_u5b\n\t( \n\tdata,\n\tq,\n\tzero) ;\n\tinput   [15:0]  data;\n\toutput   [3:0]  q;\n\toutput   zero;\n\n\twire  [2:0]   wire_altpriority_encoder23_q;\n\twire  wire_altpriority_encoder23_zero;\n\twire  [2:0]   wire_altpriority_encoder24_q;\n\twire  wire_altpriority_encoder24_zero;\n\n\tfpoint_hw_qsys_addsub_single_altpriority_encoder_e4b   altpriority_encoder23\n\t( \n\t.data(data[7:0]),\n\t.q(wire_altpriority_encoder23_q),\n\t.zero(wire_altpriority_encoder23_zero));\n\tfpoint_hw_qsys_addsub_single_altpriority_encoder_e4b   altpriority_encoder24\n\t( \n\t.data(data[15:8]),\n\t.q(wire_altpriority_encoder24_q),\n\t.zero(wire_altpriority_encoder24_zero));\n\tassign\n\t\tq = {wire_altpriority_encoder23_zero, (({3{wire_altpriority_encoder23_zero}} & wire_altpriority_encoder24_q) | ({3{(~ wire_altpriority_encoder23_zero)}} & wire_altpriority_encoder23_q))},\n\t\tzero = (wire_altpriority_encoder23_zero & wire_altpriority_encoder24_zero);\nendmodule \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_addsub_single_altpriority_encoder_6la\n\t( \n\tdata,\n\tq) ;\n\tinput   [1:0]  data;\n\toutput   [0:0]  q;\n\n\n\tassign\n\t\tq = {(~ data[0])};\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_addsub_single_altpriority_encoder_9la\n\t( \n\tdata,\n\tq) ;\n\tinput   [3:0]  data;\n\toutput   [1:0]  q;\n\n\twire  [0:0]   wire_altpriority_encoder33_q;\n\twire  wire_altpriority_encoder33_zero;\n\twire  [0:0]   wire_altpriority_encoder34_q;\n\n\tfpoint_hw_qsys_addsub_single_altpriority_encoder_64b   altpriority_encoder33\n\t( \n\t.data(data[1:0]),\n\t.q(wire_altpriority_encoder33_q),\n\t.zero(wire_altpriority_encoder33_zero));\n\tfpoint_hw_qsys_addsub_single_altpriority_encoder_6la   altpriority_encoder34\n\t( \n\t.data(data[3:2]),\n\t.q(wire_altpriority_encoder34_q));\n\tassign\n\t\tq = {wire_altpriority_encoder33_zero, ((wire_altpriority_encoder33_zero & wire_altpriority_encoder34_q) | ((~ wire_altpriority_encoder33_zero) & wire_altpriority_encoder33_q))};\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_addsub_single_altpriority_encoder_ela\n\t( \n\tdata,\n\tq) ;\n\tinput   [7:0]  data;\n\toutput   [2:0]  q;\n\n\twire  [1:0]   wire_altpriority_encoder31_q;\n\twire  wire_altpriority_encoder31_zero;\n\twire  [1:0]   wire_altpriority_encoder32_q;\n\n\tfpoint_hw_qsys_addsub_single_altpriority_encoder_94b   altpriority_encoder31\n\t( \n\t.data(data[3:0]),\n\t.q(wire_altpriority_encoder31_q),\n\t.zero(wire_altpriority_encoder31_zero));\n\tfpoint_hw_qsys_addsub_single_altpriority_encoder_9la   altpriority_encoder32\n\t( \n\t.data(data[7:4]),\n\t.q(wire_altpriority_encoder32_q));\n\tassign\n\t\tq = {wire_altpriority_encoder31_zero, (({2{wire_altpriority_encoder31_zero}} & wire_altpriority_encoder32_q) | ({2{(~ wire_altpriority_encoder31_zero)}} & wire_altpriority_encoder31_q))};\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_addsub_single_altpriority_encoder_uma\n\t( \n\tdata,\n\tq) ;\n\tinput   [15:0]  data;\n\toutput   [3:0]  q;\n\n\twire  [2:0]   wire_altpriority_encoder29_q;\n\twire  wire_altpriority_encoder29_zero;\n\twire  [2:0]   wire_altpriority_encoder30_q;\n\n\tfpoint_hw_qsys_addsub_single_altpriority_encoder_e4b   altpriority_encoder29\n\t( \n\t.data(data[7:0]),\n\t.q(wire_altpriority_encoder29_q),\n\t.zero(wire_altpriority_encoder29_zero));\n\tfpoint_hw_qsys_addsub_single_altpriority_encoder_ela   altpriority_encoder30\n\t( \n\t.data(data[15:8]),\n\t.q(wire_altpriority_encoder30_q));\n\tassign\n\t\tq = {wire_altpriority_encoder29_zero, (({3{wire_altpriority_encoder29_zero}} & wire_altpriority_encoder30_q) | ({3{(~ wire_altpriority_encoder29_zero)}} & wire_altpriority_encoder29_q))};\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_addsub_single_altpriority_encoder_tma\n\t( \n\tdata,\n\tq) ;\n\tinput   [31:0]  data;\n\toutput   [4:0]  q;\n\n\twire  [3:0]   wire_altpriority_encoder21_q;\n\twire  wire_altpriority_encoder21_zero;\n\twire  [3:0]   wire_altpriority_encoder22_q;\n\n\tfpoint_hw_qsys_addsub_single_altpriority_encoder_u5b   altpriority_encoder21\n\t( \n\t.data(data[15:0]),\n\t.q(wire_altpriority_encoder21_q),\n\t.zero(wire_altpriority_encoder21_zero));\n\tfpoint_hw_qsys_addsub_single_altpriority_encoder_uma   altpriority_encoder22\n\t( \n\t.data(data[31:16]),\n\t.q(wire_altpriority_encoder22_q));\n\tassign\n\t\tq = {wire_altpriority_encoder21_zero, (({4{wire_altpriority_encoder21_zero}} & wire_altpriority_encoder22_q) | ({4{(~ wire_altpriority_encoder21_zero)}} & wire_altpriority_encoder21_q))};\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_addsub_single\n\t( \n\taclr,\n\tadd_sub,\n\tclk_en,\n\tclock,\n\tdataa,\n\tdatab,\n\tresult) ;\n\tinput   aclr;\n\tinput   add_sub;\n\tinput   clk_en;\n\tinput   clock;\n\tinput   [31:0]  dataa;\n\tinput   [31:0]  datab;\n\toutput   [31:0]  result;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\ttri0   aclr;\n\ttri1   add_sub;\n\ttri1   clk_en;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\n\twire  [25:0]   wire_lbarrel_shift_result;\n\twire  [25:0]   wire_rbarrel_shift_result;\n\twire  [4:0]   wire_leading_zeroes_cnt_q;\n\twire  [4:0]   wire_trailing_zeros_cnt_q;\n\treg\tadd_sub_dffe1;\n\treg\tadd_sub_dffe12;\n\treg\t[8:0]\taligned_dataa_exp_dffe12;\n\treg\t[23:0]\taligned_dataa_man_dffe12;\n\treg\taligned_dataa_sign_dffe12;\n\treg\t[8:0]\taligned_datab_exp_dffe12;\n\treg\t[23:0]\taligned_datab_man_dffe12;\n\treg\taligned_datab_sign_dffe12;\n\treg\tboth_inputs_are_infinite_dffe1;\n\treg\t[7:0]\tdata_exp_dffe1;\n\treg\t[25:0]\tdataa_man_dffe1;\n\treg\tdataa_sign_dffe1;\n\treg\t[25:0]\tdatab_man_dffe1;\n\treg\tdatab_sign_dffe1;\n\treg\tdenormal_res_dffe3;\n\treg\tdenormal_res_dffe4;\n\treg\t[1:0]\texp_adj_dffe21;\n\treg\t[7:0]\texp_out_dffe5;\n\treg\t[7:0]\texp_res_dffe2;\n\treg\t[7:0]\texp_res_dffe21;\n\treg\t[7:0]\texp_res_dffe3;\n\treg\t[7:0]\texp_res_dffe4;\n\treg\tinfinite_output_sign_dffe1;\n\treg\tinfinite_output_sign_dffe2;\n\treg\tinfinite_output_sign_dffe21;\n\treg\tinfinite_output_sign_dffe3;\n\treg\tinfinite_output_sign_dffe31;\n\treg\tinfinite_output_sign_dffe4;\n\treg\tinfinite_res_dffe3;\n\treg\tinfinite_res_dffe4;\n\treg\tinfinity_magnitude_sub_dffe2;\n\treg\tinfinity_magnitude_sub_dffe21;\n\treg\tinfinity_magnitude_sub_dffe3;\n\treg\tinfinity_magnitude_sub_dffe31;\n\treg\tinfinity_magnitude_sub_dffe4;\n\treg\tinput_dataa_infinite_dffe12;\n\treg\tinput_dataa_nan_dffe12;\n\treg\tinput_datab_infinite_dffe12;\n\treg\tinput_datab_nan_dffe12;\n\treg\tinput_is_infinite_dffe1;\n\treg\tinput_is_infinite_dffe2;\n\treg\tinput_is_infinite_dffe21;\n\treg\tinput_is_infinite_dffe3;\n\treg\tinput_is_infinite_dffe31;\n\treg\tinput_is_infinite_dffe4;\n\treg\tinput_is_nan_dffe1;\n\treg\tinput_is_nan_dffe2;\n\treg\tinput_is_nan_dffe21;\n\treg\tinput_is_nan_dffe3;\n\treg\tinput_is_nan_dffe31;\n\treg\tinput_is_nan_dffe4;\n\treg\t[25:0]\tman_add_sub_res_mag_dffe21;\n\treg\tman_add_sub_res_sign_dffe21;\n\treg\t[25:0]\tman_dffe31;\n\treg\t[4:0]\tman_leading_zeros_dffe31;\n\treg\t[22:0]\tman_out_dffe5;\n\treg\t[22:0]\tman_res_dffe4;\n\treg\tman_res_is_not_zero_dffe3;\n\treg\tman_res_is_not_zero_dffe31;\n\treg\tman_res_is_not_zero_dffe4;\n\treg\tneed_complement_dffe2;\n\treg\tround_bit_dffe21;\n\treg\tround_bit_dffe3;\n\treg\tround_bit_dffe31;\n\treg\trounded_res_infinity_dffe4;\n\treg\tsign_dffe31;\n\treg\tsign_out_dffe5;\n\treg\tsign_res_dffe3;\n\treg\tsign_res_dffe4;\n\treg\tsticky_bit_dffe1;\n\treg\tsticky_bit_dffe2;\n\treg\tsticky_bit_dffe21;\n\treg\tsticky_bit_dffe3;\n\treg\tsticky_bit_dffe31;\n\treg\tzero_man_sign_dffe2;\n\treg\tzero_man_sign_dffe21;\n\twire  [8:0]   wire_add_sub1_result;\n\twire  [8:0]   wire_add_sub2_result;\n\twire  [5:0]   wire_add_sub3_result;\n\twire  [8:0]   wire_add_sub4_result;\n\twire  [8:0]   wire_add_sub5_result;\n\twire  [8:0]   wire_add_sub6_result;\n\twire  wire_man_2comp_res_lower_cout;\n\twire  [13:0]   wire_man_2comp_res_lower_result;\n\twire  [13:0]   wire_man_2comp_res_upper0_result;\n\twire  [13:0]   wire_man_2comp_res_upper1_result;\n\twire  wire_man_add_sub_lower_cout;\n\twire  [13:0]   wire_man_add_sub_lower_result;\n\twire  [13:0]   wire_man_add_sub_upper0_result;\n\twire  [13:0]   wire_man_add_sub_upper1_result;\n\twire  wire_man_res_rounding_add_sub_lower_cout;\n\twire  [12:0]   wire_man_res_rounding_add_sub_lower_result;\n\twire  [12:0]   wire_man_res_rounding_add_sub_upper1_result;\n\twire  wire_trailing_zeros_limit_comparator_agb;\n\twire  add_sub_dffe11_wi;\n\twire  add_sub_dffe11_wo;\n\twire  add_sub_dffe12_wi;\n\twire  add_sub_dffe12_wo;\n\twire  add_sub_dffe13_wi;\n\twire  add_sub_dffe13_wo;\n\twire  add_sub_dffe14_wi;\n\twire  add_sub_dffe14_wo;\n\twire  add_sub_dffe15_wi;\n\twire  add_sub_dffe15_wo;\n\twire  add_sub_dffe1_wi;\n\twire  add_sub_dffe1_wo;\n\twire  add_sub_dffe25_wi;\n\twire  add_sub_dffe25_wo;\n\twire  add_sub_w2;\n\twire  [12:0]  adder_upper_w;\n\twire  [8:0]  aligned_dataa_exp_dffe12_wi;\n\twire  [8:0]  aligned_dataa_exp_dffe12_wo;\n\twire  [8:0]  aligned_dataa_exp_dffe13_wi;\n\twire  [8:0]  aligned_dataa_exp_dffe13_wo;\n\twire  [8:0]  aligned_dataa_exp_dffe14_wi;\n\twire  [8:0]  aligned_dataa_exp_dffe14_wo;\n\twire  [8:0]  aligned_dataa_exp_dffe15_wi;\n\twire  [8:0]  aligned_dataa_exp_dffe15_wo;\n\twire  [8:0]  aligned_dataa_exp_w;\n\twire  [23:0]  aligned_dataa_man_dffe12_wi;\n\twire  [23:0]  aligned_dataa_man_dffe12_wo;\n\twire  [23:0]  aligned_dataa_man_dffe13_wi;\n\twire  [23:0]  aligned_dataa_man_dffe13_wo;\n\twire  [23:0]  aligned_dataa_man_dffe14_wi;\n\twire  [23:0]  aligned_dataa_man_dffe14_wo;\n\twire  [25:0]  aligned_dataa_man_dffe15_w;\n\twire  [23:0]  aligned_dataa_man_dffe15_wi;\n\twire  [23:0]  aligned_dataa_man_dffe15_wo;\n\twire  [25:0]  aligned_dataa_man_w;\n\twire  aligned_dataa_sign_dffe12_wi;\n\twire  aligned_dataa_sign_dffe12_wo;\n\twire  aligned_dataa_sign_dffe13_wi;\n\twire  aligned_dataa_sign_dffe13_wo;\n\twire  aligned_dataa_sign_dffe14_wi;\n\twire  aligned_dataa_sign_dffe14_wo;\n\twire  aligned_dataa_sign_dffe15_wi;\n\twire  aligned_dataa_sign_dffe15_wo;\n\twire  aligned_dataa_sign_w;\n\twire  [8:0]  aligned_datab_exp_dffe12_wi;\n\twire  [8:0]  aligned_datab_exp_dffe12_wo;\n\twire  [8:0]  aligned_datab_exp_dffe13_wi;\n\twire  [8:0]  aligned_datab_exp_dffe13_wo;\n\twire  [8:0]  aligned_datab_exp_dffe14_wi;\n\twire  [8:0]  aligned_datab_exp_dffe14_wo;\n\twire  [8:0]  aligned_datab_exp_dffe15_wi;\n\twire  [8:0]  aligned_datab_exp_dffe15_wo;\n\twire  [8:0]  aligned_datab_exp_w;\n\twire  [23:0]  aligned_datab_man_dffe12_wi;\n\twire  [23:0]  aligned_datab_man_dffe12_wo;\n\twire  [23:0]  aligned_datab_man_dffe13_wi;\n\twire  [23:0]  aligned_datab_man_dffe13_wo;\n\twire  [23:0]  aligned_datab_man_dffe14_wi;\n\twire  [23:0]  aligned_datab_man_dffe14_wo;\n\twire  [25:0]  aligned_datab_man_dffe15_w;\n\twire  [23:0]  aligned_datab_man_dffe15_wi;\n\twire  [23:0]  aligned_datab_man_dffe15_wo;\n\twire  [25:0]  aligned_datab_man_w;\n\twire  aligned_datab_sign_dffe12_wi;\n\twire  aligned_datab_sign_dffe12_wo;\n\twire  aligned_datab_sign_dffe13_wi;\n\twire  aligned_datab_sign_dffe13_wo;\n\twire  aligned_datab_sign_dffe14_wi;\n\twire  aligned_datab_sign_dffe14_wo;\n\twire  aligned_datab_sign_dffe15_wi;\n\twire  aligned_datab_sign_dffe15_wo;\n\twire  aligned_datab_sign_w;\n\twire  borrow_w;\n\twire  both_inputs_are_infinite_dffe1_wi;\n\twire  both_inputs_are_infinite_dffe1_wo;\n\twire  both_inputs_are_infinite_dffe25_wi;\n\twire  both_inputs_are_infinite_dffe25_wo;\n\twire  [7:0]  data_exp_dffe1_wi;\n\twire  [7:0]  data_exp_dffe1_wo;\n\twire  [31:0]  dataa_dffe11_wi;\n\twire  [31:0]  dataa_dffe11_wo;\n\twire  [25:0]  dataa_man_dffe1_wi;\n\twire  [25:0]  dataa_man_dffe1_wo;\n\twire  dataa_sign_dffe1_wi;\n\twire  dataa_sign_dffe1_wo;\n\twire  dataa_sign_dffe25_wi;\n\twire  dataa_sign_dffe25_wo;\n\twire  [31:0]  datab_dffe11_wi;\n\twire  [31:0]  datab_dffe11_wo;\n\twire  [25:0]  datab_man_dffe1_wi;\n\twire  [25:0]  datab_man_dffe1_wo;\n\twire  datab_sign_dffe1_wi;\n\twire  datab_sign_dffe1_wo;\n\twire  denormal_flag_w;\n\twire  denormal_res_dffe32_wi;\n\twire  denormal_res_dffe32_wo;\n\twire  denormal_res_dffe33_wi;\n\twire  denormal_res_dffe33_wo;\n\twire  denormal_res_dffe3_wi;\n\twire  denormal_res_dffe3_wo;\n\twire  denormal_res_dffe41_wi;\n\twire  denormal_res_dffe41_wo;\n\twire  denormal_res_dffe42_wi;\n\twire  denormal_res_dffe42_wo;\n\twire  denormal_res_dffe4_wi;\n\twire  denormal_res_dffe4_wo;\n\twire  denormal_result_w;\n\twire  [7:0]  exp_a_all_one_w;\n\twire  [7:0]  exp_a_not_zero_w;\n\twire  [6:0]  exp_adj_0pads;\n\twire  [1:0]  exp_adj_dffe21_wi;\n\twire  [1:0]  exp_adj_dffe21_wo;\n\twire  [1:0]  exp_adj_dffe23_wi;\n\twire  [1:0]  exp_adj_dffe23_wo;\n\twire  [1:0]  exp_adj_dffe26_wi;\n\twire  [1:0]  exp_adj_dffe26_wo;\n\twire  [1:0]  exp_adjust_by_add1;\n\twire  [1:0]  exp_adjust_by_add2;\n\twire  [8:0]  exp_adjustment2_add_sub_dataa_w;\n\twire  [8:0]  exp_adjustment2_add_sub_datab_w;\n\twire  [8:0]  exp_adjustment2_add_sub_w;\n\twire  [8:0]  exp_adjustment_add_sub_dataa_w;\n\twire  [8:0]  exp_adjustment_add_sub_datab_w;\n\twire  [8:0]  exp_adjustment_add_sub_w;\n\twire  [7:0]  exp_all_ones_w;\n\twire  [7:0]  exp_all_zeros_w;\n\twire  exp_amb_mux_dffe13_wi;\n\twire  exp_amb_mux_dffe13_wo;\n\twire  exp_amb_mux_dffe14_wi;\n\twire  exp_amb_mux_dffe14_wo;\n\twire  exp_amb_mux_dffe15_wi;\n\twire  exp_amb_mux_dffe15_wo;\n\twire  exp_amb_mux_w;\n\twire  [8:0]  exp_amb_w;\n\twire  [7:0]  exp_b_all_one_w;\n\twire  [7:0]  exp_b_not_zero_w;\n\twire  [8:0]  exp_bma_w;\n\twire  [2:0]  exp_diff_abs_exceed_max_w;\n\twire  [4:0]  exp_diff_abs_max_w;\n\twire  [7:0]  exp_diff_abs_w;\n\twire  [7:0]  exp_intermediate_res_dffe41_wi;\n\twire  [7:0]  exp_intermediate_res_dffe41_wo;\n\twire  [7:0]  exp_intermediate_res_dffe42_wi;\n\twire  [7:0]  exp_intermediate_res_dffe42_wo;\n\twire  [7:0]  exp_intermediate_res_w;\n\twire  [7:0]  exp_out_dffe5_wi;\n\twire  [7:0]  exp_out_dffe5_wo;\n\twire  [7:0]  exp_res_dffe21_wi;\n\twire  [7:0]  exp_res_dffe21_wo;\n\twire  [7:0]  exp_res_dffe22_wi;\n\twire  [7:0]  exp_res_dffe22_wo;\n\twire  [7:0]  exp_res_dffe23_wi;\n\twire  [7:0]  exp_res_dffe23_wo;\n\twire  [7:0]  exp_res_dffe25_wi;\n\twire  [7:0]  exp_res_dffe25_wo;\n\twire  [7:0]  exp_res_dffe26_wi;\n\twire  [7:0]  exp_res_dffe26_wo;\n\twire  [7:0]  exp_res_dffe27_wi;\n\twire  [7:0]  exp_res_dffe27_wo;\n\twire  [7:0]  exp_res_dffe2_wi;\n\twire  [7:0]  exp_res_dffe2_wo;\n\twire  [7:0]  exp_res_dffe32_wi;\n\twire  [7:0]  exp_res_dffe32_wo;\n\twire  [7:0]  exp_res_dffe33_wi;\n\twire  [7:0]  exp_res_dffe33_wo;\n\twire  [7:0]  exp_res_dffe3_wi;\n\twire  [7:0]  exp_res_dffe3_wo;\n\twire  [7:0]  exp_res_dffe4_wi;\n\twire  [7:0]  exp_res_dffe4_wo;\n\twire  [7:0]  exp_res_max_w;\n\twire  [8:0]  exp_res_not_zero_w;\n\twire  [8:0]  exp_res_rounding_adder_dataa_w;\n\twire  [8:0]  exp_res_rounding_adder_w;\n\twire  exp_rounded_res_infinity_w;\n\twire  [7:0]  exp_rounded_res_max_w;\n\twire  [7:0]  exp_rounded_res_w;\n\twire  [8:0]  exp_rounding_adjustment_w;\n\twire  [8:0]  exp_value;\n\twire  force_infinity_w;\n\twire  force_nan_w;\n\twire  force_zero_w;\n\twire  guard_bit_dffe3_wo;\n\twire  infinite_output_sign_dffe1_wi;\n\twire  infinite_output_sign_dffe1_wo;\n\twire  infinite_output_sign_dffe21_wi;\n\twire  infinite_output_sign_dffe21_wo;\n\twire  infinite_output_sign_dffe22_wi;\n\twire  infinite_output_sign_dffe22_wo;\n\twire  infinite_output_sign_dffe23_wi;\n\twire  infinite_output_sign_dffe23_wo;\n\twire  infinite_output_sign_dffe25_wi;\n\twire  infinite_output_sign_dffe25_wo;\n\twire  infinite_output_sign_dffe26_wi;\n\twire  infinite_output_sign_dffe26_wo;\n\twire  infinite_output_sign_dffe27_wi;\n\twire  infinite_output_sign_dffe27_wo;\n\twire  infinite_output_sign_dffe2_wi;\n\twire  infinite_output_sign_dffe2_wo;\n\twire  infinite_output_sign_dffe31_wi;\n\twire  infinite_output_sign_dffe31_wo;\n\twire  infinite_output_sign_dffe32_wi;\n\twire  infinite_output_sign_dffe32_wo;\n\twire  infinite_output_sign_dffe33_wi;\n\twire  infinite_output_sign_dffe33_wo;\n\twire  infinite_output_sign_dffe3_wi;\n\twire  infinite_output_sign_dffe3_wo;\n\twire  infinite_output_sign_dffe41_wi;\n\twire  infinite_output_sign_dffe41_wo;\n\twire  infinite_output_sign_dffe42_wi;\n\twire  infinite_output_sign_dffe42_wo;\n\twire  infinite_output_sign_dffe4_wi;\n\twire  infinite_output_sign_dffe4_wo;\n\twire  infinite_res_dff32_wi;\n\twire  infinite_res_dff32_wo;\n\twire  infinite_res_dff33_wi;\n\twire  infinite_res_dff33_wo;\n\twire  infinite_res_dffe3_wi;\n\twire  infinite_res_dffe3_wo;\n\twire  infinite_res_dffe41_wi;\n\twire  infinite_res_dffe41_wo;\n\twire  infinite_res_dffe42_wi;\n\twire  infinite_res_dffe42_wo;\n\twire  infinite_res_dffe4_wi;\n\twire  infinite_res_dffe4_wo;\n\twire  infinity_magnitude_sub_dffe21_wi;\n\twire  infinity_magnitude_sub_dffe21_wo;\n\twire  infinity_magnitude_sub_dffe22_wi;\n\twire  infinity_magnitude_sub_dffe22_wo;\n\twire  infinity_magnitude_sub_dffe23_wi;\n\twire  infinity_magnitude_sub_dffe23_wo;\n\twire  infinity_magnitude_sub_dffe26_wi;\n\twire  infinity_magnitude_sub_dffe26_wo;\n\twire  infinity_magnitude_sub_dffe27_wi;\n\twire  infinity_magnitude_sub_dffe27_wo;\n\twire  infinity_magnitude_sub_dffe2_wi;\n\twire  infinity_magnitude_sub_dffe2_wo;\n\twire  infinity_magnitude_sub_dffe31_wi;\n\twire  infinity_magnitude_sub_dffe31_wo;\n\twire  infinity_magnitude_sub_dffe32_wi;\n\twire  infinity_magnitude_sub_dffe32_wo;\n\twire  infinity_magnitude_sub_dffe33_wi;\n\twire  infinity_magnitude_sub_dffe33_wo;\n\twire  infinity_magnitude_sub_dffe3_wi;\n\twire  infinity_magnitude_sub_dffe3_wo;\n\twire  infinity_magnitude_sub_dffe41_wi;\n\twire  infinity_magnitude_sub_dffe41_wo;\n\twire  infinity_magnitude_sub_dffe42_wi;\n\twire  infinity_magnitude_sub_dffe42_wo;\n\twire  infinity_magnitude_sub_dffe4_wi;\n\twire  infinity_magnitude_sub_dffe4_wo;\n\twire  input_dataa_denormal_dffe11_wi;\n\twire  input_dataa_denormal_dffe11_wo;\n\twire  input_dataa_denormal_w;\n\twire  input_dataa_infinite_dffe11_wi;\n\twire  input_dataa_infinite_dffe11_wo;\n\twire  input_dataa_infinite_dffe12_wi;\n\twire  input_dataa_infinite_dffe12_wo;\n\twire  input_dataa_infinite_dffe13_wi;\n\twire  input_dataa_infinite_dffe13_wo;\n\twire  input_dataa_infinite_dffe14_wi;\n\twire  input_dataa_infinite_dffe14_wo;\n\twire  input_dataa_infinite_dffe15_wi;\n\twire  input_dataa_infinite_dffe15_wo;\n\twire  input_dataa_infinite_w;\n\twire  input_dataa_nan_dffe11_wi;\n\twire  input_dataa_nan_dffe11_wo;\n\twire  input_dataa_nan_dffe12_wi;\n\twire  input_dataa_nan_dffe12_wo;\n\twire  input_dataa_nan_w;\n\twire  input_dataa_zero_dffe11_wi;\n\twire  input_dataa_zero_dffe11_wo;\n\twire  input_dataa_zero_w;\n\twire  input_datab_denormal_dffe11_wi;\n\twire  input_datab_denormal_dffe11_wo;\n\twire  input_datab_denormal_w;\n\twire  input_datab_infinite_dffe11_wi;\n\twire  input_datab_infinite_dffe11_wo;\n\twire  input_datab_infinite_dffe12_wi;\n\twire  input_datab_infinite_dffe12_wo;\n\twire  input_datab_infinite_dffe13_wi;\n\twire  input_datab_infinite_dffe13_wo;\n\twire  input_datab_infinite_dffe14_wi;\n\twire  input_datab_infinite_dffe14_wo;\n\twire  input_datab_infinite_dffe15_wi;\n\twire  input_datab_infinite_dffe15_wo;\n\twire  input_datab_infinite_w;\n\twire  input_datab_nan_dffe11_wi;\n\twire  input_datab_nan_dffe11_wo;\n\twire  input_datab_nan_dffe12_wi;\n\twire  input_datab_nan_dffe12_wo;\n\twire  input_datab_nan_w;\n\twire  input_datab_zero_dffe11_wi;\n\twire  input_datab_zero_dffe11_wo;\n\twire  input_datab_zero_w;\n\twire  input_is_infinite_dffe1_wi;\n\twire  input_is_infinite_dffe1_wo;\n\twire  input_is_infinite_dffe21_wi;\n\twire  input_is_infinite_dffe21_wo;\n\twire  input_is_infinite_dffe22_wi;\n\twire  input_is_infinite_dffe22_wo;\n\twire  input_is_infinite_dffe23_wi;\n\twire  input_is_infinite_dffe23_wo;\n\twire  input_is_infinite_dffe25_wi;\n\twire  input_is_infinite_dffe25_wo;\n\twire  input_is_infinite_dffe26_wi;\n\twire  input_is_infinite_dffe26_wo;\n\twire  input_is_infinite_dffe27_wi;\n\twire  input_is_infinite_dffe27_wo;\n\twire  input_is_infinite_dffe2_wi;\n\twire  input_is_infinite_dffe2_wo;\n\twire  input_is_infinite_dffe31_wi;\n\twire  input_is_infinite_dffe31_wo;\n\twire  input_is_infinite_dffe32_wi;\n\twire  input_is_infinite_dffe32_wo;\n\twire  input_is_infinite_dffe33_wi;\n\twire  input_is_infinite_dffe33_wo;\n\twire  input_is_infinite_dffe3_wi;\n\twire  input_is_infinite_dffe3_wo;\n\twire  input_is_infinite_dffe41_wi;\n\twire  input_is_infinite_dffe41_wo;\n\twire  input_is_infinite_dffe42_wi;\n\twire  input_is_infinite_dffe42_wo;\n\twire  input_is_infinite_dffe4_wi;\n\twire  input_is_infinite_dffe4_wo;\n\twire  input_is_nan_dffe13_wi;\n\twire  input_is_nan_dffe13_wo;\n\twire  input_is_nan_dffe14_wi;\n\twire  input_is_nan_dffe14_wo;\n\twire  input_is_nan_dffe15_wi;\n\twire  input_is_nan_dffe15_wo;\n\twire  input_is_nan_dffe1_wi;\n\twire  input_is_nan_dffe1_wo;\n\twire  input_is_nan_dffe21_wi;\n\twire  input_is_nan_dffe21_wo;\n\twire  input_is_nan_dffe22_wi;\n\twire  input_is_nan_dffe22_wo;\n\twire  input_is_nan_dffe23_wi;\n\twire  input_is_nan_dffe23_wo;\n\twire  input_is_nan_dffe25_wi;\n\twire  input_is_nan_dffe25_wo;\n\twire  input_is_nan_dffe26_wi;\n\twire  input_is_nan_dffe26_wo;\n\twire  input_is_nan_dffe27_wi;\n\twire  input_is_nan_dffe27_wo;\n\twire  input_is_nan_dffe2_wi;\n\twire  input_is_nan_dffe2_wo;\n\twire  input_is_nan_dffe31_wi;\n\twire  input_is_nan_dffe31_wo;\n\twire  input_is_nan_dffe32_wi;\n\twire  input_is_nan_dffe32_wo;\n\twire  input_is_nan_dffe33_wi;\n\twire  input_is_nan_dffe33_wo;\n\twire  input_is_nan_dffe3_wi;\n\twire  input_is_nan_dffe3_wo;\n\twire  input_is_nan_dffe41_wi;\n\twire  input_is_nan_dffe41_wo;\n\twire  input_is_nan_dffe42_wi;\n\twire  input_is_nan_dffe42_wo;\n\twire  input_is_nan_dffe4_wi;\n\twire  input_is_nan_dffe4_wo;\n\twire  [27:0]  man_2comp_res_dataa_w;\n\twire  [27:0]  man_2comp_res_datab_w;\n\twire  [27:0]  man_2comp_res_w;\n\twire  [22:0]  man_a_not_zero_w;\n\twire  [27:0]  man_add_sub_dataa_w;\n\twire  [27:0]  man_add_sub_datab_w;\n\twire  [25:0]  man_add_sub_res_mag_dffe21_wi;\n\twire  [25:0]  man_add_sub_res_mag_dffe21_wo;\n\twire  [25:0]  man_add_sub_res_mag_dffe23_wi;\n\twire  [25:0]  man_add_sub_res_mag_dffe23_wo;\n\twire  [25:0]  man_add_sub_res_mag_dffe26_wi;\n\twire  [25:0]  man_add_sub_res_mag_dffe26_wo;\n\twire  [27:0]  man_add_sub_res_mag_dffe27_wi;\n\twire  [27:0]  man_add_sub_res_mag_dffe27_wo;\n\twire  [27:0]  man_add_sub_res_mag_w2;\n\twire  man_add_sub_res_sign_dffe21_wo;\n\twire  man_add_sub_res_sign_dffe23_wi;\n\twire  man_add_sub_res_sign_dffe23_wo;\n\twire  man_add_sub_res_sign_dffe26_wi;\n\twire  man_add_sub_res_sign_dffe26_wo;\n\twire  man_add_sub_res_sign_dffe27_wi;\n\twire  man_add_sub_res_sign_dffe27_wo;\n\twire  man_add_sub_res_sign_w2;\n\twire  [27:0]  man_add_sub_w;\n\twire  [22:0]  man_all_zeros_w;\n\twire  [22:0]  man_b_not_zero_w;\n\twire  [25:0]  man_dffe31_wo;\n\twire  [25:0]  man_intermediate_res_w;\n\twire  [4:0]  man_leading_zeros_cnt_w;\n\twire  [4:0]  man_leading_zeros_dffe31_wi;\n\twire  [4:0]  man_leading_zeros_dffe31_wo;\n\twire  [22:0]  man_nan_w;\n\twire  [22:0]  man_out_dffe5_wi;\n\twire  [22:0]  man_out_dffe5_wo;\n\twire  [22:0]  man_res_dffe4_wi;\n\twire  [22:0]  man_res_dffe4_wo;\n\twire  man_res_is_not_zero_dffe31_wi;\n\twire  man_res_is_not_zero_dffe31_wo;\n\twire  man_res_is_not_zero_dffe32_wi;\n\twire  man_res_is_not_zero_dffe32_wo;\n\twire  man_res_is_not_zero_dffe33_wi;\n\twire  man_res_is_not_zero_dffe33_wo;\n\twire  man_res_is_not_zero_dffe3_wi;\n\twire  man_res_is_not_zero_dffe3_wo;\n\twire  man_res_is_not_zero_dffe41_wi;\n\twire  man_res_is_not_zero_dffe41_wo;\n\twire  man_res_is_not_zero_dffe42_wi;\n\twire  man_res_is_not_zero_dffe42_wo;\n\twire  man_res_is_not_zero_dffe4_wi;\n\twire  man_res_is_not_zero_dffe4_wo;\n\twire  [25:0]  man_res_mag_w2;\n\twire  man_res_not_zero_dffe23_wi;\n\twire  man_res_not_zero_dffe23_wo;\n\twire  man_res_not_zero_dffe26_wi;\n\twire  man_res_not_zero_dffe26_wo;\n\twire  [24:0]  man_res_not_zero_w2;\n\twire  [25:0]  man_res_rounding_add_sub_datab_w;\n\twire  [25:0]  man_res_rounding_add_sub_w;\n\twire  [23:0]  man_res_w3;\n\twire  [22:0]  man_rounded_res_w;\n\twire  man_rounding_add_value_w;\n\twire  [23:0]  man_smaller_dffe13_wi;\n\twire  [23:0]  man_smaller_dffe13_wo;\n\twire  [23:0]  man_smaller_w;\n\twire  need_complement_dffe22_wi;\n\twire  need_complement_dffe22_wo;\n\twire  need_complement_dffe2_wi;\n\twire  need_complement_dffe2_wo;\n\twire  [1:0]  pos_sign_bit_ext;\n\twire  [3:0]  priority_encoder_1pads_w;\n\twire  round_bit_dffe21_wi;\n\twire  round_bit_dffe21_wo;\n\twire  round_bit_dffe23_wi;\n\twire  round_bit_dffe23_wo;\n\twire  round_bit_dffe26_wi;\n\twire  round_bit_dffe26_wo;\n\twire  round_bit_dffe31_wi;\n\twire  round_bit_dffe31_wo;\n\twire  round_bit_dffe32_wi;\n\twire  round_bit_dffe32_wo;\n\twire  round_bit_dffe33_wi;\n\twire  round_bit_dffe33_wo;\n\twire  round_bit_dffe3_wi;\n\twire  round_bit_dffe3_wo;\n\twire  round_bit_w;\n\twire  rounded_res_infinity_dffe4_wi;\n\twire  rounded_res_infinity_dffe4_wo;\n\twire  [4:0]  rshift_distance_dffe13_wi;\n\twire  [4:0]  rshift_distance_dffe13_wo;\n\twire  [4:0]  rshift_distance_dffe14_wi;\n\twire  [4:0]  rshift_distance_dffe14_wo;\n\twire  [4:0]  rshift_distance_dffe15_wi;\n\twire  [4:0]  rshift_distance_dffe15_wo;\n\twire  [4:0]  rshift_distance_w;\n\twire  sign_dffe31_wi;\n\twire  sign_dffe31_wo;\n\twire  sign_dffe32_wi;\n\twire  sign_dffe32_wo;\n\twire  sign_dffe33_wi;\n\twire  sign_dffe33_wo;\n\twire  sign_out_dffe5_wi;\n\twire  sign_out_dffe5_wo;\n\twire  sign_res_dffe3_wi;\n\twire  sign_res_dffe3_wo;\n\twire  sign_res_dffe41_wi;\n\twire  sign_res_dffe41_wo;\n\twire  sign_res_dffe42_wi;\n\twire  sign_res_dffe42_wo;\n\twire  sign_res_dffe4_wi;\n\twire  sign_res_dffe4_wo;\n\twire  [5:0]  sticky_bit_cnt_dataa_w;\n\twire  [5:0]  sticky_bit_cnt_datab_w;\n\twire  [5:0]  sticky_bit_cnt_res_w;\n\twire  sticky_bit_dffe1_wi;\n\twire  sticky_bit_dffe1_wo;\n\twire  sticky_bit_dffe21_wi;\n\twire  sticky_bit_dffe21_wo;\n\twire  sticky_bit_dffe22_wi;\n\twire  sticky_bit_dffe22_wo;\n\twire  sticky_bit_dffe23_wi;\n\twire  sticky_bit_dffe23_wo;\n\twire  sticky_bit_dffe25_wi;\n\twire  sticky_bit_dffe25_wo;\n\twire  sticky_bit_dffe26_wi;\n\twire  sticky_bit_dffe26_wo;\n\twire  sticky_bit_dffe27_wi;\n\twire  sticky_bit_dffe27_wo;\n\twire  sticky_bit_dffe2_wi;\n\twire  sticky_bit_dffe2_wo;\n\twire  sticky_bit_dffe31_wi;\n\twire  sticky_bit_dffe31_wo;\n\twire  sticky_bit_dffe32_wi;\n\twire  sticky_bit_dffe32_wo;\n\twire  sticky_bit_dffe33_wi;\n\twire  sticky_bit_dffe33_wo;\n\twire  sticky_bit_dffe3_wi;\n\twire  sticky_bit_dffe3_wo;\n\twire  sticky_bit_w;\n\twire  [5:0]  trailing_zeros_limit_w;\n\twire  zero_man_sign_dffe21_wi;\n\twire  zero_man_sign_dffe21_wo;\n\twire  zero_man_sign_dffe22_wi;\n\twire  zero_man_sign_dffe22_wo;\n\twire  zero_man_sign_dffe23_wi;\n\twire  zero_man_sign_dffe23_wo;\n\twire  zero_man_sign_dffe26_wi;\n\twire  zero_man_sign_dffe26_wo;\n\twire  zero_man_sign_dffe27_wi;\n\twire  zero_man_sign_dffe27_wo;\n\twire  zero_man_sign_dffe2_wi;\n\twire  zero_man_sign_dffe2_wo;\n\n\tfpoint_hw_qsys_addsub_single_altbarrel_shift_fjg   lbarrel_shift\n\t( \n\t.aclr(aclr),\n\t.clk_en(clk_en),\n\t.clock(clock),\n\t.data(man_dffe31_wo),\n\t.distance(man_leading_zeros_cnt_w),\n\t.result(wire_lbarrel_shift_result));\n\tfpoint_hw_qsys_addsub_single_altbarrel_shift_44e   rbarrel_shift\n\t( \n\t.data({man_smaller_dffe13_wo, {2{1'b0}}}),\n\t.distance(rshift_distance_dffe13_wo),\n\t.result(wire_rbarrel_shift_result));\n\tfpoint_hw_qsys_addsub_single_altpriority_encoder_9u8   leading_zeroes_cnt\n\t( \n\t.data({man_add_sub_res_mag_dffe21_wo[25:1], 1'b1, {6{1'b0}}}),\n\t.q(wire_leading_zeroes_cnt_q));\n\tfpoint_hw_qsys_addsub_single_altpriority_encoder_tma   trailing_zeros_cnt\n\t( \n\t.data({{9{1'b1}}, man_smaller_dffe13_wo[22:0]}),\n\t.q(wire_trailing_zeros_cnt_q));\n\t\n\tinitial\n\t\tadd_sub_dffe1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) add_sub_dffe1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   add_sub_dffe1 <= add_sub_dffe1_wi;\n\t\n\tinitial\n\t\tadd_sub_dffe12 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) add_sub_dffe12 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   add_sub_dffe12 <= add_sub_dffe12_wi;\n\t\n\tinitial\n\t\taligned_dataa_exp_dffe12 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) aligned_dataa_exp_dffe12 <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   aligned_dataa_exp_dffe12 <= aligned_dataa_exp_dffe12_wi;\n\t\n\tinitial\n\t\taligned_dataa_man_dffe12 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) aligned_dataa_man_dffe12 <= 24'b0;\n\t\telse if  (clk_en == 1'b1)   aligned_dataa_man_dffe12 <= aligned_dataa_man_dffe12_wi;\n\t\n\tinitial\n\t\taligned_dataa_sign_dffe12 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) aligned_dataa_sign_dffe12 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   aligned_dataa_sign_dffe12 <= aligned_dataa_sign_dffe12_wi;\n\t\n\tinitial\n\t\taligned_datab_exp_dffe12 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) aligned_datab_exp_dffe12 <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   aligned_datab_exp_dffe12 <= aligned_datab_exp_dffe12_wi;\n\t\n\tinitial\n\t\taligned_datab_man_dffe12 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) aligned_datab_man_dffe12 <= 24'b0;\n\t\telse if  (clk_en == 1'b1)   aligned_datab_man_dffe12 <= aligned_datab_man_dffe12_wi;\n\t\n\tinitial\n\t\taligned_datab_sign_dffe12 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) aligned_datab_sign_dffe12 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   aligned_datab_sign_dffe12 <= aligned_datab_sign_dffe12_wi;\n\t\n\tinitial\n\t\tboth_inputs_are_infinite_dffe1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) both_inputs_are_infinite_dffe1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   both_inputs_are_infinite_dffe1 <= both_inputs_are_infinite_dffe1_wi;\n\t\n\tinitial\n\t\tdata_exp_dffe1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) data_exp_dffe1 <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   data_exp_dffe1 <= data_exp_dffe1_wi;\n\t\n\tinitial\n\t\tdataa_man_dffe1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) dataa_man_dffe1 <= 26'b0;\n\t\telse if  (clk_en == 1'b1)   dataa_man_dffe1 <= dataa_man_dffe1_wi;\n\t\n\tinitial\n\t\tdataa_sign_dffe1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) dataa_sign_dffe1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   dataa_sign_dffe1 <= dataa_sign_dffe1_wi;\n\t\n\tinitial\n\t\tdatab_man_dffe1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) datab_man_dffe1 <= 26'b0;\n\t\telse if  (clk_en == 1'b1)   datab_man_dffe1 <= datab_man_dffe1_wi;\n\t\n\tinitial\n\t\tdatab_sign_dffe1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) datab_sign_dffe1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   datab_sign_dffe1 <= datab_sign_dffe1_wi;\n\t\n\tinitial\n\t\tdenormal_res_dffe3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) denormal_res_dffe3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   denormal_res_dffe3 <= denormal_res_dffe3_wi;\n\t\n\tinitial\n\t\tdenormal_res_dffe4 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) denormal_res_dffe4 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   denormal_res_dffe4 <= denormal_res_dffe4_wi;\n\t\n\tinitial\n\t\texp_adj_dffe21 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_adj_dffe21 <= 2'b0;\n\t\telse if  (clk_en == 1'b1)   exp_adj_dffe21 <= exp_adj_dffe21_wi;\n\t\n\tinitial\n\t\texp_out_dffe5 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_out_dffe5 <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   exp_out_dffe5 <= exp_out_dffe5_wi;\n\t\n\tinitial\n\t\texp_res_dffe2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_res_dffe2 <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   exp_res_dffe2 <= exp_res_dffe2_wi;\n\t\n\tinitial\n\t\texp_res_dffe21 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_res_dffe21 <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   exp_res_dffe21 <= exp_res_dffe21_wi;\n\t\n\tinitial\n\t\texp_res_dffe3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_res_dffe3 <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   exp_res_dffe3 <= exp_res_dffe3_wi;\n\t\n\tinitial\n\t\texp_res_dffe4 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_res_dffe4 <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   exp_res_dffe4 <= exp_res_dffe4_wi;\n\t\n\tinitial\n\t\tinfinite_output_sign_dffe1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) infinite_output_sign_dffe1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   infinite_output_sign_dffe1 <= infinite_output_sign_dffe1_wi;\n\t\n\tinitial\n\t\tinfinite_output_sign_dffe2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) infinite_output_sign_dffe2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   infinite_output_sign_dffe2 <= infinite_output_sign_dffe2_wi;\n\t\n\tinitial\n\t\tinfinite_output_sign_dffe21 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) infinite_output_sign_dffe21 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   infinite_output_sign_dffe21 <= infinite_output_sign_dffe21_wi;\n\t\n\tinitial\n\t\tinfinite_output_sign_dffe3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) infinite_output_sign_dffe3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   infinite_output_sign_dffe3 <= infinite_output_sign_dffe3_wi;\n\t\n\tinitial\n\t\tinfinite_output_sign_dffe31 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) infinite_output_sign_dffe31 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   infinite_output_sign_dffe31 <= infinite_output_sign_dffe31_wi;\n\t\n\tinitial\n\t\tinfinite_output_sign_dffe4 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) infinite_output_sign_dffe4 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   infinite_output_sign_dffe4 <= infinite_output_sign_dffe4_wi;\n\t\n\tinitial\n\t\tinfinite_res_dffe3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) infinite_res_dffe3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   infinite_res_dffe3 <= infinite_res_dffe3_wi;\n\t\n\tinitial\n\t\tinfinite_res_dffe4 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) infinite_res_dffe4 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   infinite_res_dffe4 <= infinite_res_dffe4_wi;\n\t\n\tinitial\n\t\tinfinity_magnitude_sub_dffe2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) infinity_magnitude_sub_dffe2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   infinity_magnitude_sub_dffe2 <= infinity_magnitude_sub_dffe2_wi;\n\t\n\tinitial\n\t\tinfinity_magnitude_sub_dffe21 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) infinity_magnitude_sub_dffe21 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   infinity_magnitude_sub_dffe21 <= infinity_magnitude_sub_dffe21_wi;\n\t\n\tinitial\n\t\tinfinity_magnitude_sub_dffe3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) infinity_magnitude_sub_dffe3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   infinity_magnitude_sub_dffe3 <= infinity_magnitude_sub_dffe3_wi;\n\t\n\tinitial\n\t\tinfinity_magnitude_sub_dffe31 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) infinity_magnitude_sub_dffe31 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   infinity_magnitude_sub_dffe31 <= infinity_magnitude_sub_dffe31_wi;\n\t\n\tinitial\n\t\tinfinity_magnitude_sub_dffe4 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) infinity_magnitude_sub_dffe4 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   infinity_magnitude_sub_dffe4 <= infinity_magnitude_sub_dffe4_wi;\n\t\n\tinitial\n\t\tinput_dataa_infinite_dffe12 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_dataa_infinite_dffe12 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_dataa_infinite_dffe12 <= input_dataa_infinite_dffe12_wi;\n\t\n\tinitial\n\t\tinput_dataa_nan_dffe12 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_dataa_nan_dffe12 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_dataa_nan_dffe12 <= input_dataa_nan_dffe12_wi;\n\t\n\tinitial\n\t\tinput_datab_infinite_dffe12 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_datab_infinite_dffe12 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_datab_infinite_dffe12 <= input_datab_infinite_dffe12_wi;\n\t\n\tinitial\n\t\tinput_datab_nan_dffe12 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_datab_nan_dffe12 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_datab_nan_dffe12 <= input_datab_nan_dffe12_wi;\n\t\n\tinitial\n\t\tinput_is_infinite_dffe1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_infinite_dffe1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_infinite_dffe1 <= input_is_infinite_dffe1_wi;\n\t\n\tinitial\n\t\tinput_is_infinite_dffe2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_infinite_dffe2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_infinite_dffe2 <= input_is_infinite_dffe2_wi;\n\t\n\tinitial\n\t\tinput_is_infinite_dffe21 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_infinite_dffe21 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_infinite_dffe21 <= input_is_infinite_dffe21_wi;\n\t\n\tinitial\n\t\tinput_is_infinite_dffe3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_infinite_dffe3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_infinite_dffe3 <= input_is_infinite_dffe3_wi;\n\t\n\tinitial\n\t\tinput_is_infinite_dffe31 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_infinite_dffe31 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_infinite_dffe31 <= input_is_infinite_dffe31_wi;\n\t\n\tinitial\n\t\tinput_is_infinite_dffe4 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_infinite_dffe4 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_infinite_dffe4 <= input_is_infinite_dffe4_wi;\n\t\n\tinitial\n\t\tinput_is_nan_dffe1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_nan_dffe1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_nan_dffe1 <= input_is_nan_dffe1_wi;\n\t\n\tinitial\n\t\tinput_is_nan_dffe2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_nan_dffe2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_nan_dffe2 <= input_is_nan_dffe2_wi;\n\t\n\tinitial\n\t\tinput_is_nan_dffe21 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_nan_dffe21 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_nan_dffe21 <= input_is_nan_dffe21_wi;\n\t\n\tinitial\n\t\tinput_is_nan_dffe3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_nan_dffe3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_nan_dffe3 <= input_is_nan_dffe3_wi;\n\t\n\tinitial\n\t\tinput_is_nan_dffe31 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_nan_dffe31 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_nan_dffe31 <= input_is_nan_dffe31_wi;\n\t\n\tinitial\n\t\tinput_is_nan_dffe4 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_nan_dffe4 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_nan_dffe4 <= input_is_nan_dffe4_wi;\n\t\n\tinitial\n\t\tman_add_sub_res_mag_dffe21 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_add_sub_res_mag_dffe21 <= 26'b0;\n\t\telse if  (clk_en == 1'b1)   man_add_sub_res_mag_dffe21 <= man_add_sub_res_mag_dffe21_wi;\n\t\n\tinitial\n\t\tman_add_sub_res_sign_dffe21 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_add_sub_res_sign_dffe21 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   man_add_sub_res_sign_dffe21 <= man_add_sub_res_sign_dffe27_wo;\n\t\n\tinitial\n\t\tman_dffe31 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_dffe31 <= 26'b0;\n\t\telse if  (clk_en == 1'b1)   man_dffe31 <= man_add_sub_res_mag_dffe26_wo;\n\t\n\tinitial\n\t\tman_leading_zeros_dffe31 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_leading_zeros_dffe31 <= 5'b0;\n\t\telse if  (clk_en == 1'b1)   man_leading_zeros_dffe31 <= man_leading_zeros_dffe31_wi;\n\t\n\tinitial\n\t\tman_out_dffe5 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_out_dffe5 <= 23'b0;\n\t\telse if  (clk_en == 1'b1)   man_out_dffe5 <= man_out_dffe5_wi;\n\t\n\tinitial\n\t\tman_res_dffe4 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_res_dffe4 <= 23'b0;\n\t\telse if  (clk_en == 1'b1)   man_res_dffe4 <= man_res_dffe4_wi;\n\t\n\tinitial\n\t\tman_res_is_not_zero_dffe3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_res_is_not_zero_dffe3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   man_res_is_not_zero_dffe3 <= man_res_is_not_zero_dffe3_wi;\n\t\n\tinitial\n\t\tman_res_is_not_zero_dffe31 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_res_is_not_zero_dffe31 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   man_res_is_not_zero_dffe31 <= man_res_is_not_zero_dffe31_wi;\n\t\n\tinitial\n\t\tman_res_is_not_zero_dffe4 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_res_is_not_zero_dffe4 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   man_res_is_not_zero_dffe4 <= man_res_is_not_zero_dffe4_wi;\n\t\n\tinitial\n\t\tneed_complement_dffe2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) need_complement_dffe2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   need_complement_dffe2 <= need_complement_dffe2_wi;\n\t\n\tinitial\n\t\tround_bit_dffe21 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) round_bit_dffe21 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   round_bit_dffe21 <= round_bit_dffe21_wi;\n\t\n\tinitial\n\t\tround_bit_dffe3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) round_bit_dffe3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   round_bit_dffe3 <= round_bit_dffe3_wi;\n\t\n\tinitial\n\t\tround_bit_dffe31 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) round_bit_dffe31 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   round_bit_dffe31 <= round_bit_dffe31_wi;\n\t\n\tinitial\n\t\trounded_res_infinity_dffe4 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) rounded_res_infinity_dffe4 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   rounded_res_infinity_dffe4 <= rounded_res_infinity_dffe4_wi;\n\t\n\tinitial\n\t\tsign_dffe31 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_dffe31 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_dffe31 <= sign_dffe31_wi;\n\t\n\tinitial\n\t\tsign_out_dffe5 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_out_dffe5 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_out_dffe5 <= sign_out_dffe5_wi;\n\t\n\tinitial\n\t\tsign_res_dffe3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_res_dffe3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_res_dffe3 <= sign_res_dffe3_wi;\n\t\n\tinitial\n\t\tsign_res_dffe4 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_res_dffe4 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_res_dffe4 <= sign_res_dffe4_wi;\n\t\n\tinitial\n\t\tsticky_bit_dffe1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sticky_bit_dffe1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sticky_bit_dffe1 <= sticky_bit_dffe1_wi;\n\t\n\tinitial\n\t\tsticky_bit_dffe2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sticky_bit_dffe2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sticky_bit_dffe2 <= sticky_bit_dffe2_wi;\n\t\n\tinitial\n\t\tsticky_bit_dffe21 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sticky_bit_dffe21 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sticky_bit_dffe21 <= sticky_bit_dffe21_wi;\n\t\n\tinitial\n\t\tsticky_bit_dffe3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sticky_bit_dffe3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sticky_bit_dffe3 <= sticky_bit_dffe3_wi;\n\t\n\tinitial\n\t\tsticky_bit_dffe31 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sticky_bit_dffe31 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sticky_bit_dffe31 <= sticky_bit_dffe31_wi;\n\t\n\tinitial\n\t\tzero_man_sign_dffe2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) zero_man_sign_dffe2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   zero_man_sign_dffe2 <= zero_man_sign_dffe2_wi;\n\t\n\tinitial\n\t\tzero_man_sign_dffe21 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) zero_man_sign_dffe21 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   zero_man_sign_dffe21 <= zero_man_sign_dffe21_wi;\n\tlpm_add_sub   add_sub1\n\t( \n\t.aclr(aclr),\n\t.clken(clk_en),\n\t.clock(clock),\n\t.cout(),\n\t.dataa(aligned_dataa_exp_w),\n\t.datab(aligned_datab_exp_w),\n\t.overflow(),\n\t.result(wire_add_sub1_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.add_sub(1'b1),\n\t.cin()\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tadd_sub1.lpm_direction = \"SUB\",\n\t\tadd_sub1.lpm_pipeline = 1,\n\t\tadd_sub1.lpm_representation = \"SIGNED\",\n\t\tadd_sub1.lpm_width = 9,\n\t\tadd_sub1.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   add_sub2\n\t( \n\t.aclr(aclr),\n\t.clken(clk_en),\n\t.clock(clock),\n\t.cout(),\n\t.dataa(aligned_datab_exp_w),\n\t.datab(aligned_dataa_exp_w),\n\t.overflow(),\n\t.result(wire_add_sub2_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.add_sub(1'b1),\n\t.cin()\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tadd_sub2.lpm_direction = \"SUB\",\n\t\tadd_sub2.lpm_pipeline = 1,\n\t\tadd_sub2.lpm_representation = \"SIGNED\",\n\t\tadd_sub2.lpm_width = 9,\n\t\tadd_sub2.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   add_sub3\n\t( \n\t.cout(),\n\t.dataa(sticky_bit_cnt_dataa_w),\n\t.datab(sticky_bit_cnt_datab_w),\n\t.overflow(),\n\t.result(wire_add_sub3_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.cin(),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tadd_sub3.lpm_direction = \"SUB\",\n\t\tadd_sub3.lpm_representation = \"SIGNED\",\n\t\tadd_sub3.lpm_width = 6,\n\t\tadd_sub3.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   add_sub4\n\t( \n\t.cout(),\n\t.dataa(exp_adjustment_add_sub_dataa_w),\n\t.datab(exp_adjustment_add_sub_datab_w),\n\t.overflow(),\n\t.result(wire_add_sub4_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.cin(),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tadd_sub4.lpm_direction = \"ADD\",\n\t\tadd_sub4.lpm_representation = \"SIGNED\",\n\t\tadd_sub4.lpm_width = 9,\n\t\tadd_sub4.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   add_sub5\n\t( \n\t.aclr(aclr),\n\t.clken(clk_en),\n\t.clock(clock),\n\t.cout(),\n\t.dataa(exp_adjustment2_add_sub_dataa_w),\n\t.datab(exp_adjustment2_add_sub_datab_w),\n\t.overflow(),\n\t.result(wire_add_sub5_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.add_sub(1'b1),\n\t.cin()\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tadd_sub5.lpm_direction = \"ADD\",\n\t\tadd_sub5.lpm_pipeline = 1,\n\t\tadd_sub5.lpm_representation = \"SIGNED\",\n\t\tadd_sub5.lpm_width = 9,\n\t\tadd_sub5.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   add_sub6\n\t( \n\t.cout(),\n\t.dataa(exp_res_rounding_adder_dataa_w),\n\t.datab(exp_rounding_adjustment_w),\n\t.overflow(),\n\t.result(wire_add_sub6_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.cin(),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tadd_sub6.lpm_direction = \"ADD\",\n\t\tadd_sub6.lpm_representation = \"SIGNED\",\n\t\tadd_sub6.lpm_width = 9,\n\t\tadd_sub6.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   man_2comp_res_lower\n\t( \n\t.aclr(aclr),\n\t.add_sub(add_sub_w2),\n\t.cin(borrow_w),\n\t.clken(clk_en),\n\t.clock(clock),\n\t.cout(wire_man_2comp_res_lower_cout),\n\t.dataa(man_2comp_res_dataa_w[13:0]),\n\t.datab(man_2comp_res_datab_w[13:0]),\n\t.overflow(),\n\t.result(wire_man_2comp_res_lower_result));\n\tdefparam\n\t\tman_2comp_res_lower.lpm_pipeline = 1,\n\t\tman_2comp_res_lower.lpm_representation = \"SIGNED\",\n\t\tman_2comp_res_lower.lpm_width = 14,\n\t\tman_2comp_res_lower.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   man_2comp_res_upper0\n\t( \n\t.aclr(aclr),\n\t.add_sub(add_sub_w2),\n\t.cin(1'b0),\n\t.clken(clk_en),\n\t.clock(clock),\n\t.cout(),\n\t.dataa(man_2comp_res_dataa_w[27:14]),\n\t.datab(man_2comp_res_datab_w[27:14]),\n\t.overflow(),\n\t.result(wire_man_2comp_res_upper0_result));\n\tdefparam\n\t\tman_2comp_res_upper0.lpm_pipeline = 1,\n\t\tman_2comp_res_upper0.lpm_representation = \"SIGNED\",\n\t\tman_2comp_res_upper0.lpm_width = 14,\n\t\tman_2comp_res_upper0.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   man_2comp_res_upper1\n\t( \n\t.aclr(aclr),\n\t.add_sub(add_sub_w2),\n\t.cin(1'b1),\n\t.clken(clk_en),\n\t.clock(clock),\n\t.cout(),\n\t.dataa(man_2comp_res_dataa_w[27:14]),\n\t.datab(man_2comp_res_datab_w[27:14]),\n\t.overflow(),\n\t.result(wire_man_2comp_res_upper1_result));\n\tdefparam\n\t\tman_2comp_res_upper1.lpm_pipeline = 1,\n\t\tman_2comp_res_upper1.lpm_representation = \"SIGNED\",\n\t\tman_2comp_res_upper1.lpm_width = 14,\n\t\tman_2comp_res_upper1.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   man_add_sub_lower\n\t( \n\t.aclr(aclr),\n\t.add_sub(add_sub_w2),\n\t.cin(borrow_w),\n\t.clken(clk_en),\n\t.clock(clock),\n\t.cout(wire_man_add_sub_lower_cout),\n\t.dataa(man_add_sub_dataa_w[13:0]),\n\t.datab(man_add_sub_datab_w[13:0]),\n\t.overflow(),\n\t.result(wire_man_add_sub_lower_result));\n\tdefparam\n\t\tman_add_sub_lower.lpm_pipeline = 1,\n\t\tman_add_sub_lower.lpm_representation = \"SIGNED\",\n\t\tman_add_sub_lower.lpm_width = 14,\n\t\tman_add_sub_lower.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   man_add_sub_upper0\n\t( \n\t.aclr(aclr),\n\t.add_sub(add_sub_w2),\n\t.cin(1'b0),\n\t.clken(clk_en),\n\t.clock(clock),\n\t.cout(),\n\t.dataa(man_add_sub_dataa_w[27:14]),\n\t.datab(man_add_sub_datab_w[27:14]),\n\t.overflow(),\n\t.result(wire_man_add_sub_upper0_result));\n\tdefparam\n\t\tman_add_sub_upper0.lpm_pipeline = 1,\n\t\tman_add_sub_upper0.lpm_representation = \"SIGNED\",\n\t\tman_add_sub_upper0.lpm_width = 14,\n\t\tman_add_sub_upper0.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   man_add_sub_upper1\n\t( \n\t.aclr(aclr),\n\t.add_sub(add_sub_w2),\n\t.cin(1'b1),\n\t.clken(clk_en),\n\t.clock(clock),\n\t.cout(),\n\t.dataa(man_add_sub_dataa_w[27:14]),\n\t.datab(man_add_sub_datab_w[27:14]),\n\t.overflow(),\n\t.result(wire_man_add_sub_upper1_result));\n\tdefparam\n\t\tman_add_sub_upper1.lpm_pipeline = 1,\n\t\tman_add_sub_upper1.lpm_representation = \"SIGNED\",\n\t\tman_add_sub_upper1.lpm_width = 14,\n\t\tman_add_sub_upper1.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   man_res_rounding_add_sub_lower\n\t( \n\t.cout(wire_man_res_rounding_add_sub_lower_cout),\n\t.dataa(man_intermediate_res_w[12:0]),\n\t.datab(man_res_rounding_add_sub_datab_w[12:0]),\n\t.overflow(),\n\t.result(wire_man_res_rounding_add_sub_lower_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.cin(),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tman_res_rounding_add_sub_lower.lpm_direction = \"ADD\",\n\t\tman_res_rounding_add_sub_lower.lpm_representation = \"SIGNED\",\n\t\tman_res_rounding_add_sub_lower.lpm_width = 13,\n\t\tman_res_rounding_add_sub_lower.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   man_res_rounding_add_sub_upper1\n\t( \n\t.cin(1'b1),\n\t.cout(),\n\t.dataa(man_intermediate_res_w[25:13]),\n\t.datab(man_res_rounding_add_sub_datab_w[25:13]),\n\t.overflow(),\n\t.result(wire_man_res_rounding_add_sub_upper1_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tman_res_rounding_add_sub_upper1.lpm_direction = \"ADD\",\n\t\tman_res_rounding_add_sub_upper1.lpm_representation = \"SIGNED\",\n\t\tman_res_rounding_add_sub_upper1.lpm_width = 13,\n\t\tman_res_rounding_add_sub_upper1.lpm_type = \"lpm_add_sub\";\n\tlpm_compare   trailing_zeros_limit_comparator\n\t( \n\t.aeb(),\n\t.agb(wire_trailing_zeros_limit_comparator_agb),\n\t.ageb(),\n\t.alb(),\n\t.aleb(),\n\t.aneb(),\n\t.dataa(sticky_bit_cnt_res_w),\n\t.datab(trailing_zeros_limit_w)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\ttrailing_zeros_limit_comparator.lpm_representation = \"SIGNED\",\n\t\ttrailing_zeros_limit_comparator.lpm_width = 6,\n\t\ttrailing_zeros_limit_comparator.lpm_type = \"lpm_compare\";\n\tassign\n\t\tadd_sub_dffe11_wi = add_sub,\n\t\tadd_sub_dffe11_wo = add_sub_dffe11_wi,\n\t\tadd_sub_dffe12_wi = add_sub_dffe11_wo,\n\t\tadd_sub_dffe12_wo = add_sub_dffe12,\n\t\tadd_sub_dffe13_wi = add_sub_dffe12_wo,\n\t\tadd_sub_dffe13_wo = add_sub_dffe13_wi,\n\t\tadd_sub_dffe14_wi = add_sub_dffe13_wo,\n\t\tadd_sub_dffe14_wo = add_sub_dffe14_wi,\n\t\tadd_sub_dffe15_wi = add_sub_dffe14_wo,\n\t\tadd_sub_dffe15_wo = add_sub_dffe15_wi,\n\t\tadd_sub_dffe1_wi = add_sub_dffe15_wo,\n\t\tadd_sub_dffe1_wo = add_sub_dffe1,\n\t\tadd_sub_dffe25_wi = add_sub_w2,\n\t\tadd_sub_dffe25_wo = add_sub_dffe25_wi,\n\t\tadd_sub_w2 = (((((dataa_sign_dffe1_wo & (~ datab_sign_dffe1_wo)) & (~ add_sub_dffe1_wo)) | (((~ dataa_sign_dffe1_wo) & (~ datab_sign_dffe1_wo)) & add_sub_dffe1_wo)) | (((~ dataa_sign_dffe1_wo) & datab_sign_dffe1_wo) & (~ add_sub_dffe1_wo))) | ((dataa_sign_dffe1_wo & datab_sign_dffe1_wo) & add_sub_dffe1_wo)),\n\t\tadder_upper_w = man_intermediate_res_w[25:13],\n\t\taligned_dataa_exp_dffe12_wi = aligned_dataa_exp_w,\n\t\taligned_dataa_exp_dffe12_wo = aligned_dataa_exp_dffe12,\n\t\taligned_dataa_exp_dffe13_wi = aligned_dataa_exp_dffe12_wo,\n\t\taligned_dataa_exp_dffe13_wo = aligned_dataa_exp_dffe13_wi,\n\t\taligned_dataa_exp_dffe14_wi = aligned_dataa_exp_dffe13_wo,\n\t\taligned_dataa_exp_dffe14_wo = aligned_dataa_exp_dffe14_wi,\n\t\taligned_dataa_exp_dffe15_wi = aligned_dataa_exp_dffe14_wo,\n\t\taligned_dataa_exp_dffe15_wo = aligned_dataa_exp_dffe15_wi,\n\t\taligned_dataa_exp_w = {1'b0, ({8{(~ input_dataa_denormal_dffe11_wo)}} & dataa_dffe11_wo[30:23])},\n\t\taligned_dataa_man_dffe12_wi = aligned_dataa_man_w[25:2],\n\t\taligned_dataa_man_dffe12_wo = aligned_dataa_man_dffe12,\n\t\taligned_dataa_man_dffe13_wi = aligned_dataa_man_dffe12_wo,\n\t\taligned_dataa_man_dffe13_wo = aligned_dataa_man_dffe13_wi,\n\t\taligned_dataa_man_dffe14_wi = aligned_dataa_man_dffe13_wo,\n\t\taligned_dataa_man_dffe14_wo = aligned_dataa_man_dffe14_wi,\n\t\taligned_dataa_man_dffe15_w = {aligned_dataa_man_dffe15_wo, {2{1'b0}}},\n\t\taligned_dataa_man_dffe15_wi = aligned_dataa_man_dffe14_wo,\n\t\taligned_dataa_man_dffe15_wo = aligned_dataa_man_dffe15_wi,\n\t\taligned_dataa_man_w = {(((~ input_dataa_infinite_dffe11_wo) & (~ input_dataa_denormal_dffe11_wo)) & (~ input_dataa_zero_dffe11_wo)), ({23{(~ input_dataa_denormal_dffe11_wo)}} & dataa_dffe11_wo[22:0]), {2{1'b0}}},\n\t\taligned_dataa_sign_dffe12_wi = aligned_dataa_sign_w,\n\t\taligned_dataa_sign_dffe12_wo = aligned_dataa_sign_dffe12,\n\t\taligned_dataa_sign_dffe13_wi = aligned_dataa_sign_dffe12_wo,\n\t\taligned_dataa_sign_dffe13_wo = aligned_dataa_sign_dffe13_wi,\n\t\taligned_dataa_sign_dffe14_wi = aligned_dataa_sign_dffe13_wo,\n\t\taligned_dataa_sign_dffe14_wo = aligned_dataa_sign_dffe14_wi,\n\t\taligned_dataa_sign_dffe15_wi = aligned_dataa_sign_dffe14_wo,\n\t\taligned_dataa_sign_dffe15_wo = aligned_dataa_sign_dffe15_wi,\n\t\taligned_dataa_sign_w = dataa_dffe11_wo[31],\n\t\taligned_datab_exp_dffe12_wi = aligned_datab_exp_w,\n\t\taligned_datab_exp_dffe12_wo = aligned_datab_exp_dffe12,\n\t\taligned_datab_exp_dffe13_wi = aligned_datab_exp_dffe12_wo,\n\t\taligned_datab_exp_dffe13_wo = aligned_datab_exp_dffe13_wi,\n\t\taligned_datab_exp_dffe14_wi = aligned_datab_exp_dffe13_wo,\n\t\taligned_datab_exp_dffe14_wo = aligned_datab_exp_dffe14_wi,\n\t\taligned_datab_exp_dffe15_wi = aligned_datab_exp_dffe14_wo,\n\t\taligned_datab_exp_dffe15_wo = aligned_datab_exp_dffe15_wi,\n\t\taligned_datab_exp_w = {1'b0, ({8{(~ input_datab_denormal_dffe11_wo)}} & datab_dffe11_wo[30:23])},\n\t\taligned_datab_man_dffe12_wi = aligned_datab_man_w[25:2],\n\t\taligned_datab_man_dffe12_wo = aligned_datab_man_dffe12,\n\t\taligned_datab_man_dffe13_wi = aligned_datab_man_dffe12_wo,\n\t\taligned_datab_man_dffe13_wo = aligned_datab_man_dffe13_wi,\n\t\taligned_datab_man_dffe14_wi = aligned_datab_man_dffe13_wo,\n\t\taligned_datab_man_dffe14_wo = aligned_datab_man_dffe14_wi,\n\t\taligned_datab_man_dffe15_w = {aligned_datab_man_dffe15_wo, {2{1'b0}}},\n\t\taligned_datab_man_dffe15_wi = aligned_datab_man_dffe14_wo,\n\t\taligned_datab_man_dffe15_wo = aligned_datab_man_dffe15_wi,\n\t\taligned_datab_man_w = {(((~ input_datab_infinite_dffe11_wo) & (~ input_datab_denormal_dffe11_wo)) & (~ input_datab_zero_dffe11_wo)), ({23{(~ input_datab_denormal_dffe11_wo)}} & datab_dffe11_wo[22:0]), {2{1'b0}}},\n\t\taligned_datab_sign_dffe12_wi = aligned_datab_sign_w,\n\t\taligned_datab_sign_dffe12_wo = aligned_datab_sign_dffe12,\n\t\taligned_datab_sign_dffe13_wi = aligned_datab_sign_dffe12_wo,\n\t\taligned_datab_sign_dffe13_wo = aligned_datab_sign_dffe13_wi,\n\t\taligned_datab_sign_dffe14_wi = aligned_datab_sign_dffe13_wo,\n\t\taligned_datab_sign_dffe14_wo = aligned_datab_sign_dffe14_wi,\n\t\taligned_datab_sign_dffe15_wi = aligned_datab_sign_dffe14_wo,\n\t\taligned_datab_sign_dffe15_wo = aligned_datab_sign_dffe15_wi,\n\t\taligned_datab_sign_w = datab_dffe11_wo[31],\n\t\tborrow_w = ((~ sticky_bit_dffe1_wo) & (~ add_sub_w2)),\n\t\tboth_inputs_are_infinite_dffe1_wi = (input_dataa_infinite_dffe15_wo & input_datab_infinite_dffe15_wo),\n\t\tboth_inputs_are_infinite_dffe1_wo = both_inputs_are_infinite_dffe1,\n\t\tboth_inputs_are_infinite_dffe25_wi = both_inputs_are_infinite_dffe1_wo,\n\t\tboth_inputs_are_infinite_dffe25_wo = both_inputs_are_infinite_dffe25_wi,\n\t\tdata_exp_dffe1_wi = (({8{(~ exp_amb_mux_dffe15_wo)}} & aligned_dataa_exp_dffe15_wo[7:0]) | ({8{exp_amb_mux_dffe15_wo}} & aligned_datab_exp_dffe15_wo[7:0])),\n\t\tdata_exp_dffe1_wo = data_exp_dffe1,\n\t\tdataa_dffe11_wi = dataa,\n\t\tdataa_dffe11_wo = dataa_dffe11_wi,\n\t\tdataa_man_dffe1_wi = (({26{(~ exp_amb_mux_dffe15_wo)}} & aligned_dataa_man_dffe15_w) | ({26{exp_amb_mux_dffe15_wo}} & wire_rbarrel_shift_result)),\n\t\tdataa_man_dffe1_wo = dataa_man_dffe1,\n\t\tdataa_sign_dffe1_wi = aligned_dataa_sign_dffe15_wo,\n\t\tdataa_sign_dffe1_wo = dataa_sign_dffe1,\n\t\tdataa_sign_dffe25_wi = dataa_sign_dffe1_wo,\n\t\tdataa_sign_dffe25_wo = dataa_sign_dffe25_wi,\n\t\tdatab_dffe11_wi = datab,\n\t\tdatab_dffe11_wo = datab_dffe11_wi,\n\t\tdatab_man_dffe1_wi = (({26{(~ exp_amb_mux_dffe15_wo)}} & wire_rbarrel_shift_result) | ({26{exp_amb_mux_dffe15_wo}} & aligned_datab_man_dffe15_w)),\n\t\tdatab_man_dffe1_wo = datab_man_dffe1,\n\t\tdatab_sign_dffe1_wi = aligned_datab_sign_dffe15_wo,\n\t\tdatab_sign_dffe1_wo = datab_sign_dffe1,\n\t\tdenormal_flag_w = ((((~ force_nan_w) & (~ force_infinity_w)) & (~ force_zero_w)) & denormal_res_dffe4_wo),\n\t\tdenormal_res_dffe32_wi = denormal_result_w,\n\t\tdenormal_res_dffe32_wo = denormal_res_dffe32_wi,\n\t\tdenormal_res_dffe33_wi = denormal_res_dffe32_wo,\n\t\tdenormal_res_dffe33_wo = denormal_res_dffe33_wi,\n\t\tdenormal_res_dffe3_wi = denormal_res_dffe33_wo,\n\t\tdenormal_res_dffe3_wo = denormal_res_dffe3,\n\t\tdenormal_res_dffe41_wi = denormal_res_dffe42_wo,\n\t\tdenormal_res_dffe41_wo = denormal_res_dffe41_wi,\n\t\tdenormal_res_dffe42_wi = denormal_res_dffe3_wo,\n\t\tdenormal_res_dffe42_wo = denormal_res_dffe42_wi,\n\t\tdenormal_res_dffe4_wi = denormal_res_dffe41_wo,\n\t\tdenormal_res_dffe4_wo = denormal_res_dffe4,\n\t\tdenormal_result_w = ((~ exp_res_not_zero_w[8]) | exp_adjustment2_add_sub_w[8]),\n\t\texp_a_all_one_w = {(dataa[30] & exp_a_all_one_w[6]), (dataa[29] & exp_a_all_one_w[5]), (dataa[28] & exp_a_all_one_w[4]), (dataa[27] & exp_a_all_one_w[3]), (dataa[26] & exp_a_all_one_w[2]), (dataa[25] & exp_a_all_one_w[1]), (dataa[24] & exp_a_all_one_w[0]), dataa[23]},\n\t\texp_a_not_zero_w = {(dataa[30] | exp_a_not_zero_w[6]), (dataa[29] | exp_a_not_zero_w[5]), (dataa[28] | exp_a_not_zero_w[4]), (dataa[27] | exp_a_not_zero_w[3]), (dataa[26] | exp_a_not_zero_w[2]), (dataa[25] | exp_a_not_zero_w[1]), (dataa[24] | exp_a_not_zero_w[0]), dataa[23]},\n\t\texp_adj_0pads = {7{1'b0}},\n\t\texp_adj_dffe21_wi = (({2{man_add_sub_res_mag_dffe27_wo[26]}} & exp_adjust_by_add2) | ({2{(~ man_add_sub_res_mag_dffe27_wo[26])}} & exp_adjust_by_add1)),\n\t\texp_adj_dffe21_wo = exp_adj_dffe21,\n\t\texp_adj_dffe23_wi = exp_adj_dffe21_wo,\n\t\texp_adj_dffe23_wo = exp_adj_dffe23_wi,\n\t\texp_adj_dffe26_wi = exp_adj_dffe23_wo,\n\t\texp_adj_dffe26_wo = exp_adj_dffe26_wi,\n\t\texp_adjust_by_add1 = 2'b01,\n\t\texp_adjust_by_add2 = 2'b10,\n\t\texp_adjustment2_add_sub_dataa_w = exp_value,\n\t\texp_adjustment2_add_sub_datab_w = exp_adjustment_add_sub_w,\n\t\texp_adjustment2_add_sub_w = wire_add_sub5_result,\n\t\texp_adjustment_add_sub_dataa_w = {priority_encoder_1pads_w, wire_leading_zeroes_cnt_q},\n\t\texp_adjustment_add_sub_datab_w = {exp_adj_0pads, exp_adj_dffe26_wo},\n\t\texp_adjustment_add_sub_w = wire_add_sub4_result,\n\t\texp_all_ones_w = {8{1'b1}},\n\t\texp_all_zeros_w = {8{1'b0}},\n\t\texp_amb_mux_dffe13_wi = exp_amb_mux_w,\n\t\texp_amb_mux_dffe13_wo = exp_amb_mux_dffe13_wi,\n\t\texp_amb_mux_dffe14_wi = exp_amb_mux_dffe13_wo,\n\t\texp_amb_mux_dffe14_wo = exp_amb_mux_dffe14_wi,\n\t\texp_amb_mux_dffe15_wi = exp_amb_mux_dffe14_wo,\n\t\texp_amb_mux_dffe15_wo = exp_amb_mux_dffe15_wi,\n\t\texp_amb_mux_w = exp_amb_w[8],\n\t\texp_amb_w = wire_add_sub1_result,\n\t\texp_b_all_one_w = {(datab[30] & exp_b_all_one_w[6]), (datab[29] & exp_b_all_one_w[5]), (datab[28] & exp_b_all_one_w[4]), (datab[27] & exp_b_all_one_w[3]), (datab[26] & exp_b_all_one_w[2]), (datab[25] & exp_b_all_one_w[1]), (datab[24] & exp_b_all_one_w[0]), datab[23]},\n\t\texp_b_not_zero_w = {(datab[30] | exp_b_not_zero_w[6]), (datab[29] | exp_b_not_zero_w[5]), (datab[28] | exp_b_not_zero_w[4]), (datab[27] | exp_b_not_zero_w[3]), (datab[26] | exp_b_not_zero_w[2]), (datab[25] | exp_b_not_zero_w[1]), (datab[24] | exp_b_not_zero_w[0]), datab[23]},\n\t\texp_bma_w = wire_add_sub2_result,\n\t\texp_diff_abs_exceed_max_w = {(exp_diff_abs_exceed_max_w[1] | exp_diff_abs_w[7]), (exp_diff_abs_exceed_max_w[0] | exp_diff_abs_w[6]), exp_diff_abs_w[5]},\n\t\texp_diff_abs_max_w = {5{1'b1}},\n\t\texp_diff_abs_w = (({8{(~ exp_amb_mux_w)}} & exp_amb_w[7:0]) | ({8{exp_amb_mux_w}} & exp_bma_w[7:0])),\n\t\texp_intermediate_res_dffe41_wi = exp_intermediate_res_dffe42_wo,\n\t\texp_intermediate_res_dffe41_wo = exp_intermediate_res_dffe41_wi,\n\t\texp_intermediate_res_dffe42_wi = exp_intermediate_res_w,\n\t\texp_intermediate_res_dffe42_wo = exp_intermediate_res_dffe42_wi,\n\t\texp_intermediate_res_w = exp_res_dffe3_wo,\n\t\texp_out_dffe5_wi = (({8{force_nan_w}} & exp_all_ones_w) | ({8{(~ force_nan_w)}} & (({8{force_infinity_w}} & exp_all_ones_w) | ({8{(~ force_infinity_w)}} & (({8{(force_zero_w | denormal_flag_w)}} & exp_all_zeros_w) | ({8{(~ (force_zero_w | denormal_flag_w))}} & exp_res_dffe4_wo)))))),\n\t\texp_out_dffe5_wo = exp_out_dffe5,\n\t\texp_res_dffe21_wi = exp_res_dffe27_wo,\n\t\texp_res_dffe21_wo = exp_res_dffe21,\n\t\texp_res_dffe22_wi = exp_res_dffe2_wo,\n\t\texp_res_dffe22_wo = exp_res_dffe22_wi,\n\t\texp_res_dffe23_wi = exp_res_dffe21_wo,\n\t\texp_res_dffe23_wo = exp_res_dffe23_wi,\n\t\texp_res_dffe25_wi = data_exp_dffe1_wo,\n\t\texp_res_dffe25_wo = exp_res_dffe25_wi,\n\t\texp_res_dffe26_wi = exp_res_dffe23_wo,\n\t\texp_res_dffe26_wo = exp_res_dffe26_wi,\n\t\texp_res_dffe27_wi = exp_res_dffe22_wo,\n\t\texp_res_dffe27_wo = exp_res_dffe27_wi,\n\t\texp_res_dffe2_wi = exp_res_dffe25_wo,\n\t\texp_res_dffe2_wo = exp_res_dffe2,\n\t\texp_res_dffe32_wi = ({8{(~ denormal_result_w)}} & exp_adjustment2_add_sub_w[7:0]),\n\t\texp_res_dffe32_wo = exp_res_dffe32_wi,\n\t\texp_res_dffe33_wi = exp_res_dffe32_wo,\n\t\texp_res_dffe33_wo = exp_res_dffe33_wi,\n\t\texp_res_dffe3_wi = exp_res_dffe33_wo,\n\t\texp_res_dffe3_wo = exp_res_dffe3,\n\t\texp_res_dffe4_wi = exp_rounded_res_w,\n\t\texp_res_dffe4_wo = exp_res_dffe4,\n\t\texp_res_max_w = {(exp_res_max_w[6] & exp_adjustment2_add_sub_w[7]), (exp_res_max_w[5] & exp_adjustment2_add_sub_w[6]), (exp_res_max_w[4] & exp_adjustment2_add_sub_w[5]), (exp_res_max_w[3] & exp_adjustment2_add_sub_w[4]), (exp_res_max_w[2] & exp_adjustment2_add_sub_w[3]), (exp_res_max_w[1] & exp_adjustment2_add_sub_w[2]), (exp_res_max_w[0] & exp_adjustment2_add_sub_w[1]), exp_adjustment2_add_sub_w[0]},\n\t\texp_res_not_zero_w = {(exp_res_not_zero_w[7] | exp_adjustment2_add_sub_w[8]), (exp_res_not_zero_w[6] | exp_adjustment2_add_sub_w[7]), (exp_res_not_zero_w[5] | exp_adjustment2_add_sub_w[6]), (exp_res_not_zero_w[4] | exp_adjustment2_add_sub_w[5]), (exp_res_not_zero_w[3] | exp_adjustment2_add_sub_w[4]), (exp_res_not_zero_w[2] | exp_adjustment2_add_sub_w[3]), (exp_res_not_zero_w[1] | exp_adjustment2_add_sub_w[2]), (exp_res_not_zero_w[0] | exp_adjustment2_add_sub_w[1]), exp_adjustment2_add_sub_w[0]},\n\t\texp_res_rounding_adder_dataa_w = {1'b0, exp_intermediate_res_dffe41_wo},\n\t\texp_res_rounding_adder_w = wire_add_sub6_result,\n\t\texp_rounded_res_infinity_w = exp_rounded_res_max_w[7],\n\t\texp_rounded_res_max_w = {(exp_rounded_res_max_w[6] & exp_rounded_res_w[7]), (exp_rounded_res_max_w[5] & exp_rounded_res_w[6]), (exp_rounded_res_max_w[4] & exp_rounded_res_w[5]), (exp_rounded_res_max_w[3] & exp_rounded_res_w[4]), (exp_rounded_res_max_w[2] & exp_rounded_res_w[3]), (exp_rounded_res_max_w[1] & exp_rounded_res_w[2]), (exp_rounded_res_max_w[0] & exp_rounded_res_w[1]), exp_rounded_res_w[0]},\n\t\texp_rounded_res_w = exp_res_rounding_adder_w[7:0],\n\t\texp_rounding_adjustment_w = {{8{1'b0}}, man_res_rounding_add_sub_w[24]},\n\t\texp_value = {1'b0, exp_res_dffe26_wo},\n\t\tforce_infinity_w = ((input_is_infinite_dffe4_wo | rounded_res_infinity_dffe4_wo) | infinite_res_dffe4_wo),\n\t\tforce_nan_w = (infinity_magnitude_sub_dffe4_wo | input_is_nan_dffe4_wo),\n\t\tforce_zero_w = (~ man_res_is_not_zero_dffe4_wo),\n\t\tguard_bit_dffe3_wo = man_res_w3[0],\n\t\tinfinite_output_sign_dffe1_wi = (((~ input_datab_infinite_dffe15_wo) & aligned_dataa_sign_dffe15_wo) | (input_datab_infinite_dffe15_wo & (~ (aligned_datab_sign_dffe15_wo ^ add_sub_dffe15_wo)))),\n\t\tinfinite_output_sign_dffe1_wo = infinite_output_sign_dffe1,\n\t\tinfinite_output_sign_dffe21_wi = infinite_output_sign_dffe27_wo,\n\t\tinfinite_output_sign_dffe21_wo = infinite_output_sign_dffe21,\n\t\tinfinite_output_sign_dffe22_wi = infinite_output_sign_dffe2_wo,\n\t\tinfinite_output_sign_dffe22_wo = infinite_output_sign_dffe22_wi,\n\t\tinfinite_output_sign_dffe23_wi = infinite_output_sign_dffe21_wo,\n\t\tinfinite_output_sign_dffe23_wo = infinite_output_sign_dffe23_wi,\n\t\tinfinite_output_sign_dffe25_wi = infinite_output_sign_dffe1_wo,\n\t\tinfinite_output_sign_dffe25_wo = infinite_output_sign_dffe25_wi,\n\t\tinfinite_output_sign_dffe26_wi = infinite_output_sign_dffe23_wo,\n\t\tinfinite_output_sign_dffe26_wo = infinite_output_sign_dffe26_wi,\n\t\tinfinite_output_sign_dffe27_wi = infinite_output_sign_dffe22_wo,\n\t\tinfinite_output_sign_dffe27_wo = infinite_output_sign_dffe27_wi,\n\t\tinfinite_output_sign_dffe2_wi = infinite_output_sign_dffe25_wo,\n\t\tinfinite_output_sign_dffe2_wo = infinite_output_sign_dffe2,\n\t\tinfinite_output_sign_dffe31_wi = infinite_output_sign_dffe26_wo,\n\t\tinfinite_output_sign_dffe31_wo = infinite_output_sign_dffe31,\n\t\tinfinite_output_sign_dffe32_wi = infinite_output_sign_dffe31_wo,\n\t\tinfinite_output_sign_dffe32_wo = infinite_output_sign_dffe32_wi,\n\t\tinfinite_output_sign_dffe33_wi = infinite_output_sign_dffe32_wo,\n\t\tinfinite_output_sign_dffe33_wo = infinite_output_sign_dffe33_wi,\n\t\tinfinite_output_sign_dffe3_wi = infinite_output_sign_dffe33_wo,\n\t\tinfinite_output_sign_dffe3_wo = infinite_output_sign_dffe3,\n\t\tinfinite_output_sign_dffe41_wi = infinite_output_sign_dffe42_wo,\n\t\tinfinite_output_sign_dffe41_wo = infinite_output_sign_dffe41_wi,\n\t\tinfinite_output_sign_dffe42_wi = infinite_output_sign_dffe3_wo,\n\t\tinfinite_output_sign_dffe42_wo = infinite_output_sign_dffe42_wi,\n\t\tinfinite_output_sign_dffe4_wi = infinite_output_sign_dffe41_wo,\n\t\tinfinite_output_sign_dffe4_wo = infinite_output_sign_dffe4,\n\t\tinfinite_res_dff32_wi = (exp_res_max_w[7] & (~ exp_adjustment2_add_sub_w[8])),\n\t\tinfinite_res_dff32_wo = infinite_res_dff32_wi,\n\t\tinfinite_res_dff33_wi = infinite_res_dff32_wo,\n\t\tinfinite_res_dff33_wo = infinite_res_dff33_wi,\n\t\tinfinite_res_dffe3_wi = infinite_res_dff33_wo,\n\t\tinfinite_res_dffe3_wo = infinite_res_dffe3,\n\t\tinfinite_res_dffe41_wi = infinite_res_dffe42_wo,\n\t\tinfinite_res_dffe41_wo = infinite_res_dffe41_wi,\n\t\tinfinite_res_dffe42_wi = infinite_res_dffe3_wo,\n\t\tinfinite_res_dffe42_wo = infinite_res_dffe42_wi,\n\t\tinfinite_res_dffe4_wi = infinite_res_dffe41_wo,\n\t\tinfinite_res_dffe4_wo = infinite_res_dffe4,\n\t\tinfinity_magnitude_sub_dffe21_wi = infinity_magnitude_sub_dffe27_wo,\n\t\tinfinity_magnitude_sub_dffe21_wo = infinity_magnitude_sub_dffe21,\n\t\tinfinity_magnitude_sub_dffe22_wi = infinity_magnitude_sub_dffe2_wo,\n\t\tinfinity_magnitude_sub_dffe22_wo = infinity_magnitude_sub_dffe22_wi,\n\t\tinfinity_magnitude_sub_dffe23_wi = infinity_magnitude_sub_dffe21_wo,\n\t\tinfinity_magnitude_sub_dffe23_wo = infinity_magnitude_sub_dffe23_wi,\n\t\tinfinity_magnitude_sub_dffe26_wi = infinity_magnitude_sub_dffe23_wo,\n\t\tinfinity_magnitude_sub_dffe26_wo = infinity_magnitude_sub_dffe26_wi,\n\t\tinfinity_magnitude_sub_dffe27_wi = infinity_magnitude_sub_dffe22_wo,\n\t\tinfinity_magnitude_sub_dffe27_wo = infinity_magnitude_sub_dffe27_wi,\n\t\tinfinity_magnitude_sub_dffe2_wi = ((~ add_sub_dffe25_wo) & both_inputs_are_infinite_dffe25_wo),\n\t\tinfinity_magnitude_sub_dffe2_wo = infinity_magnitude_sub_dffe2,\n\t\tinfinity_magnitude_sub_dffe31_wi = infinity_magnitude_sub_dffe26_wo,\n\t\tinfinity_magnitude_sub_dffe31_wo = infinity_magnitude_sub_dffe31,\n\t\tinfinity_magnitude_sub_dffe32_wi = infinity_magnitude_sub_dffe31_wo,\n\t\tinfinity_magnitude_sub_dffe32_wo = infinity_magnitude_sub_dffe32_wi,\n\t\tinfinity_magnitude_sub_dffe33_wi = infinity_magnitude_sub_dffe32_wo,\n\t\tinfinity_magnitude_sub_dffe33_wo = infinity_magnitude_sub_dffe33_wi,\n\t\tinfinity_magnitude_sub_dffe3_wi = infinity_magnitude_sub_dffe33_wo,\n\t\tinfinity_magnitude_sub_dffe3_wo = infinity_magnitude_sub_dffe3,\n\t\tinfinity_magnitude_sub_dffe41_wi = infinity_magnitude_sub_dffe42_wo,\n\t\tinfinity_magnitude_sub_dffe41_wo = infinity_magnitude_sub_dffe41_wi,\n\t\tinfinity_magnitude_sub_dffe42_wi = infinity_magnitude_sub_dffe3_wo,\n\t\tinfinity_magnitude_sub_dffe42_wo = infinity_magnitude_sub_dffe42_wi,\n\t\tinfinity_magnitude_sub_dffe4_wi = infinity_magnitude_sub_dffe41_wo,\n\t\tinfinity_magnitude_sub_dffe4_wo = infinity_magnitude_sub_dffe4,\n\t\tinput_dataa_denormal_dffe11_wi = input_dataa_denormal_w,\n\t\tinput_dataa_denormal_dffe11_wo = input_dataa_denormal_dffe11_wi,\n\t\tinput_dataa_denormal_w = ((~ exp_a_not_zero_w[7]) & man_a_not_zero_w[22]),\n\t\tinput_dataa_infinite_dffe11_wi = input_dataa_infinite_w,\n\t\tinput_dataa_infinite_dffe11_wo = input_dataa_infinite_dffe11_wi,\n\t\tinput_dataa_infinite_dffe12_wi = input_dataa_infinite_dffe11_wo,\n\t\tinput_dataa_infinite_dffe12_wo = input_dataa_infinite_dffe12,\n\t\tinput_dataa_infinite_dffe13_wi = input_dataa_infinite_dffe12_wo,\n\t\tinput_dataa_infinite_dffe13_wo = input_dataa_infinite_dffe13_wi,\n\t\tinput_dataa_infinite_dffe14_wi = input_dataa_infinite_dffe13_wo,\n\t\tinput_dataa_infinite_dffe14_wo = input_dataa_infinite_dffe14_wi,\n\t\tinput_dataa_infinite_dffe15_wi = input_dataa_infinite_dffe14_wo,\n\t\tinput_dataa_infinite_dffe15_wo = input_dataa_infinite_dffe15_wi,\n\t\tinput_dataa_infinite_w = (exp_a_all_one_w[7] & (~ man_a_not_zero_w[22])),\n\t\tinput_dataa_nan_dffe11_wi = input_dataa_nan_w,\n\t\tinput_dataa_nan_dffe11_wo = input_dataa_nan_dffe11_wi,\n\t\tinput_dataa_nan_dffe12_wi = input_dataa_nan_dffe11_wo,\n\t\tinput_dataa_nan_dffe12_wo = input_dataa_nan_dffe12,\n\t\tinput_dataa_nan_w = (exp_a_all_one_w[7] & man_a_not_zero_w[22]),\n\t\tinput_dataa_zero_dffe11_wi = input_dataa_zero_w,\n\t\tinput_dataa_zero_dffe11_wo = input_dataa_zero_dffe11_wi,\n\t\tinput_dataa_zero_w = ((~ exp_a_not_zero_w[7]) & (~ man_a_not_zero_w[22])),\n\t\tinput_datab_denormal_dffe11_wi = input_datab_denormal_w,\n\t\tinput_datab_denormal_dffe11_wo = input_datab_denormal_dffe11_wi,\n\t\tinput_datab_denormal_w = ((~ exp_b_not_zero_w[7]) & man_b_not_zero_w[22]),\n\t\tinput_datab_infinite_dffe11_wi = input_datab_infinite_w,\n\t\tinput_datab_infinite_dffe11_wo = input_datab_infinite_dffe11_wi,\n\t\tinput_datab_infinite_dffe12_wi = input_datab_infinite_dffe11_wo,\n\t\tinput_datab_infinite_dffe12_wo = input_datab_infinite_dffe12,\n\t\tinput_datab_infinite_dffe13_wi = input_datab_infinite_dffe12_wo,\n\t\tinput_datab_infinite_dffe13_wo = input_datab_infinite_dffe13_wi,\n\t\tinput_datab_infinite_dffe14_wi = input_datab_infinite_dffe13_wo,\n\t\tinput_datab_infinite_dffe14_wo = input_datab_infinite_dffe14_wi,\n\t\tinput_datab_infinite_dffe15_wi = input_datab_infinite_dffe14_wo,\n\t\tinput_datab_infinite_dffe15_wo = input_datab_infinite_dffe15_wi,\n\t\tinput_datab_infinite_w = (exp_b_all_one_w[7] & (~ man_b_not_zero_w[22])),\n\t\tinput_datab_nan_dffe11_wi = input_datab_nan_w,\n\t\tinput_datab_nan_dffe11_wo = input_datab_nan_dffe11_wi,\n\t\tinput_datab_nan_dffe12_wi = input_datab_nan_dffe11_wo,\n\t\tinput_datab_nan_dffe12_wo = input_datab_nan_dffe12,\n\t\tinput_datab_nan_w = (exp_b_all_one_w[7] & man_b_not_zero_w[22]),\n\t\tinput_datab_zero_dffe11_wi = input_datab_zero_w,\n\t\tinput_datab_zero_dffe11_wo = input_datab_zero_dffe11_wi,\n\t\tinput_datab_zero_w = ((~ exp_b_not_zero_w[7]) & (~ man_b_not_zero_w[22])),\n\t\tinput_is_infinite_dffe1_wi = (input_dataa_infinite_dffe15_wo | input_datab_infinite_dffe15_wo),\n\t\tinput_is_infinite_dffe1_wo = input_is_infinite_dffe1,\n\t\tinput_is_infinite_dffe21_wi = input_is_infinite_dffe27_wo,\n\t\tinput_is_infinite_dffe21_wo = input_is_infinite_dffe21,\n\t\tinput_is_infinite_dffe22_wi = input_is_infinite_dffe2_wo,\n\t\tinput_is_infinite_dffe22_wo = input_is_infinite_dffe22_wi,\n\t\tinput_is_infinite_dffe23_wi = input_is_infinite_dffe21_wo,\n\t\tinput_is_infinite_dffe23_wo = input_is_infinite_dffe23_wi,\n\t\tinput_is_infinite_dffe25_wi = input_is_infinite_dffe1_wo,\n\t\tinput_is_infinite_dffe25_wo = input_is_infinite_dffe25_wi,\n\t\tinput_is_infinite_dffe26_wi = input_is_infinite_dffe23_wo,\n\t\tinput_is_infinite_dffe26_wo = input_is_infinite_dffe26_wi,\n\t\tinput_is_infinite_dffe27_wi = input_is_infinite_dffe22_wo,\n\t\tinput_is_infinite_dffe27_wo = input_is_infinite_dffe27_wi,\n\t\tinput_is_infinite_dffe2_wi = input_is_infinite_dffe25_wo,\n\t\tinput_is_infinite_dffe2_wo = input_is_infinite_dffe2,\n\t\tinput_is_infinite_dffe31_wi = input_is_infinite_dffe26_wo,\n\t\tinput_is_infinite_dffe31_wo = input_is_infinite_dffe31,\n\t\tinput_is_infinite_dffe32_wi = input_is_infinite_dffe31_wo,\n\t\tinput_is_infinite_dffe32_wo = input_is_infinite_dffe32_wi,\n\t\tinput_is_infinite_dffe33_wi = input_is_infinite_dffe32_wo,\n\t\tinput_is_infinite_dffe33_wo = input_is_infinite_dffe33_wi,\n\t\tinput_is_infinite_dffe3_wi = input_is_infinite_dffe33_wo,\n\t\tinput_is_infinite_dffe3_wo = input_is_infinite_dffe3,\n\t\tinput_is_infinite_dffe41_wi = input_is_infinite_dffe42_wo,\n\t\tinput_is_infinite_dffe41_wo = input_is_infinite_dffe41_wi,\n\t\tinput_is_infinite_dffe42_wi = input_is_infinite_dffe3_wo,\n\t\tinput_is_infinite_dffe42_wo = input_is_infinite_dffe42_wi,\n\t\tinput_is_infinite_dffe4_wi = input_is_infinite_dffe41_wo,\n\t\tinput_is_infinite_dffe4_wo = input_is_infinite_dffe4,\n\t\tinput_is_nan_dffe13_wi = (input_dataa_nan_dffe12_wo | input_datab_nan_dffe12_wo),\n\t\tinput_is_nan_dffe13_wo = input_is_nan_dffe13_wi,\n\t\tinput_is_nan_dffe14_wi = input_is_nan_dffe13_wo,\n\t\tinput_is_nan_dffe14_wo = input_is_nan_dffe14_wi,\n\t\tinput_is_nan_dffe15_wi = input_is_nan_dffe14_wo,\n\t\tinput_is_nan_dffe15_wo = input_is_nan_dffe15_wi,\n\t\tinput_is_nan_dffe1_wi = input_is_nan_dffe15_wo,\n\t\tinput_is_nan_dffe1_wo = input_is_nan_dffe1,\n\t\tinput_is_nan_dffe21_wi = input_is_nan_dffe27_wo,\n\t\tinput_is_nan_dffe21_wo = input_is_nan_dffe21,\n\t\tinput_is_nan_dffe22_wi = input_is_nan_dffe2_wo,\n\t\tinput_is_nan_dffe22_wo = input_is_nan_dffe22_wi,\n\t\tinput_is_nan_dffe23_wi = input_is_nan_dffe21_wo,\n\t\tinput_is_nan_dffe23_wo = input_is_nan_dffe23_wi,\n\t\tinput_is_nan_dffe25_wi = input_is_nan_dffe1_wo,\n\t\tinput_is_nan_dffe25_wo = input_is_nan_dffe25_wi,\n\t\tinput_is_nan_dffe26_wi = input_is_nan_dffe23_wo,\n\t\tinput_is_nan_dffe26_wo = input_is_nan_dffe26_wi,\n\t\tinput_is_nan_dffe27_wi = input_is_nan_dffe22_wo,\n\t\tinput_is_nan_dffe27_wo = input_is_nan_dffe27_wi,\n\t\tinput_is_nan_dffe2_wi = input_is_nan_dffe25_wo,\n\t\tinput_is_nan_dffe2_wo = input_is_nan_dffe2,\n\t\tinput_is_nan_dffe31_wi = input_is_nan_dffe26_wo,\n\t\tinput_is_nan_dffe31_wo = input_is_nan_dffe31,\n\t\tinput_is_nan_dffe32_wi = input_is_nan_dffe31_wo,\n\t\tinput_is_nan_dffe32_wo = input_is_nan_dffe32_wi,\n\t\tinput_is_nan_dffe33_wi = input_is_nan_dffe32_wo,\n\t\tinput_is_nan_dffe33_wo = input_is_nan_dffe33_wi,\n\t\tinput_is_nan_dffe3_wi = input_is_nan_dffe33_wo,\n\t\tinput_is_nan_dffe3_wo = input_is_nan_dffe3,\n\t\tinput_is_nan_dffe41_wi = input_is_nan_dffe42_wo,\n\t\tinput_is_nan_dffe41_wo = input_is_nan_dffe41_wi,\n\t\tinput_is_nan_dffe42_wi = input_is_nan_dffe3_wo,\n\t\tinput_is_nan_dffe42_wo = input_is_nan_dffe42_wi,\n\t\tinput_is_nan_dffe4_wi = input_is_nan_dffe41_wo,\n\t\tinput_is_nan_dffe4_wo = input_is_nan_dffe4,\n\t\tman_2comp_res_dataa_w = {pos_sign_bit_ext, datab_man_dffe1_wo},\n\t\tman_2comp_res_datab_w = {pos_sign_bit_ext, dataa_man_dffe1_wo},\n\t\tman_2comp_res_w = {(({14{(~ wire_man_2comp_res_lower_cout)}} & wire_man_2comp_res_upper0_result) | ({14{wire_man_2comp_res_lower_cout}} & wire_man_2comp_res_upper1_result)), wire_man_2comp_res_lower_result},\n\t\tman_a_not_zero_w = {(dataa[22] | man_a_not_zero_w[21]), (dataa[21] | man_a_not_zero_w[20]), (dataa[20] | man_a_not_zero_w[19]), (dataa[19] | man_a_not_zero_w[18]), (dataa[18] | man_a_not_zero_w[17]), (dataa[17] | man_a_not_zero_w[16]), (dataa[16] | man_a_not_zero_w[15]), (dataa[15] | man_a_not_zero_w[14]), (dataa[14] | man_a_not_zero_w[13]), (dataa[13] | man_a_not_zero_w[12]), (dataa[12] | man_a_not_zero_w[11]), (dataa[11] | man_a_not_zero_w[10]), (dataa[10] | man_a_not_zero_w[9]), (dataa[9] | man_a_not_zero_w[8]), (dataa[8] | man_a_not_zero_w[7]), (dataa[7] | man_a_not_zero_w[6]), (dataa[6] | man_a_not_zero_w[5]), (dataa[5] | man_a_not_zero_w[4]), (dataa[4] | man_a_not_zero_w[3]), (dataa[3] | man_a_not_zero_w[2]), (dataa[2] | man_a_not_zero_w[1]), (dataa[1] | man_a_not_zero_w[0]), dataa[0]},\n\t\tman_add_sub_dataa_w = {pos_sign_bit_ext, dataa_man_dffe1_wo},\n\t\tman_add_sub_datab_w = {pos_sign_bit_ext, datab_man_dffe1_wo},\n\t\tman_add_sub_res_mag_dffe21_wi = man_res_mag_w2,\n\t\tman_add_sub_res_mag_dffe21_wo = man_add_sub_res_mag_dffe21,\n\t\tman_add_sub_res_mag_dffe23_wi = man_add_sub_res_mag_dffe21_wo,\n\t\tman_add_sub_res_mag_dffe23_wo = man_add_sub_res_mag_dffe23_wi,\n\t\tman_add_sub_res_mag_dffe26_wi = man_add_sub_res_mag_dffe23_wo,\n\t\tman_add_sub_res_mag_dffe26_wo = man_add_sub_res_mag_dffe26_wi,\n\t\tman_add_sub_res_mag_dffe27_wi = man_add_sub_res_mag_w2,\n\t\tman_add_sub_res_mag_dffe27_wo = man_add_sub_res_mag_dffe27_wi,\n\t\tman_add_sub_res_mag_w2 = (({28{man_add_sub_w[27]}} & man_2comp_res_w) | ({28{(~ man_add_sub_w[27])}} & man_add_sub_w)),\n\t\tman_add_sub_res_sign_dffe21_wo = man_add_sub_res_sign_dffe21,\n\t\tman_add_sub_res_sign_dffe23_wi = man_add_sub_res_sign_dffe21_wo,\n\t\tman_add_sub_res_sign_dffe23_wo = man_add_sub_res_sign_dffe23_wi,\n\t\tman_add_sub_res_sign_dffe26_wi = man_add_sub_res_sign_dffe23_wo,\n\t\tman_add_sub_res_sign_dffe26_wo = man_add_sub_res_sign_dffe26_wi,\n\t\tman_add_sub_res_sign_dffe27_wi = man_add_sub_res_sign_w2,\n\t\tman_add_sub_res_sign_dffe27_wo = man_add_sub_res_sign_dffe27_wi,\n\t\tman_add_sub_res_sign_w2 = ((need_complement_dffe22_wo & (~ man_add_sub_w[27])) | ((~ need_complement_dffe22_wo) & man_add_sub_w[27])),\n\t\tman_add_sub_w = {(({14{(~ wire_man_add_sub_lower_cout)}} & wire_man_add_sub_upper0_result) | ({14{wire_man_add_sub_lower_cout}} & wire_man_add_sub_upper1_result)), wire_man_add_sub_lower_result},\n\t\tman_all_zeros_w = {23{1'b0}},\n\t\tman_b_not_zero_w = {(datab[22] | man_b_not_zero_w[21]), (datab[21] | man_b_not_zero_w[20]), (datab[20] | man_b_not_zero_w[19]), (datab[19] | man_b_not_zero_w[18]), (datab[18] | man_b_not_zero_w[17]), (datab[17] | man_b_not_zero_w[16]), (datab[16] | man_b_not_zero_w[15]), (datab[15] | man_b_not_zero_w[14]), (datab[14] | man_b_not_zero_w[13]), (datab[13] | man_b_not_zero_w[12]), (datab[12] | man_b_not_zero_w[11]), (datab[11] | man_b_not_zero_w[10]), (datab[10] | man_b_not_zero_w[9]), (datab[9] | man_b_not_zero_w[8]), (datab[8] | man_b_not_zero_w[7]), (datab[7] | man_b_not_zero_w[6]), (datab[6] | man_b_not_zero_w[5]), (datab[5] | man_b_not_zero_w[4]), (datab[4] | man_b_not_zero_w[3]), (datab[3] | man_b_not_zero_w[2]), (datab[2] | man_b_not_zero_w[1]), (datab[1] | man_b_not_zero_w[0]), datab[0]},\n\t\tman_dffe31_wo = man_dffe31,\n\t\tman_intermediate_res_w = {{2{1'b0}}, man_res_w3},\n\t\tman_leading_zeros_cnt_w = man_leading_zeros_dffe31_wo,\n\t\tman_leading_zeros_dffe31_wi = (~ wire_leading_zeroes_cnt_q),\n\t\tman_leading_zeros_dffe31_wo = man_leading_zeros_dffe31,\n\t\tman_nan_w = 23'b10000000000000000000000,\n\t\tman_out_dffe5_wi = (({23{force_nan_w}} & man_nan_w) | ({23{(~ force_nan_w)}} & (({23{force_infinity_w}} & man_all_zeros_w) | ({23{(~ force_infinity_w)}} & (({23{(force_zero_w | denormal_flag_w)}} & man_all_zeros_w) | ({23{(~ (force_zero_w | denormal_flag_w))}} & man_res_dffe4_wo)))))),\n\t\tman_out_dffe5_wo = man_out_dffe5,\n\t\tman_res_dffe4_wi = man_rounded_res_w,\n\t\tman_res_dffe4_wo = man_res_dffe4,\n\t\tman_res_is_not_zero_dffe31_wi = man_res_not_zero_dffe26_wo,\n\t\tman_res_is_not_zero_dffe31_wo = man_res_is_not_zero_dffe31,\n\t\tman_res_is_not_zero_dffe32_wi = man_res_is_not_zero_dffe31_wo,\n\t\tman_res_is_not_zero_dffe32_wo = man_res_is_not_zero_dffe32_wi,\n\t\tman_res_is_not_zero_dffe33_wi = man_res_is_not_zero_dffe32_wo,\n\t\tman_res_is_not_zero_dffe33_wo = man_res_is_not_zero_dffe33_wi,\n\t\tman_res_is_not_zero_dffe3_wi = man_res_is_not_zero_dffe33_wo,\n\t\tman_res_is_not_zero_dffe3_wo = man_res_is_not_zero_dffe3,\n\t\tman_res_is_not_zero_dffe41_wi = man_res_is_not_zero_dffe42_wo,\n\t\tman_res_is_not_zero_dffe41_wo = man_res_is_not_zero_dffe41_wi,\n\t\tman_res_is_not_zero_dffe42_wi = man_res_is_not_zero_dffe3_wo,\n\t\tman_res_is_not_zero_dffe42_wo = man_res_is_not_zero_dffe42_wi,\n\t\tman_res_is_not_zero_dffe4_wi = man_res_is_not_zero_dffe41_wo,\n\t\tman_res_is_not_zero_dffe4_wo = man_res_is_not_zero_dffe4,\n\t\tman_res_mag_w2 = (({26{man_add_sub_res_mag_dffe27_wo[26]}} & man_add_sub_res_mag_dffe27_wo[26:1]) | ({26{(~ man_add_sub_res_mag_dffe27_wo[26])}} & man_add_sub_res_mag_dffe27_wo[25:0])),\n\t\tman_res_not_zero_dffe23_wi = man_res_not_zero_w2[24],\n\t\tman_res_not_zero_dffe23_wo = man_res_not_zero_dffe23_wi,\n\t\tman_res_not_zero_dffe26_wi = man_res_not_zero_dffe23_wo,\n\t\tman_res_not_zero_dffe26_wo = man_res_not_zero_dffe26_wi,\n\t\tman_res_not_zero_w2 = {(man_res_not_zero_w2[23] | man_add_sub_res_mag_dffe21_wo[25]), (man_res_not_zero_w2[22] | man_add_sub_res_mag_dffe21_wo[24]), (man_res_not_zero_w2[21] | man_add_sub_res_mag_dffe21_wo[23]), (man_res_not_zero_w2[20] | man_add_sub_res_mag_dffe21_wo[22]), (man_res_not_zero_w2[19] | man_add_sub_res_mag_dffe21_wo[21]), (man_res_not_zero_w2[18] | man_add_sub_res_mag_dffe21_wo[20]), (man_res_not_zero_w2[17] | man_add_sub_res_mag_dffe21_wo[19]), (man_res_not_zero_w2[16] | man_add_sub_res_mag_dffe21_wo[18]), (man_res_not_zero_w2[15] | man_add_sub_res_mag_dffe21_wo[17]), (man_res_not_zero_w2[14] | man_add_sub_res_mag_dffe21_wo[16]), (man_res_not_zero_w2[13] | man_add_sub_res_mag_dffe21_wo[15]), (man_res_not_zero_w2[12] | man_add_sub_res_mag_dffe21_wo[14]), (man_res_not_zero_w2[11] | man_add_sub_res_mag_dffe21_wo[13]), (man_res_not_zero_w2[10] | man_add_sub_res_mag_dffe21_wo[12]), (man_res_not_zero_w2[9] | man_add_sub_res_mag_dffe21_wo[11]), (man_res_not_zero_w2[8] | man_add_sub_res_mag_dffe21_wo[10]), (man_res_not_zero_w2[7] | man_add_sub_res_mag_dffe21_wo[9]), (man_res_not_zero_w2[6] | man_add_sub_res_mag_dffe21_wo[8]), (man_res_not_zero_w2[5] | man_add_sub_res_mag_dffe21_wo[7]), (man_res_not_zero_w2[4] | man_add_sub_res_mag_dffe21_wo[6]), (man_res_not_zero_w2[3] | man_add_sub_res_mag_dffe21_wo[5]), (man_res_not_zero_w2[2] | man_add_sub_res_mag_dffe21_wo[4]), (man_res_not_zero_w2[1] | man_add_sub_res_mag_dffe21_wo[3]), (man_res_not_zero_w2[0] | man_add_sub_res_mag_dffe21_wo[2]), man_add_sub_res_mag_dffe21_wo[1]},\n\t\tman_res_rounding_add_sub_datab_w = {{25{1'b0}}, man_rounding_add_value_w},\n\t\tman_res_rounding_add_sub_w = {(({13{(~ wire_man_res_rounding_add_sub_lower_cout)}} & adder_upper_w) | ({13{wire_man_res_rounding_add_sub_lower_cout}} & wire_man_res_rounding_add_sub_upper1_result)), wire_man_res_rounding_add_sub_lower_result},\n\t\tman_res_w3 = wire_lbarrel_shift_result[25:2],\n\t\tman_rounded_res_w = (({23{man_res_rounding_add_sub_w[24]}} & man_res_rounding_add_sub_w[23:1]) | ({23{(~ man_res_rounding_add_sub_w[24])}} & man_res_rounding_add_sub_w[22:0])),\n\t\tman_rounding_add_value_w = (round_bit_dffe3_wo & (sticky_bit_dffe3_wo | guard_bit_dffe3_wo)),\n\t\tman_smaller_dffe13_wi = man_smaller_w,\n\t\tman_smaller_dffe13_wo = man_smaller_dffe13_wi,\n\t\tman_smaller_w = (({24{exp_amb_mux_w}} & aligned_dataa_man_dffe12_wo) | ({24{(~ exp_amb_mux_w)}} & aligned_datab_man_dffe12_wo)),\n\t\tneed_complement_dffe22_wi = need_complement_dffe2_wo,\n\t\tneed_complement_dffe22_wo = need_complement_dffe22_wi,\n\t\tneed_complement_dffe2_wi = dataa_sign_dffe25_wo,\n\t\tneed_complement_dffe2_wo = need_complement_dffe2,\n\t\tpos_sign_bit_ext = {2{1'b0}},\n\t\tpriority_encoder_1pads_w = {4{1'b1}},\n\t\tresult = {sign_out_dffe5_wo, exp_out_dffe5_wo, man_out_dffe5_wo},\n\t\tround_bit_dffe21_wi = round_bit_w,\n\t\tround_bit_dffe21_wo = round_bit_dffe21,\n\t\tround_bit_dffe23_wi = round_bit_dffe21_wo,\n\t\tround_bit_dffe23_wo = round_bit_dffe23_wi,\n\t\tround_bit_dffe26_wi = round_bit_dffe23_wo,\n\t\tround_bit_dffe26_wo = round_bit_dffe26_wi,\n\t\tround_bit_dffe31_wi = round_bit_dffe26_wo,\n\t\tround_bit_dffe31_wo = round_bit_dffe31,\n\t\tround_bit_dffe32_wi = round_bit_dffe31_wo,\n\t\tround_bit_dffe32_wo = round_bit_dffe32_wi,\n\t\tround_bit_dffe33_wi = round_bit_dffe32_wo,\n\t\tround_bit_dffe33_wo = round_bit_dffe33_wi,\n\t\tround_bit_dffe3_wi = round_bit_dffe33_wo,\n\t\tround_bit_dffe3_wo = round_bit_dffe3,\n\t\tround_bit_w = ((((((~ man_add_sub_res_mag_dffe27_wo[26]) & (~ man_add_sub_res_mag_dffe27_wo[25])) & man_add_sub_res_mag_dffe27_wo[0]) | (((~ man_add_sub_res_mag_dffe27_wo[26]) & man_add_sub_res_mag_dffe27_wo[25]) & man_add_sub_res_mag_dffe27_wo[1])) | ((man_add_sub_res_mag_dffe27_wo[26] & (~ man_add_sub_res_mag_dffe27_wo[25])) & man_add_sub_res_mag_dffe27_wo[2])) | ((man_add_sub_res_mag_dffe27_wo[26] & man_add_sub_res_mag_dffe27_wo[25]) & man_add_sub_res_mag_dffe27_wo[2])),\n\t\trounded_res_infinity_dffe4_wi = exp_rounded_res_infinity_w,\n\t\trounded_res_infinity_dffe4_wo = rounded_res_infinity_dffe4,\n\t\trshift_distance_dffe13_wi = rshift_distance_w,\n\t\trshift_distance_dffe13_wo = rshift_distance_dffe13_wi,\n\t\trshift_distance_dffe14_wi = rshift_distance_dffe13_wo,\n\t\trshift_distance_dffe14_wo = rshift_distance_dffe14_wi,\n\t\trshift_distance_dffe15_wi = rshift_distance_dffe14_wo,\n\t\trshift_distance_dffe15_wo = rshift_distance_dffe15_wi,\n\t\trshift_distance_w = (({5{exp_diff_abs_exceed_max_w[2]}} & exp_diff_abs_max_w) | ({5{(~ exp_diff_abs_exceed_max_w[2])}} & exp_diff_abs_w[4:0])),\n\t\tsign_dffe31_wi = ((man_res_not_zero_dffe26_wo & man_add_sub_res_sign_dffe26_wo) | ((~ man_res_not_zero_dffe26_wo) & zero_man_sign_dffe26_wo)),\n\t\tsign_dffe31_wo = sign_dffe31,\n\t\tsign_dffe32_wi = sign_dffe31_wo,\n\t\tsign_dffe32_wo = sign_dffe32_wi,\n\t\tsign_dffe33_wi = sign_dffe32_wo,\n\t\tsign_dffe33_wo = sign_dffe33_wi,\n\t\tsign_out_dffe5_wi = ((~ force_nan_w) & ((force_infinity_w & infinite_output_sign_dffe4_wo) | ((~ force_infinity_w) & sign_res_dffe4_wo))),\n\t\tsign_out_dffe5_wo = sign_out_dffe5,\n\t\tsign_res_dffe3_wi = sign_dffe33_wo,\n\t\tsign_res_dffe3_wo = sign_res_dffe3,\n\t\tsign_res_dffe41_wi = sign_res_dffe42_wo,\n\t\tsign_res_dffe41_wo = sign_res_dffe41_wi,\n\t\tsign_res_dffe42_wi = sign_res_dffe3_wo,\n\t\tsign_res_dffe42_wo = sign_res_dffe42_wi,\n\t\tsign_res_dffe4_wi = sign_res_dffe41_wo,\n\t\tsign_res_dffe4_wo = sign_res_dffe4,\n\t\tsticky_bit_cnt_dataa_w = {1'b0, rshift_distance_dffe15_wo},\n\t\tsticky_bit_cnt_datab_w = {1'b0, wire_trailing_zeros_cnt_q},\n\t\tsticky_bit_cnt_res_w = wire_add_sub3_result,\n\t\tsticky_bit_dffe1_wi = wire_trailing_zeros_limit_comparator_agb,\n\t\tsticky_bit_dffe1_wo = sticky_bit_dffe1,\n\t\tsticky_bit_dffe21_wi = sticky_bit_w,\n\t\tsticky_bit_dffe21_wo = sticky_bit_dffe21,\n\t\tsticky_bit_dffe22_wi = sticky_bit_dffe2_wo,\n\t\tsticky_bit_dffe22_wo = sticky_bit_dffe22_wi,\n\t\tsticky_bit_dffe23_wi = sticky_bit_dffe21_wo,\n\t\tsticky_bit_dffe23_wo = sticky_bit_dffe23_wi,\n\t\tsticky_bit_dffe25_wi = sticky_bit_dffe1_wo,\n\t\tsticky_bit_dffe25_wo = sticky_bit_dffe25_wi,\n\t\tsticky_bit_dffe26_wi = sticky_bit_dffe23_wo,\n\t\tsticky_bit_dffe26_wo = sticky_bit_dffe26_wi,\n\t\tsticky_bit_dffe27_wi = sticky_bit_dffe22_wo,\n\t\tsticky_bit_dffe27_wo = sticky_bit_dffe27_wi,\n\t\tsticky_bit_dffe2_wi = sticky_bit_dffe25_wo,\n\t\tsticky_bit_dffe2_wo = sticky_bit_dffe2,\n\t\tsticky_bit_dffe31_wi = sticky_bit_dffe26_wo,\n\t\tsticky_bit_dffe31_wo = sticky_bit_dffe31,\n\t\tsticky_bit_dffe32_wi = sticky_bit_dffe31_wo,\n\t\tsticky_bit_dffe32_wo = sticky_bit_dffe32_wi,\n\t\tsticky_bit_dffe33_wi = sticky_bit_dffe32_wo,\n\t\tsticky_bit_dffe33_wo = sticky_bit_dffe33_wi,\n\t\tsticky_bit_dffe3_wi = sticky_bit_dffe33_wo,\n\t\tsticky_bit_dffe3_wo = sticky_bit_dffe3,\n\t\tsticky_bit_w = ((((((~ man_add_sub_res_mag_dffe27_wo[26]) & (~ man_add_sub_res_mag_dffe27_wo[25])) & sticky_bit_dffe27_wo) | (((~ man_add_sub_res_mag_dffe27_wo[26]) & man_add_sub_res_mag_dffe27_wo[25]) & (sticky_bit_dffe27_wo | man_add_sub_res_mag_dffe27_wo[0]))) | ((man_add_sub_res_mag_dffe27_wo[26] & (~ man_add_sub_res_mag_dffe27_wo[25])) & ((sticky_bit_dffe27_wo | man_add_sub_res_mag_dffe27_wo[0]) | man_add_sub_res_mag_dffe27_wo[1]))) | ((man_add_sub_res_mag_dffe27_wo[26] & man_add_sub_res_mag_dffe27_wo[25]) & ((sticky_bit_dffe27_wo | man_add_sub_res_mag_dffe27_wo[0]) | man_add_sub_res_mag_dffe27_wo[1]))),\n\t\ttrailing_zeros_limit_w = 6'b000010,\n\t\tzero_man_sign_dffe21_wi = zero_man_sign_dffe27_wo,\n\t\tzero_man_sign_dffe21_wo = zero_man_sign_dffe21,\n\t\tzero_man_sign_dffe22_wi = zero_man_sign_dffe2_wo,\n\t\tzero_man_sign_dffe22_wo = zero_man_sign_dffe22_wi,\n\t\tzero_man_sign_dffe23_wi = zero_man_sign_dffe21_wo,\n\t\tzero_man_sign_dffe23_wo = zero_man_sign_dffe23_wi,\n\t\tzero_man_sign_dffe26_wi = zero_man_sign_dffe23_wo,\n\t\tzero_man_sign_dffe26_wo = zero_man_sign_dffe26_wi,\n\t\tzero_man_sign_dffe27_wi = zero_man_sign_dffe22_wo,\n\t\tzero_man_sign_dffe27_wo = zero_man_sign_dffe27_wi,\n\t\tzero_man_sign_dffe2_wi = (dataa_sign_dffe25_wo & add_sub_dffe25_wo),\n\t\tzero_man_sign_dffe2_wo = zero_man_sign_dffe2;\nendmodule \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_div_single_altfp_div_csa_vhf\n\t( \n\tcin,\n\tcout,\n\tdataa,\n\tdatab,\n\tresult) ;\n\tinput   cin;\n\toutput   cout;\n\tinput   [23:0]  dataa;\n\tinput   [23:0]  datab;\n\toutput   [23:0]  result;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\ttri0   cin;\n\ttri0   [23:0]  dataa;\n\ttri0   [23:0]  datab;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\n\twire  wire_csa_lower_cout;\n\twire  [11:0]   wire_csa_lower_result;\n\twire  wire_csa_upper1_cout;\n\twire  [11:0]   wire_csa_upper1_result;\n\twire  [11:0]  adder_upper_w;\n\twire  cout_w;\n\twire  [23:0]  result_w;\n\n\tlpm_add_sub   csa_lower\n\t( \n\t.cin(cin),\n\t.cout(wire_csa_lower_cout),\n\t.dataa(dataa[11:0]),\n\t.datab(datab[11:0]),\n\t.overflow(),\n\t.result(wire_csa_lower_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcsa_lower.lpm_direction = \"ADD\",\n\t\tcsa_lower.lpm_representation = \"SIGNED\",\n\t\tcsa_lower.lpm_width = 12,\n\t\tcsa_lower.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   csa_upper1\n\t( \n\t.cin(1'b1),\n\t.cout(wire_csa_upper1_cout),\n\t.dataa(dataa[23:12]),\n\t.datab(datab[23:12]),\n\t.overflow(),\n\t.result(wire_csa_upper1_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcsa_upper1.lpm_direction = \"ADD\",\n\t\tcsa_upper1.lpm_representation = \"SIGNED\",\n\t\tcsa_upper1.lpm_width = 12,\n\t\tcsa_upper1.lpm_type = \"lpm_add_sub\";\n\tassign\n\t\tadder_upper_w = dataa[23:12],\n\t\tcout = cout_w,\n\t\tcout_w = (wire_csa_lower_cout & wire_csa_upper1_cout),\n\t\tresult = result_w,\n\t\tresult_w = {(({12{(~ wire_csa_lower_cout)}} & adder_upper_w) | ({12{wire_csa_lower_cout}} & wire_csa_upper1_result)), wire_csa_lower_result};\nendmodule \n\n\n\n\n\n\n\n\n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_div_single_altfp_div_csa_mke\n\t( \n\tdataa,\n\tdatab,\n\tresult) ;\n\tinput   [23:0]  dataa;\n\tinput   [23:0]  datab;\n\toutput   [23:0]  result;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\ttri0   [23:0]  dataa;\n\ttri0   [23:0]  datab;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\n\twire  wire_csa_lower_cout;\n\twire  [11:0]   wire_csa_lower_result;\n\twire  [11:0]   wire_csa_upper0_result;\n\twire  [11:0]   wire_csa_upper1_result;\n\twire  [23:0]  result_w;\n\n\tlpm_add_sub   csa_lower\n\t( \n\t.cout(wire_csa_lower_cout),\n\t.dataa(dataa[11:0]),\n\t.datab(datab[11:0]),\n\t.overflow(),\n\t.result(wire_csa_lower_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.cin(),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcsa_lower.lpm_direction = \"ADD\",\n\t\tcsa_lower.lpm_representation = \"SIGNED\",\n\t\tcsa_lower.lpm_width = 12,\n\t\tcsa_lower.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   csa_upper0\n\t( \n\t.cin(1'b0),\n\t.cout(),\n\t.dataa(dataa[23:12]),\n\t.datab(datab[23:12]),\n\t.overflow(),\n\t.result(wire_csa_upper0_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcsa_upper0.lpm_direction = \"ADD\",\n\t\tcsa_upper0.lpm_representation = \"SIGNED\",\n\t\tcsa_upper0.lpm_width = 12,\n\t\tcsa_upper0.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   csa_upper1\n\t( \n\t.cin(1'b1),\n\t.cout(),\n\t.dataa(dataa[23:12]),\n\t.datab(datab[23:12]),\n\t.overflow(),\n\t.result(wire_csa_upper1_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcsa_upper1.lpm_direction = \"ADD\",\n\t\tcsa_upper1.lpm_representation = \"SIGNED\",\n\t\tcsa_upper1.lpm_width = 12,\n\t\tcsa_upper1.lpm_type = \"lpm_add_sub\";\n\tassign\n\t\tresult = result_w,\n\t\tresult_w = {(({12{(~ wire_csa_lower_cout)}} & wire_csa_upper0_result) | ({12{wire_csa_lower_cout}} & wire_csa_upper1_result)), wire_csa_lower_result};\nendmodule \n\n\n\n\n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_div_single_altfp_div_csa_2jh\n\t( \n\taclr,\n\tclken,\n\tclock,\n\tdataa,\n\tdatab,\n\tresult) ;\n\tinput   aclr;\n\tinput   clken;\n\tinput   clock;\n\tinput   [27:0]  dataa;\n\tinput   [27:0]  datab;\n\toutput   [27:0]  result;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\ttri0   aclr;\n\ttri1   clken;\n\ttri0   clock;\n\ttri0   [27:0]  dataa;\n\ttri0   [27:0]  datab;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\n\twire  wire_csa_lower_cout;\n\twire  [13:0]   wire_csa_lower_result;\n\twire  [13:0]   wire_csa_upper0_result;\n\twire  [13:0]   wire_csa_upper1_result;\n\twire  [27:0]  result_w;\n\n\tlpm_add_sub   csa_lower\n\t( \n\t.aclr(aclr),\n\t.clken(clken),\n\t.clock(clock),\n\t.cout(wire_csa_lower_cout),\n\t.dataa(dataa[13:0]),\n\t.datab(datab[13:0]),\n\t.overflow(),\n\t.result(wire_csa_lower_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.add_sub(1'b1),\n\t.cin()\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcsa_lower.lpm_direction = \"SUB\",\n\t\tcsa_lower.lpm_pipeline = 1,\n\t\tcsa_lower.lpm_representation = \"SIGNED\",\n\t\tcsa_lower.lpm_width = 14,\n\t\tcsa_lower.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   csa_upper0\n\t( \n\t.aclr(aclr),\n\t.cin(1'b0),\n\t.clken(clken),\n\t.clock(clock),\n\t.cout(),\n\t.dataa(dataa[27:14]),\n\t.datab(datab[27:14]),\n\t.overflow(),\n\t.result(wire_csa_upper0_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.add_sub(1'b1)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcsa_upper0.lpm_direction = \"SUB\",\n\t\tcsa_upper0.lpm_pipeline = 1,\n\t\tcsa_upper0.lpm_representation = \"SIGNED\",\n\t\tcsa_upper0.lpm_width = 14,\n\t\tcsa_upper0.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   csa_upper1\n\t( \n\t.aclr(aclr),\n\t.cin(1'b1),\n\t.clken(clken),\n\t.clock(clock),\n\t.cout(),\n\t.dataa(dataa[27:14]),\n\t.datab(datab[27:14]),\n\t.overflow(),\n\t.result(wire_csa_upper1_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.add_sub(1'b1)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcsa_upper1.lpm_direction = \"SUB\",\n\t\tcsa_upper1.lpm_pipeline = 1,\n\t\tcsa_upper1.lpm_representation = \"SIGNED\",\n\t\tcsa_upper1.lpm_width = 14,\n\t\tcsa_upper1.lpm_type = \"lpm_add_sub\";\n\tassign\n\t\tresult = result_w,\n\t\tresult_w = {(({14{(~ wire_csa_lower_cout)}} & wire_csa_upper0_result) | ({14{wire_csa_lower_cout}} & wire_csa_upper1_result)), wire_csa_lower_result};\nendmodule \n\n\n\n\n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_div_single_altfp_div_csa_rle\n\t( \n\tdataa,\n\tdatab,\n\tresult) ;\n\tinput   [27:0]  dataa;\n\tinput   [27:0]  datab;\n\toutput   [27:0]  result;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\ttri0   [27:0]  dataa;\n\ttri0   [27:0]  datab;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\n\twire  wire_csa_lower_cout;\n\twire  [13:0]   wire_csa_lower_result;\n\twire  [13:0]   wire_csa_upper0_result;\n\twire  [13:0]   wire_csa_upper1_result;\n\twire  [27:0]  result_w;\n\n\tlpm_add_sub   csa_lower\n\t( \n\t.cout(wire_csa_lower_cout),\n\t.dataa(dataa[13:0]),\n\t.datab(datab[13:0]),\n\t.overflow(),\n\t.result(wire_csa_lower_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.cin(),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcsa_lower.lpm_direction = \"SUB\",\n\t\tcsa_lower.lpm_representation = \"SIGNED\",\n\t\tcsa_lower.lpm_width = 14,\n\t\tcsa_lower.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   csa_upper0\n\t( \n\t.cin(1'b0),\n\t.cout(),\n\t.dataa(dataa[27:14]),\n\t.datab(datab[27:14]),\n\t.overflow(),\n\t.result(wire_csa_upper0_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcsa_upper0.lpm_direction = \"SUB\",\n\t\tcsa_upper0.lpm_representation = \"SIGNED\",\n\t\tcsa_upper0.lpm_width = 14,\n\t\tcsa_upper0.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   csa_upper1\n\t( \n\t.cin(1'b1),\n\t.cout(),\n\t.dataa(dataa[27:14]),\n\t.datab(datab[27:14]),\n\t.overflow(),\n\t.result(wire_csa_upper1_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcsa_upper1.lpm_direction = \"SUB\",\n\t\tcsa_upper1.lpm_representation = \"SIGNED\",\n\t\tcsa_upper1.lpm_width = 14,\n\t\tcsa_upper1.lpm_type = \"lpm_add_sub\";\n\tassign\n\t\tresult = result_w,\n\t\tresult_w = {(({14{(~ wire_csa_lower_cout)}} & wire_csa_upper0_result) | ({14{wire_csa_lower_cout}} & wire_csa_upper1_result)), wire_csa_lower_result};\nendmodule \n\n\n\n\n\n\n\n\n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_div_single_altfp_div_csa_pke\n\t( \n\tdataa,\n\tdatab,\n\tresult) ;\n\tinput   [26:0]  dataa;\n\tinput   [26:0]  datab;\n\toutput   [26:0]  result;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\ttri0   [26:0]  dataa;\n\ttri0   [26:0]  datab;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\n\twire  wire_csa_lower_cout;\n\twire  [13:0]   wire_csa_lower_result;\n\twire  [12:0]   wire_csa_upper0_result;\n\twire  [12:0]   wire_csa_upper1_result;\n\twire  [26:0]  result_w;\n\n\tlpm_add_sub   csa_lower\n\t( \n\t.cout(wire_csa_lower_cout),\n\t.dataa(dataa[13:0]),\n\t.datab(datab[13:0]),\n\t.overflow(),\n\t.result(wire_csa_lower_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.cin(),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcsa_lower.lpm_direction = \"ADD\",\n\t\tcsa_lower.lpm_representation = \"SIGNED\",\n\t\tcsa_lower.lpm_width = 14,\n\t\tcsa_lower.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   csa_upper0\n\t( \n\t.cin(1'b0),\n\t.cout(),\n\t.dataa(dataa[26:14]),\n\t.datab(datab[26:14]),\n\t.overflow(),\n\t.result(wire_csa_upper0_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcsa_upper0.lpm_direction = \"ADD\",\n\t\tcsa_upper0.lpm_representation = \"SIGNED\",\n\t\tcsa_upper0.lpm_width = 13,\n\t\tcsa_upper0.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   csa_upper1\n\t( \n\t.cin(1'b1),\n\t.cout(),\n\t.dataa(dataa[26:14]),\n\t.datab(datab[26:14]),\n\t.overflow(),\n\t.result(wire_csa_upper1_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcsa_upper1.lpm_direction = \"ADD\",\n\t\tcsa_upper1.lpm_representation = \"SIGNED\",\n\t\tcsa_upper1.lpm_width = 13,\n\t\tcsa_upper1.lpm_type = \"lpm_add_sub\";\n\tassign\n\t\tresult = result_w,\n\t\tresult_w = {(({13{(~ wire_csa_lower_cout)}} & wire_csa_upper0_result) | ({13{wire_csa_lower_cout}} & wire_csa_upper1_result)), wire_csa_lower_result};\nendmodule \n\n\n\n\n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_div_single_altfp_div_csa_qle\n\t( \n\tdataa,\n\tdatab,\n\tresult) ;\n\tinput   [26:0]  dataa;\n\tinput   [26:0]  datab;\n\toutput   [26:0]  result;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\ttri0   [26:0]  dataa;\n\ttri0   [26:0]  datab;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\n\twire  wire_csa_lower_cout;\n\twire  [13:0]   wire_csa_lower_result;\n\twire  [12:0]   wire_csa_upper0_result;\n\twire  [12:0]   wire_csa_upper1_result;\n\twire  [26:0]  result_w;\n\n\tlpm_add_sub   csa_lower\n\t( \n\t.cout(wire_csa_lower_cout),\n\t.dataa(dataa[13:0]),\n\t.datab(datab[13:0]),\n\t.overflow(),\n\t.result(wire_csa_lower_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.cin(),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcsa_lower.lpm_direction = \"SUB\",\n\t\tcsa_lower.lpm_representation = \"SIGNED\",\n\t\tcsa_lower.lpm_width = 14,\n\t\tcsa_lower.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   csa_upper0\n\t( \n\t.cin(1'b0),\n\t.cout(),\n\t.dataa(dataa[26:14]),\n\t.datab(datab[26:14]),\n\t.overflow(),\n\t.result(wire_csa_upper0_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcsa_upper0.lpm_direction = \"SUB\",\n\t\tcsa_upper0.lpm_representation = \"SIGNED\",\n\t\tcsa_upper0.lpm_width = 13,\n\t\tcsa_upper0.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   csa_upper1\n\t( \n\t.cin(1'b1),\n\t.cout(),\n\t.dataa(dataa[26:14]),\n\t.datab(datab[26:14]),\n\t.overflow(),\n\t.result(wire_csa_upper1_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcsa_upper1.lpm_direction = \"SUB\",\n\t\tcsa_upper1.lpm_representation = \"SIGNED\",\n\t\tcsa_upper1.lpm_width = 13,\n\t\tcsa_upper1.lpm_type = \"lpm_add_sub\";\n\tassign\n\t\tresult = result_w,\n\t\tresult_w = {(({13{(~ wire_csa_lower_cout)}} & wire_csa_upper0_result) | ({13{wire_csa_lower_cout}} & wire_csa_upper1_result)), wire_csa_lower_result};\nendmodule \n\n\n\n\n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_div_single_qds_block_mab\n\t( \n\taclr,\n\tclken,\n\tclock,\n\tdecoder_bus,\n\tdecoder_output) ;\n\tinput   aclr;\n\tinput   clken;\n\tinput   clock;\n\tinput   [11:0]  decoder_bus;\n\toutput   [2:0]  decoder_output;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\ttri0   aclr;\n\ttri1   clken;\n\ttri0   clock;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\n\treg\t[1:0]\tq_next_dffe;\n\twire  wire_cmpr35_aleb;\n\twire  wire_cmpr36_aleb;\n\twire  wire_cmpr37_aleb;\n\twire  wire_cmpr38_aleb;\n\twire  [31:0]   wire_mux34_result;\n\twire  [2:0]  decoder_output_w;\n\twire  [3:0]  Div_w;\n\twire  [3:0]  k_comp_w;\n\twire  [511:0]  mk_bus_const_w;\n\twire  [31:0]  mk_bus_w;\n\twire  [8:0]  mk_neg1_w;\n\twire  [8:0]  mk_pos0_w;\n\twire  [8:0]  mk_pos1_w;\n\twire  [8:0]  mk_pos2_w;\n\twire  [2:0]  q_next_w;\n\twire  [8:0]  Rk_in_w;\n\twire  [8:0]  Rk_w;\n\n\t\n\tinitial\n\t\tq_next_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) q_next_dffe <= 2'b0;\n\t\telse if  (clken == 1'b1)   q_next_dffe <= q_next_w[1:0];\n\tlpm_compare   cmpr35\n\t( \n\t.aeb(),\n\t.agb(),\n\t.ageb(),\n\t.alb(),\n\t.aleb(wire_cmpr35_aleb),\n\t.aneb(),\n\t.dataa(Rk_w),\n\t.datab(mk_neg1_w)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcmpr35.lpm_representation = \"SIGNED\",\n\t\tcmpr35.lpm_width = 9,\n\t\tcmpr35.lpm_type = \"lpm_compare\";\n\tlpm_compare   cmpr36\n\t( \n\t.aeb(),\n\t.agb(),\n\t.ageb(),\n\t.alb(),\n\t.aleb(wire_cmpr36_aleb),\n\t.aneb(),\n\t.dataa(Rk_w),\n\t.datab(mk_pos0_w)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcmpr36.lpm_representation = \"SIGNED\",\n\t\tcmpr36.lpm_width = 9,\n\t\tcmpr36.lpm_type = \"lpm_compare\";\n\tlpm_compare   cmpr37\n\t( \n\t.aeb(),\n\t.agb(),\n\t.ageb(),\n\t.alb(),\n\t.aleb(wire_cmpr37_aleb),\n\t.aneb(),\n\t.dataa(Rk_w),\n\t.datab(mk_pos1_w)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcmpr37.lpm_representation = \"SIGNED\",\n\t\tcmpr37.lpm_width = 9,\n\t\tcmpr37.lpm_type = \"lpm_compare\";\n\tlpm_compare   cmpr38\n\t( \n\t.aeb(),\n\t.agb(),\n\t.ageb(),\n\t.alb(),\n\t.aleb(wire_cmpr38_aleb),\n\t.aneb(),\n\t.dataa(Rk_w),\n\t.datab(mk_pos2_w)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcmpr38.lpm_representation = \"SIGNED\",\n\t\tcmpr38.lpm_width = 9,\n\t\tcmpr38.lpm_type = \"lpm_compare\";\n\tlpm_mux   mux34\n\t( \n\t.data(mk_bus_const_w),\n\t.result(wire_mux34_result),\n\t.sel(Div_w)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tmux34.lpm_size = 16,\n\t\tmux34.lpm_width = 32,\n\t\tmux34.lpm_widths = 4,\n\t\tmux34.lpm_type = \"lpm_mux\";\n\tassign\n\t\tdecoder_output = decoder_output_w,\n\t\tdecoder_output_w = {1'b0, q_next_dffe},\n\t\tDiv_w = decoder_bus[3:0],\n\t\tk_comp_w = {wire_cmpr38_aleb, wire_cmpr37_aleb, wire_cmpr36_aleb, wire_cmpr35_aleb},\n\t\tmk_bus_const_w = {32'b01011101000111111110000110100011, 32'b01011010000111101110001010100110, 32'b01010111000111011110001110101001, 32'b01010100000111001110010010101100, 32'b01010001000110111110010110101111, 32'b01001110000110101110011010110010, 32'b01001011000110011110011110110101, 32'b01001000000110001110100010111000, 32'b01000101000101111110100110111011, 32'b01000010000101101110101010111110, 32'b00111111000101011110101111000001, 32'b00111100000101001110110011000100, 32'b00111001000100111110110111000111, 32'b00110110000100101110111011001010, 32'b00110011000100011110111111001101, 32'b00110000000100001111000011010000},\n\t\tmk_bus_w = wire_mux34_result,\n\t\tmk_neg1_w = {mk_bus_w[7], mk_bus_w[7:0]},\n\t\tmk_pos0_w = {mk_bus_w[15], mk_bus_w[15:8]},\n\t\tmk_pos1_w = {mk_bus_w[23], mk_bus_w[23:16]},\n\t\tmk_pos2_w = {mk_bus_w[31], mk_bus_w[31:24]},\n\t\tq_next_w = {k_comp_w[1], ((~ k_comp_w[3]) | k_comp_w[0]), ((k_comp_w[3] & (~ k_comp_w[2])) | (k_comp_w[1] & (~ k_comp_w[0])))},\n\t\tRk_in_w = {decoder_bus[11:4], 1'b0},\n\t\tRk_w = Rk_in_w;\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_div_single_srt_block_int_02n\n\t( \n\taclr,\n\tclken,\n\tclock,\n\tdivider,\n\tdivider_reg,\n\tRk,\n\tRk_next,\n\trom) ;\n\tinput   aclr;\n\tinput   clken;\n\tinput   clock;\n\tinput   [23:0]  divider;\n\toutput   [23:0]  divider_reg;\n\tinput   [23:0]  Rk;\n\toutput   [24:0]  Rk_next;\n\toutput   [2:0]  rom;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\ttri0   aclr;\n\ttri1   clken;\n\ttri0   clock;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\n\twire  [26:0]   wire_altfp_div_csa29_result;\n\twire  [26:0]   wire_altfp_div_csa30_result;\n\twire  [26:0]   wire_altfp_div_csa31_result;\n\twire  [26:0]   wire_altfp_div_csa32_result;\n\treg\t[22:0]\tdivider_dffe;\n\treg\t[22:0]\tdivider_dffe_1a;\n\treg\t[24:0]\tneg_qk1d_dffe;\n\treg\t[24:0]\tneg_qk2d_dffe;\n\treg\t[24:0]\tpos_qk1d_dffe;\n\treg\t[24:0]\tpos_qk2d_dffe;\n\treg\t[20:0]\tRk_adder_padded_dffe;\n\treg\t[24:0]\tRk_next_dffe;\n\treg\t[2:0]\trom_out_dffe;\n\twire  [24:0]   wire_mux33_result;\n\twire  [2:0]   wire_qds_block28_decoder_output;\n\twire  [26:0]  divider_1D_w;\n\twire  [26:0]  divider_2D_w;\n\twire  [22:0]  divider_dffe_1a_w;\n\twire  [23:0]  divider_dffe_w;\n\twire  [23:0]  divider_in_w;\n\twire  [24:0]  neg_qk1d_int_w;\n\twire  [24:0]  neg_qk2d_int_w;\n\twire  [1:0]  padded_2_zeros_w;\n\twire  [2:0]  padded_3_zeros_w;\n\twire  [24:0]  pos_qk0d_int_w;\n\twire  [24:0]  pos_qk1d_int_w;\n\twire  [24:0]  pos_qk2d_int_w;\n\twire  [199:0]  qkd_mux_input_w;\n\twire  [24:0]  qkd_mux_w;\n\twire  [26:0]  Rk_adder_padded_w;\n\twire  [23:0]  Rk_dffe_1a_w;\n\twire  [23:0]  Rk_in_w;\n\twire  [24:0]  Rk_next_dffe_w;\n\twire  [11:0]  rom_add_w;\n\twire  [2:0]  rom_mux_w;\n\twire  [2:0]  rom_out_1a_w;\n\twire  [2:0]  rom_out_dffe_w;\n\n\tfpoint_hw_qsys_div_single_altfp_div_csa_pke   altfp_div_csa29\n\t( \n\t.dataa(Rk_adder_padded_w),\n\t.datab(divider_1D_w),\n\t.result(wire_altfp_div_csa29_result));\n\tfpoint_hw_qsys_div_single_altfp_div_csa_pke   altfp_div_csa30\n\t( \n\t.dataa(Rk_adder_padded_w),\n\t.datab(divider_2D_w),\n\t.result(wire_altfp_div_csa30_result));\n\tfpoint_hw_qsys_div_single_altfp_div_csa_qle   altfp_div_csa31\n\t( \n\t.dataa(Rk_adder_padded_w),\n\t.datab(divider_1D_w),\n\t.result(wire_altfp_div_csa31_result));\n\tfpoint_hw_qsys_div_single_altfp_div_csa_qle   altfp_div_csa32\n\t( \n\t.dataa(Rk_adder_padded_w),\n\t.datab(divider_2D_w),\n\t.result(wire_altfp_div_csa32_result));\n\t\n\tinitial\n\t\tdivider_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) divider_dffe <= 23'b0;\n\t\telse if  (clken == 1'b1)   divider_dffe <= divider_dffe_1a_w;\n\t\n\tinitial\n\t\tdivider_dffe_1a = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) divider_dffe_1a <= 23'b0;\n\t\telse if  (clken == 1'b1)   divider_dffe_1a <= divider_in_w[22:0];\n\t\n\tinitial\n\t\tneg_qk1d_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) neg_qk1d_dffe <= 25'b0;\n\t\telse if  (clken == 1'b1)   neg_qk1d_dffe <= wire_altfp_div_csa31_result[24:0];\n\t\n\tinitial\n\t\tneg_qk2d_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) neg_qk2d_dffe <= 25'b0;\n\t\telse if  (clken == 1'b1)   neg_qk2d_dffe <= wire_altfp_div_csa32_result[24:0];\n\t\n\tinitial\n\t\tpos_qk1d_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) pos_qk1d_dffe <= 25'b0;\n\t\telse if  (clken == 1'b1)   pos_qk1d_dffe <= wire_altfp_div_csa29_result[24:0];\n\t\n\tinitial\n\t\tpos_qk2d_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) pos_qk2d_dffe <= 25'b0;\n\t\telse if  (clken == 1'b1)   pos_qk2d_dffe <= wire_altfp_div_csa30_result[24:0];\n\t\n\tinitial\n\t\tRk_adder_padded_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) Rk_adder_padded_dffe <= 21'b0;\n\t\telse if  (clken == 1'b1)   Rk_adder_padded_dffe <= Rk_adder_padded_w[20:0];\n\t\n\tinitial\n\t\tRk_next_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) Rk_next_dffe <= 25'b0;\n\t\telse if  (clken == 1'b1)   Rk_next_dffe <= qkd_mux_w;\n\t\n\tinitial\n\t\trom_out_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) rom_out_dffe <= 3'b0;\n\t\telse if  (clken == 1'b1)   rom_out_dffe <= rom_out_1a_w;\n\tlpm_mux   mux33\n\t( \n\t.data(qkd_mux_input_w),\n\t.result(wire_mux33_result),\n\t.sel(rom_mux_w)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tmux33.lpm_size = 8,\n\t\tmux33.lpm_width = 25,\n\t\tmux33.lpm_widths = 3,\n\t\tmux33.lpm_type = \"lpm_mux\";\n\tfpoint_hw_qsys_div_single_qds_block_mab   qds_block28\n\t( \n\t.aclr(aclr),\n\t.clken(clken),\n\t.clock(clock),\n\t.decoder_bus(rom_add_w),\n\t.decoder_output(wire_qds_block28_decoder_output));\n\tassign\n\t\tdivider_1D_w = {padded_3_zeros_w, divider_in_w},\n\t\tdivider_2D_w = {padded_2_zeros_w, divider_in_w, 1'b0},\n\t\tdivider_dffe_1a_w = divider_dffe_1a,\n\t\tdivider_dffe_w = {1'b1, divider_dffe},\n\t\tdivider_in_w = divider,\n\t\tdivider_reg = divider_dffe_w,\n\t\tneg_qk1d_int_w = neg_qk1d_dffe,\n\t\tneg_qk2d_int_w = neg_qk2d_dffe,\n\t\tpadded_2_zeros_w = {2{1'b0}},\n\t\tpadded_3_zeros_w = {3{1'b0}},\n\t\tpos_qk0d_int_w = {padded_3_zeros_w, 1'b1, Rk_adder_padded_dffe[20:0]},\n\t\tpos_qk1d_int_w = pos_qk1d_dffe,\n\t\tpos_qk2d_int_w = pos_qk2d_dffe,\n\t\tqkd_mux_input_w = {{2{pos_qk2d_int_w}}, pos_qk1d_int_w, pos_qk0d_int_w, {2{neg_qk2d_int_w}}, neg_qk1d_int_w, pos_qk0d_int_w},\n\t\tqkd_mux_w = wire_mux33_result[24:0],\n\t\tRk_adder_padded_w = {padded_3_zeros_w, Rk_dffe_1a_w},\n\t\tRk_dffe_1a_w = Rk_in_w,\n\t\tRk_in_w = Rk,\n\t\tRk_next = Rk_next_dffe_w,\n\t\tRk_next_dffe_w = Rk_next_dffe,\n\t\trom = rom_out_dffe_w,\n\t\trom_add_w = {padded_3_zeros_w, Rk_in_w[23:19], divider_in_w[22:19]},\n\t\trom_mux_w = rom_out_1a_w,\n\t\trom_out_1a_w = wire_qds_block28_decoder_output,\n\t\trom_out_dffe_w = rom_out_dffe;\nendmodule \n\n\n\n\n\n\n\n\n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_div_single_qds_block_ls9\n\t( \n\taclr,\n\tclken,\n\tclock,\n\tdecoder_bus,\n\tdecoder_output) ;\n\tinput   aclr;\n\tinput   clken;\n\tinput   clock;\n\tinput   [11:0]  decoder_bus;\n\toutput   [2:0]  decoder_output;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\ttri0   aclr;\n\ttri1   clken;\n\ttri0   clock;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\n\treg\t[2:0]\tq_next_dffe;\n\twire  wire_cmpr46_aleb;\n\twire  wire_cmpr47_aleb;\n\twire  wire_cmpr48_aleb;\n\twire  wire_cmpr49_aleb;\n\twire  [31:0]   wire_mux45_result;\n\twire  [2:0]  decoder_output_w;\n\twire  [3:0]  Div_w;\n\twire  [3:0]  k_comp_w;\n\twire  [511:0]  mk_bus_const_w;\n\twire  [31:0]  mk_bus_w;\n\twire  [8:0]  mk_neg1_w;\n\twire  [8:0]  mk_pos0_w;\n\twire  [8:0]  mk_pos1_w;\n\twire  [8:0]  mk_pos2_w;\n\twire  [2:0]  q_next_w;\n\twire  [8:0]  Rk_in_w;\n\twire  [8:0]  Rk_w;\n\n\t\n\tinitial\n\t\tq_next_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) q_next_dffe <= 3'b0;\n\t\telse if  (clken == 1'b1)   q_next_dffe <= q_next_w;\n\tlpm_compare   cmpr46\n\t( \n\t.aeb(),\n\t.agb(),\n\t.ageb(),\n\t.alb(),\n\t.aleb(wire_cmpr46_aleb),\n\t.aneb(),\n\t.dataa(Rk_w),\n\t.datab(mk_neg1_w)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcmpr46.lpm_representation = \"SIGNED\",\n\t\tcmpr46.lpm_width = 9,\n\t\tcmpr46.lpm_type = \"lpm_compare\";\n\tlpm_compare   cmpr47\n\t( \n\t.aeb(),\n\t.agb(),\n\t.ageb(),\n\t.alb(),\n\t.aleb(wire_cmpr47_aleb),\n\t.aneb(),\n\t.dataa(Rk_w),\n\t.datab(mk_pos0_w)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcmpr47.lpm_representation = \"SIGNED\",\n\t\tcmpr47.lpm_width = 9,\n\t\tcmpr47.lpm_type = \"lpm_compare\";\n\tlpm_compare   cmpr48\n\t( \n\t.aeb(),\n\t.agb(),\n\t.ageb(),\n\t.alb(),\n\t.aleb(wire_cmpr48_aleb),\n\t.aneb(),\n\t.dataa(Rk_w),\n\t.datab(mk_pos1_w)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcmpr48.lpm_representation = \"SIGNED\",\n\t\tcmpr48.lpm_width = 9,\n\t\tcmpr48.lpm_type = \"lpm_compare\";\n\tlpm_compare   cmpr49\n\t( \n\t.aeb(),\n\t.agb(),\n\t.ageb(),\n\t.alb(),\n\t.aleb(wire_cmpr49_aleb),\n\t.aneb(),\n\t.dataa(Rk_w),\n\t.datab(mk_pos2_w)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcmpr49.lpm_representation = \"SIGNED\",\n\t\tcmpr49.lpm_width = 9,\n\t\tcmpr49.lpm_type = \"lpm_compare\";\n\tlpm_mux   mux45\n\t( \n\t.data(mk_bus_const_w),\n\t.result(wire_mux45_result),\n\t.sel(Div_w)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tmux45.lpm_size = 16,\n\t\tmux45.lpm_width = 32,\n\t\tmux45.lpm_widths = 4,\n\t\tmux45.lpm_type = \"lpm_mux\";\n\tassign\n\t\tdecoder_output = decoder_output_w,\n\t\tdecoder_output_w = q_next_dffe,\n\t\tDiv_w = decoder_bus[3:0],\n\t\tk_comp_w = {wire_cmpr49_aleb, wire_cmpr48_aleb, wire_cmpr47_aleb, wire_cmpr46_aleb},\n\t\tmk_bus_const_w = {32'b01011101000111111110000110100011, 32'b01011010000111101110001010100110, 32'b01010111000111011110001110101001, 32'b01010100000111001110010010101100, 32'b01010001000110111110010110101111, 32'b01001110000110101110011010110010, 32'b01001011000110011110011110110101, 32'b01001000000110001110100010111000, 32'b01000101000101111110100110111011, 32'b01000010000101101110101010111110, 32'b00111111000101011110101111000001, 32'b00111100000101001110110011000100, 32'b00111001000100111110110111000111, 32'b00110110000100101110111011001010, 32'b00110011000100011110111111001101, 32'b00110000000100001111000011010000},\n\t\tmk_bus_w = wire_mux45_result,\n\t\tmk_neg1_w = {mk_bus_w[7], mk_bus_w[7:0]},\n\t\tmk_pos0_w = {mk_bus_w[15], mk_bus_w[15:8]},\n\t\tmk_pos1_w = {mk_bus_w[23], mk_bus_w[23:16]},\n\t\tmk_pos2_w = {mk_bus_w[31], mk_bus_w[31:24]},\n\t\tq_next_w = {k_comp_w[1], ((~ k_comp_w[3]) | k_comp_w[0]), ((k_comp_w[3] & (~ k_comp_w[2])) | (k_comp_w[1] & (~ k_comp_w[0])))},\n\t\tRk_in_w = {decoder_bus[11:4], 1'b0},\n\t\tRk_w = Rk_in_w;\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_div_single_srt_block_int_84n\n\t( \n\taclr,\n\tclken,\n\tclock,\n\tdivider,\n\tdivider_reg,\n\tRk,\n\tRk_next,\n\trom) ;\n\tinput   aclr;\n\tinput   clken;\n\tinput   clock;\n\tinput   [23:0]  divider;\n\toutput   [23:0]  divider_reg;\n\tinput   [24:0]  Rk;\n\toutput   [24:0]  Rk_next;\n\toutput   [2:0]  rom;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\ttri0   aclr;\n\ttri1   clken;\n\ttri0   clock;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\n\twire  [26:0]   wire_altfp_div_csa40_result;\n\twire  [26:0]   wire_altfp_div_csa41_result;\n\twire  [26:0]   wire_altfp_div_csa42_result;\n\twire  [26:0]   wire_altfp_div_csa43_result;\n\treg\t[22:0]\tdivider_dffe;\n\treg\t[22:0]\tdivider_dffe_1a;\n\treg\t[24:0]\tneg_qk1d_dffe;\n\treg\t[23:0]\tneg_qk2d_dffe;\n\treg\t[24:0]\tpos_qk1d_dffe;\n\treg\t[23:0]\tpos_qk2d_dffe;\n\treg\t[24:0]\tRk_adder_padded_dffe;\n\treg\t[24:0]\tRk_next_dffe;\n\treg\t[2:0]\trom_out_dffe;\n\twire  [24:0]   wire_mux44_result;\n\twire  [2:0]   wire_qds_block39_decoder_output;\n\twire  [26:0]  divider_1D_w;\n\twire  [26:0]  divider_2D_w;\n\twire  [22:0]  divider_dffe_1a_w;\n\twire  [23:0]  divider_dffe_w;\n\twire  [23:0]  divider_in_w;\n\twire  [24:0]  neg_qk1d_int_w;\n\twire  [24:0]  neg_qk2d_int_w;\n\twire  [1:0]  padded_2_zeros_w;\n\twire  [2:0]  padded_3_zeros_w;\n\twire  [24:0]  pos_qk0d_int_w;\n\twire  [24:0]  pos_qk1d_int_w;\n\twire  [24:0]  pos_qk2d_int_w;\n\twire  [199:0]  qkd_mux_input_w;\n\twire  [24:0]  qkd_mux_w;\n\twire  [26:0]  Rk_adder_padded_w;\n\twire  [24:0]  Rk_dffe_1a_w;\n\twire  [24:0]  Rk_in_w;\n\twire  [24:0]  Rk_next_dffe_w;\n\twire  [11:0]  rom_add_w;\n\twire  [2:0]  rom_mux_w;\n\twire  [2:0]  rom_out_1a_w;\n\twire  [2:0]  rom_out_dffe_w;\n\n\tfpoint_hw_qsys_div_single_altfp_div_csa_pke   altfp_div_csa40\n\t( \n\t.dataa(Rk_adder_padded_w),\n\t.datab(divider_1D_w),\n\t.result(wire_altfp_div_csa40_result));\n\tfpoint_hw_qsys_div_single_altfp_div_csa_pke   altfp_div_csa41\n\t( \n\t.dataa(Rk_adder_padded_w),\n\t.datab(divider_2D_w),\n\t.result(wire_altfp_div_csa41_result));\n\tfpoint_hw_qsys_div_single_altfp_div_csa_qle   altfp_div_csa42\n\t( \n\t.dataa(Rk_adder_padded_w),\n\t.datab(divider_1D_w),\n\t.result(wire_altfp_div_csa42_result));\n\tfpoint_hw_qsys_div_single_altfp_div_csa_qle   altfp_div_csa43\n\t( \n\t.dataa(Rk_adder_padded_w),\n\t.datab(divider_2D_w),\n\t.result(wire_altfp_div_csa43_result));\n\t\n\tinitial\n\t\tdivider_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) divider_dffe <= 23'b0;\n\t\telse if  (clken == 1'b1)   divider_dffe <= divider_dffe_1a_w;\n\t\n\tinitial\n\t\tdivider_dffe_1a = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) divider_dffe_1a <= 23'b0;\n\t\telse if  (clken == 1'b1)   divider_dffe_1a <= divider_in_w[22:0];\n\t\n\tinitial\n\t\tneg_qk1d_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) neg_qk1d_dffe <= 25'b0;\n\t\telse if  (clken == 1'b1)   neg_qk1d_dffe <= wire_altfp_div_csa42_result[24:0];\n\t\n\tinitial\n\t\tneg_qk2d_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) neg_qk2d_dffe <= 24'b0;\n\t\telse if  (clken == 1'b1)   neg_qk2d_dffe <= wire_altfp_div_csa43_result[24:1];\n\t\n\tinitial\n\t\tpos_qk1d_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) pos_qk1d_dffe <= 25'b0;\n\t\telse if  (clken == 1'b1)   pos_qk1d_dffe <= wire_altfp_div_csa40_result[24:0];\n\t\n\tinitial\n\t\tpos_qk2d_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) pos_qk2d_dffe <= 24'b0;\n\t\telse if  (clken == 1'b1)   pos_qk2d_dffe <= wire_altfp_div_csa41_result[24:1];\n\t\n\tinitial\n\t\tRk_adder_padded_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) Rk_adder_padded_dffe <= 25'b0;\n\t\telse if  (clken == 1'b1)   Rk_adder_padded_dffe <= Rk_adder_padded_w[26:2];\n\t\n\tinitial\n\t\tRk_next_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) Rk_next_dffe <= 25'b0;\n\t\telse if  (clken == 1'b1)   Rk_next_dffe <= qkd_mux_w;\n\t\n\tinitial\n\t\trom_out_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) rom_out_dffe <= 3'b0;\n\t\telse if  (clken == 1'b1)   rom_out_dffe <= rom_out_1a_w;\n\tlpm_mux   mux44\n\t( \n\t.data(qkd_mux_input_w),\n\t.result(wire_mux44_result),\n\t.sel(rom_mux_w)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tmux44.lpm_size = 8,\n\t\tmux44.lpm_width = 25,\n\t\tmux44.lpm_widths = 3,\n\t\tmux44.lpm_type = \"lpm_mux\";\n\tfpoint_hw_qsys_div_single_qds_block_ls9   qds_block39\n\t( \n\t.aclr(aclr),\n\t.clken(clken),\n\t.clock(clock),\n\t.decoder_bus(rom_add_w),\n\t.decoder_output(wire_qds_block39_decoder_output));\n\tassign\n\t\tdivider_1D_w = {padded_3_zeros_w, divider_in_w},\n\t\tdivider_2D_w = {padded_2_zeros_w, divider_in_w, 1'b0},\n\t\tdivider_dffe_1a_w = divider_dffe_1a,\n\t\tdivider_dffe_w = {1'b1, divider_dffe},\n\t\tdivider_in_w = divider,\n\t\tdivider_reg = divider_dffe_w,\n\t\tneg_qk1d_int_w = neg_qk1d_dffe,\n\t\tneg_qk2d_int_w = {neg_qk2d_dffe, 1'b0},\n\t\tpadded_2_zeros_w = {2{1'b0}},\n\t\tpadded_3_zeros_w = {3{1'b0}},\n\t\tpos_qk0d_int_w = {Rk_adder_padded_dffe[22:0], padded_2_zeros_w},\n\t\tpos_qk1d_int_w = pos_qk1d_dffe,\n\t\tpos_qk2d_int_w = {pos_qk2d_dffe, 1'b0},\n\t\tqkd_mux_input_w = {{2{pos_qk2d_int_w}}, pos_qk1d_int_w, pos_qk0d_int_w, {2{neg_qk2d_int_w}}, neg_qk1d_int_w, pos_qk0d_int_w},\n\t\tqkd_mux_w = wire_mux44_result[24:0],\n\t\tRk_adder_padded_w = {Rk_dffe_1a_w, padded_2_zeros_w},\n\t\tRk_dffe_1a_w = Rk_in_w,\n\t\tRk_in_w = Rk,\n\t\tRk_next = Rk_next_dffe_w,\n\t\tRk_next_dffe_w = Rk_next_dffe,\n\t\trom = rom_out_dffe_w,\n\t\trom_add_w = {Rk_in_w[24:17], divider_in_w[22:19]},\n\t\trom_mux_w = rom_out_1a_w,\n\t\trom_out_1a_w = wire_qds_block39_decoder_output,\n\t\trom_out_dffe_w = rom_out_dffe;\nendmodule \n\n\n\n\n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_div_single_srt_block_int_fum\n\t( \n\taclr,\n\tclken,\n\tclock,\n\tdivider,\n\tdivider_reg,\n\tRk,\n\tRk_next,\n\trom) ;\n\tinput   aclr;\n\tinput   clken;\n\tinput   clock;\n\tinput   [23:0]  divider;\n\toutput   [23:0]  divider_reg;\n\tinput   [24:0]  Rk;\n\toutput   [26:0]  Rk_next;\n\toutput   [2:0]  rom;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\ttri0   aclr;\n\ttri1   clken;\n\ttri0   clock;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\n\twire  [26:0]   wire_altfp_div_csa51_result;\n\twire  [26:0]   wire_altfp_div_csa52_result;\n\twire  [26:0]   wire_altfp_div_csa53_result;\n\twire  [26:0]   wire_altfp_div_csa54_result;\n\treg\t[22:0]\tdivider_dffe_1a;\n\treg\t[26:0]\tneg_qk1d_dffe;\n\treg\t[26:0]\tneg_qk2d_dffe;\n\treg\t[26:0]\tpos_qk1d_dffe;\n\treg\t[26:0]\tpos_qk2d_dffe;\n\treg\t[24:0]\tRk_adder_padded_dffe;\n\twire  [26:0]   wire_mux55_result;\n\twire  [2:0]   wire_qds_block50_decoder_output;\n\twire  [26:0]  divider_1D_w;\n\twire  [26:0]  divider_2D_w;\n\twire  [22:0]  divider_dffe_1a_w;\n\twire  [23:0]  divider_dffe_w;\n\twire  [23:0]  divider_in_w;\n\twire  [26:0]  neg_qk1d_int_w;\n\twire  [26:0]  neg_qk2d_int_w;\n\twire  [1:0]  padded_2_zeros_w;\n\twire  [2:0]  padded_3_zeros_w;\n\twire  [26:0]  pos_qk0d_int_w;\n\twire  [26:0]  pos_qk1d_int_w;\n\twire  [26:0]  pos_qk2d_int_w;\n\twire  [215:0]  qkd_mux_input_w;\n\twire  [26:0]  qkd_mux_w;\n\twire  [26:0]  Rk_adder_padded_w;\n\twire  [24:0]  Rk_dffe_1a_w;\n\twire  [24:0]  Rk_in_w;\n\twire  [26:0]  Rk_next_dffe_w;\n\twire  [11:0]  rom_add_w;\n\twire  [2:0]  rom_mux_w;\n\twire  [2:0]  rom_out_1a_w;\n\twire  [2:0]  rom_out_dffe_w;\n\n\tfpoint_hw_qsys_div_single_altfp_div_csa_pke   altfp_div_csa51\n\t( \n\t.dataa(Rk_adder_padded_w),\n\t.datab(divider_1D_w),\n\t.result(wire_altfp_div_csa51_result));\n\tfpoint_hw_qsys_div_single_altfp_div_csa_pke   altfp_div_csa52\n\t( \n\t.dataa(Rk_adder_padded_w),\n\t.datab(divider_2D_w),\n\t.result(wire_altfp_div_csa52_result));\n\tfpoint_hw_qsys_div_single_altfp_div_csa_qle   altfp_div_csa53\n\t( \n\t.dataa(Rk_adder_padded_w),\n\t.datab(divider_1D_w),\n\t.result(wire_altfp_div_csa53_result));\n\tfpoint_hw_qsys_div_single_altfp_div_csa_qle   altfp_div_csa54\n\t( \n\t.dataa(Rk_adder_padded_w),\n\t.datab(divider_2D_w),\n\t.result(wire_altfp_div_csa54_result));\n\t\n\tinitial\n\t\tdivider_dffe_1a = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) divider_dffe_1a <= 23'b0;\n\t\telse if  (clken == 1'b1)   divider_dffe_1a <= divider_in_w[22:0];\n\t\n\tinitial\n\t\tneg_qk1d_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) neg_qk1d_dffe <= 27'b0;\n\t\telse if  (clken == 1'b1)   neg_qk1d_dffe <= wire_altfp_div_csa53_result[26:0];\n\t\n\tinitial\n\t\tneg_qk2d_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) neg_qk2d_dffe <= 27'b0;\n\t\telse if  (clken == 1'b1)   neg_qk2d_dffe <= wire_altfp_div_csa54_result[26:0];\n\t\n\tinitial\n\t\tpos_qk1d_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) pos_qk1d_dffe <= 27'b0;\n\t\telse if  (clken == 1'b1)   pos_qk1d_dffe <= wire_altfp_div_csa51_result[26:0];\n\t\n\tinitial\n\t\tpos_qk2d_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) pos_qk2d_dffe <= 27'b0;\n\t\telse if  (clken == 1'b1)   pos_qk2d_dffe <= wire_altfp_div_csa52_result[26:0];\n\t\n\tinitial\n\t\tRk_adder_padded_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) Rk_adder_padded_dffe <= 25'b0;\n\t\telse if  (clken == 1'b1)   Rk_adder_padded_dffe <= Rk_adder_padded_w[26:2];\n\tlpm_mux   mux55\n\t( \n\t.data(qkd_mux_input_w),\n\t.result(wire_mux55_result),\n\t.sel(rom_mux_w)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tmux55.lpm_size = 8,\n\t\tmux55.lpm_width = 27,\n\t\tmux55.lpm_widths = 3,\n\t\tmux55.lpm_type = \"lpm_mux\";\n\tfpoint_hw_qsys_div_single_qds_block_ls9   qds_block50\n\t( \n\t.aclr(aclr),\n\t.clken(clken),\n\t.clock(clock),\n\t.decoder_bus(rom_add_w),\n\t.decoder_output(wire_qds_block50_decoder_output));\n\tassign\n\t\tdivider_1D_w = {padded_3_zeros_w, divider_in_w},\n\t\tdivider_2D_w = {padded_2_zeros_w, divider_in_w, 1'b0},\n\t\tdivider_dffe_1a_w = divider_dffe_1a,\n\t\tdivider_dffe_w = {1'b1, divider_dffe_1a_w},\n\t\tdivider_in_w = divider,\n\t\tdivider_reg = divider_dffe_w,\n\t\tneg_qk1d_int_w = neg_qk1d_dffe,\n\t\tneg_qk2d_int_w = neg_qk2d_dffe,\n\t\tpadded_2_zeros_w = {2{1'b0}},\n\t\tpadded_3_zeros_w = {3{1'b0}},\n\t\tpos_qk0d_int_w = {Rk_adder_padded_dffe[24:0], padded_2_zeros_w},\n\t\tpos_qk1d_int_w = pos_qk1d_dffe,\n\t\tpos_qk2d_int_w = pos_qk2d_dffe,\n\t\tqkd_mux_input_w = {{2{pos_qk2d_int_w}}, pos_qk1d_int_w, pos_qk0d_int_w, {2{neg_qk2d_int_w}}, neg_qk1d_int_w, pos_qk0d_int_w},\n\t\tqkd_mux_w = wire_mux55_result[26:0],\n\t\tRk_adder_padded_w = {Rk_dffe_1a_w, padded_2_zeros_w},\n\t\tRk_dffe_1a_w = Rk_in_w,\n\t\tRk_in_w = Rk,\n\t\tRk_next = Rk_next_dffe_w,\n\t\tRk_next_dffe_w = qkd_mux_w,\n\t\trom = rom_out_dffe_w,\n\t\trom_add_w = {Rk_in_w[24:17], divider_in_w[22:19]},\n\t\trom_mux_w = rom_out_1a_w,\n\t\trom_out_1a_w = wire_qds_block50_decoder_output,\n\t\trom_out_dffe_w = rom_out_1a_w;\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_div_single_altfp_div_srt_ext_5mh\n\t( \n\taclr,\n\tclken,\n\tclock,\n\tdenom,\n\tdivider,\n\tnumer,\n\tquotient,\n\tremain) ;\n\tinput   aclr;\n\tinput   clken;\n\tinput   clock;\n\tinput   [23:0]  denom;\n\toutput   [23:0]  divider;\n\tinput   [23:0]  numer;\n\toutput   [27:0]  quotient;\n\toutput   [23:0]  remain;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\ttri0   aclr;\n\ttri1   clken;\n\ttri0   clock;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\n\twire  [23:0]   wire_altfp_div_csa25_result;\n\twire  [27:0]   wire_altfp_div_csa26_result;\n\twire  [27:0]   wire_altfp_div_csa27_result;\n\treg\t[23:0]\tdivider_next_special_dffe;\n\treg\t[26:0]\tRk_remainder_special_dffe;\n\treg\t[49:0]\trom_reg_dffe0c;\n\treg\t[14:0]\trom_reg_dffe10c;\n\treg\t[8:0]\trom_reg_dffe11c;\n\treg\t[2:0]\trom_reg_dffe12c;\n\treg\t[68:0]\trom_reg_dffe1c;\n\treg\t[62:0]\trom_reg_dffe2c;\n\treg\t[56:0]\trom_reg_dffe3c;\n\treg\t[50:0]\trom_reg_dffe4c;\n\treg\t[44:0]\trom_reg_dffe5c;\n\treg\t[38:0]\trom_reg_dffe6c;\n\treg\t[32:0]\trom_reg_dffe7c;\n\treg\t[26:0]\trom_reg_dffe8c;\n\treg\t[20:0]\trom_reg_dffe9c;\n\twire  [23:0]   wire_srt_block_int11_divider_reg;\n\twire  [24:0]   wire_srt_block_int11_Rk_next;\n\twire  [2:0]   wire_srt_block_int11_rom;\n\twire  [23:0]   wire_srt_block_int12_divider_reg;\n\twire  [24:0]   wire_srt_block_int12_Rk_next;\n\twire  [2:0]   wire_srt_block_int12_rom;\n\twire  [23:0]   wire_srt_block_int13_divider_reg;\n\twire  [24:0]   wire_srt_block_int13_Rk_next;\n\twire  [2:0]   wire_srt_block_int13_rom;\n\twire  [23:0]   wire_srt_block_int14_divider_reg;\n\twire  [24:0]   wire_srt_block_int14_Rk_next;\n\twire  [2:0]   wire_srt_block_int14_rom;\n\twire  [23:0]   wire_srt_block_int15_divider_reg;\n\twire  [24:0]   wire_srt_block_int15_Rk_next;\n\twire  [2:0]   wire_srt_block_int15_rom;\n\twire  [23:0]   wire_srt_block_int16_divider_reg;\n\twire  [24:0]   wire_srt_block_int16_Rk_next;\n\twire  [2:0]   wire_srt_block_int16_rom;\n\twire  [23:0]   wire_srt_block_int17_divider_reg;\n\twire  [24:0]   wire_srt_block_int17_Rk_next;\n\twire  [2:0]   wire_srt_block_int17_rom;\n\twire  [23:0]   wire_srt_block_int18_divider_reg;\n\twire  [24:0]   wire_srt_block_int18_Rk_next;\n\twire  [2:0]   wire_srt_block_int18_rom;\n\twire  [23:0]   wire_srt_block_int19_divider_reg;\n\twire  [24:0]   wire_srt_block_int19_Rk_next;\n\twire  [2:0]   wire_srt_block_int19_rom;\n\twire  [23:0]   wire_srt_block_int20_divider_reg;\n\twire  [24:0]   wire_srt_block_int20_Rk_next;\n\twire  [2:0]   wire_srt_block_int20_rom;\n\twire  [23:0]   wire_srt_block_int21_divider_reg;\n\twire  [24:0]   wire_srt_block_int21_Rk_next;\n\twire  [2:0]   wire_srt_block_int21_rom;\n\twire  [23:0]   wire_srt_block_int22_divider_reg;\n\twire  [24:0]   wire_srt_block_int22_Rk_next;\n\twire  [2:0]   wire_srt_block_int22_rom;\n\twire  [23:0]   wire_srt_block_int23_divider_reg;\n\twire  [24:0]   wire_srt_block_int23_Rk_next;\n\twire  [2:0]   wire_srt_block_int23_rom;\n\twire  [23:0]   wire_srt_block_int24_divider_reg;\n\twire  [26:0]   wire_srt_block_int24_Rk_next;\n\twire  [2:0]   wire_srt_block_int24_rom;\n\twire  [23:0]  added_remainder_w;\n\twire  [23:0]  divider_dffe_w;\n\twire  [23:0]  divider_next_special_w;\n\twire  [23:0]  divider_next_w0c;\n\twire  [23:0]  divider_next_w10c;\n\twire  [23:0]  divider_next_w11c;\n\twire  [23:0]  divider_next_w12c;\n\twire  [23:0]  divider_next_w13c;\n\twire  [23:0]  divider_next_w1c;\n\twire  [23:0]  divider_next_w2c;\n\twire  [23:0]  divider_next_w3c;\n\twire  [23:0]  divider_next_w4c;\n\twire  [23:0]  divider_next_w5c;\n\twire  [23:0]  divider_next_w6c;\n\twire  [23:0]  divider_next_w7c;\n\twire  [23:0]  divider_next_w8c;\n\twire  [23:0]  divider_next_w9c;\n\twire  [23:0]  divider_w;\n\twire  [27:0]  full_neg_rom_w;\n\twire  [27:0]  full_pos_rom_w;\n\twire  mux_remainder_w;\n\twire  [1:0]  neg_rom_w0c;\n\twire  [1:0]  neg_rom_w10c;\n\twire  [1:0]  neg_rom_w11c;\n\twire  [1:0]  neg_rom_w12c;\n\twire  [1:0]  neg_rom_w13c;\n\twire  [1:0]  neg_rom_w1c;\n\twire  [1:0]  neg_rom_w2c;\n\twire  [1:0]  neg_rom_w3c;\n\twire  [1:0]  neg_rom_w4c;\n\twire  [1:0]  neg_rom_w5c;\n\twire  [1:0]  neg_rom_w6c;\n\twire  [1:0]  neg_rom_w7c;\n\twire  [1:0]  neg_rom_w8c;\n\twire  [1:0]  neg_rom_w9c;\n\twire  [1:0]  pos_rom_w0c;\n\twire  [1:0]  pos_rom_w10c;\n\twire  [1:0]  pos_rom_w11c;\n\twire  [1:0]  pos_rom_w12c;\n\twire  [1:0]  pos_rom_w13c;\n\twire  [1:0]  pos_rom_w1c;\n\twire  [1:0]  pos_rom_w2c;\n\twire  [1:0]  pos_rom_w3c;\n\twire  [1:0]  pos_rom_w4c;\n\twire  [1:0]  pos_rom_w5c;\n\twire  [1:0]  pos_rom_w6c;\n\twire  [1:0]  pos_rom_w7c;\n\twire  [1:0]  pos_rom_w8c;\n\twire  [1:0]  pos_rom_w9c;\n\twire  [24:0]  Rk_next0_w;\n\twire  [24:0]  Rk_next_w0c;\n\twire  [24:0]  Rk_next_w10c;\n\twire  [24:0]  Rk_next_w11c;\n\twire  [24:0]  Rk_next_w12c;\n\twire  [26:0]  Rk_next_w13c;\n\twire  [24:0]  Rk_next_w1c;\n\twire  [24:0]  Rk_next_w2c;\n\twire  [24:0]  Rk_next_w3c;\n\twire  [24:0]  Rk_next_w4c;\n\twire  [24:0]  Rk_next_w5c;\n\twire  [24:0]  Rk_next_w6c;\n\twire  [24:0]  Rk_next_w7c;\n\twire  [24:0]  Rk_next_w8c;\n\twire  [24:0]  Rk_next_w9c;\n\twire  [26:0]  Rk_remainder_special_w;\n\twire  [23:0]  Rk_remainder_w;\n\twire  [23:0]  Rk_w;\n\twire  [2:0]  rom_dffe_w0c;\n\twire  [2:0]  rom_dffe_w10c;\n\twire  [2:0]  rom_dffe_w11c;\n\twire  [2:0]  rom_dffe_w12c;\n\twire  [2:0]  rom_dffe_w13c;\n\twire  [2:0]  rom_dffe_w1c;\n\twire  [2:0]  rom_dffe_w2c;\n\twire  [2:0]  rom_dffe_w3c;\n\twire  [2:0]  rom_dffe_w4c;\n\twire  [2:0]  rom_dffe_w5c;\n\twire  [2:0]  rom_dffe_w6c;\n\twire  [2:0]  rom_dffe_w7c;\n\twire  [2:0]  rom_dffe_w8c;\n\twire  [2:0]  rom_dffe_w9c;\n\twire  [13:0]  rom_mux_w;\n\twire  [2:0]  rom_out_1a_w;\n\twire  [2:0]  rom_out_w0c;\n\twire  [2:0]  rom_out_w10c;\n\twire  [2:0]  rom_out_w11c;\n\twire  [2:0]  rom_out_w12c;\n\twire  [2:0]  rom_out_w13c;\n\twire  [2:0]  rom_out_w1c;\n\twire  [2:0]  rom_out_w2c;\n\twire  [2:0]  rom_out_w3c;\n\twire  [2:0]  rom_out_w4c;\n\twire  [2:0]  rom_out_w5c;\n\twire  [2:0]  rom_out_w6c;\n\twire  [2:0]  rom_out_w7c;\n\twire  [2:0]  rom_out_w8c;\n\twire  [2:0]  rom_out_w9c;\n\twire  [27:0]  srt_adjust_w;\n\twire  [27:0]  srt_adjusted_w;\n\twire  [27:0]  true_quotient_w;\n\twire  [27:0]  value_one_w;\n\twire  [1:0]  zero_quotient_w;\n\n\tfpoint_hw_qsys_div_single_altfp_div_csa_mke   altfp_div_csa25\n\t( \n\t.dataa(Rk_remainder_special_w[23:0]),\n\t.datab(divider_next_special_w),\n\t.result(wire_altfp_div_csa25_result));\n\tfpoint_hw_qsys_div_single_altfp_div_csa_2jh   altfp_div_csa26\n\t( \n\t.aclr(aclr),\n\t.clken(clken),\n\t.clock(clock),\n\t.dataa(full_pos_rom_w),\n\t.datab(full_neg_rom_w),\n\t.result(wire_altfp_div_csa26_result));\n\tfpoint_hw_qsys_div_single_altfp_div_csa_rle   altfp_div_csa27\n\t( \n\t.dataa(srt_adjust_w),\n\t.datab(value_one_w),\n\t.result(wire_altfp_div_csa27_result));\n\t\n\tinitial\n\t\tdivider_next_special_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) divider_next_special_dffe <= 24'b0;\n\t\telse if  (clken == 1'b1)   divider_next_special_dffe <= divider_next_w13c;\n\t\n\tinitial\n\t\tRk_remainder_special_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) Rk_remainder_special_dffe <= 27'b0;\n\t\telse if  (clken == 1'b1)   Rk_remainder_special_dffe <= Rk_next_w13c;\n\t\n\tinitial\n\t\trom_reg_dffe0c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) rom_reg_dffe0c <= 50'b0;\n\t\telse if  (clken == 1'b1)   rom_reg_dffe0c <= {rom_reg_dffe0c[47:0], rom_out_w0c[1:0]};\n\t\n\tinitial\n\t\trom_reg_dffe10c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) rom_reg_dffe10c <= 15'b0;\n\t\telse if  (clken == 1'b1)   rom_reg_dffe10c <= {rom_reg_dffe10c[11:0], rom_out_w10c};\n\t\n\tinitial\n\t\trom_reg_dffe11c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) rom_reg_dffe11c <= 9'b0;\n\t\telse if  (clken == 1'b1)   rom_reg_dffe11c <= {rom_reg_dffe11c[5:0], rom_out_w11c};\n\t\n\tinitial\n\t\trom_reg_dffe12c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) rom_reg_dffe12c <= 3'b0;\n\t\telse if  (clken == 1'b1)   rom_reg_dffe12c <= {rom_out_w12c};\n\t\n\tinitial\n\t\trom_reg_dffe1c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) rom_reg_dffe1c <= 69'b0;\n\t\telse if  (clken == 1'b1)   rom_reg_dffe1c <= {rom_reg_dffe1c[65:0], rom_out_w1c};\n\t\n\tinitial\n\t\trom_reg_dffe2c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) rom_reg_dffe2c <= 63'b0;\n\t\telse if  (clken == 1'b1)   rom_reg_dffe2c <= {rom_reg_dffe2c[59:0], rom_out_w2c};\n\t\n\tinitial\n\t\trom_reg_dffe3c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) rom_reg_dffe3c <= 57'b0;\n\t\telse if  (clken == 1'b1)   rom_reg_dffe3c <= {rom_reg_dffe3c[53:0], rom_out_w3c};\n\t\n\tinitial\n\t\trom_reg_dffe4c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) rom_reg_dffe4c <= 51'b0;\n\t\telse if  (clken == 1'b1)   rom_reg_dffe4c <= {rom_reg_dffe4c[47:0], rom_out_w4c};\n\t\n\tinitial\n\t\trom_reg_dffe5c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) rom_reg_dffe5c <= 45'b0;\n\t\telse if  (clken == 1'b1)   rom_reg_dffe5c <= {rom_reg_dffe5c[41:0], rom_out_w5c};\n\t\n\tinitial\n\t\trom_reg_dffe6c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) rom_reg_dffe6c <= 39'b0;\n\t\telse if  (clken == 1'b1)   rom_reg_dffe6c <= {rom_reg_dffe6c[35:0], rom_out_w6c};\n\t\n\tinitial\n\t\trom_reg_dffe7c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) rom_reg_dffe7c <= 33'b0;\n\t\telse if  (clken == 1'b1)   rom_reg_dffe7c <= {rom_reg_dffe7c[29:0], rom_out_w7c};\n\t\n\tinitial\n\t\trom_reg_dffe8c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) rom_reg_dffe8c <= 27'b0;\n\t\telse if  (clken == 1'b1)   rom_reg_dffe8c <= {rom_reg_dffe8c[23:0], rom_out_w8c};\n\t\n\tinitial\n\t\trom_reg_dffe9c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) rom_reg_dffe9c <= 21'b0;\n\t\telse if  (clken == 1'b1)   rom_reg_dffe9c <= {rom_reg_dffe9c[17:0], rom_out_w9c};\n\tfpoint_hw_qsys_div_single_srt_block_int_02n   srt_block_int11\n\t( \n\t.aclr(aclr),\n\t.clken(clken),\n\t.clock(clock),\n\t.divider(divider_w),\n\t.divider_reg(wire_srt_block_int11_divider_reg),\n\t.Rk(Rk_w),\n\t.Rk_next(wire_srt_block_int11_Rk_next),\n\t.rom(wire_srt_block_int11_rom));\n\tfpoint_hw_qsys_div_single_srt_block_int_84n   srt_block_int12\n\t( \n\t.aclr(aclr),\n\t.clken(clken),\n\t.clock(clock),\n\t.divider(divider_next_w0c),\n\t.divider_reg(wire_srt_block_int12_divider_reg),\n\t.Rk(Rk_next_w0c),\n\t.Rk_next(wire_srt_block_int12_Rk_next),\n\t.rom(wire_srt_block_int12_rom));\n\tfpoint_hw_qsys_div_single_srt_block_int_84n   srt_block_int13\n\t( \n\t.aclr(aclr),\n\t.clken(clken),\n\t.clock(clock),\n\t.divider(divider_next_w1c),\n\t.divider_reg(wire_srt_block_int13_divider_reg),\n\t.Rk(Rk_next_w1c),\n\t.Rk_next(wire_srt_block_int13_Rk_next),\n\t.rom(wire_srt_block_int13_rom));\n\tfpoint_hw_qsys_div_single_srt_block_int_84n   srt_block_int14\n\t( \n\t.aclr(aclr),\n\t.clken(clken),\n\t.clock(clock),\n\t.divider(divider_next_w2c),\n\t.divider_reg(wire_srt_block_int14_divider_reg),\n\t.Rk(Rk_next_w2c),\n\t.Rk_next(wire_srt_block_int14_Rk_next),\n\t.rom(wire_srt_block_int14_rom));\n\tfpoint_hw_qsys_div_single_srt_block_int_84n   srt_block_int15\n\t( \n\t.aclr(aclr),\n\t.clken(clken),\n\t.clock(clock),\n\t.divider(divider_next_w3c),\n\t.divider_reg(wire_srt_block_int15_divider_reg),\n\t.Rk(Rk_next_w3c),\n\t.Rk_next(wire_srt_block_int15_Rk_next),\n\t.rom(wire_srt_block_int15_rom));\n\tfpoint_hw_qsys_div_single_srt_block_int_84n   srt_block_int16\n\t( \n\t.aclr(aclr),\n\t.clken(clken),\n\t.clock(clock),\n\t.divider(divider_next_w4c),\n\t.divider_reg(wire_srt_block_int16_divider_reg),\n\t.Rk(Rk_next_w4c),\n\t.Rk_next(wire_srt_block_int16_Rk_next),\n\t.rom(wire_srt_block_int16_rom));\n\tfpoint_hw_qsys_div_single_srt_block_int_84n   srt_block_int17\n\t( \n\t.aclr(aclr),\n\t.clken(clken),\n\t.clock(clock),\n\t.divider(divider_next_w5c),\n\t.divider_reg(wire_srt_block_int17_divider_reg),\n\t.Rk(Rk_next_w5c),\n\t.Rk_next(wire_srt_block_int17_Rk_next),\n\t.rom(wire_srt_block_int17_rom));\n\tfpoint_hw_qsys_div_single_srt_block_int_84n   srt_block_int18\n\t( \n\t.aclr(aclr),\n\t.clken(clken),\n\t.clock(clock),\n\t.divider(divider_next_w6c),\n\t.divider_reg(wire_srt_block_int18_divider_reg),\n\t.Rk(Rk_next_w6c),\n\t.Rk_next(wire_srt_block_int18_Rk_next),\n\t.rom(wire_srt_block_int18_rom));\n\tfpoint_hw_qsys_div_single_srt_block_int_84n   srt_block_int19\n\t( \n\t.aclr(aclr),\n\t.clken(clken),\n\t.clock(clock),\n\t.divider(divider_next_w7c),\n\t.divider_reg(wire_srt_block_int19_divider_reg),\n\t.Rk(Rk_next_w7c),\n\t.Rk_next(wire_srt_block_int19_Rk_next),\n\t.rom(wire_srt_block_int19_rom));\n\tfpoint_hw_qsys_div_single_srt_block_int_84n   srt_block_int20\n\t( \n\t.aclr(aclr),\n\t.clken(clken),\n\t.clock(clock),\n\t.divider(divider_next_w8c),\n\t.divider_reg(wire_srt_block_int20_divider_reg),\n\t.Rk(Rk_next_w8c),\n\t.Rk_next(wire_srt_block_int20_Rk_next),\n\t.rom(wire_srt_block_int20_rom));\n\tfpoint_hw_qsys_div_single_srt_block_int_84n   srt_block_int21\n\t( \n\t.aclr(aclr),\n\t.clken(clken),\n\t.clock(clock),\n\t.divider(divider_next_w9c),\n\t.divider_reg(wire_srt_block_int21_divider_reg),\n\t.Rk(Rk_next_w9c),\n\t.Rk_next(wire_srt_block_int21_Rk_next),\n\t.rom(wire_srt_block_int21_rom));\n\tfpoint_hw_qsys_div_single_srt_block_int_84n   srt_block_int22\n\t( \n\t.aclr(aclr),\n\t.clken(clken),\n\t.clock(clock),\n\t.divider(divider_next_w10c),\n\t.divider_reg(wire_srt_block_int22_divider_reg),\n\t.Rk(Rk_next_w10c),\n\t.Rk_next(wire_srt_block_int22_Rk_next),\n\t.rom(wire_srt_block_int22_rom));\n\tfpoint_hw_qsys_div_single_srt_block_int_84n   srt_block_int23\n\t( \n\t.aclr(aclr),\n\t.clken(clken),\n\t.clock(clock),\n\t.divider(divider_next_w11c),\n\t.divider_reg(wire_srt_block_int23_divider_reg),\n\t.Rk(Rk_next_w11c),\n\t.Rk_next(wire_srt_block_int23_Rk_next),\n\t.rom(wire_srt_block_int23_rom));\n\tfpoint_hw_qsys_div_single_srt_block_int_fum   srt_block_int24\n\t( \n\t.aclr(aclr),\n\t.clken(clken),\n\t.clock(clock),\n\t.divider(divider_next_w12c),\n\t.divider_reg(wire_srt_block_int24_divider_reg),\n\t.Rk(Rk_next_w12c),\n\t.Rk_next(wire_srt_block_int24_Rk_next),\n\t.rom(wire_srt_block_int24_rom));\n\tassign\n\t\tadded_remainder_w = wire_altfp_div_csa25_result,\n\t\tdivider = divider_next_special_w,\n\t\tdivider_dffe_w = wire_srt_block_int11_divider_reg,\n\t\tdivider_next_special_w = divider_next_special_dffe,\n\t\tdivider_next_w0c = divider_dffe_w,\n\t\tdivider_next_w10c = wire_srt_block_int21_divider_reg,\n\t\tdivider_next_w11c = wire_srt_block_int22_divider_reg,\n\t\tdivider_next_w12c = wire_srt_block_int23_divider_reg,\n\t\tdivider_next_w13c = wire_srt_block_int24_divider_reg,\n\t\tdivider_next_w1c = wire_srt_block_int12_divider_reg,\n\t\tdivider_next_w2c = wire_srt_block_int13_divider_reg,\n\t\tdivider_next_w3c = wire_srt_block_int14_divider_reg,\n\t\tdivider_next_w4c = wire_srt_block_int15_divider_reg,\n\t\tdivider_next_w5c = wire_srt_block_int16_divider_reg,\n\t\tdivider_next_w6c = wire_srt_block_int17_divider_reg,\n\t\tdivider_next_w7c = wire_srt_block_int18_divider_reg,\n\t\tdivider_next_w8c = wire_srt_block_int19_divider_reg,\n\t\tdivider_next_w9c = wire_srt_block_int20_divider_reg,\n\t\tdivider_w = denom,\n\t\tfull_neg_rom_w = {neg_rom_w0c, neg_rom_w1c, neg_rom_w2c, neg_rom_w3c, neg_rom_w4c, neg_rom_w5c, neg_rom_w6c, neg_rom_w7c, neg_rom_w8c, neg_rom_w9c, neg_rom_w10c, neg_rom_w11c, neg_rom_w12c, neg_rom_w13c},\n\t\tfull_pos_rom_w = {pos_rom_w0c, pos_rom_w1c, pos_rom_w2c, pos_rom_w3c, pos_rom_w4c, pos_rom_w5c, pos_rom_w6c, pos_rom_w7c, pos_rom_w8c, pos_rom_w9c, pos_rom_w10c, pos_rom_w11c, pos_rom_w12c, pos_rom_w13c},\n\t\tmux_remainder_w = ((Rk_remainder_special_w[26] | Rk_remainder_special_w[25]) | Rk_remainder_special_w[24]),\n\t\tneg_rom_w0c = (({2{(~ rom_mux_w[0])}} & zero_quotient_w) | ({2{rom_mux_w[0]}} & rom_dffe_w0c[1:0])),\n\t\tneg_rom_w10c = (({2{(~ rom_mux_w[10])}} & zero_quotient_w) | ({2{rom_mux_w[10]}} & rom_dffe_w10c[1:0])),\n\t\tneg_rom_w11c = (({2{(~ rom_mux_w[11])}} & zero_quotient_w) | ({2{rom_mux_w[11]}} & rom_dffe_w11c[1:0])),\n\t\tneg_rom_w12c = (({2{(~ rom_mux_w[12])}} & zero_quotient_w) | ({2{rom_mux_w[12]}} & rom_dffe_w12c[1:0])),\n\t\tneg_rom_w13c = (({2{(~ rom_mux_w[13])}} & zero_quotient_w) | ({2{rom_mux_w[13]}} & rom_dffe_w13c[1:0])),\n\t\tneg_rom_w1c = (({2{(~ rom_mux_w[1])}} & zero_quotient_w) | ({2{rom_mux_w[1]}} & rom_dffe_w1c[1:0])),\n\t\tneg_rom_w2c = (({2{(~ rom_mux_w[2])}} & zero_quotient_w) | ({2{rom_mux_w[2]}} & rom_dffe_w2c[1:0])),\n\t\tneg_rom_w3c = (({2{(~ rom_mux_w[3])}} & zero_quotient_w) | ({2{rom_mux_w[3]}} & rom_dffe_w3c[1:0])),\n\t\tneg_rom_w4c = (({2{(~ rom_mux_w[4])}} & zero_quotient_w) | ({2{rom_mux_w[4]}} & rom_dffe_w4c[1:0])),\n\t\tneg_rom_w5c = (({2{(~ rom_mux_w[5])}} & zero_quotient_w) | ({2{rom_mux_w[5]}} & rom_dffe_w5c[1:0])),\n\t\tneg_rom_w6c = (({2{(~ rom_mux_w[6])}} & zero_quotient_w) | ({2{rom_mux_w[6]}} & rom_dffe_w6c[1:0])),\n\t\tneg_rom_w7c = (({2{(~ rom_mux_w[7])}} & zero_quotient_w) | ({2{rom_mux_w[7]}} & rom_dffe_w7c[1:0])),\n\t\tneg_rom_w8c = (({2{(~ rom_mux_w[8])}} & zero_quotient_w) | ({2{rom_mux_w[8]}} & rom_dffe_w8c[1:0])),\n\t\tneg_rom_w9c = (({2{(~ rom_mux_w[9])}} & zero_quotient_w) | ({2{rom_mux_w[9]}} & rom_dffe_w9c[1:0])),\n\t\tpos_rom_w0c = (({2{rom_mux_w[0]}} & zero_quotient_w) | ({2{(~ rom_mux_w[0])}} & rom_dffe_w0c[1:0])),\n\t\tpos_rom_w10c = (({2{rom_mux_w[10]}} & zero_quotient_w) | ({2{(~ rom_mux_w[10])}} & rom_dffe_w10c[1:0])),\n\t\tpos_rom_w11c = (({2{rom_mux_w[11]}} & zero_quotient_w) | ({2{(~ rom_mux_w[11])}} & rom_dffe_w11c[1:0])),\n\t\tpos_rom_w12c = (({2{rom_mux_w[12]}} & zero_quotient_w) | ({2{(~ rom_mux_w[12])}} & rom_dffe_w12c[1:0])),\n\t\tpos_rom_w13c = (({2{rom_mux_w[13]}} & zero_quotient_w) | ({2{(~ rom_mux_w[13])}} & rom_dffe_w13c[1:0])),\n\t\tpos_rom_w1c = (({2{rom_mux_w[1]}} & zero_quotient_w) | ({2{(~ rom_mux_w[1])}} & rom_dffe_w1c[1:0])),\n\t\tpos_rom_w2c = (({2{rom_mux_w[2]}} & zero_quotient_w) | ({2{(~ rom_mux_w[2])}} & rom_dffe_w2c[1:0])),\n\t\tpos_rom_w3c = (({2{rom_mux_w[3]}} & zero_quotient_w) | ({2{(~ rom_mux_w[3])}} & rom_dffe_w3c[1:0])),\n\t\tpos_rom_w4c = (({2{rom_mux_w[4]}} & zero_quotient_w) | ({2{(~ rom_mux_w[4])}} & rom_dffe_w4c[1:0])),\n\t\tpos_rom_w5c = (({2{rom_mux_w[5]}} & zero_quotient_w) | ({2{(~ rom_mux_w[5])}} & rom_dffe_w5c[1:0])),\n\t\tpos_rom_w6c = (({2{rom_mux_w[6]}} & zero_quotient_w) | ({2{(~ rom_mux_w[6])}} & rom_dffe_w6c[1:0])),\n\t\tpos_rom_w7c = (({2{rom_mux_w[7]}} & zero_quotient_w) | ({2{(~ rom_mux_w[7])}} & rom_dffe_w7c[1:0])),\n\t\tpos_rom_w8c = (({2{rom_mux_w[8]}} & zero_quotient_w) | ({2{(~ rom_mux_w[8])}} & rom_dffe_w8c[1:0])),\n\t\tpos_rom_w9c = (({2{rom_mux_w[9]}} & zero_quotient_w) | ({2{(~ rom_mux_w[9])}} & rom_dffe_w9c[1:0])),\n\t\tquotient = true_quotient_w,\n\t\tremain = Rk_remainder_w,\n\t\tRk_next0_w = wire_srt_block_int11_Rk_next,\n\t\tRk_next_w0c = Rk_next0_w,\n\t\tRk_next_w10c = wire_srt_block_int21_Rk_next,\n\t\tRk_next_w11c = wire_srt_block_int22_Rk_next,\n\t\tRk_next_w12c = wire_srt_block_int23_Rk_next,\n\t\tRk_next_w13c = wire_srt_block_int24_Rk_next,\n\t\tRk_next_w1c = wire_srt_block_int12_Rk_next,\n\t\tRk_next_w2c = wire_srt_block_int13_Rk_next,\n\t\tRk_next_w3c = wire_srt_block_int14_Rk_next,\n\t\tRk_next_w4c = wire_srt_block_int15_Rk_next,\n\t\tRk_next_w5c = wire_srt_block_int16_Rk_next,\n\t\tRk_next_w6c = wire_srt_block_int17_Rk_next,\n\t\tRk_next_w7c = wire_srt_block_int18_Rk_next,\n\t\tRk_next_w8c = wire_srt_block_int19_Rk_next,\n\t\tRk_next_w9c = wire_srt_block_int20_Rk_next,\n\t\tRk_remainder_special_w = Rk_remainder_special_dffe,\n\t\tRk_remainder_w = (({24{(~ mux_remainder_w)}} & Rk_remainder_special_w[23:0]) | ({24{mux_remainder_w}} & added_remainder_w)),\n\t\tRk_w = numer,\n\t\trom_dffe_w0c = {1'b0, rom_reg_dffe0c[49:48]},\n\t\trom_dffe_w10c = rom_reg_dffe10c[14:12],\n\t\trom_dffe_w11c = rom_reg_dffe11c[8:6],\n\t\trom_dffe_w12c = rom_reg_dffe12c[2:0],\n\t\trom_dffe_w13c = rom_out_w13c,\n\t\trom_dffe_w1c = rom_reg_dffe1c[68:66],\n\t\trom_dffe_w2c = rom_reg_dffe2c[62:60],\n\t\trom_dffe_w3c = rom_reg_dffe3c[56:54],\n\t\trom_dffe_w4c = rom_reg_dffe4c[50:48],\n\t\trom_dffe_w5c = rom_reg_dffe5c[44:42],\n\t\trom_dffe_w6c = rom_reg_dffe6c[38:36],\n\t\trom_dffe_w7c = rom_reg_dffe7c[32:30],\n\t\trom_dffe_w8c = rom_reg_dffe8c[26:24],\n\t\trom_dffe_w9c = rom_reg_dffe9c[20:18],\n\t\trom_mux_w = {rom_dffe_w13c[2], rom_dffe_w12c[2], rom_dffe_w11c[2], rom_dffe_w10c[2], rom_dffe_w9c[2], rom_dffe_w8c[2], rom_dffe_w7c[2], rom_dffe_w6c[2], rom_dffe_w5c[2], rom_dffe_w4c[2], rom_dffe_w3c[2], rom_dffe_w2c[2], rom_dffe_w1c[2], rom_dffe_w0c[2]},\n\t\trom_out_1a_w = wire_srt_block_int11_rom,\n\t\trom_out_w0c = rom_out_1a_w,\n\t\trom_out_w10c = wire_srt_block_int21_rom,\n\t\trom_out_w11c = wire_srt_block_int22_rom,\n\t\trom_out_w12c = wire_srt_block_int23_rom,\n\t\trom_out_w13c = wire_srt_block_int24_rom,\n\t\trom_out_w1c = wire_srt_block_int12_rom,\n\t\trom_out_w2c = wire_srt_block_int13_rom,\n\t\trom_out_w3c = wire_srt_block_int14_rom,\n\t\trom_out_w4c = wire_srt_block_int15_rom,\n\t\trom_out_w5c = wire_srt_block_int16_rom,\n\t\trom_out_w6c = wire_srt_block_int17_rom,\n\t\trom_out_w7c = wire_srt_block_int18_rom,\n\t\trom_out_w8c = wire_srt_block_int19_rom,\n\t\trom_out_w9c = wire_srt_block_int20_rom,\n\t\tsrt_adjust_w = wire_altfp_div_csa26_result,\n\t\tsrt_adjusted_w = wire_altfp_div_csa27_result,\n\t\ttrue_quotient_w = (({28{(~ mux_remainder_w)}} & srt_adjust_w) | ({28{mux_remainder_w}} & srt_adjusted_w)),\n\t\tvalue_one_w = 28'b0000000000000000000000000001,\n\t\tzero_quotient_w = {2{1'b0}};\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_hw_qsys_div_single\n\t( \n\taclr,\n\tclk_en,\n\tclock,\n\tdataa,\n\tdatab,\n\tresult) ;\n\tinput   aclr;\n\tinput   clk_en;\n\tinput   clock;\n\tinput   [31:0]  dataa;\n\tinput   [31:0]  datab;\n\toutput   [31:0]  result;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\ttri0   aclr;\n\ttri1   clk_en;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\n\twire  wire_altfp_div_csa8_cout;\n\twire  [23:0]   wire_altfp_div_csa8_result;\n\twire  [23:0]   wire_altfp_div_srt_ext1_divider;\n\twire  [27:0]   wire_altfp_div_srt_ext1_quotient;\n\twire  [23:0]   wire_altfp_div_srt_ext1_remain;\n\treg\t[7:0]\tand_or_dffe;\n\treg\t[7:0]\tand_or_dffe1a;\n\treg\t[7:0]\tand_or_dffe3a;\n\treg\t[7:0]\tand_or_pipeline0c;\n\treg\t[7:0]\tand_or_pipeline10c;\n\treg\t[7:0]\tand_or_pipeline11c;\n\treg\t[7:0]\tand_or_pipeline12c;\n\treg\t[7:0]\tand_or_pipeline13c;\n\treg\t[7:0]\tand_or_pipeline14c;\n\treg\t[7:0]\tand_or_pipeline15c;\n\treg\t[7:0]\tand_or_pipeline16c;\n\treg\t[7:0]\tand_or_pipeline17c;\n\treg\t[7:0]\tand_or_pipeline18c;\n\treg\t[7:0]\tand_or_pipeline19c;\n\treg\t[7:0]\tand_or_pipeline1c;\n\treg\t[7:0]\tand_or_pipeline20c;\n\treg\t[7:0]\tand_or_pipeline21c;\n\treg\t[7:0]\tand_or_pipeline22c;\n\treg\t[7:0]\tand_or_pipeline23c;\n\treg\t[7:0]\tand_or_pipeline24c;\n\treg\t[7:0]\tand_or_pipeline25c;\n\treg\t[7:0]\tand_or_pipeline26c;\n\treg\t[7:0]\tand_or_pipeline27c;\n\treg\t[7:0]\tand_or_pipeline2c;\n\treg\t[7:0]\tand_or_pipeline3c;\n\treg\t[7:0]\tand_or_pipeline4c;\n\treg\t[7:0]\tand_or_pipeline5c;\n\treg\t[7:0]\tand_or_pipeline6c;\n\treg\t[7:0]\tand_or_pipeline7c;\n\treg\t[7:0]\tand_or_pipeline8c;\n\treg\t[7:0]\tand_or_pipeline9c;\n\treg\tbias_addition_overf_dffe;\n\treg\t[23:0]\tdivider_pipe1a;\n\treg\texp_a_and_dffe;\n\treg\texp_a_b_dffe;\n\treg\t[7:0]\texp_a_dffe;\n\treg\texp_a_or_dffe;\n\treg\texp_b_and_dffe;\n\treg\t[7:0]\texp_b_dffe;\n\treg\texp_b_or_dffe;\n\treg\t[8:0]\texp_dffe1a;\n\treg\t[8:0]\texp_dffe2a;\n\treg\t[8:0]\texp_pipeline0c;\n\treg\t[8:0]\texp_pipeline10c;\n\treg\t[8:0]\texp_pipeline11c;\n\treg\t[8:0]\texp_pipeline12c;\n\treg\t[8:0]\texp_pipeline13c;\n\treg\t[8:0]\texp_pipeline14c;\n\treg\t[8:0]\texp_pipeline15c;\n\treg\t[8:0]\texp_pipeline16c;\n\treg\t[8:0]\texp_pipeline17c;\n\treg\t[8:0]\texp_pipeline18c;\n\treg\t[8:0]\texp_pipeline19c;\n\treg\t[8:0]\texp_pipeline1c;\n\treg\t[8:0]\texp_pipeline20c;\n\treg\t[8:0]\texp_pipeline21c;\n\treg\t[8:0]\texp_pipeline22c;\n\treg\t[8:0]\texp_pipeline23c;\n\treg\t[8:0]\texp_pipeline24c;\n\treg\t[8:0]\texp_pipeline25c;\n\treg\t[8:0]\texp_pipeline26c;\n\treg\t[8:0]\texp_pipeline2c;\n\treg\t[8:0]\texp_pipeline3c;\n\treg\t[8:0]\texp_pipeline4c;\n\treg\t[8:0]\texp_pipeline5c;\n\treg\t[8:0]\texp_pipeline6c;\n\treg\t[8:0]\texp_pipeline7c;\n\treg\t[8:0]\texp_pipeline8c;\n\treg\t[8:0]\texp_pipeline9c;\n\treg\t[7:0]\texp_res_pipe3;\n\treg\timplied_bit;\n\treg\timplied_bit2a;\n\treg\tman_a_and_dffe;\n\treg\t[22:0]\tman_a_dffe;\n\treg\tman_a_or_dffe;\n\treg\tman_b_and_dffe;\n\treg\t[22:0]\tman_b_dffe;\n\treg\tman_b_or_dffe;\n\treg\t[23:0]\tman_res_pipe3;\n\treg\t[27:0]\tquotient_pipe1a;\n\treg\t[23:0]\tremainder_pipe1a;\n\treg\t[31:0]\tresult_output_dffe;\n\treg\trnd_overflow_dffe;\n\treg\t[23:0]\trnded_man_pipe2a;\n\treg\tsign_a_dffe;\n\treg\tsign_b_dffe;\n\treg\tsign_div_pipeline0c;\n\treg\tsign_div_pipeline10c;\n\treg\tsign_div_pipeline11c;\n\treg\tsign_div_pipeline12c;\n\treg\tsign_div_pipeline13c;\n\treg\tsign_div_pipeline14c;\n\treg\tsign_div_pipeline15c;\n\treg\tsign_div_pipeline16c;\n\treg\tsign_div_pipeline17c;\n\treg\tsign_div_pipeline18c;\n\treg\tsign_div_pipeline19c;\n\treg\tsign_div_pipeline1c;\n\treg\tsign_div_pipeline20c;\n\treg\tsign_div_pipeline21c;\n\treg\tsign_div_pipeline22c;\n\treg\tsign_div_pipeline23c;\n\treg\tsign_div_pipeline24c;\n\treg\tsign_div_pipeline25c;\n\treg\tsign_div_pipeline26c;\n\treg\tsign_div_pipeline27c;\n\treg\tsign_div_pipeline2c;\n\treg\tsign_div_pipeline3c;\n\treg\tsign_div_pipeline4c;\n\treg\tsign_div_pipeline5c;\n\treg\tsign_div_pipeline6c;\n\treg\tsign_div_pipeline7c;\n\treg\tsign_div_pipeline8c;\n\treg\tsign_div_pipeline9c;\n\treg\tsign_pipe1a;\n\treg\tsign_pipe2a;\n\treg\tsign_pipe3a;\n\twire  wire_add_sub10_overflow;\n\twire  [8:0]   wire_add_sub10_result;\n\twire  [8:0]   wire_add_sub9_result;\n\twire  wire_cmpr2_aeb;\n\twire  wire_cmpr2_agb;\n\twire  wire_cmpr3_aeb;\n\twire  wire_cmpr3_agb;\n\twire  wire_cmpr4_aeb;\n\twire  wire_cmpr4_agb;\n\twire  wire_cmpr5_ageb;\n\twire  wire_cmpr6_aeb;\n\twire  wire_cmpr6_agb;\n\twire  wire_cmpr7_ageb;\n\twire  [23:0]  add_1_dataa_w;\n\twire  [23:0]  add_1_datab_w;\n\twire  add_1_w;\n\twire  [23:0]  add_one_process_w;\n\twire  [7:0]  and_or_dffe1a_w;\n\twire  [7:0]  and_or_dffe3a_w;\n\twire  [7:0]  and_or_dffe_w;\n\twire  [7:0]  and_or_int_w;\n\twire  [7:0]  and_or_pipeline_w;\n\twire  [8:0]  bias_add_w;\n\twire  bias_addition_overf_w;\n\twire  [7:0]  bias_addition_w;\n\twire  [8:0]  bias_value_w;\n\twire  [23:0]  checked_quotient_dffe1a_w;\n\twire  [23:0]  checked_quotient_w;\n\twire  [7:0]  dataa_exp_bus_w;\n\twire  [31:0]  dataa_int;\n\twire  [22:0]  dataa_man_bus_w;\n\twire  dataa_S0;\n\twire  [7:0]  datab_exp_bus_w;\n\twire  [31:0]  datab_int;\n\twire  [22:0]  datab_man_bus_w;\n\twire  datab_S0;\n\twire  [23:0]  divider_srt_w;\n\twire  exp_a_and_msb2_w;\n\twire  exp_a_and_msb_w;\n\twire  exp_a_and_mux_w;\n\twire  [7:0]  exp_a_and_w;\n\twire  exp_a_b_w;\n\twire  [7:0]  exp_a_bus_w;\n\twire  exp_a_non_zero_w;\n\twire  exp_a_one_w;\n\twire  exp_a_or_msb2_w;\n\twire  exp_a_or_msb_w;\n\twire  exp_a_or_mux_w;\n\twire  [7:0]  exp_a_or_w;\n\twire  [7:0]  exp_a_w;\n\twire  exp_a_zero_w;\n\twire  exp_b_and_msb2_w;\n\twire  exp_b_and_msb_w;\n\twire  exp_b_and_mux_w;\n\twire  [7:0]  exp_b_and_w;\n\twire  [7:0]  exp_b_bus_w;\n\twire  exp_b_non_zero_w;\n\twire  exp_b_one_w;\n\twire  exp_b_or_msb2_w;\n\twire  exp_b_or_msb_w;\n\twire  exp_b_or_mux_w;\n\twire  [7:0]  exp_b_or_w;\n\twire  [7:0]  exp_b_w;\n\twire  exp_b_zero_w;\n\twire  exp_bias_and_res_w;\n\twire  [7:0]  exp_bias_and_w;\n\twire  [7:0]  exp_bias_bus_w;\n\twire  [8:0]  exp_dffe1a_w;\n\twire  [8:0]  exp_dffe2a_w;\n\twire  [7:0]  exp_exc_ones_w;\n\twire  [7:0]  exp_exc_zeros_w;\n\twire  [1:0]  exp_higher_bit;\n\twire  [1:0]  exp_higher_or;\n\twire  exp_infi_bus_w;\n\twire  [7:0]  exp_man_and_or_w;\n\twire  exp_or_result_w;\n\twire  [8:0]  exp_pipeline_w;\n\twire  [7:0]  exp_res_and_w;\n\twire  [7:0]  exp_res_bus_w;\n\twire  [7:0]  exp_res_int2_bus_w;\n\twire  [7:0]  exp_res_int2_or_w;\n\twire  [7:0]  exp_res_int2_w;\n\twire  [7:0]  exp_res_int_w;\n\twire  [7:0]  exp_res_w;\n\twire  exp_sign_w;\n\twire  [8:0]  exp_sub_a_w;\n\twire  [8:0]  exp_sub_b_w;\n\twire  [8:0]  exp_sub_w;\n\twire  exp_zero_bus_w;\n\twire  guard_bit_dffe1a_w;\n\twire  guard_bit_quo_msb_m1;\n\twire  guard_bit_quo_msb_m2;\n\twire  guard_bit_w;\n\twire  infi_combi_w;\n\twire  infi_dataa_w;\n\twire  infi_datab_w;\n\twire  [31:0]  infi_res_w;\n\twire  infinite_int_w;\n\twire  infinite_w;\n\twire  [23:0]  man_24_zeros_w;\n\twire  man_a_and_msb2_w;\n\twire  man_a_and_msb_w;\n\twire  man_a_and_mux_w;\n\twire  [22:0]  man_a_and_w;\n\twire  [22:0]  man_a_bus_w;\n\twire  [22:0]  man_a_int_w;\n\twire  man_a_non_zero_w;\n\twire  man_a_one_w;\n\twire  man_a_or_msb2_w;\n\twire  man_a_or_msb_w;\n\twire  man_a_or_mux_w;\n\twire  [22:0]  man_a_or_w;\n\twire  [23:0]  man_a_w;\n\twire  man_a_zero_w;\n\twire  man_b_and_msb2_w;\n\twire  man_b_and_msb_w;\n\twire  man_b_and_mux_w;\n\twire  [22:0]  man_b_and_w;\n\twire  [22:0]  man_b_bus_w;\n\twire  [22:0]  man_b_int_w;\n\twire  man_b_non_zero_w;\n\twire  man_b_one_w;\n\twire  man_b_or_msb2_w;\n\twire  man_b_or_msb_w;\n\twire  man_b_or_mux_w;\n\twire  [22:0]  man_b_or_w;\n\twire  [23:0]  man_b_w;\n\twire  man_b_zero_w;\n\twire  [22:0]  man_exc_nan_w;\n\twire  [22:0]  man_exc_zeros_w;\n\twire  [22:0]  man_res_bus_w;\n\twire  [23:0]  man_res_int2_w;\n\twire  [23:0]  man_res_int_w;\n\twire  [22:0]  man_res_or_w;\n\twire  [23:0]  man_res_w;\n\twire  mux1_exp_s0a;\n\twire  mux1_exp_s1a;\n\twire  [31:0]  mux_1_res_w;\n\twire  [31:0]  mux_2_res_w;\n\twire  [31:0]  mux_3_res_w;\n\twire  mux_zero_non_zero_S0;\n\twire  [23:0]  mux_zero_non_zero_w;\n\twire  nan_dataa_w;\n\twire  nan_datab_w;\n\twire  [31:0]  nan_res_w;\n\twire  nan_w;\n\twire  norm_dataa_w;\n\twire  norm_datab_w;\n\twire  [7:0]  norm_infi_and_w;\n\twire  [7:0]  norm_infi_bus_w;\n\twire  [31:0]  norm_res_int_w;\n\twire  [7:0]  norm_zero_bus_w;\n\twire  [7:0]  norm_zero_or_w;\n\twire  [7:0]  not_bias_addition_w;\n\twire  not_exp_res_int2_or_res_w;\n\twire  overflow_int_w;\n\twire  [23:0]  overflow_man_w;\n\twire  [7:0]  overflow_ones_w;\n\twire  [52:0]  quo_msb_m1_compare_dataa;\n\twire  [52:0]  quo_msb_m1_compare_datab;\n\twire  quo_msb_m1_compare_w;\n\twire  quo_msb_m1_w;\n\twire  [53:0]  quo_msb_m2_compare_dataa;\n\twire  [53:0]  quo_msb_m2_compare_datab;\n\twire  quo_msb_m2_compare_w;\n\twire  [23:0]  quotient_msb_m1_w;\n\twire  [23:0]  quotient_msb_m2_w;\n\twire  [27:0]  quotient_w;\n\twire  [23:0]  remainder_srt_w;\n\twire  [23:0]  res_rnded_man_w;\n\twire  rnd_add_overf_w;\n\twire  rnd_overflow;\n\twire  [23:0]  rnded_man_w;\n\twire  round_bit_dffe1a_w;\n\twire  round_bit_quo_msb_m1;\n\twire  round_bit_quo_msb_m2;\n\twire  round_bit_w;\n\twire  sign_a_w;\n\twire  sign_b_w;\n\twire  sign_div;\n\twire  sign_div_pipeline_w;\n\twire  sign_exc_bit_w;\n\twire  signed_N_exp_h_or;\n\twire  sticky_bit_dffe1a_w;\n\twire  sticky_bit_quo_msb_m1;\n\twire  [1:0]  sticky_bit_quo_msb_m1_bit;\n\twire  [1:0]  sticky_bit_quo_msb_m1_or;\n\twire  [1:0]  sticky_bit_quo_msb_m1_tmp;\n\twire  sticky_bit_quo_msb_m2;\n\twire  [0:0]  sticky_bit_quo_msb_m2_bit;\n\twire  [0:0]  sticky_bit_quo_msb_m2_or;\n\twire  [0:0]  sticky_bit_quo_msb_m2_tmp;\n\twire  sticky_bit_w;\n\twire  sticky_quo_msb_m1_comparator_lower_lower_ageb_w;\n\twire  sticky_quo_msb_m1_comparator_lower_upper_aeb_w;\n\twire  sticky_quo_msb_m1_comparator_lower_upper_agb_w;\n\twire  sticky_quo_msb_m1_comparator_upper_lower_aeb_w;\n\twire  sticky_quo_msb_m1_comparator_upper_lower_agb_w;\n\twire  sticky_quo_msb_m1_comparator_upper_upper_aeb_w;\n\twire  sticky_quo_msb_m1_comparator_upper_upper_agb_w;\n\twire  sticky_quo_msb_m2_comparator_lower_ageb_w;\n\twire  sticky_quo_msb_m2_comparator_upper_aeb_w;\n\twire  sticky_quo_msb_m2_comparator_upper_agb_w;\n\twire  [7:0]  underflow_zeros_w;\n\twire  [8:0]  value_add_1_w;\n\twire  [8:0]  value_minus_1_w;\n\twire  [8:0]  value_normal_w;\n\twire  [8:0]  value_zero_w;\n\twire  [23:0]  zero_bit_23_w;\n\twire  [30:0]  zero_bit_31_w;\n\twire  [7:0]  zero_bit_8_w;\n\twire  zero_bit_w;\n\twire  zero_dataa_w;\n\twire  zero_datab_w;\n\twire  [31:0]  zero_res_w;\n\twire  zero_w;\n\n\tfpoint_hw_qsys_div_single_altfp_div_csa_vhf   altfp_div_csa8\n\t( \n\t.cin(add_1_w),\n\t.cout(wire_altfp_div_csa8_cout),\n\t.dataa(add_1_dataa_w),\n\t.datab(add_1_datab_w),\n\t.result(wire_altfp_div_csa8_result));\n\tfpoint_hw_qsys_div_single_altfp_div_srt_ext_5mh   altfp_div_srt_ext1\n\t( \n\t.aclr(aclr),\n\t.clken(clk_en),\n\t.clock(clock),\n\t.denom(man_b_w),\n\t.divider(wire_altfp_div_srt_ext1_divider),\n\t.numer(man_a_w),\n\t.quotient(wire_altfp_div_srt_ext1_quotient),\n\t.remain(wire_altfp_div_srt_ext1_remain));\n\t\n\tinitial\n\t\tand_or_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_dffe <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_dffe <= exp_man_and_or_w;\n\t\n\tinitial\n\t\tand_or_dffe1a = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_dffe1a <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_dffe1a <= and_or_pipeline_w;\n\t\n\tinitial\n\t\tand_or_dffe3a = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_dffe3a <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_dffe3a <= and_or_int_w;\n\t\n\tinitial\n\t\tand_or_pipeline0c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_pipeline0c <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_pipeline0c <= and_or_dffe_w;\n\t\n\tinitial\n\t\tand_or_pipeline10c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_pipeline10c <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_pipeline10c <= and_or_pipeline9c;\n\t\n\tinitial\n\t\tand_or_pipeline11c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_pipeline11c <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_pipeline11c <= and_or_pipeline10c;\n\t\n\tinitial\n\t\tand_or_pipeline12c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_pipeline12c <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_pipeline12c <= and_or_pipeline11c;\n\t\n\tinitial\n\t\tand_or_pipeline13c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_pipeline13c <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_pipeline13c <= and_or_pipeline12c;\n\t\n\tinitial\n\t\tand_or_pipeline14c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_pipeline14c <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_pipeline14c <= and_or_pipeline13c;\n\t\n\tinitial\n\t\tand_or_pipeline15c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_pipeline15c <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_pipeline15c <= and_or_pipeline14c;\n\t\n\tinitial\n\t\tand_or_pipeline16c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_pipeline16c <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_pipeline16c <= and_or_pipeline15c;\n\t\n\tinitial\n\t\tand_or_pipeline17c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_pipeline17c <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_pipeline17c <= and_or_pipeline16c;\n\t\n\tinitial\n\t\tand_or_pipeline18c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_pipeline18c <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_pipeline18c <= and_or_pipeline17c;\n\t\n\tinitial\n\t\tand_or_pipeline19c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_pipeline19c <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_pipeline19c <= and_or_pipeline18c;\n\t\n\tinitial\n\t\tand_or_pipeline1c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_pipeline1c <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_pipeline1c <= and_or_pipeline0c;\n\t\n\tinitial\n\t\tand_or_pipeline20c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_pipeline20c <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_pipeline20c <= and_or_pipeline19c;\n\t\n\tinitial\n\t\tand_or_pipeline21c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_pipeline21c <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_pipeline21c <= and_or_pipeline20c;\n\t\n\tinitial\n\t\tand_or_pipeline22c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_pipeline22c <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_pipeline22c <= and_or_pipeline21c;\n\t\n\tinitial\n\t\tand_or_pipeline23c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_pipeline23c <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_pipeline23c <= and_or_pipeline22c;\n\t\n\tinitial\n\t\tand_or_pipeline24c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_pipeline24c <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_pipeline24c <= and_or_pipeline23c;\n\t\n\tinitial\n\t\tand_or_pipeline25c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_pipeline25c <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_pipeline25c <= and_or_pipeline24c;\n\t\n\tinitial\n\t\tand_or_pipeline26c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_pipeline26c <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_pipeline26c <= and_or_pipeline25c;\n\t\n\tinitial\n\t\tand_or_pipeline27c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_pipeline27c <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_pipeline27c <= and_or_pipeline26c;\n\t\n\tinitial\n\t\tand_or_pipeline2c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_pipeline2c <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_pipeline2c <= and_or_pipeline1c;\n\t\n\tinitial\n\t\tand_or_pipeline3c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_pipeline3c <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_pipeline3c <= and_or_pipeline2c;\n\t\n\tinitial\n\t\tand_or_pipeline4c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_pipeline4c <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_pipeline4c <= and_or_pipeline3c;\n\t\n\tinitial\n\t\tand_or_pipeline5c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_pipeline5c <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_pipeline5c <= and_or_pipeline4c;\n\t\n\tinitial\n\t\tand_or_pipeline6c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_pipeline6c <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_pipeline6c <= and_or_pipeline5c;\n\t\n\tinitial\n\t\tand_or_pipeline7c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_pipeline7c <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_pipeline7c <= and_or_pipeline6c;\n\t\n\tinitial\n\t\tand_or_pipeline8c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_pipeline8c <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_pipeline8c <= and_or_pipeline7c;\n\t\n\tinitial\n\t\tand_or_pipeline9c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) and_or_pipeline9c <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   and_or_pipeline9c <= and_or_pipeline8c;\n\t\n\tinitial\n\t\tbias_addition_overf_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) bias_addition_overf_dffe <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   bias_addition_overf_dffe <= bias_addition_overf_w;\n\t\n\tinitial\n\t\tdivider_pipe1a = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) divider_pipe1a <= 24'b0;\n\t\telse if  (clk_en == 1'b1)   divider_pipe1a <= wire_altfp_div_srt_ext1_divider;\n\t\n\tinitial\n\t\texp_a_and_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_a_and_dffe <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   exp_a_and_dffe <= exp_a_and_msb2_w;\n\t\n\tinitial\n\t\texp_a_b_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_a_b_dffe <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   exp_a_b_dffe <= exp_or_result_w;\n\t\n\tinitial\n\t\texp_a_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_a_dffe <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   exp_a_dffe <= dataa_int[30:23];\n\t\n\tinitial\n\t\texp_a_or_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_a_or_dffe <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   exp_a_or_dffe <= exp_a_or_msb2_w;\n\t\n\tinitial\n\t\texp_b_and_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_b_and_dffe <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   exp_b_and_dffe <= exp_b_and_msb2_w;\n\t\n\tinitial\n\t\texp_b_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_b_dffe <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   exp_b_dffe <= datab_int[30:23];\n\t\n\tinitial\n\t\texp_b_or_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_b_or_dffe <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   exp_b_or_dffe <= exp_b_or_msb2_w;\n\t\n\tinitial\n\t\texp_dffe1a = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_dffe1a <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_dffe1a <= exp_pipeline_w;\n\t\n\tinitial\n\t\texp_dffe2a = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_dffe2a <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_dffe2a <= exp_dffe1a_w;\n\t\n\tinitial\n\t\texp_pipeline0c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_pipeline0c <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_pipeline0c <= exp_sub_w;\n\t\n\tinitial\n\t\texp_pipeline10c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_pipeline10c <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_pipeline10c <= exp_pipeline9c;\n\t\n\tinitial\n\t\texp_pipeline11c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_pipeline11c <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_pipeline11c <= exp_pipeline10c;\n\t\n\tinitial\n\t\texp_pipeline12c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_pipeline12c <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_pipeline12c <= exp_pipeline11c;\n\t\n\tinitial\n\t\texp_pipeline13c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_pipeline13c <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_pipeline13c <= exp_pipeline12c;\n\t\n\tinitial\n\t\texp_pipeline14c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_pipeline14c <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_pipeline14c <= exp_pipeline13c;\n\t\n\tinitial\n\t\texp_pipeline15c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_pipeline15c <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_pipeline15c <= exp_pipeline14c;\n\t\n\tinitial\n\t\texp_pipeline16c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_pipeline16c <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_pipeline16c <= exp_pipeline15c;\n\t\n\tinitial\n\t\texp_pipeline17c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_pipeline17c <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_pipeline17c <= exp_pipeline16c;\n\t\n\tinitial\n\t\texp_pipeline18c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_pipeline18c <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_pipeline18c <= exp_pipeline17c;\n\t\n\tinitial\n\t\texp_pipeline19c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_pipeline19c <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_pipeline19c <= exp_pipeline18c;\n\t\n\tinitial\n\t\texp_pipeline1c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_pipeline1c <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_pipeline1c <= exp_pipeline0c;\n\t\n\tinitial\n\t\texp_pipeline20c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_pipeline20c <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_pipeline20c <= exp_pipeline19c;\n\t\n\tinitial\n\t\texp_pipeline21c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_pipeline21c <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_pipeline21c <= exp_pipeline20c;\n\t\n\tinitial\n\t\texp_pipeline22c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_pipeline22c <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_pipeline22c <= exp_pipeline21c;\n\t\n\tinitial\n\t\texp_pipeline23c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_pipeline23c <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_pipeline23c <= exp_pipeline22c;\n\t\n\tinitial\n\t\texp_pipeline24c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_pipeline24c <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_pipeline24c <= exp_pipeline23c;\n\t\n\tinitial\n\t\texp_pipeline25c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_pipeline25c <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_pipeline25c <= exp_pipeline24c;\n\t\n\tinitial\n\t\texp_pipeline26c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_pipeline26c <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_pipeline26c <= exp_pipeline25c;\n\t\n\tinitial\n\t\texp_pipeline2c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_pipeline2c <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_pipeline2c <= exp_pipeline1c;\n\t\n\tinitial\n\t\texp_pipeline3c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_pipeline3c <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_pipeline3c <= exp_pipeline2c;\n\t\n\tinitial\n\t\texp_pipeline4c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_pipeline4c <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_pipeline4c <= exp_pipeline3c;\n\t\n\tinitial\n\t\texp_pipeline5c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_pipeline5c <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_pipeline5c <= exp_pipeline4c;\n\t\n\tinitial\n\t\texp_pipeline6c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_pipeline6c <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_pipeline6c <= exp_pipeline5c;\n\t\n\tinitial\n\t\texp_pipeline7c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_pipeline7c <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_pipeline7c <= exp_pipeline6c;\n\t\n\tinitial\n\t\texp_pipeline8c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_pipeline8c <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_pipeline8c <= exp_pipeline7c;\n\t\n\tinitial\n\t\texp_pipeline9c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_pipeline9c <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_pipeline9c <= exp_pipeline8c;\n\t\n\tinitial\n\t\texp_res_pipe3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_res_pipe3 <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   exp_res_pipe3 <= exp_res_int_w;\n\t\n\tinitial\n\t\timplied_bit = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) implied_bit <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   implied_bit <= wire_altfp_div_srt_ext1_quotient[26];\n\t\n\tinitial\n\t\timplied_bit2a = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) implied_bit2a <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   implied_bit2a <= implied_bit;\n\t\n\tinitial\n\t\tman_a_and_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_a_and_dffe <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   man_a_and_dffe <= man_a_and_msb2_w;\n\t\n\tinitial\n\t\tman_a_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_a_dffe <= 23'b0;\n\t\telse if  (clk_en == 1'b1)   man_a_dffe <= dataa_int[22:0];\n\t\n\tinitial\n\t\tman_a_or_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_a_or_dffe <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   man_a_or_dffe <= man_a_or_msb2_w;\n\t\n\tinitial\n\t\tman_b_and_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_b_and_dffe <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   man_b_and_dffe <= man_b_and_msb2_w;\n\t\n\tinitial\n\t\tman_b_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_b_dffe <= 23'b0;\n\t\telse if  (clk_en == 1'b1)   man_b_dffe <= datab_int[22:0];\n\t\n\tinitial\n\t\tman_b_or_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_b_or_dffe <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   man_b_or_dffe <= man_b_or_msb2_w;\n\t\n\tinitial\n\t\tman_res_pipe3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_res_pipe3 <= 24'b0;\n\t\telse if  (clk_en == 1'b1)   man_res_pipe3 <= man_res_int_w;\n\t\n\tinitial\n\t\tquotient_pipe1a = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) quotient_pipe1a <= 28'b0;\n\t\telse if  (clk_en == 1'b1)   quotient_pipe1a <= wire_altfp_div_srt_ext1_quotient;\n\t\n\tinitial\n\t\tremainder_pipe1a = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) remainder_pipe1a <= 24'b0;\n\t\telse if  (clk_en == 1'b1)   remainder_pipe1a <= wire_altfp_div_srt_ext1_remain;\n\t\n\tinitial\n\t\tresult_output_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) result_output_dffe <= 32'b0;\n\t\telse if  (clk_en == 1'b1)   result_output_dffe <= mux_3_res_w;\n\t\n\tinitial\n\t\trnd_overflow_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) rnd_overflow_dffe <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   rnd_overflow_dffe <= rnd_overflow;\n\t\n\tinitial\n\t\trnded_man_pipe2a = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) rnded_man_pipe2a <= 24'b0;\n\t\telse if  (clk_en == 1'b1)   rnded_man_pipe2a <= rnded_man_w;\n\t\n\tinitial\n\t\tsign_a_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_a_dffe <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_a_dffe <= dataa_int[31];\n\t\n\tinitial\n\t\tsign_b_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_b_dffe <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_b_dffe <= datab_int[31];\n\t\n\tinitial\n\t\tsign_div_pipeline0c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_div_pipeline0c <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_div_pipeline0c <= sign_div;\n\t\n\tinitial\n\t\tsign_div_pipeline10c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_div_pipeline10c <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_div_pipeline10c <= sign_div_pipeline9c;\n\t\n\tinitial\n\t\tsign_div_pipeline11c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_div_pipeline11c <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_div_pipeline11c <= sign_div_pipeline10c;\n\t\n\tinitial\n\t\tsign_div_pipeline12c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_div_pipeline12c <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_div_pipeline12c <= sign_div_pipeline11c;\n\t\n\tinitial\n\t\tsign_div_pipeline13c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_div_pipeline13c <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_div_pipeline13c <= sign_div_pipeline12c;\n\t\n\tinitial\n\t\tsign_div_pipeline14c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_div_pipeline14c <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_div_pipeline14c <= sign_div_pipeline13c;\n\t\n\tinitial\n\t\tsign_div_pipeline15c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_div_pipeline15c <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_div_pipeline15c <= sign_div_pipeline14c;\n\t\n\tinitial\n\t\tsign_div_pipeline16c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_div_pipeline16c <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_div_pipeline16c <= sign_div_pipeline15c;\n\t\n\tinitial\n\t\tsign_div_pipeline17c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_div_pipeline17c <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_div_pipeline17c <= sign_div_pipeline16c;\n\t\n\tinitial\n\t\tsign_div_pipeline18c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_div_pipeline18c <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_div_pipeline18c <= sign_div_pipeline17c;\n\t\n\tinitial\n\t\tsign_div_pipeline19c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_div_pipeline19c <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_div_pipeline19c <= sign_div_pipeline18c;\n\t\n\tinitial\n\t\tsign_div_pipeline1c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_div_pipeline1c <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_div_pipeline1c <= sign_div_pipeline0c;\n\t\n\tinitial\n\t\tsign_div_pipeline20c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_div_pipeline20c <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_div_pipeline20c <= sign_div_pipeline19c;\n\t\n\tinitial\n\t\tsign_div_pipeline21c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_div_pipeline21c <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_div_pipeline21c <= sign_div_pipeline20c;\n\t\n\tinitial\n\t\tsign_div_pipeline22c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_div_pipeline22c <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_div_pipeline22c <= sign_div_pipeline21c;\n\t\n\tinitial\n\t\tsign_div_pipeline23c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_div_pipeline23c <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_div_pipeline23c <= sign_div_pipeline22c;\n\t\n\tinitial\n\t\tsign_div_pipeline24c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_div_pipeline24c <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_div_pipeline24c <= sign_div_pipeline23c;\n\t\n\tinitial\n\t\tsign_div_pipeline25c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_div_pipeline25c <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_div_pipeline25c <= sign_div_pipeline24c;\n\t\n\tinitial\n\t\tsign_div_pipeline26c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_div_pipeline26c <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_div_pipeline26c <= sign_div_pipeline25c;\n\t\n\tinitial\n\t\tsign_div_pipeline27c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_div_pipeline27c <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_div_pipeline27c <= sign_div_pipeline26c;\n\t\n\tinitial\n\t\tsign_div_pipeline2c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_div_pipeline2c <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_div_pipeline2c <= sign_div_pipeline1c;\n\t\n\tinitial\n\t\tsign_div_pipeline3c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_div_pipeline3c <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_div_pipeline3c <= sign_div_pipeline2c;\n\t\n\tinitial\n\t\tsign_div_pipeline4c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_div_pipeline4c <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_div_pipeline4c <= sign_div_pipeline3c;\n\t\n\tinitial\n\t\tsign_div_pipeline5c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_div_pipeline5c <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_div_pipeline5c <= sign_div_pipeline4c;\n\t\n\tinitial\n\t\tsign_div_pipeline6c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_div_pipeline6c <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_div_pipeline6c <= sign_div_pipeline5c;\n\t\n\tinitial\n\t\tsign_div_pipeline7c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_div_pipeline7c <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_div_pipeline7c <= sign_div_pipeline6c;\n\t\n\tinitial\n\t\tsign_div_pipeline8c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_div_pipeline8c <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_div_pipeline8c <= sign_div_pipeline7c;\n\t\n\tinitial\n\t\tsign_div_pipeline9c = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_div_pipeline9c <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_div_pipeline9c <= sign_div_pipeline8c;\n\t\n\tinitial\n\t\tsign_pipe1a = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_pipe1a <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_pipe1a <= sign_div_pipeline_w;\n\t\n\tinitial\n\t\tsign_pipe2a = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_pipe2a <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_pipe2a <= sign_pipe1a;\n\t\n\tinitial\n\t\tsign_pipe3a = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_pipe3a <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_pipe3a <= sign_pipe2a;\n\tlpm_add_sub   add_sub10\n\t( \n\t.cout(),\n\t.dataa(exp_dffe2a_w),\n\t.datab(bias_add_w),\n\t.overflow(wire_add_sub10_overflow),\n\t.result(wire_add_sub10_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.cin(),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tadd_sub10.lpm_direction = \"ADD\",\n\t\tadd_sub10.lpm_representation = \"SIGNED\",\n\t\tadd_sub10.lpm_width = 9,\n\t\tadd_sub10.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   add_sub9\n\t( \n\t.aclr(aclr),\n\t.clken(clk_en),\n\t.clock(clock),\n\t.cout(),\n\t.dataa(exp_sub_a_w),\n\t.datab(exp_sub_b_w),\n\t.overflow(),\n\t.result(wire_add_sub9_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.add_sub(1'b1),\n\t.cin()\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tadd_sub9.lpm_direction = \"SUB\",\n\t\tadd_sub9.lpm_pipeline = 1,\n\t\tadd_sub9.lpm_representation = \"SIGNED\",\n\t\tadd_sub9.lpm_width = 9,\n\t\tadd_sub9.lpm_type = \"lpm_add_sub\";\n\tlpm_compare   cmpr2\n\t( \n\t.aeb(wire_cmpr2_aeb),\n\t.agb(wire_cmpr2_agb),\n\t.ageb(),\n\t.alb(),\n\t.aleb(),\n\t.aneb(),\n\t.dataa(quo_msb_m1_compare_dataa[52:39]),\n\t.datab(quo_msb_m1_compare_datab[52:39])\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcmpr2.lpm_representation = \"UNSIGNED\",\n\t\tcmpr2.lpm_width = 14,\n\t\tcmpr2.lpm_type = \"lpm_compare\";\n\tlpm_compare   cmpr3\n\t( \n\t.aeb(wire_cmpr3_aeb),\n\t.agb(wire_cmpr3_agb),\n\t.ageb(),\n\t.alb(),\n\t.aleb(),\n\t.aneb(),\n\t.dataa(quo_msb_m1_compare_dataa[38:26]),\n\t.datab(quo_msb_m1_compare_datab[38:26])\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcmpr3.lpm_representation = \"UNSIGNED\",\n\t\tcmpr3.lpm_width = 13,\n\t\tcmpr3.lpm_type = \"lpm_compare\";\n\tlpm_compare   cmpr4\n\t( \n\t.aeb(wire_cmpr4_aeb),\n\t.agb(wire_cmpr4_agb),\n\t.ageb(),\n\t.alb(),\n\t.aleb(),\n\t.aneb(),\n\t.dataa(quo_msb_m1_compare_dataa[25:13]),\n\t.datab(quo_msb_m1_compare_datab[25:13])\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcmpr4.lpm_representation = \"UNSIGNED\",\n\t\tcmpr4.lpm_width = 13,\n\t\tcmpr4.lpm_type = \"lpm_compare\";\n\tlpm_compare   cmpr5\n\t( \n\t.aeb(),\n\t.agb(),\n\t.ageb(wire_cmpr5_ageb),\n\t.alb(),\n\t.aleb(),\n\t.aneb(),\n\t.dataa(quo_msb_m1_compare_dataa[12:0]),\n\t.datab(quo_msb_m1_compare_datab[12:0])\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcmpr5.lpm_representation = \"UNSIGNED\",\n\t\tcmpr5.lpm_width = 13,\n\t\tcmpr5.lpm_type = \"lpm_compare\";\n\tlpm_compare   cmpr6\n\t( \n\t.aeb(wire_cmpr6_aeb),\n\t.agb(wire_cmpr6_agb),\n\t.ageb(),\n\t.alb(),\n\t.aleb(),\n\t.aneb(),\n\t.dataa(quo_msb_m2_compare_dataa[53:27]),\n\t.datab(quo_msb_m2_compare_datab[53:27])\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcmpr6.lpm_representation = \"UNSIGNED\",\n\t\tcmpr6.lpm_width = 27,\n\t\tcmpr6.lpm_type = \"lpm_compare\";\n\tlpm_compare   cmpr7\n\t( \n\t.aeb(),\n\t.agb(),\n\t.ageb(wire_cmpr7_ageb),\n\t.alb(),\n\t.aleb(),\n\t.aneb(),\n\t.dataa(quo_msb_m2_compare_dataa[26:0]),\n\t.datab(quo_msb_m2_compare_datab[26:0])\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tcmpr7.lpm_representation = \"UNSIGNED\",\n\t\tcmpr7.lpm_width = 27,\n\t\tcmpr7.lpm_type = \"lpm_compare\";\n\tassign\n\t\tadd_1_dataa_w = {checked_quotient_dffe1a_w},\n\t\tadd_1_datab_w = {24{1'b0}},\n\t\tadd_1_w = ((((~ guard_bit_dffe1a_w) & round_bit_dffe1a_w) & sticky_bit_dffe1a_w) | (guard_bit_dffe1a_w & round_bit_dffe1a_w)),\n\t\tadd_one_process_w = wire_altfp_div_csa8_result,\n\t\tand_or_dffe1a_w = and_or_dffe1a,\n\t\tand_or_dffe3a_w = and_or_dffe3a,\n\t\tand_or_dffe_w = and_or_dffe,\n\t\tand_or_int_w = and_or_dffe1a,\n\t\tand_or_pipeline_w = and_or_pipeline27c,\n\t\tbias_add_w = (({9{(~ exp_a_b_w)}} & value_zero_w) | ({9{exp_a_b_w}} & bias_value_w)),\n\t\tbias_addition_overf_w = (wire_add_sub10_overflow | ((~ exp_sign_w) & exp_bias_and_res_w)),\n\t\tbias_addition_w = wire_add_sub10_result[7:0],\n\t\tbias_value_w = (((({9{((~ mux1_exp_s1a) & (~ mux1_exp_s0a))}} & value_minus_1_w) | ({9{((~ mux1_exp_s1a) & mux1_exp_s0a)}} & value_normal_w)) | ({9{(mux1_exp_s1a & (~ mux1_exp_s0a))}} & value_normal_w)) | ({9{(mux1_exp_s1a & mux1_exp_s0a)}} & value_add_1_w)),\n\t\tchecked_quotient_dffe1a_w = checked_quotient_w,\n\t\tchecked_quotient_w = (({24{quo_msb_m1_w}} & quotient_msb_m1_w) | ({24{(~ quo_msb_m1_w)}} & quotient_msb_m2_w)),\n\t\tdataa_exp_bus_w = dataa[30:23],\n\t\tdataa_int = {dataa[31], (({31{dataa_S0}} & zero_bit_31_w) | ({31{(~ dataa_S0)}} & dataa[30:0]))},\n\t\tdataa_man_bus_w = dataa[22:0],\n\t\tdataa_S0 = ((~ exp_a_or_msb_w) & man_a_or_msb_w),\n\t\tdatab_exp_bus_w = datab[30:23],\n\t\tdatab_int = {datab[31], (({31{datab_S0}} & zero_bit_31_w) | ({31{(~ datab_S0)}} & datab[30:0]))},\n\t\tdatab_man_bus_w = datab[22:0],\n\t\tdatab_S0 = ((~ exp_b_or_msb_w) & man_b_or_msb_w),\n\t\tdivider_srt_w = divider_pipe1a,\n\t\texp_a_and_msb2_w = and_or_dffe3a_w[6],\n\t\texp_a_and_msb_w = exp_a_and_w[7],\n\t\texp_a_and_mux_w = ((dataa_S0 & zero_bit_w) | ((~ dataa_S0) & exp_a_and_msb_w)),\n\t\texp_a_and_w = {(exp_a_and_w[6] & exp_a_bus_w[7]), (exp_a_and_w[5] & exp_a_bus_w[6]), (exp_a_and_w[4] & exp_a_bus_w[5]), (exp_a_and_w[3] & exp_a_bus_w[4]), (exp_a_and_w[2] & exp_a_bus_w[3]), (exp_a_and_w[1] & exp_a_bus_w[2]), (exp_a_and_w[0] & exp_a_bus_w[1]), exp_a_bus_w[0]},\n\t\texp_a_b_w = exp_a_b_dffe,\n\t\texp_a_bus_w = dataa_exp_bus_w,\n\t\texp_a_non_zero_w = exp_a_or_dffe,\n\t\texp_a_one_w = exp_a_and_dffe,\n\t\texp_a_or_msb2_w = and_or_dffe3a_w[7],\n\t\texp_a_or_msb_w = exp_a_or_w[7],\n\t\texp_a_or_mux_w = ((dataa_S0 & zero_bit_w) | ((~ dataa_S0) & exp_a_or_msb_w)),\n\t\texp_a_or_w = {(exp_a_or_w[6] | exp_a_bus_w[7]), (exp_a_or_w[5] | exp_a_bus_w[6]), (exp_a_or_w[4] | exp_a_bus_w[5]), (exp_a_or_w[3] | exp_a_bus_w[4]), (exp_a_or_w[2] | exp_a_bus_w[3]), (exp_a_or_w[1] | exp_a_bus_w[2]), (exp_a_or_w[0] | exp_a_bus_w[1]), exp_a_bus_w[0]},\n\t\texp_a_w = exp_a_dffe,\n\t\texp_a_zero_w = (~ exp_a_or_dffe),\n\t\texp_b_and_msb2_w = and_or_dffe3a_w[2],\n\t\texp_b_and_msb_w = exp_b_and_w[7],\n\t\texp_b_and_mux_w = ((datab_S0 & zero_bit_w) | ((~ datab_S0) & exp_b_and_msb_w)),\n\t\texp_b_and_w = {(exp_b_and_w[6] & exp_b_bus_w[7]), (exp_b_and_w[5] & exp_b_bus_w[6]), (exp_b_and_w[4] & exp_b_bus_w[5]), (exp_b_and_w[3] & exp_b_bus_w[4]), (exp_b_and_w[2] & exp_b_bus_w[3]), (exp_b_and_w[1] & exp_b_bus_w[2]), (exp_b_and_w[0] & exp_b_bus_w[1]), exp_b_bus_w[0]},\n\t\texp_b_bus_w = datab_exp_bus_w,\n\t\texp_b_non_zero_w = exp_b_or_dffe,\n\t\texp_b_one_w = exp_b_and_dffe,\n\t\texp_b_or_msb2_w = and_or_dffe3a_w[3],\n\t\texp_b_or_msb_w = exp_b_or_w[7],\n\t\texp_b_or_mux_w = ((datab_S0 & zero_bit_w) | ((~ datab_S0) & exp_b_or_msb_w)),\n\t\texp_b_or_w = {(exp_b_or_w[6] | exp_b_bus_w[7]), (exp_b_or_w[5] | exp_b_bus_w[6]), (exp_b_or_w[4] | exp_b_bus_w[5]), (exp_b_or_w[3] | exp_b_bus_w[4]), (exp_b_or_w[2] | exp_b_bus_w[3]), (exp_b_or_w[1] | exp_b_bus_w[2]), (exp_b_or_w[0] | exp_b_bus_w[1]), exp_b_bus_w[0]},\n\t\texp_b_w = exp_b_dffe,\n\t\texp_b_zero_w = (~ exp_b_or_dffe),\n\t\texp_bias_and_res_w = exp_bias_and_w[7],\n\t\texp_bias_and_w = {(exp_bias_and_w[6] & exp_bias_bus_w[7]), (exp_bias_and_w[5] & exp_bias_bus_w[6]), (exp_bias_and_w[4] & exp_bias_bus_w[5]), (exp_bias_and_w[3] & exp_bias_bus_w[4]), (exp_bias_and_w[2] & exp_bias_bus_w[3]), (exp_bias_and_w[1] & exp_bias_bus_w[2]), (exp_bias_and_w[0] & exp_bias_bus_w[1]), exp_bias_bus_w[0]},\n\t\texp_bias_bus_w = wire_add_sub10_result[7:0],\n\t\texp_dffe1a_w = exp_dffe1a,\n\t\texp_dffe2a_w = exp_dffe2a,\n\t\texp_exc_ones_w = {8{1'b1}},\n\t\texp_exc_zeros_w = {8{1'b0}},\n\t\texp_higher_bit = not_bias_addition_w[7:6],\n\t\texp_higher_or = {(exp_higher_or[0] | exp_higher_bit[1]), exp_higher_bit[0]},\n\t\texp_infi_bus_w = norm_infi_and_w[7],\n\t\texp_man_and_or_w = {exp_a_or_mux_w, exp_a_and_mux_w, man_a_or_mux_w, man_a_and_mux_w, exp_b_or_mux_w, exp_b_and_mux_w, man_b_or_mux_w, man_b_and_mux_w},\n\t\texp_or_result_w = (and_or_dffe1a_w[7] | and_or_dffe1a_w[3]),\n\t\texp_pipeline_w = exp_pipeline26c,\n\t\texp_res_and_w = {(exp_res_and_w[6] & exp_res_bus_w[7]), (exp_res_and_w[5] & exp_res_bus_w[6]), (exp_res_and_w[4] & exp_res_bus_w[5]), (exp_res_and_w[3] & exp_res_bus_w[4]), (exp_res_and_w[2] & exp_res_bus_w[3]), (exp_res_and_w[1] & exp_res_bus_w[2]), (exp_res_and_w[0] & exp_res_bus_w[1]), exp_res_bus_w[0]},\n\t\texp_res_bus_w = exp_res_w,\n\t\texp_res_int2_bus_w = exp_res_int2_w,\n\t\texp_res_int2_or_w = {(exp_res_int2_or_w[6] | exp_res_int2_bus_w[7]), (exp_res_int2_or_w[5] | exp_res_int2_bus_w[6]), (exp_res_int2_or_w[4] | exp_res_int2_bus_w[5]), (exp_res_int2_or_w[3] | exp_res_int2_bus_w[4]), (exp_res_int2_or_w[2] | exp_res_int2_bus_w[3]), (exp_res_int2_or_w[1] | exp_res_int2_bus_w[2]), (exp_res_int2_or_w[0] | exp_res_int2_bus_w[1]), exp_res_int2_bus_w[0]},\n\t\texp_res_int2_w = exp_res_pipe3,\n\t\texp_res_int_w = ((({8{((~ bias_addition_overf_w) & (~ exp_sign_w))}} & bias_addition_w) | ({8{((~ bias_addition_overf_w) & exp_sign_w)}} & underflow_zeros_w)) | ({8{(bias_addition_overf_w & (~ exp_sign_w))}} & overflow_ones_w)),\n\t\texp_res_w = (({8{not_exp_res_int2_or_res_w}} & zero_bit_8_w) | ({8{(~ not_exp_res_int2_or_res_w)}} & exp_res_int2_w)),\n\t\texp_sign_w = wire_add_sub10_result[8],\n\t\texp_sub_a_w = {1'b0, exp_a_w},\n\t\texp_sub_b_w = {1'b0, exp_b_w},\n\t\texp_sub_w = wire_add_sub9_result,\n\t\texp_zero_bus_w = (~ norm_zero_or_w[7]),\n\t\tguard_bit_dffe1a_w = guard_bit_w,\n\t\tguard_bit_quo_msb_m1 = quotient_w[3],\n\t\tguard_bit_quo_msb_m2 = quotient_w[2],\n\t\tguard_bit_w = ((quo_msb_m1_w & guard_bit_quo_msb_m1) | ((~ quo_msb_m1_w) & guard_bit_quo_msb_m2)),\n\t\tinfi_combi_w = (((infi_dataa_w & norm_datab_w) | (norm_dataa_w & zero_datab_w)) | (infi_dataa_w & zero_datab_w)),\n\t\tinfi_dataa_w = (exp_a_one_w & man_a_zero_w),\n\t\tinfi_datab_w = (exp_b_one_w & man_b_zero_w),\n\t\tinfi_res_w = {sign_exc_bit_w, exp_exc_ones_w, man_exc_zeros_w},\n\t\tinfinite_int_w = (infi_combi_w | overflow_int_w),\n\t\tinfinite_w = infinite_int_w,\n\t\tman_24_zeros_w = {24{1'b0}},\n\t\tman_a_and_msb2_w = and_or_dffe3a_w[4],\n\t\tman_a_and_msb_w = man_a_and_w[22],\n\t\tman_a_and_mux_w = ((dataa_S0 & zero_bit_w) | ((~ dataa_S0) & man_a_and_msb_w)),\n\t\tman_a_and_w = {(man_a_and_w[21] & man_a_bus_w[22]), (man_a_and_w[20] & man_a_bus_w[21]), (man_a_and_w[19] & man_a_bus_w[20]), (man_a_and_w[18] & man_a_bus_w[19]), (man_a_and_w[17] & man_a_bus_w[18]), (man_a_and_w[16] & man_a_bus_w[17]), (man_a_and_w[15] & man_a_bus_w[16]), (man_a_and_w[14] & man_a_bus_w[15]), (man_a_and_w[13] & man_a_bus_w[14]), (man_a_and_w[12] & man_a_bus_w[13]), (man_a_and_w[11] & man_a_bus_w[12]), (man_a_and_w[10] & man_a_bus_w[11]), (man_a_and_w[9] & man_a_bus_w[10]), (man_a_and_w[8] & man_a_bus_w[9]), (man_a_and_w[7] & man_a_bus_w[8]), (man_a_and_w[6] & man_a_bus_w[7]), (man_a_and_w[5] & man_a_bus_w[6]), (man_a_and_w[4] & man_a_bus_w[5]), (man_a_and_w[3] & man_a_bus_w[4]), (man_a_and_w[2] & man_a_bus_w[3]), (man_a_and_w[1] & man_a_bus_w[2]), (man_a_and_w[0] & man_a_bus_w[1]), man_a_bus_w[0]},\n\t\tman_a_bus_w = dataa_man_bus_w,\n\t\tman_a_int_w = man_a_dffe,\n\t\tman_a_non_zero_w = man_a_or_dffe,\n\t\tman_a_one_w = man_a_and_dffe,\n\t\tman_a_or_msb2_w = and_or_dffe3a_w[5],\n\t\tman_a_or_msb_w = man_a_or_w[22],\n\t\tman_a_or_mux_w = ((dataa_S0 & zero_bit_w) | ((~ dataa_S0) & man_a_or_msb_w)),\n\t\tman_a_or_w = {(man_a_or_w[21] | man_a_bus_w[22]), (man_a_or_w[20] | man_a_bus_w[21]), (man_a_or_w[19] | man_a_bus_w[20]), (man_a_or_w[18] | man_a_bus_w[19]), (man_a_or_w[17] | man_a_bus_w[18]), (man_a_or_w[16] | man_a_bus_w[17]), (man_a_or_w[15] | man_a_bus_w[16]), (man_a_or_w[14] | man_a_bus_w[15]), (man_a_or_w[13] | man_a_bus_w[14]), (man_a_or_w[12] | man_a_bus_w[13]), (man_a_or_w[11] | man_a_bus_w[12]), (man_a_or_w[10] | man_a_bus_w[11]), (man_a_or_w[9] | man_a_bus_w[10]), (man_a_or_w[8] | man_a_bus_w[9]), (man_a_or_w[7] | man_a_bus_w[8]), (man_a_or_w[6] | man_a_bus_w[7]), (man_a_or_w[5] | man_a_bus_w[6]), (man_a_or_w[4] | man_a_bus_w[5]), (man_a_or_w[3] | man_a_bus_w[4]), (man_a_or_w[2] | man_a_bus_w[3]), (man_a_or_w[1] | man_a_bus_w[2]), (man_a_or_w[0] | man_a_bus_w[1]), man_a_bus_w[0]},\n\t\tman_a_w = {1'b1, man_a_int_w},\n\t\tman_a_zero_w = (~ man_a_or_dffe),\n\t\tman_b_and_msb2_w = and_or_dffe3a_w[0],\n\t\tman_b_and_msb_w = man_b_and_w[22],\n\t\tman_b_and_mux_w = ((datab_S0 & zero_bit_w) | ((~ datab_S0) & man_b_and_msb_w)),\n\t\tman_b_and_w = {(man_b_and_w[21] & man_b_bus_w[22]), (man_b_and_w[20] & man_b_bus_w[21]), (man_b_and_w[19] & man_b_bus_w[20]), (man_b_and_w[18] & man_b_bus_w[19]), (man_b_and_w[17] & man_b_bus_w[18]), (man_b_and_w[16] & man_b_bus_w[17]), (man_b_and_w[15] & man_b_bus_w[16]), (man_b_and_w[14] & man_b_bus_w[15]), (man_b_and_w[13] & man_b_bus_w[14]), (man_b_and_w[12] & man_b_bus_w[13]), (man_b_and_w[11] & man_b_bus_w[12]), (man_b_and_w[10] & man_b_bus_w[11]), (man_b_and_w[9] & man_b_bus_w[10]), (man_b_and_w[8] & man_b_bus_w[9]), (man_b_and_w[7] & man_b_bus_w[8]), (man_b_and_w[6] & man_b_bus_w[7]), (man_b_and_w[5] & man_b_bus_w[6]), (man_b_and_w[4] & man_b_bus_w[5]), (man_b_and_w[3] & man_b_bus_w[4]), (man_b_and_w[2] & man_b_bus_w[3]), (man_b_and_w[1] & man_b_bus_w[2]), (man_b_and_w[0] & man_b_bus_w[1]), man_b_bus_w[0]},\n\t\tman_b_bus_w = datab_man_bus_w,\n\t\tman_b_int_w = man_b_dffe,\n\t\tman_b_non_zero_w = man_b_or_dffe,\n\t\tman_b_one_w = man_b_and_dffe,\n\t\tman_b_or_msb2_w = and_or_dffe3a_w[1],\n\t\tman_b_or_msb_w = man_b_or_w[22],\n\t\tman_b_or_mux_w = ((datab_S0 & zero_bit_w) | ((~ datab_S0) & man_b_or_msb_w)),\n\t\tman_b_or_w = {(man_b_or_w[21] | man_b_bus_w[22]), (man_b_or_w[20] | man_b_bus_w[21]), (man_b_or_w[19] | man_b_bus_w[20]), (man_b_or_w[18] | man_b_bus_w[19]), (man_b_or_w[17] | man_b_bus_w[18]), (man_b_or_w[16] | man_b_bus_w[17]), (man_b_or_w[15] | man_b_bus_w[16]), (man_b_or_w[14] | man_b_bus_w[15]), (man_b_or_w[13] | man_b_bus_w[14]), (man_b_or_w[12] | man_b_bus_w[13]), (man_b_or_w[11] | man_b_bus_w[12]), (man_b_or_w[10] | man_b_bus_w[11]), (man_b_or_w[9] | man_b_bus_w[10]), (man_b_or_w[8] | man_b_bus_w[9]), (man_b_or_w[7] | man_b_bus_w[8]), (man_b_or_w[6] | man_b_bus_w[7]), (man_b_or_w[5] | man_b_bus_w[6]), (man_b_or_w[4] | man_b_bus_w[5]), (man_b_or_w[3] | man_b_bus_w[4]), (man_b_or_w[2] | man_b_bus_w[3]), (man_b_or_w[1] | man_b_bus_w[2]), (man_b_or_w[0] | man_b_bus_w[1]), man_b_bus_w[0]},\n\t\tman_b_w = {1'b1, man_b_int_w},\n\t\tman_b_zero_w = (~ man_b_or_dffe),\n\t\tman_exc_nan_w = {1'b1, man_exc_zeros_w[21:0]},\n\t\tman_exc_zeros_w = {23{1'b0}},\n\t\tman_res_bus_w = man_res_w[22:0],\n\t\tman_res_int2_w = man_res_pipe3,\n\t\tman_res_int_w = mux_zero_non_zero_w,\n\t\tman_res_or_w = {(man_res_or_w[21] | man_res_bus_w[22]), (man_res_or_w[20] | man_res_bus_w[21]), (man_res_or_w[19] | man_res_bus_w[20]), (man_res_or_w[18] | man_res_bus_w[19]), (man_res_or_w[17] | man_res_bus_w[18]), (man_res_or_w[16] | man_res_bus_w[17]), (man_res_or_w[15] | man_res_bus_w[16]), (man_res_or_w[14] | man_res_bus_w[15]), (man_res_or_w[13] | man_res_bus_w[14]), (man_res_or_w[12] | man_res_bus_w[13]), (man_res_or_w[11] | man_res_bus_w[12]), (man_res_or_w[10] | man_res_bus_w[11]), (man_res_or_w[9] | man_res_bus_w[10]), (man_res_or_w[8] | man_res_bus_w[9]), (man_res_or_w[7] | man_res_bus_w[8]), (man_res_or_w[6] | man_res_bus_w[7]), (man_res_or_w[5] | man_res_bus_w[6]), (man_res_or_w[4] | man_res_bus_w[5]), (man_res_or_w[3] | man_res_bus_w[4]), (man_res_or_w[2] | man_res_bus_w[3]), (man_res_or_w[1] | man_res_bus_w[2]), (man_res_or_w[0] | man_res_bus_w[1]), man_res_bus_w[0]},\n\t\tman_res_w = (({24{not_exp_res_int2_or_res_w}} & zero_bit_23_w) | ({24{(~ not_exp_res_int2_or_res_w)}} & man_res_int2_w)),\n\t\tmux1_exp_s0a = rnd_add_overf_w,\n\t\tmux1_exp_s1a = implied_bit2a,\n\t\tmux_1_res_w = (({32{infinite_w}} & infi_res_w) | ({32{(~ infinite_w)}} & norm_res_int_w)),\n\t\tmux_2_res_w = (({32{zero_w}} & zero_res_w) | ({32{(~ zero_w)}} & mux_1_res_w)),\n\t\tmux_3_res_w = (({32{nan_w}} & nan_res_w) | ({32{(~ nan_w)}} & mux_2_res_w)),\n\t\tmux_zero_non_zero_S0 = (((exp_zero_bus_w | signed_N_exp_h_or) | bias_addition_overf_w) | (exp_infi_bus_w & (~ exp_sign_w))),\n\t\tmux_zero_non_zero_w = (({24{mux_zero_non_zero_S0}} & man_24_zeros_w) | ({24{(~ mux_zero_non_zero_S0)}} & res_rnded_man_w)),\n\t\tnan_dataa_w = (exp_a_one_w & (man_a_non_zero_w | man_a_one_w)),\n\t\tnan_datab_w = (exp_b_one_w & (man_b_non_zero_w | man_b_one_w)),\n\t\tnan_res_w = {sign_exc_bit_w, exp_exc_ones_w, man_exc_nan_w},\n\t\tnan_w = (((nan_dataa_w | nan_datab_w) | (zero_dataa_w & zero_datab_w)) | (infi_dataa_w & infi_datab_w)),\n\t\tnorm_dataa_w = ((exp_a_non_zero_w & ((man_a_zero_w | man_a_non_zero_w) | man_a_one_w)) & (~ exp_a_one_w)),\n\t\tnorm_datab_w = ((exp_b_non_zero_w & ((man_b_zero_w | man_b_non_zero_w) | man_b_one_w)) & (~ exp_b_one_w)),\n\t\tnorm_infi_and_w = {(norm_infi_and_w[6] & norm_infi_bus_w[7]), (norm_infi_and_w[5] & norm_infi_bus_w[6]), (norm_infi_and_w[4] & norm_infi_bus_w[5]), (norm_infi_and_w[3] & norm_infi_bus_w[4]), (norm_infi_and_w[2] & norm_infi_bus_w[3]), (norm_infi_and_w[1] & norm_infi_bus_w[2]), (norm_infi_and_w[0] & norm_infi_bus_w[1]), norm_infi_bus_w[0]},\n\t\tnorm_infi_bus_w = bias_addition_w,\n\t\tnorm_res_int_w = {sign_pipe3a, exp_res_w[7:0], man_res_w[22:0]},\n\t\tnorm_zero_bus_w = bias_addition_w,\n\t\tnorm_zero_or_w = {(norm_zero_or_w[6] | norm_zero_bus_w[7]), (norm_zero_or_w[5] | norm_zero_bus_w[6]), (norm_zero_or_w[4] | norm_zero_bus_w[5]), (norm_zero_or_w[3] | norm_zero_bus_w[4]), (norm_zero_or_w[2] | norm_zero_bus_w[3]), (norm_zero_or_w[1] | norm_zero_bus_w[2]), (norm_zero_or_w[0] | norm_zero_bus_w[1]), norm_zero_bus_w[0]},\n\t\tnot_bias_addition_w = (~ bias_addition_w),\n\t\tnot_exp_res_int2_or_res_w = (~ exp_res_int2_or_w[7]),\n\t\toverflow_int_w = (((bias_addition_overf_dffe & (~ nan_w)) & (~ infi_combi_w)) & (~ ((norm_dataa_w & (~ zero_dataa_w)) & zero_datab_w))),\n\t\toverflow_man_w = {1'b1, {23{1'b0}}},\n\t\toverflow_ones_w = {8{1'b1}},\n\t\tquo_msb_m1_compare_dataa = {remainder_srt_w, {29{1'b0}}},\n\t\tquo_msb_m1_compare_datab = {{29{1'b0}}, divider_srt_w},\n\t\tquo_msb_m1_compare_w = (((sticky_quo_msb_m1_comparator_upper_upper_agb_w | (sticky_quo_msb_m1_comparator_upper_upper_aeb_w & sticky_quo_msb_m1_comparator_upper_lower_agb_w)) | (sticky_quo_msb_m1_comparator_upper_lower_aeb_w & sticky_quo_msb_m1_comparator_lower_upper_agb_w)) | (sticky_quo_msb_m1_comparator_lower_upper_aeb_w & sticky_quo_msb_m1_comparator_lower_lower_ageb_w)),\n\t\tquo_msb_m1_w = quotient_w[26],\n\t\tquo_msb_m2_compare_dataa = {remainder_srt_w, {30{1'b0}}},\n\t\tquo_msb_m2_compare_datab = {{30{1'b0}}, divider_srt_w},\n\t\tquo_msb_m2_compare_w = (sticky_quo_msb_m2_comparator_upper_agb_w | (sticky_quo_msb_m2_comparator_upper_aeb_w & sticky_quo_msb_m2_comparator_lower_ageb_w)),\n\t\tquotient_msb_m1_w = quotient_w[26:3],\n\t\tquotient_msb_m2_w = quotient_w[25:2],\n\t\tquotient_w = quotient_pipe1a,\n\t\tremainder_srt_w = remainder_pipe1a,\n\t\tres_rnded_man_w = rnded_man_pipe2a,\n\t\tresult = result_output_dffe,\n\t\trnd_add_overf_w = rnd_overflow_dffe,\n\t\trnd_overflow = wire_altfp_div_csa8_cout,\n\t\trnded_man_w = (({24{rnd_overflow}} & overflow_man_w) | ({24{(~ rnd_overflow)}} & add_one_process_w)),\n\t\tround_bit_dffe1a_w = round_bit_w,\n\t\tround_bit_quo_msb_m1 = quotient_w[2],\n\t\tround_bit_quo_msb_m2 = quotient_w[1],\n\t\tround_bit_w = ((quo_msb_m1_w & round_bit_quo_msb_m1) | ((~ quo_msb_m1_w) & round_bit_quo_msb_m2)),\n\t\tsign_a_w = sign_a_dffe,\n\t\tsign_b_w = sign_b_dffe,\n\t\tsign_div = (sign_a_w ^ sign_b_w),\n\t\tsign_div_pipeline_w = sign_div_pipeline27c,\n\t\tsign_exc_bit_w = sign_pipe3a,\n\t\tsigned_N_exp_h_or = (exp_sign_w & exp_higher_or[1]),\n\t\tsticky_bit_dffe1a_w = sticky_bit_w,\n\t\tsticky_bit_quo_msb_m1 = (quo_msb_m1_compare_w | sticky_bit_quo_msb_m1_or[1]),\n\t\tsticky_bit_quo_msb_m1_bit = sticky_bit_quo_msb_m1_tmp,\n\t\tsticky_bit_quo_msb_m1_or = {(sticky_bit_quo_msb_m1_or[0] | sticky_bit_quo_msb_m1_bit[1]), sticky_bit_quo_msb_m1_bit[0]},\n\t\tsticky_bit_quo_msb_m1_tmp = quotient_w[1:0],\n\t\tsticky_bit_quo_msb_m2 = (quo_msb_m2_compare_w | sticky_bit_quo_msb_m2_or[0]),\n\t\tsticky_bit_quo_msb_m2_bit = sticky_bit_quo_msb_m2_tmp,\n\t\tsticky_bit_quo_msb_m2_or = {sticky_bit_quo_msb_m2_bit[0]},\n\t\tsticky_bit_quo_msb_m2_tmp = quotient_w[0],\n\t\tsticky_bit_w = ((quo_msb_m1_w & sticky_bit_quo_msb_m1) | ((~ quo_msb_m1_w) & sticky_bit_quo_msb_m2)),\n\t\tsticky_quo_msb_m1_comparator_lower_lower_ageb_w = wire_cmpr5_ageb,\n\t\tsticky_quo_msb_m1_comparator_lower_upper_aeb_w = wire_cmpr4_aeb,\n\t\tsticky_quo_msb_m1_comparator_lower_upper_agb_w = wire_cmpr4_agb,\n\t\tsticky_quo_msb_m1_comparator_upper_lower_aeb_w = wire_cmpr3_aeb,\n\t\tsticky_quo_msb_m1_comparator_upper_lower_agb_w = wire_cmpr3_agb,\n\t\tsticky_quo_msb_m1_comparator_upper_upper_aeb_w = wire_cmpr2_aeb,\n\t\tsticky_quo_msb_m1_comparator_upper_upper_agb_w = wire_cmpr2_agb,\n\t\tsticky_quo_msb_m2_comparator_lower_ageb_w = wire_cmpr7_ageb,\n\t\tsticky_quo_msb_m2_comparator_upper_aeb_w = wire_cmpr6_aeb,\n\t\tsticky_quo_msb_m2_comparator_upper_agb_w = wire_cmpr6_agb,\n\t\tunderflow_zeros_w = {8{1'b0}},\n\t\tvalue_add_1_w = 9'b010000000,\n\t\tvalue_minus_1_w = 9'b001111110,\n\t\tvalue_normal_w = 9'b001111111,\n\t\tvalue_zero_w = {9{1'b0}},\n\t\tzero_bit_23_w = {24{1'b0}},\n\t\tzero_bit_31_w = {31{1'b0}},\n\t\tzero_bit_8_w = {8{1'b0}},\n\t\tzero_bit_w = 1'b0,\n\t\tzero_dataa_w = (exp_a_zero_w & man_a_zero_w),\n\t\tzero_datab_w = (exp_b_zero_w & man_b_zero_w),\n\t\tzero_res_w = {sign_exc_bit_w, exp_exc_zeros_w, man_exc_zeros_w},\n\t\tzero_w = (((zero_dataa_w & norm_datab_w) | (norm_dataa_w & infi_datab_w)) | (zero_dataa_w & infi_datab_w));\nendmodule \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n`timescale 1ns / 1ps\n\n\n\n\n\n\nmodule fpoint_hw_qsys (\n                        \n                         clk,\n                         clk_en,\n                         dataa,\n                         datab,\n                         n,\n                         reset,\n                         start,\n\n                        \n                         done,\n                         result\n                      )\n;\n\n  output           done;\n  output  [ 31: 0] result;\n  input            clk;\n  input            clk_en;\n  input   [ 31: 0] dataa;\n  input   [ 31: 0] datab;\n  input   [  1: 0] n;\n  input            reset;\n  input            start;\n\n  wire             add_sub;\n  wire    [  5: 0] counter_in;\n  reg     [  5: 0] counter_out;\n  reg     [ 31: 0] dataa_regout;\n  reg     [ 31: 0] datab_regout;\n  wire             done;\n  wire    [  5: 0] load_data;\n  wire             local_reset_n;\n  wire    [ 31: 0] result;\n  wire    [ 31: 0] result_addsub;\n  wire    [ 31: 0] result_div;\n  wire    [ 31: 0] result_mult;\n  \n  always @(posedge clk or negedge local_reset_n)\n    begin\n      if (local_reset_n == 0)\n          dataa_regout <= 0;\n      else if (clk_en)\n          dataa_regout <= dataa;\n    end\n\n\n  \n  always @(posedge clk or negedge local_reset_n)\n    begin\n      if (local_reset_n == 0)\n          datab_regout <= 0;\n      else if (clk_en)\n          datab_regout <= datab;\n    end\n\n\n  fpoint_hw_qsys_mult_single the_fp_mult\n    (\n      .aclr (reset),\n      .clk_en (clk_en),\n      .clock (clk),\n      .dataa (dataa_regout),\n      .datab (datab_regout),\n      .result (result_mult)\n    );\n\n\n  fpoint_hw_qsys_addsub_single the_fp_addsub\n    (\n      .aclr (reset),\n      .add_sub (add_sub),\n      .clk_en (clk_en),\n      .clock (clk),\n      .dataa (dataa_regout),\n      .datab (datab_regout),\n      .result (result_addsub)\n    );\n\n\n  fpoint_hw_qsys_div_single the_fp_div\n    (\n      .aclr (reset),\n      .clk_en (clk_en),\n      .clock (clk),\n      .dataa (dataa_regout),\n      .datab (datab_regout),\n      .result (result_div)\n    );\n\n\n  \n  \n  always @(posedge clk or negedge local_reset_n)\n    begin\n      if (local_reset_n == 0)\n          counter_out <= 6'd33;\n      else if (clk_en)\n          counter_out <= counter_in;\n    end\n\n\n  \n  assign counter_in = (start == 0)? counter_out - 1'b1 :\n    load_data;\n\n  assign add_sub = n[0];\n  assign local_reset_n = ~reset;\n  assign done = clk_en & ~|counter_out & ~start;\n  \n  assign load_data = (n == 0)? 10 :\n    (n == 1)? 8 :\n    (n == 2)? 8 :\n    33;\n\n  \n  assign result = (n == 0)? result_mult :\n    (n == 1)? result_addsub :\n    (n == 2)? result_addsub :\n    result_div;\n\n\nendmodule\n\n</code>"
                },
                {
                    "type": "text",
                    "text": "Based on the provided original Verilog code, its comments and above answers, generate a detailed specification for the module. Include the following information in a single, concise paragraph:\n1. The name of the module.\n2. A simple explanation of the module's functionality.\n3. The input and output ports, along with a brief explanation of each.\n4. The internal signals used within the module, with a brief explanation of their purpose.\n5. An overview of the different blocks or sections in the code and their functions.\nEnsure that the specification is clear and accurately reflects the details from the code and comments.\nYour answer should be structured and well-organized, providing a comprehensive and detailed overview of the module's design and operation.\nPlease provide your answer in the following format:\nModule name: [module name]. Module specification: [module specification]."
                },
                {
                    "type": "text",
                    "text": "Module name: fpoint_hw_qsys. Module specification: This module is a floating-point arithmetic unit that can perform multiplication, addition/subtraction, and division operations on 32-bit IEEE 754 single-precision floating-point numbers. It takes two input operands (dataa and datab), a 2-bit operation selector (n), and control signals (clk, clk_en, reset, start) as inputs. The module outputs a 32-bit result and a done signal. Internally, it uses registers to store input operands and a counter for operation timing. The module contains three main sub-modules: a floating-point multiplier, an adder/subtractor, and a divider. The operation is selected using the 'n' input, where 0 is multiply, 1/2 is add/subtract, and 3 is divide. The module uses a counter to control the"
                }
            ]
        }
    ]
}