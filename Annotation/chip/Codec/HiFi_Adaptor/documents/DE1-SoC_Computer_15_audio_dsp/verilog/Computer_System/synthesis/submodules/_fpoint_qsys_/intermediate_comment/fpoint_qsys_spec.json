{
    "spec": "Module name: fpoint_qsys. Module specification: This module implements a floating-point arithmetic unit capable of performing multiplication and addition/subtraction operations on 32-bit floating-point numbers. It takes input operands (dataa and datab), a 2-bit operation selector (n), and control signals (clk, clk_en, reset, start). The module outputs a 32-bit result and a done signal. Internally, it uses registered versions of input operands (dataa_regout and datab_regout), a counter (counter_out) for operation timing, and separate sub-modules for multiplication (the_fp_mult) and addition/subtraction (the_fp_addsub). The module selects between multiplication and addition/subtraction based on the n input, with n=0 for multiplication and n=1 or n=2 for addition/subtraction. The add_",
    "gpt-message": [
        {
            "role": "system",
            "content": "You are an expert in hardware design with a deep understanding of Verilog RTL codes. Now I want to train a large language model for code comment generation tasks specifically focused on Verilog RTL codes. And I want you to help me process the raw data, transforming it into suitable formats that can serve as inputs and outputs for the model."
        },
        {
            "role": "user",
            "content": "Name of the module and its functionality is as follows: \nModule name: fpoint_qsys\n\nExplanation: This module appears to be a floating-point arithmetic unit capable of performing multiplication and addition/subtraction operations on 32-bit floating-point numbers. It takes two input operands (dataa and datab), a 2-bit operation selector (n), and control signals (clk, clk_en, reset, start). The module contains separate sub-modules for multiplication and addition/subtraction. It uses a counter to control the operation timing and generates a 'done' signal upon completion. The result is output as a 32-bit floating-point number. The module can perform multiplication when n=0, and addition or subtraction when n=1 or n=2, with the add_sub signal determining addition or subtraction for the latter cases."
        },
        {
            "role": "user",
            "content": "Input and output ports and their explanation is as follows: \nBased on the given Verilog code for the fpoint_qsys module, here are the input and output ports along with their explanations:\n\nInput ports: clk, clk_en, dataa, datab, n, reset, start. Explanation:\n- clk: Clock input for synchronous operations\n- clk_en: Clock enable signal\n- dataa: 32-bit input operand A\n- datab: 32-bit input operand B\n- n: 2-bit operation selector (0 for multiplication, 1 or 2 for addition/subtraction)\n- reset: Reset signal to initialize the module\n- start: Signal to initiate the arithmetic operation\n\nOutput ports: done, result. Explanation:\n- done: Signal indicating the completion of the arithmetic operation\n- result: 32-bit output containing the result of the arithmetic operation\n\nThese ports define the interface of the fpoint_qsys module, allowing it to receive input data and control signals, perform floating-point arithmetic operations, and provide the result along with a completion signal."
        },
        {
            "role": "user",
            "content": "Internal signals and their explanation is as follows: \nBased on the given code and previous information, here are the internal signals and their explanations:\n\nInternal signals: add_sub, counter_in, counter_out, dataa_regout, datab_regout, load_data, local_reset_n, result_addsub, result_mult.\n\nExplanation:\n1. add_sub: Determines whether addition or subtraction is performed in the addsub unit.\n2. counter_in: Input value for the counter, used to control operation timing.\n3. counter_out: Current value of the counter, decrements until operation is complete.\n4. dataa_regout: Registered version of input dataa, used for synchronization.\n5. datab_regout: Registered version of input datab, used for synchronization.\n6. load_data: Initial counter value based on the operation type.\n7. local_reset_n: Inverted reset signal for internal use.\n8. result_addsub: Output from the addition/subtraction unit.\n9. result_mult: Output from the multiplication unit.\n\nThese internal signals facilitate the operation of the floating-point arithmetic unit, managing data flow, timing, and intermediate results."
        },
        {
            "role": "user",
            "content": "Original Verilog code is as follows: \n```verilog\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_qsys_mult_single\n\t( \n\taclr,\n\tclk_en,\n\tclock,\n\tdataa,\n\tdatab,\n\tresult) ;\n\tinput   aclr;\n\tinput   clk_en;\n\tinput   clock;\n\tinput   [31:0]  dataa;\n\tinput   [31:0]  datab;\n\toutput   [31:0]  result;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\ttri0   aclr;\n\ttri1   clk_en;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\n\treg\tdataa_exp_all_one_ff_p1;\n\treg\tdataa_exp_not_zero_ff_p1;\n\treg\tdataa_man_not_zero_ff_p1;\n\treg\tdataa_man_not_zero_ff_p2;\n\treg\tdatab_exp_all_one_ff_p1;\n\treg\tdatab_exp_not_zero_ff_p1;\n\treg\tdatab_man_not_zero_ff_p1;\n\treg\tdatab_man_not_zero_ff_p2;\n\treg\t[9:0]\tdelay_exp2_bias;\n\treg\t[9:0]\tdelay_exp3_bias;\n\treg\t[9:0]\tdelay_exp_bias;\n\treg\tdelay_man_product_msb;\n\treg\tdelay_man_product_msb2;\n\treg\tdelay_man_product_msb_p0;\n\treg\t[23:0]\tdelay_round;\n\treg\t[8:0]\texp_add_p1;\n\treg\t[9:0]\texp_adj_p1;\n\treg\t[9:0]\texp_adj_p2;\n\treg\t[8:0]\texp_bias_p1;\n\treg\t[8:0]\texp_bias_p2;\n\treg\t[7:0]\texp_result_ff;\n\treg\tinput_is_infinity_dffe_0;\n\treg\tinput_is_infinity_dffe_1;\n\treg\tinput_is_infinity_dffe_2;\n\treg\tinput_is_infinity_dffe_3;\n\treg\tinput_is_infinity_ff1;\n\treg\tinput_is_infinity_ff2;\n\treg\tinput_is_infinity_ff3;\n\treg\tinput_is_infinity_ff4;\n\treg\tinput_is_nan_dffe_0;\n\treg\tinput_is_nan_dffe_1;\n\treg\tinput_is_nan_dffe_2;\n\treg\tinput_is_nan_dffe_3;\n\treg\tinput_is_nan_ff1;\n\treg\tinput_is_nan_ff2;\n\treg\tinput_is_nan_ff3;\n\treg\tinput_is_nan_ff4;\n\treg\tinput_not_zero_dffe_0;\n\treg\tinput_not_zero_dffe_1;\n\treg\tinput_not_zero_dffe_2;\n\treg\tinput_not_zero_dffe_3;\n\treg\tinput_not_zero_ff1;\n\treg\tinput_not_zero_ff2;\n\treg\tinput_not_zero_ff3;\n\treg\tinput_not_zero_ff4;\n\treg\tlsb_dffe;\n\treg\t[22:0]\tman_result_ff;\n\treg\tman_round_carry_p0;\n\treg\t[23:0]\tman_round_p;\n\treg\t[23:0]\tman_round_p0;\n\treg\t[24:0]\tman_round_p2;\n\treg\tround_dffe;\n\treg\t[0:0]\tsign_node_ff0;\n\treg\t[0:0]\tsign_node_ff1;\n\treg\t[0:0]\tsign_node_ff2;\n\treg\t[0:0]\tsign_node_ff3;\n\treg\t[0:0]\tsign_node_ff4;\n\treg\t[0:0]\tsign_node_ff5;\n\treg\t[0:0]\tsign_node_ff6;\n\treg\t[0:0]\tsign_node_ff7;\n\treg\t[0:0]\tsign_node_ff8;\n\treg\t[0:0]\tsign_node_ff9;\n\treg\tsticky_dffe;\n\twire  [8:0]   wire_exp_add_adder_result;\n\twire  [9:0]   wire_exp_adj_adder_result;\n\twire  [9:0]   wire_exp_bias_subtr_result;\n\twire  [24:0]   wire_man_round_adder_result;\n\twire  [47:0]   wire_man_product2_mult_result;\n\twire  [9:0]  bias;\n\twire  [7:0]  dataa_exp_all_one;\n\twire  [7:0]  dataa_exp_not_zero;\n\twire  [22:0]  dataa_man_not_zero;\n\twire  [7:0]  datab_exp_all_one;\n\twire  [7:0]  datab_exp_not_zero;\n\twire  [22:0]  datab_man_not_zero;\n\twire  exp_is_inf;\n\twire  exp_is_zero;\n\twire  [9:0]  expmod;\n\twire  [7:0]  inf_num;\n\twire  lsb_bit;\n\twire  [24:0]  man_shift_full;\n\twire  [7:0]  result_exp_all_one;\n\twire  [8:0]  result_exp_not_zero;\n\twire  round_bit;\n\twire  round_carry;\n\twire  [22:0]  sticky_bit;\n\n\t\n\tinitial\n\t\tdataa_exp_all_one_ff_p1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) dataa_exp_all_one_ff_p1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   dataa_exp_all_one_ff_p1 <= dataa_exp_all_one[7];\n\t\n\tinitial\n\t\tdataa_exp_not_zero_ff_p1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) dataa_exp_not_zero_ff_p1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   dataa_exp_not_zero_ff_p1 <= dataa_exp_not_zero[7];\n\t\n\tinitial\n\t\tdataa_man_not_zero_ff_p1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) dataa_man_not_zero_ff_p1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   dataa_man_not_zero_ff_p1 <= dataa_man_not_zero[10];\n\t\n\tinitial\n\t\tdataa_man_not_zero_ff_p2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) dataa_man_not_zero_ff_p2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   dataa_man_not_zero_ff_p2 <= dataa_man_not_zero[22];\n\t\n\tinitial\n\t\tdatab_exp_all_one_ff_p1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) datab_exp_all_one_ff_p1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   datab_exp_all_one_ff_p1 <= datab_exp_all_one[7];\n\t\n\tinitial\n\t\tdatab_exp_not_zero_ff_p1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) datab_exp_not_zero_ff_p1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   datab_exp_not_zero_ff_p1 <= datab_exp_not_zero[7];\n\t\n\tinitial\n\t\tdatab_man_not_zero_ff_p1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) datab_man_not_zero_ff_p1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   datab_man_not_zero_ff_p1 <= datab_man_not_zero[10];\n\t\n\tinitial\n\t\tdatab_man_not_zero_ff_p2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) datab_man_not_zero_ff_p2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   datab_man_not_zero_ff_p2 <= datab_man_not_zero[22];\n\t\n\tinitial\n\t\tdelay_exp2_bias = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) delay_exp2_bias <= 10'b0;\n\t\telse if  (clk_en == 1'b1)   delay_exp2_bias <= delay_exp_bias;\n\t\n\tinitial\n\t\tdelay_exp3_bias = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) delay_exp3_bias <= 10'b0;\n\t\telse if  (clk_en == 1'b1)   delay_exp3_bias <= delay_exp2_bias;\n\t\n\tinitial\n\t\tdelay_exp_bias = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) delay_exp_bias <= 10'b0;\n\t\telse if  (clk_en == 1'b1)   delay_exp_bias <= wire_exp_bias_subtr_result;\n\t\n\tinitial\n\t\tdelay_man_product_msb = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) delay_man_product_msb <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   delay_man_product_msb <= delay_man_product_msb_p0;\n\t\n\tinitial\n\t\tdelay_man_product_msb2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) delay_man_product_msb2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   delay_man_product_msb2 <= delay_man_product_msb;\n\t\n\tinitial\n\t\tdelay_man_product_msb_p0 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) delay_man_product_msb_p0 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   delay_man_product_msb_p0 <= wire_man_product2_mult_result[47];\n\t\n\tinitial\n\t\tdelay_round = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) delay_round <= 24'b0;\n\t\telse if  (clk_en == 1'b1)   delay_round <= ((man_round_p2[23:0] & {24{(~ man_round_p2[24])}}) | (man_round_p2[24:1] & {24{man_round_p2[24]}}));\n\t\n\tinitial\n\t\texp_add_p1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_add_p1 <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_add_p1 <= wire_exp_add_adder_result;\n\t\n\tinitial\n\t\texp_adj_p1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_adj_p1 <= 10'b0;\n\t\telse if  (clk_en == 1'b1)   exp_adj_p1 <= delay_exp3_bias;\n\t\n\tinitial\n\t\texp_adj_p2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_adj_p2 <= 10'b0;\n\t\telse if  (clk_en == 1'b1)   exp_adj_p2 <= wire_exp_adj_adder_result;\n\t\n\tinitial\n\t\texp_bias_p1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_bias_p1 <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_bias_p1 <= exp_add_p1[8:0];\n\t\n\tinitial\n\t\texp_bias_p2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_bias_p2 <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_bias_p2 <= exp_bias_p1;\n\t\n\tinitial\n\t\texp_result_ff = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_result_ff <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   exp_result_ff <= ((inf_num & {8{((exp_is_inf | input_is_infinity_ff4) | input_is_nan_ff4)}}) | ((exp_adj_p2[7:0] & {8{(~ exp_is_zero)}}) & {8{input_not_zero_ff4}}));\n\t\n\tinitial\n\t\tinput_is_infinity_dffe_0 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_infinity_dffe_0 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_infinity_dffe_0 <= ((dataa_exp_all_one_ff_p1 & (~ (dataa_man_not_zero_ff_p1 | dataa_man_not_zero_ff_p2))) | (datab_exp_all_one_ff_p1 & (~ (datab_man_not_zero_ff_p1 | datab_man_not_zero_ff_p2))));\n\t\n\tinitial\n\t\tinput_is_infinity_dffe_1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_infinity_dffe_1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_infinity_dffe_1 <= input_is_infinity_dffe_0;\n\t\n\tinitial\n\t\tinput_is_infinity_dffe_2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_infinity_dffe_2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_infinity_dffe_2 <= input_is_infinity_dffe_1;\n\t\n\tinitial\n\t\tinput_is_infinity_dffe_3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_infinity_dffe_3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_infinity_dffe_3 <= input_is_infinity_dffe_2;\n\t\n\tinitial\n\t\tinput_is_infinity_ff1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_infinity_ff1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_infinity_ff1 <= input_is_infinity_dffe_3;\n\t\n\tinitial\n\t\tinput_is_infinity_ff2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_infinity_ff2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_infinity_ff2 <= input_is_infinity_ff1;\n\t\n\tinitial\n\t\tinput_is_infinity_ff3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_infinity_ff3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_infinity_ff3 <= input_is_infinity_ff2;\n\t\n\tinitial\n\t\tinput_is_infinity_ff4 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_infinity_ff4 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_infinity_ff4 <= input_is_infinity_ff3;\n\t\n\tinitial\n\t\tinput_is_nan_dffe_0 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_nan_dffe_0 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_nan_dffe_0 <= ((dataa_exp_all_one_ff_p1 & (dataa_man_not_zero_ff_p1 | dataa_man_not_zero_ff_p2)) | (datab_exp_all_one_ff_p1 & (datab_man_not_zero_ff_p1 | datab_man_not_zero_ff_p2)));\n\t\n\tinitial\n\t\tinput_is_nan_dffe_1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_nan_dffe_1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_nan_dffe_1 <= input_is_nan_dffe_0;\n\t\n\tinitial\n\t\tinput_is_nan_dffe_2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_nan_dffe_2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_nan_dffe_2 <= input_is_nan_dffe_1;\n\t\n\tinitial\n\t\tinput_is_nan_dffe_3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_nan_dffe_3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_nan_dffe_3 <= input_is_nan_dffe_2;\n\t\n\tinitial\n\t\tinput_is_nan_ff1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_nan_ff1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_nan_ff1 <= input_is_nan_dffe_3;\n\t\n\tinitial\n\t\tinput_is_nan_ff2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_nan_ff2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_nan_ff2 <= input_is_nan_ff1;\n\t\n\tinitial\n\t\tinput_is_nan_ff3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_nan_ff3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_nan_ff3 <= input_is_nan_ff2;\n\t\n\tinitial\n\t\tinput_is_nan_ff4 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_nan_ff4 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_nan_ff4 <= input_is_nan_ff3;\n\t\n\tinitial\n\t\tinput_not_zero_dffe_0 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_not_zero_dffe_0 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_not_zero_dffe_0 <= (dataa_exp_not_zero_ff_p1 & datab_exp_not_zero_ff_p1);\n\t\n\tinitial\n\t\tinput_not_zero_dffe_1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_not_zero_dffe_1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_not_zero_dffe_1 <= input_not_zero_dffe_0;\n\t\n\tinitial\n\t\tinput_not_zero_dffe_2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_not_zero_dffe_2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_not_zero_dffe_2 <= input_not_zero_dffe_1;\n\t\n\tinitial\n\t\tinput_not_zero_dffe_3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_not_zero_dffe_3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_not_zero_dffe_3 <= input_not_zero_dffe_2;\n\t\n\tinitial\n\t\tinput_not_zero_ff1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_not_zero_ff1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_not_zero_ff1 <= input_not_zero_dffe_3;\n\t\n\tinitial\n\t\tinput_not_zero_ff2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_not_zero_ff2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_not_zero_ff2 <= input_not_zero_ff1;\n\t\n\tinitial\n\t\tinput_not_zero_ff3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_not_zero_ff3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_not_zero_ff3 <= input_not_zero_ff2;\n\t\n\tinitial\n\t\tinput_not_zero_ff4 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_not_zero_ff4 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_not_zero_ff4 <= input_not_zero_ff3;\n\t\n\tinitial\n\t\tlsb_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) lsb_dffe <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   lsb_dffe <= lsb_bit;\n\t\n\tinitial\n\t\tman_result_ff = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_result_ff <= 23'b0;\n\t\telse if  (clk_en == 1'b1)   man_result_ff <= {((((((delay_round[22] & input_not_zero_ff4) & (~ input_is_infinity_ff4)) & (~ exp_is_inf)) & (~ exp_is_zero)) | (input_is_infinity_ff4 & (~ input_not_zero_ff4))) | input_is_nan_ff4), (((((delay_round[21:0] & {22{input_not_zero_ff4}}) & {22{(~ input_is_infinity_ff4)}}) & {22{(~ exp_is_inf)}}) & {22{(~ exp_is_zero)}}) & {22{(~ input_is_nan_ff4)}})};\n\t\n\tinitial\n\t\tman_round_carry_p0 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_round_carry_p0 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   man_round_carry_p0 <= round_carry;\n\t\n\tinitial\n\t\tman_round_p = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_round_p <= 24'b0;\n\t\telse if  (clk_en == 1'b1)   man_round_p <= man_shift_full[24:1];\n\t\n\tinitial\n\t\tman_round_p0 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_round_p0 <= 24'b0;\n\t\telse if  (clk_en == 1'b1)   man_round_p0 <= man_round_p;\n\t\n\tinitial\n\t\tman_round_p2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_round_p2 <= 25'b0;\n\t\telse if  (clk_en == 1'b1)   man_round_p2 <= wire_man_round_adder_result;\n\t\n\tinitial\n\t\tround_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) round_dffe <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   round_dffe <= round_bit;\n\t\n\tinitial\n\t\tsign_node_ff0 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_node_ff0 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_node_ff0 <= (dataa[31] ^ datab[31]);\n\t\n\tinitial\n\t\tsign_node_ff1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_node_ff1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_node_ff1 <= sign_node_ff0[0:0];\n\t\n\tinitial\n\t\tsign_node_ff2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_node_ff2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_node_ff2 <= sign_node_ff1[0:0];\n\t\n\tinitial\n\t\tsign_node_ff3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_node_ff3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_node_ff3 <= sign_node_ff2[0:0];\n\t\n\tinitial\n\t\tsign_node_ff4 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_node_ff4 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_node_ff4 <= sign_node_ff3[0:0];\n\t\n\tinitial\n\t\tsign_node_ff5 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_node_ff5 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_node_ff5 <= sign_node_ff4[0:0];\n\t\n\tinitial\n\t\tsign_node_ff6 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_node_ff6 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_node_ff6 <= sign_node_ff5[0:0];\n\t\n\tinitial\n\t\tsign_node_ff7 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_node_ff7 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_node_ff7 <= sign_node_ff6[0:0];\n\t\n\tinitial\n\t\tsign_node_ff8 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_node_ff8 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_node_ff8 <= sign_node_ff7[0:0];\n\t\n\tinitial\n\t\tsign_node_ff9 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_node_ff9 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_node_ff9 <= sign_node_ff8[0:0];\n\t\n\tinitial\n\t\tsticky_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sticky_dffe <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sticky_dffe <= sticky_bit[22];\n\tlpm_add_sub   exp_add_adder\n\t( \n\t.aclr(aclr),\n\t.cin(1'b0),\n\t.clken(clk_en),\n\t.clock(clock),\n\t.cout(),\n\t.dataa({1'b0, dataa[30:23]}),\n\t.datab({1'b0, datab[30:23]}),\n\t.overflow(),\n\t.result(wire_exp_add_adder_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.add_sub(1'b1)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\texp_add_adder.lpm_pipeline = 1,\n\t\texp_add_adder.lpm_width = 9,\n\t\texp_add_adder.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   exp_adj_adder\n\t( \n\t.cin(1'b0),\n\t.cout(),\n\t.dataa(exp_adj_p1),\n\t.datab({expmod[9:0]}),\n\t.overflow(),\n\t.result(wire_exp_adj_adder_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\texp_adj_adder.lpm_pipeline = 0,\n\t\texp_adj_adder.lpm_width = 10,\n\t\texp_adj_adder.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   exp_bias_subtr\n\t( \n\t.cout(),\n\t.dataa({1'b0, exp_bias_p2}),\n\t.datab({bias[9:0]}),\n\t.overflow(),\n\t.result(wire_exp_bias_subtr_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.cin(),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\texp_bias_subtr.lpm_direction = \"SUB\",\n\t\texp_bias_subtr.lpm_pipeline = 0,\n\t\texp_bias_subtr.lpm_representation = \"UNSIGNED\",\n\t\texp_bias_subtr.lpm_width = 10,\n\t\texp_bias_subtr.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   man_round_adder\n\t( \n\t.cout(),\n\t.dataa({1'b0, man_round_p0}),\n\t.datab({{24{1'b0}}, man_round_carry_p0}),\n\t.overflow(),\n\t.result(wire_man_round_adder_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.cin(),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tman_round_adder.lpm_pipeline = 0,\n\t\tman_round_adder.lpm_width = 25,\n\t\tman_round_adder.lpm_type = \"lpm_add_sub\";\n\tlpm_mult   man_product2_mult\n\t( \n\t.aclr(aclr),\n\t.clken(clk_en),\n\t.clock(clock),\n\t.dataa({1'b1, dataa[22:0]}),\n\t.datab({1'b1, datab[22:0]}),\n\t.result(wire_man_product2_mult_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.sum({1{1'b0}})\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tman_product2_mult.lpm_pipeline = 5,\n\t\tman_product2_mult.lpm_representation = \"UNSIGNED\",\n\t\tman_product2_mult.lpm_widtha = 24,\n\t\tman_product2_mult.lpm_widthb = 24,\n\t\tman_product2_mult.lpm_widthp = 48,\n\t\tman_product2_mult.lpm_widths = 1,\n\t\tman_product2_mult.lpm_type = \"lpm_mult\",\n\t\tman_product2_mult.lpm_hint = \"DEDICATED_MULTIPLIER_CIRCUITRY=YES\";\n\tassign\n\t\tbias = {{3{1'b0}}, {7{1'b1}}},\n\t\tdataa_exp_all_one = {(dataa[30] & dataa_exp_all_one[6]), (dataa[29] & dataa_exp_all_one[5]), (dataa[28] & dataa_exp_all_one[4]), (dataa[27] & dataa_exp_all_one[3]), (dataa[26] & dataa_exp_all_one[2]), (dataa[25] & dataa_exp_all_one[1]), (dataa[24] & dataa_exp_all_one[0]), dataa[23]},\n\t\tdataa_exp_not_zero = {(dataa[30] | dataa_exp_not_zero[6]), (dataa[29] | dataa_exp_not_zero[5]), (dataa[28] | dataa_exp_not_zero[4]), (dataa[27] | dataa_exp_not_zero[3]), (dataa[26] | dataa_exp_not_zero[2]), (dataa[25] | dataa_exp_not_zero[1]), (dataa[24] | dataa_exp_not_zero[0]), dataa[23]},\n\t\tdataa_man_not_zero = {(dataa[22] | dataa_man_not_zero[21]), (dataa[21] | dataa_man_not_zero[20]), (dataa[20] | dataa_man_not_zero[19]), (dataa[19] | dataa_man_not_zero[18]), (dataa[18] | dataa_man_not_zero[17]), (dataa[17] | dataa_man_not_zero[16]), (dataa[16] | dataa_man_not_zero[15]), (dataa[15] | dataa_man_not_zero[14]), (dataa[14] | dataa_man_not_zero[13]), (dataa[13] | dataa_man_not_zero[12]), (dataa[12] | dataa_man_not_zero[11]), dataa[11], (dataa[10] | dataa_man_not_zero[9]), (dataa[9] | dataa_man_not_zero[8]), (dataa[8] | dataa_man_not_zero[7]), (dataa[7] | dataa_man_not_zero[6]), (dataa[6] | dataa_man_not_zero[5]), (dataa[5] | dataa_man_not_zero[4]), (dataa[4] | dataa_man_not_zero[3]), (dataa[3] | dataa_man_not_zero[2]), (dataa[2] | dataa_man_not_zero[1]), (dataa[1] | dataa_man_not_zero[0]), dataa[0]},\n\t\tdatab_exp_all_one = {(datab[30] & datab_exp_all_one[6]), (datab[29] & datab_exp_all_one[5]), (datab[28] & datab_exp_all_one[4]), (datab[27] & datab_exp_all_one[3]), (datab[26] & datab_exp_all_one[2]), (datab[25] & datab_exp_all_one[1]), (datab[24] & datab_exp_all_one[0]), datab[23]},\n\t\tdatab_exp_not_zero = {(datab[30] | datab_exp_not_zero[6]), (datab[29] | datab_exp_not_zero[5]), (datab[28] | datab_exp_not_zero[4]), (datab[27] | datab_exp_not_zero[3]), (datab[26] | datab_exp_not_zero[2]), (datab[25] | datab_exp_not_zero[1]), (datab[24] | datab_exp_not_zero[0]), datab[23]},\n\t\tdatab_man_not_zero = {(datab[22] | datab_man_not_zero[21]), (datab[21] | datab_man_not_zero[20]), (datab[20] | datab_man_not_zero[19]), (datab[19] | datab_man_not_zero[18]), (datab[18] | datab_man_not_zero[17]), (datab[17] | datab_man_not_zero[16]), (datab[16] | datab_man_not_zero[15]), (datab[15] | datab_man_not_zero[14]), (datab[14] | datab_man_not_zero[13]), (datab[13] | datab_man_not_zero[12]), (datab[12] | datab_man_not_zero[11]), datab[11], (datab[10] | datab_man_not_zero[9]), (datab[9] | datab_man_not_zero[8]), (datab[8] | datab_man_not_zero[7]), (datab[7] | datab_man_not_zero[6]), (datab[6] | datab_man_not_zero[5]), (datab[5] | datab_man_not_zero[4]), (datab[4] | datab_man_not_zero[3]), (datab[3] | datab_man_not_zero[2]), (datab[2] | datab_man_not_zero[1]), (datab[1] | datab_man_not_zero[0]), datab[0]},\n\t\texp_is_inf = (((~ exp_adj_p2[9]) & exp_adj_p2[8]) | ((~ exp_adj_p2[8]) & result_exp_all_one[7])),\n\t\texp_is_zero = (exp_adj_p2[9] | (~ result_exp_not_zero[8])),\n\t\texpmod = {{8{1'b0}}, (delay_man_product_msb2 & man_round_p2[24]), (delay_man_product_msb2 ^ man_round_p2[24])},\n\t\tinf_num = {8{1'b1}},\n\t\tlsb_bit = man_shift_full[1],\n\t\tman_shift_full = ((wire_man_product2_mult_result[46:22] & {25{(~ wire_man_product2_mult_result[47])}}) | (wire_man_product2_mult_result[47:23] & {25{wire_man_product2_mult_result[47]}})),\n\t\tresult = {sign_node_ff9[0:0], exp_result_ff[7:0], man_result_ff[22:0]},\n\t\tresult_exp_all_one = {(result_exp_all_one[6] & exp_adj_p2[7]), (result_exp_all_one[5] & exp_adj_p2[6]), (result_exp_all_one[4] & exp_adj_p2[5]), (result_exp_all_one[3] & exp_adj_p2[4]), (result_exp_all_one[2] & exp_adj_p2[3]), (result_exp_all_one[1] & exp_adj_p2[2]), (result_exp_all_one[0] & exp_adj_p2[1]), exp_adj_p2[0]},\n\t\tresult_exp_not_zero = {(result_exp_not_zero[7] | exp_adj_p2[8]), (result_exp_not_zero[6] | exp_adj_p2[7]), (result_exp_not_zero[5] | exp_adj_p2[6]), (result_exp_not_zero[4] | exp_adj_p2[5]), (result_exp_not_zero[3] | exp_adj_p2[4]), (result_exp_not_zero[2] | exp_adj_p2[3]), (result_exp_not_zero[1] | exp_adj_p2[2]), (result_exp_not_zero[0] | exp_adj_p2[1]), exp_adj_p2[0]},\n\t\tround_bit = man_shift_full[0],\n\t\tround_carry = (round_dffe & (lsb_dffe | sticky_dffe)),\n\t\tsticky_bit = {(sticky_bit[21] | (wire_man_product2_mult_result[47] & wire_man_product2_mult_result[22])), (sticky_bit[20] | wire_man_product2_mult_result[21]), (sticky_bit[19] | wire_man_product2_mult_result[20]), (sticky_bit[18] | wire_man_product2_mult_result[19]), (sticky_bit[17] | wire_man_product2_mult_result[18]), (sticky_bit[16] | wire_man_product2_mult_result[17]), (sticky_bit[15] | wire_man_product2_mult_result[16]), (sticky_bit[14] | wire_man_product2_mult_result[15]), (sticky_bit[13] | wire_man_product2_mult_result[14]), (sticky_bit[12] | wire_man_product2_mult_result[13]), (sticky_bit[11] | wire_man_product2_mult_result[12]), (sticky_bit[10] | wire_man_product2_mult_result[11]), (sticky_bit[9] | wire_man_product2_mult_result[10]), (sticky_bit[8] | wire_man_product2_mult_result[9]), (sticky_bit[7] | wire_man_product2_mult_result[8]), (sticky_bit[6] | wire_man_product2_mult_result[7]), (sticky_bit[5] | wire_man_product2_mult_result[6]), (sticky_bit[4] | wire_man_product2_mult_result[5]), (sticky_bit[3] | wire_man_product2_mult_result[4]), (sticky_bit[2] | wire_man_product2_mult_result[3]), (sticky_bit[1] | wire_man_product2_mult_result[2]), (sticky_bit[0] | wire_man_product2_mult_result[1]), wire_man_product2_mult_result[0]};\nendmodule \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_qsys_addsub_single_altbarrel_shift_fjg\n\t( \n\taclr,\n\tclk_en,\n\tclock,\n\tdata,\n\tdistance,\n\tresult) ;\n\tinput   aclr;\n\tinput   clk_en;\n\tinput   clock;\n\tinput   [25:0]  data;\n\tinput   [4:0]  distance;\n\toutput   [25:0]  result;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\ttri0   aclr;\n\ttri1   clk_en;\n\ttri0   clock;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\n\treg\t[0:0]\tdir_pipe;\n\treg\t[25:0]\tsbit_piper1d;\n\twire  [5:0]  dir_w;\n\twire  direction_w;\n\twire  [15:0]  pad_w;\n\twire  [155:0]  sbit_w;\n\twire  [4:0]  sel_w;\n\twire  [129:0]  smux_w;\n\n\t\n\tinitial\n\t\tdir_pipe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) dir_pipe <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   dir_pipe <= {dir_w[4]};\n\t\n\tinitial\n\t\tsbit_piper1d = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sbit_piper1d <= 26'b0;\n\t\telse if  (clk_en == 1'b1)   sbit_piper1d <= smux_w[129:104];\n\tassign\n\t\tdir_w = {dir_pipe[0], dir_w[3:0], direction_w},\n\t\tdirection_w = 1'b0,\n\t\tpad_w = {16{1'b0}},\n\t\tresult = sbit_w[155:130],\n\t\tsbit_w = {sbit_piper1d, smux_w[103:0], data},\n\t\tsel_w = {distance[4:0]},\n\t\tsmux_w = {((({26{(sel_w[4] & (~ dir_w[4]))}} & {sbit_w[113:104], pad_w[15:0]}) | ({26{(sel_w[4] & dir_w[4])}} & {pad_w[15:0], sbit_w[129:120]})) | ({26{(~ sel_w[4])}} & sbit_w[129:104])), ((({26{(sel_w[3] & (~ dir_w[3]))}} & {sbit_w[95:78], pad_w[7:0]}) | ({26{(sel_w[3] & dir_w[3])}} & {pad_w[7:0], sbit_w[103:86]})) | ({26{(~ sel_w[3])}} & sbit_w[103:78])), ((({26{(sel_w[2] & (~ dir_w[2]))}} & {sbit_w[73:52], pad_w[3:0]}) | ({26{(sel_w[2] & dir_w[2])}} & {pad_w[3:0], sbit_w[77:56]})) | ({26{(~ sel_w[2])}} & sbit_w[77:52])), ((({26{(sel_w[1] & (~ dir_w[1]))}} & {sbit_w[49:26], pad_w[1:0]}) | ({26{(sel_w[1] & dir_w[1])}} & {pad_w[1:0], sbit_w[51:28]})) | ({26{(~ sel_w[1])}} & sbit_w[51:26])), ((({26{(sel_w[0] & (~ dir_w[0]))}} & {sbit_w[24:0], pad_w[0]}) | ({26{(sel_w[0] & dir_w[0])}} & {pad_w[0], sbit_w[25:1]})) | ({26{(~ sel_w[0])}} & sbit_w[25:0]))};\nendmodule \n\n\n\n\n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_qsys_addsub_single_altbarrel_shift_44e\n\t( \n\tdata,\n\tdistance,\n\tresult) ;\n\tinput   [25:0]  data;\n\tinput   [4:0]  distance;\n\toutput   [25:0]  result;\n\n\twire  [5:0]  dir_w;\n\twire  direction_w;\n\twire  [15:0]  pad_w;\n\twire  [155:0]  sbit_w;\n\twire  [4:0]  sel_w;\n\twire  [129:0]  smux_w;\n\n\tassign\n\t\tdir_w = {dir_w[4:0], direction_w},\n\t\tdirection_w = 1'b1,\n\t\tpad_w = {16{1'b0}},\n\t\tresult = sbit_w[155:130],\n\t\tsbit_w = {smux_w[129:0], data},\n\t\tsel_w = {distance[4:0]},\n\t\tsmux_w = {((({26{(sel_w[4] & (~ dir_w[4]))}} & {sbit_w[113:104], pad_w[15:0]}) | ({26{(sel_w[4] & dir_w[4])}} & {pad_w[15:0], sbit_w[129:120]})) | ({26{(~ sel_w[4])}} & sbit_w[129:104])), ((({26{(sel_w[3] & (~ dir_w[3]))}} & {sbit_w[95:78], pad_w[7:0]}) | ({26{(sel_w[3] & dir_w[3])}} & {pad_w[7:0], sbit_w[103:86]})) | ({26{(~ sel_w[3])}} & sbit_w[103:78])), ((({26{(sel_w[2] & (~ dir_w[2]))}} & {sbit_w[73:52], pad_w[3:0]}) | ({26{(sel_w[2] & dir_w[2])}} & {pad_w[3:0], sbit_w[77:56]})) | ({26{(~ sel_w[2])}} & sbit_w[77:52])), ((({26{(sel_w[1] & (~ dir_w[1]))}} & {sbit_w[49:26], pad_w[1:0]}) | ({26{(sel_w[1] & dir_w[1])}} & {pad_w[1:0], sbit_w[51:28]})) | ({26{(~ sel_w[1])}} & sbit_w[51:26])), ((({26{(sel_w[0] & (~ dir_w[0]))}} & {sbit_w[24:0], pad_w[0]}) | ({26{(sel_w[0] & dir_w[0])}} & {pad_w[0], sbit_w[25:1]})) | ({26{(~ sel_w[0])}} & sbit_w[25:0]))};\nendmodule \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_qsys_addsub_single_altpriority_encoder_i0b\n\t( \n\tdata,\n\tq,\n\tzero) ;\n\tinput   [1:0]  data;\n\toutput   [0:0]  q;\n\toutput   zero;\n\n\n\tassign\n\t\tq = {data[1]},\n\t\tzero = (~ (data[0] | data[1]));\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_qsys_addsub_single_altpriority_encoder_l0b\n\t( \n\tdata,\n\tq,\n\tzero) ;\n\tinput   [3:0]  data;\n\toutput   [1:0]  q;\n\toutput   zero;\n\n\twire  [0:0]   wire_altpriority_encoder13_q;\n\twire  wire_altpriority_encoder13_zero;\n\twire  [0:0]   wire_altpriority_encoder14_q;\n\twire  wire_altpriority_encoder14_zero;\n\n\tfpoint_qsys_addsub_single_altpriority_encoder_i0b   altpriority_encoder13\n\t( \n\t.data(data[1:0]),\n\t.q(wire_altpriority_encoder13_q),\n\t.zero(wire_altpriority_encoder13_zero));\n\tfpoint_qsys_addsub_single_altpriority_encoder_i0b   altpriority_encoder14\n\t( \n\t.data(data[3:2]),\n\t.q(wire_altpriority_encoder14_q),\n\t.zero(wire_altpriority_encoder14_zero));\n\tassign\n\t\tq = {(~ wire_altpriority_encoder14_zero), ((wire_altpriority_encoder14_zero & wire_altpriority_encoder13_q) | ((~ wire_altpriority_encoder14_zero) & wire_altpriority_encoder14_q))},\n\t\tzero = (wire_altpriority_encoder13_zero & wire_altpriority_encoder14_zero);\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_qsys_addsub_single_altpriority_encoder_q0b\n\t( \n\tdata,\n\tq,\n\tzero) ;\n\tinput   [7:0]  data;\n\toutput   [2:0]  q;\n\toutput   zero;\n\n\twire  [1:0]   wire_altpriority_encoder11_q;\n\twire  wire_altpriority_encoder11_zero;\n\twire  [1:0]   wire_altpriority_encoder12_q;\n\twire  wire_altpriority_encoder12_zero;\n\n\tfpoint_qsys_addsub_single_altpriority_encoder_l0b   altpriority_encoder11\n\t( \n\t.data(data[3:0]),\n\t.q(wire_altpriority_encoder11_q),\n\t.zero(wire_altpriority_encoder11_zero));\n\tfpoint_qsys_addsub_single_altpriority_encoder_l0b   altpriority_encoder12\n\t( \n\t.data(data[7:4]),\n\t.q(wire_altpriority_encoder12_q),\n\t.zero(wire_altpriority_encoder12_zero));\n\tassign\n\t\tq = {(~ wire_altpriority_encoder12_zero), (({2{wire_altpriority_encoder12_zero}} & wire_altpriority_encoder11_q) | ({2{(~ wire_altpriority_encoder12_zero)}} & wire_altpriority_encoder12_q))},\n\t\tzero = (wire_altpriority_encoder11_zero & wire_altpriority_encoder12_zero);\nendmodule \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_qsys_addsub_single_altpriority_encoder_iha\n\t( \n\tdata,\n\tq) ;\n\tinput   [1:0]  data;\n\toutput   [0:0]  q;\n\n\n\tassign\n\t\tq = {data[1]};\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_qsys_addsub_single_altpriority_encoder_lha\n\t( \n\tdata,\n\tq) ;\n\tinput   [3:0]  data;\n\toutput   [1:0]  q;\n\n\twire  [0:0]   wire_altpriority_encoder17_q;\n\twire  [0:0]   wire_altpriority_encoder18_q;\n\twire  wire_altpriority_encoder18_zero;\n\n\tfpoint_qsys_addsub_single_altpriority_encoder_iha   altpriority_encoder17\n\t( \n\t.data(data[1:0]),\n\t.q(wire_altpriority_encoder17_q));\n\tfpoint_qsys_addsub_single_altpriority_encoder_i0b   altpriority_encoder18\n\t( \n\t.data(data[3:2]),\n\t.q(wire_altpriority_encoder18_q),\n\t.zero(wire_altpriority_encoder18_zero));\n\tassign\n\t\tq = {(~ wire_altpriority_encoder18_zero), ((wire_altpriority_encoder18_zero & wire_altpriority_encoder17_q) | ((~ wire_altpriority_encoder18_zero) & wire_altpriority_encoder18_q))};\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_qsys_addsub_single_altpriority_encoder_qha\n\t( \n\tdata,\n\tq) ;\n\tinput   [7:0]  data;\n\toutput   [2:0]  q;\n\n\twire  [1:0]   wire_altpriority_encoder15_q;\n\twire  [1:0]   wire_altpriority_encoder16_q;\n\twire  wire_altpriority_encoder16_zero;\n\n\tfpoint_qsys_addsub_single_altpriority_encoder_lha   altpriority_encoder15\n\t( \n\t.data(data[3:0]),\n\t.q(wire_altpriority_encoder15_q));\n\tfpoint_qsys_addsub_single_altpriority_encoder_l0b   altpriority_encoder16\n\t( \n\t.data(data[7:4]),\n\t.q(wire_altpriority_encoder16_q),\n\t.zero(wire_altpriority_encoder16_zero));\n\tassign\n\t\tq = {(~ wire_altpriority_encoder16_zero), (({2{wire_altpriority_encoder16_zero}} & wire_altpriority_encoder15_q) | ({2{(~ wire_altpriority_encoder16_zero)}} & wire_altpriority_encoder16_q))};\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_qsys_addsub_single_altpriority_encoder_aja\n\t( \n\tdata,\n\tq) ;\n\tinput   [15:0]  data;\n\toutput   [3:0]  q;\n\n\twire  [2:0]   wire_altpriority_encoder10_q;\n\twire  wire_altpriority_encoder10_zero;\n\twire  [2:0]   wire_altpriority_encoder9_q;\n\n\tfpoint_qsys_addsub_single_altpriority_encoder_q0b   altpriority_encoder10\n\t( \n\t.data(data[15:8]),\n\t.q(wire_altpriority_encoder10_q),\n\t.zero(wire_altpriority_encoder10_zero));\n\tfpoint_qsys_addsub_single_altpriority_encoder_qha   altpriority_encoder9\n\t( \n\t.data(data[7:0]),\n\t.q(wire_altpriority_encoder9_q));\n\tassign\n\t\tq = {(~ wire_altpriority_encoder10_zero), (({3{wire_altpriority_encoder10_zero}} & wire_altpriority_encoder9_q) | ({3{(~ wire_altpriority_encoder10_zero)}} & wire_altpriority_encoder10_q))};\nendmodule \n\n\n\n\n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_qsys_addsub_single_altpriority_encoder_a2b\n\t( \n\tdata,\n\tq,\n\tzero) ;\n\tinput   [15:0]  data;\n\toutput   [3:0]  q;\n\toutput   zero;\n\n\twire  [2:0]   wire_altpriority_encoder19_q;\n\twire  wire_altpriority_encoder19_zero;\n\twire  [2:0]   wire_altpriority_encoder20_q;\n\twire  wire_altpriority_encoder20_zero;\n\n\tfpoint_qsys_addsub_single_altpriority_encoder_q0b   altpriority_encoder19\n\t( \n\t.data(data[7:0]),\n\t.q(wire_altpriority_encoder19_q),\n\t.zero(wire_altpriority_encoder19_zero));\n\tfpoint_qsys_addsub_single_altpriority_encoder_q0b   altpriority_encoder20\n\t( \n\t.data(data[15:8]),\n\t.q(wire_altpriority_encoder20_q),\n\t.zero(wire_altpriority_encoder20_zero));\n\tassign\n\t\tq = {(~ wire_altpriority_encoder20_zero), (({3{wire_altpriority_encoder20_zero}} & wire_altpriority_encoder19_q) | ({3{(~ wire_altpriority_encoder20_zero)}} & wire_altpriority_encoder20_q))},\n\t\tzero = (wire_altpriority_encoder19_zero & wire_altpriority_encoder20_zero);\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_qsys_addsub_single_altpriority_encoder_9u8\n\t( \n\tdata,\n\tq) ;\n\tinput   [31:0]  data;\n\toutput   [4:0]  q;\n\n\twire  [3:0]   wire_altpriority_encoder7_q;\n\twire  [3:0]   wire_altpriority_encoder8_q;\n\twire  wire_altpriority_encoder8_zero;\n\n\tfpoint_qsys_addsub_single_altpriority_encoder_aja   altpriority_encoder7\n\t( \n\t.data(data[15:0]),\n\t.q(wire_altpriority_encoder7_q));\n\tfpoint_qsys_addsub_single_altpriority_encoder_a2b   altpriority_encoder8\n\t( \n\t.data(data[31:16]),\n\t.q(wire_altpriority_encoder8_q),\n\t.zero(wire_altpriority_encoder8_zero));\n\tassign\n\t\tq = {(~ wire_altpriority_encoder8_zero), (({4{wire_altpriority_encoder8_zero}} & wire_altpriority_encoder7_q) | ({4{(~ wire_altpriority_encoder8_zero)}} & wire_altpriority_encoder8_q))};\nendmodule \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_qsys_addsub_single_altpriority_encoder_64b\n\t( \n\tdata,\n\tq,\n\tzero) ;\n\tinput   [1:0]  data;\n\toutput   [0:0]  q;\n\toutput   zero;\n\n\n\tassign\n\t\tq = {(~ data[0])},\n\t\tzero = (~ (data[0] | data[1]));\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_qsys_addsub_single_altpriority_encoder_94b\n\t( \n\tdata,\n\tq,\n\tzero) ;\n\tinput   [3:0]  data;\n\toutput   [1:0]  q;\n\toutput   zero;\n\n\twire  [0:0]   wire_altpriority_encoder27_q;\n\twire  wire_altpriority_encoder27_zero;\n\twire  [0:0]   wire_altpriority_encoder28_q;\n\twire  wire_altpriority_encoder28_zero;\n\n\tfpoint_qsys_addsub_single_altpriority_encoder_64b   altpriority_encoder27\n\t( \n\t.data(data[1:0]),\n\t.q(wire_altpriority_encoder27_q),\n\t.zero(wire_altpriority_encoder27_zero));\n\tfpoint_qsys_addsub_single_altpriority_encoder_64b   altpriority_encoder28\n\t( \n\t.data(data[3:2]),\n\t.q(wire_altpriority_encoder28_q),\n\t.zero(wire_altpriority_encoder28_zero));\n\tassign\n\t\tq = {wire_altpriority_encoder27_zero, ((wire_altpriority_encoder27_zero & wire_altpriority_encoder28_q) | ((~ wire_altpriority_encoder27_zero) & wire_altpriority_encoder27_q))},\n\t\tzero = (wire_altpriority_encoder27_zero & wire_altpriority_encoder28_zero);\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_qsys_addsub_single_altpriority_encoder_e4b\n\t( \n\tdata,\n\tq,\n\tzero) ;\n\tinput   [7:0]  data;\n\toutput   [2:0]  q;\n\toutput   zero;\n\n\twire  [1:0]   wire_altpriority_encoder25_q;\n\twire  wire_altpriority_encoder25_zero;\n\twire  [1:0]   wire_altpriority_encoder26_q;\n\twire  wire_altpriority_encoder26_zero;\n\n\tfpoint_qsys_addsub_single_altpriority_encoder_94b   altpriority_encoder25\n\t( \n\t.data(data[3:0]),\n\t.q(wire_altpriority_encoder25_q),\n\t.zero(wire_altpriority_encoder25_zero));\n\tfpoint_qsys_addsub_single_altpriority_encoder_94b   altpriority_encoder26\n\t( \n\t.data(data[7:4]),\n\t.q(wire_altpriority_encoder26_q),\n\t.zero(wire_altpriority_encoder26_zero));\n\tassign\n\t\tq = {wire_altpriority_encoder25_zero, (({2{wire_altpriority_encoder25_zero}} & wire_altpriority_encoder26_q) | ({2{(~ wire_altpriority_encoder25_zero)}} & wire_altpriority_encoder25_q))},\n\t\tzero = (wire_altpriority_encoder25_zero & wire_altpriority_encoder26_zero);\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_qsys_addsub_single_altpriority_encoder_u5b\n\t( \n\tdata,\n\tq,\n\tzero) ;\n\tinput   [15:0]  data;\n\toutput   [3:0]  q;\n\toutput   zero;\n\n\twire  [2:0]   wire_altpriority_encoder23_q;\n\twire  wire_altpriority_encoder23_zero;\n\twire  [2:0]   wire_altpriority_encoder24_q;\n\twire  wire_altpriority_encoder24_zero;\n\n\tfpoint_qsys_addsub_single_altpriority_encoder_e4b   altpriority_encoder23\n\t( \n\t.data(data[7:0]),\n\t.q(wire_altpriority_encoder23_q),\n\t.zero(wire_altpriority_encoder23_zero));\n\tfpoint_qsys_addsub_single_altpriority_encoder_e4b   altpriority_encoder24\n\t( \n\t.data(data[15:8]),\n\t.q(wire_altpriority_encoder24_q),\n\t.zero(wire_altpriority_encoder24_zero));\n\tassign\n\t\tq = {wire_altpriority_encoder23_zero, (({3{wire_altpriority_encoder23_zero}} & wire_altpriority_encoder24_q) | ({3{(~ wire_altpriority_encoder23_zero)}} & wire_altpriority_encoder23_q))},\n\t\tzero = (wire_altpriority_encoder23_zero & wire_altpriority_encoder24_zero);\nendmodule \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_qsys_addsub_single_altpriority_encoder_6la\n\t( \n\tdata,\n\tq) ;\n\tinput   [1:0]  data;\n\toutput   [0:0]  q;\n\n\n\tassign\n\t\tq = {(~ data[0])};\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_qsys_addsub_single_altpriority_encoder_9la\n\t( \n\tdata,\n\tq) ;\n\tinput   [3:0]  data;\n\toutput   [1:0]  q;\n\n\twire  [0:0]   wire_altpriority_encoder33_q;\n\twire  wire_altpriority_encoder33_zero;\n\twire  [0:0]   wire_altpriority_encoder34_q;\n\n\tfpoint_qsys_addsub_single_altpriority_encoder_64b   altpriority_encoder33\n\t( \n\t.data(data[1:0]),\n\t.q(wire_altpriority_encoder33_q),\n\t.zero(wire_altpriority_encoder33_zero));\n\tfpoint_qsys_addsub_single_altpriority_encoder_6la   altpriority_encoder34\n\t( \n\t.data(data[3:2]),\n\t.q(wire_altpriority_encoder34_q));\n\tassign\n\t\tq = {wire_altpriority_encoder33_zero, ((wire_altpriority_encoder33_zero & wire_altpriority_encoder34_q) | ((~ wire_altpriority_encoder33_zero) & wire_altpriority_encoder33_q))};\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_qsys_addsub_single_altpriority_encoder_ela\n\t( \n\tdata,\n\tq) ;\n\tinput   [7:0]  data;\n\toutput   [2:0]  q;\n\n\twire  [1:0]   wire_altpriority_encoder31_q;\n\twire  wire_altpriority_encoder31_zero;\n\twire  [1:0]   wire_altpriority_encoder32_q;\n\n\tfpoint_qsys_addsub_single_altpriority_encoder_94b   altpriority_encoder31\n\t( \n\t.data(data[3:0]),\n\t.q(wire_altpriority_encoder31_q),\n\t.zero(wire_altpriority_encoder31_zero));\n\tfpoint_qsys_addsub_single_altpriority_encoder_9la   altpriority_encoder32\n\t( \n\t.data(data[7:4]),\n\t.q(wire_altpriority_encoder32_q));\n\tassign\n\t\tq = {wire_altpriority_encoder31_zero, (({2{wire_altpriority_encoder31_zero}} & wire_altpriority_encoder32_q) | ({2{(~ wire_altpriority_encoder31_zero)}} & wire_altpriority_encoder31_q))};\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_qsys_addsub_single_altpriority_encoder_uma\n\t( \n\tdata,\n\tq) ;\n\tinput   [15:0]  data;\n\toutput   [3:0]  q;\n\n\twire  [2:0]   wire_altpriority_encoder29_q;\n\twire  wire_altpriority_encoder29_zero;\n\twire  [2:0]   wire_altpriority_encoder30_q;\n\n\tfpoint_qsys_addsub_single_altpriority_encoder_e4b   altpriority_encoder29\n\t( \n\t.data(data[7:0]),\n\t.q(wire_altpriority_encoder29_q),\n\t.zero(wire_altpriority_encoder29_zero));\n\tfpoint_qsys_addsub_single_altpriority_encoder_ela   altpriority_encoder30\n\t( \n\t.data(data[15:8]),\n\t.q(wire_altpriority_encoder30_q));\n\tassign\n\t\tq = {wire_altpriority_encoder29_zero, (({3{wire_altpriority_encoder29_zero}} & wire_altpriority_encoder30_q) | ({3{(~ wire_altpriority_encoder29_zero)}} & wire_altpriority_encoder29_q))};\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_qsys_addsub_single_altpriority_encoder_tma\n\t( \n\tdata,\n\tq) ;\n\tinput   [31:0]  data;\n\toutput   [4:0]  q;\n\n\twire  [3:0]   wire_altpriority_encoder21_q;\n\twire  wire_altpriority_encoder21_zero;\n\twire  [3:0]   wire_altpriority_encoder22_q;\n\n\tfpoint_qsys_addsub_single_altpriority_encoder_u5b   altpriority_encoder21\n\t( \n\t.data(data[15:0]),\n\t.q(wire_altpriority_encoder21_q),\n\t.zero(wire_altpriority_encoder21_zero));\n\tfpoint_qsys_addsub_single_altpriority_encoder_uma   altpriority_encoder22\n\t( \n\t.data(data[31:16]),\n\t.q(wire_altpriority_encoder22_q));\n\tassign\n\t\tq = {wire_altpriority_encoder21_zero, (({4{wire_altpriority_encoder21_zero}} & wire_altpriority_encoder22_q) | ({4{(~ wire_altpriority_encoder21_zero)}} & wire_altpriority_encoder21_q))};\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_qsys_addsub_single\n\t( \n\taclr,\n\tadd_sub,\n\tclk_en,\n\tclock,\n\tdataa,\n\tdatab,\n\tresult) ;\n\tinput   aclr;\n\tinput   add_sub;\n\tinput   clk_en;\n\tinput   clock;\n\tinput   [31:0]  dataa;\n\tinput   [31:0]  datab;\n\toutput   [31:0]  result;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\ttri0   aclr;\n\ttri1   add_sub;\n\ttri1   clk_en;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\n\twire  [25:0]   wire_lbarrel_shift_result;\n\twire  [25:0]   wire_rbarrel_shift_result;\n\twire  [4:0]   wire_leading_zeroes_cnt_q;\n\twire  [4:0]   wire_trailing_zeros_cnt_q;\n\treg\tadd_sub_dffe1;\n\treg\tadd_sub_dffe12;\n\treg\t[8:0]\taligned_dataa_exp_dffe12;\n\treg\t[23:0]\taligned_dataa_man_dffe12;\n\treg\taligned_dataa_sign_dffe12;\n\treg\t[8:0]\taligned_datab_exp_dffe12;\n\treg\t[23:0]\taligned_datab_man_dffe12;\n\treg\taligned_datab_sign_dffe12;\n\treg\tboth_inputs_are_infinite_dffe1;\n\treg\t[7:0]\tdata_exp_dffe1;\n\treg\t[25:0]\tdataa_man_dffe1;\n\treg\tdataa_sign_dffe1;\n\treg\t[25:0]\tdatab_man_dffe1;\n\treg\tdatab_sign_dffe1;\n\treg\tdenormal_res_dffe3;\n\treg\tdenormal_res_dffe4;\n\treg\t[1:0]\texp_adj_dffe21;\n\treg\t[7:0]\texp_out_dffe5;\n\treg\t[7:0]\texp_res_dffe2;\n\treg\t[7:0]\texp_res_dffe21;\n\treg\t[7:0]\texp_res_dffe3;\n\treg\t[7:0]\texp_res_dffe4;\n\treg\tinfinite_output_sign_dffe1;\n\treg\tinfinite_output_sign_dffe2;\n\treg\tinfinite_output_sign_dffe21;\n\treg\tinfinite_output_sign_dffe3;\n\treg\tinfinite_output_sign_dffe31;\n\treg\tinfinite_output_sign_dffe4;\n\treg\tinfinite_res_dffe3;\n\treg\tinfinite_res_dffe4;\n\treg\tinfinity_magnitude_sub_dffe2;\n\treg\tinfinity_magnitude_sub_dffe21;\n\treg\tinfinity_magnitude_sub_dffe3;\n\treg\tinfinity_magnitude_sub_dffe31;\n\treg\tinfinity_magnitude_sub_dffe4;\n\treg\tinput_dataa_infinite_dffe12;\n\treg\tinput_dataa_nan_dffe12;\n\treg\tinput_datab_infinite_dffe12;\n\treg\tinput_datab_nan_dffe12;\n\treg\tinput_is_infinite_dffe1;\n\treg\tinput_is_infinite_dffe2;\n\treg\tinput_is_infinite_dffe21;\n\treg\tinput_is_infinite_dffe3;\n\treg\tinput_is_infinite_dffe31;\n\treg\tinput_is_infinite_dffe4;\n\treg\tinput_is_nan_dffe1;\n\treg\tinput_is_nan_dffe2;\n\treg\tinput_is_nan_dffe21;\n\treg\tinput_is_nan_dffe3;\n\treg\tinput_is_nan_dffe31;\n\treg\tinput_is_nan_dffe4;\n\treg\t[25:0]\tman_add_sub_res_mag_dffe21;\n\treg\tman_add_sub_res_sign_dffe21;\n\treg\t[25:0]\tman_dffe31;\n\treg\t[4:0]\tman_leading_zeros_dffe31;\n\treg\t[22:0]\tman_out_dffe5;\n\treg\t[22:0]\tman_res_dffe4;\n\treg\tman_res_is_not_zero_dffe3;\n\treg\tman_res_is_not_zero_dffe31;\n\treg\tman_res_is_not_zero_dffe4;\n\treg\tneed_complement_dffe2;\n\treg\tround_bit_dffe21;\n\treg\tround_bit_dffe3;\n\treg\tround_bit_dffe31;\n\treg\trounded_res_infinity_dffe4;\n\treg\tsign_dffe31;\n\treg\tsign_out_dffe5;\n\treg\tsign_res_dffe3;\n\treg\tsign_res_dffe4;\n\treg\tsticky_bit_dffe1;\n\treg\tsticky_bit_dffe2;\n\treg\tsticky_bit_dffe21;\n\treg\tsticky_bit_dffe3;\n\treg\tsticky_bit_dffe31;\n\treg\tzero_man_sign_dffe2;\n\treg\tzero_man_sign_dffe21;\n\twire  [8:0]   wire_add_sub1_result;\n\twire  [8:0]   wire_add_sub2_result;\n\twire  [5:0]   wire_add_sub3_result;\n\twire  [8:0]   wire_add_sub4_result;\n\twire  [8:0]   wire_add_sub5_result;\n\twire  [8:0]   wire_add_sub6_result;\n\twire  wire_man_2comp_res_lower_cout;\n\twire  [13:0]   wire_man_2comp_res_lower_result;\n\twire  [13:0]   wire_man_2comp_res_upper0_result;\n\twire  [13:0]   wire_man_2comp_res_upper1_result;\n\twire  wire_man_add_sub_lower_cout;\n\twire  [13:0]   wire_man_add_sub_lower_result;\n\twire  [13:0]   wire_man_add_sub_upper0_result;\n\twire  [13:0]   wire_man_add_sub_upper1_result;\n\twire  wire_man_res_rounding_add_sub_lower_cout;\n\twire  [12:0]   wire_man_res_rounding_add_sub_lower_result;\n\twire  [12:0]   wire_man_res_rounding_add_sub_upper1_result;\n\twire  wire_trailing_zeros_limit_comparator_agb;\n\twire  add_sub_dffe11_wi;\n\twire  add_sub_dffe11_wo;\n\twire  add_sub_dffe12_wi;\n\twire  add_sub_dffe12_wo;\n\twire  add_sub_dffe13_wi;\n\twire  add_sub_dffe13_wo;\n\twire  add_sub_dffe14_wi;\n\twire  add_sub_dffe14_wo;\n\twire  add_sub_dffe15_wi;\n\twire  add_sub_dffe15_wo;\n\twire  add_sub_dffe1_wi;\n\twire  add_sub_dffe1_wo;\n\twire  add_sub_dffe25_wi;\n\twire  add_sub_dffe25_wo;\n\twire  add_sub_w2;\n\twire  [12:0]  adder_upper_w;\n\twire  [8:0]  aligned_dataa_exp_dffe12_wi;\n\twire  [8:0]  aligned_dataa_exp_dffe12_wo;\n\twire  [8:0]  aligned_dataa_exp_dffe13_wi;\n\twire  [8:0]  aligned_dataa_exp_dffe13_wo;\n\twire  [8:0]  aligned_dataa_exp_dffe14_wi;\n\twire  [8:0]  aligned_dataa_exp_dffe14_wo;\n\twire  [8:0]  aligned_dataa_exp_dffe15_wi;\n\twire  [8:0]  aligned_dataa_exp_dffe15_wo;\n\twire  [8:0]  aligned_dataa_exp_w;\n\twire  [23:0]  aligned_dataa_man_dffe12_wi;\n\twire  [23:0]  aligned_dataa_man_dffe12_wo;\n\twire  [23:0]  aligned_dataa_man_dffe13_wi;\n\twire  [23:0]  aligned_dataa_man_dffe13_wo;\n\twire  [23:0]  aligned_dataa_man_dffe14_wi;\n\twire  [23:0]  aligned_dataa_man_dffe14_wo;\n\twire  [25:0]  aligned_dataa_man_dffe15_w;\n\twire  [23:0]  aligned_dataa_man_dffe15_wi;\n\twire  [23:0]  aligned_dataa_man_dffe15_wo;\n\twire  [25:0]  aligned_dataa_man_w;\n\twire  aligned_dataa_sign_dffe12_wi;\n\twire  aligned_dataa_sign_dffe12_wo;\n\twire  aligned_dataa_sign_dffe13_wi;\n\twire  aligned_dataa_sign_dffe13_wo;\n\twire  aligned_dataa_sign_dffe14_wi;\n\twire  aligned_dataa_sign_dffe14_wo;\n\twire  aligned_dataa_sign_dffe15_wi;\n\twire  aligned_dataa_sign_dffe15_wo;\n\twire  aligned_dataa_sign_w;\n\twire  [8:0]  aligned_datab_exp_dffe12_wi;\n\twire  [8:0]  aligned_datab_exp_dffe12_wo;\n\twire  [8:0]  aligned_datab_exp_dffe13_wi;\n\twire  [8:0]  aligned_datab_exp_dffe13_wo;\n\twire  [8:0]  aligned_datab_exp_dffe14_wi;\n\twire  [8:0]  aligned_datab_exp_dffe14_wo;\n\twire  [8:0]  aligned_datab_exp_dffe15_wi;\n\twire  [8:0]  aligned_datab_exp_dffe15_wo;\n\twire  [8:0]  aligned_datab_exp_w;\n\twire  [23:0]  aligned_datab_man_dffe12_wi;\n\twire  [23:0]  aligned_datab_man_dffe12_wo;\n\twire  [23:0]  aligned_datab_man_dffe13_wi;\n\twire  [23:0]  aligned_datab_man_dffe13_wo;\n\twire  [23:0]  aligned_datab_man_dffe14_wi;\n\twire  [23:0]  aligned_datab_man_dffe14_wo;\n\twire  [25:0]  aligned_datab_man_dffe15_w;\n\twire  [23:0]  aligned_datab_man_dffe15_wi;\n\twire  [23:0]  aligned_datab_man_dffe15_wo;\n\twire  [25:0]  aligned_datab_man_w;\n\twire  aligned_datab_sign_dffe12_wi;\n\twire  aligned_datab_sign_dffe12_wo;\n\twire  aligned_datab_sign_dffe13_wi;\n\twire  aligned_datab_sign_dffe13_wo;\n\twire  aligned_datab_sign_dffe14_wi;\n\twire  aligned_datab_sign_dffe14_wo;\n\twire  aligned_datab_sign_dffe15_wi;\n\twire  aligned_datab_sign_dffe15_wo;\n\twire  aligned_datab_sign_w;\n\twire  borrow_w;\n\twire  both_inputs_are_infinite_dffe1_wi;\n\twire  both_inputs_are_infinite_dffe1_wo;\n\twire  both_inputs_are_infinite_dffe25_wi;\n\twire  both_inputs_are_infinite_dffe25_wo;\n\twire  [7:0]  data_exp_dffe1_wi;\n\twire  [7:0]  data_exp_dffe1_wo;\n\twire  [31:0]  dataa_dffe11_wi;\n\twire  [31:0]  dataa_dffe11_wo;\n\twire  [25:0]  dataa_man_dffe1_wi;\n\twire  [25:0]  dataa_man_dffe1_wo;\n\twire  dataa_sign_dffe1_wi;\n\twire  dataa_sign_dffe1_wo;\n\twire  dataa_sign_dffe25_wi;\n\twire  dataa_sign_dffe25_wo;\n\twire  [31:0]  datab_dffe11_wi;\n\twire  [31:0]  datab_dffe11_wo;\n\twire  [25:0]  datab_man_dffe1_wi;\n\twire  [25:0]  datab_man_dffe1_wo;\n\twire  datab_sign_dffe1_wi;\n\twire  datab_sign_dffe1_wo;\n\twire  denormal_flag_w;\n\twire  denormal_res_dffe32_wi;\n\twire  denormal_res_dffe32_wo;\n\twire  denormal_res_dffe33_wi;\n\twire  denormal_res_dffe33_wo;\n\twire  denormal_res_dffe3_wi;\n\twire  denormal_res_dffe3_wo;\n\twire  denormal_res_dffe41_wi;\n\twire  denormal_res_dffe41_wo;\n\twire  denormal_res_dffe42_wi;\n\twire  denormal_res_dffe42_wo;\n\twire  denormal_res_dffe4_wi;\n\twire  denormal_res_dffe4_wo;\n\twire  denormal_result_w;\n\twire  [7:0]  exp_a_all_one_w;\n\twire  [7:0]  exp_a_not_zero_w;\n\twire  [6:0]  exp_adj_0pads;\n\twire  [1:0]  exp_adj_dffe21_wi;\n\twire  [1:0]  exp_adj_dffe21_wo;\n\twire  [1:0]  exp_adj_dffe23_wi;\n\twire  [1:0]  exp_adj_dffe23_wo;\n\twire  [1:0]  exp_adj_dffe26_wi;\n\twire  [1:0]  exp_adj_dffe26_wo;\n\twire  [1:0]  exp_adjust_by_add1;\n\twire  [1:0]  exp_adjust_by_add2;\n\twire  [8:0]  exp_adjustment2_add_sub_dataa_w;\n\twire  [8:0]  exp_adjustment2_add_sub_datab_w;\n\twire  [8:0]  exp_adjustment2_add_sub_w;\n\twire  [8:0]  exp_adjustment_add_sub_dataa_w;\n\twire  [8:0]  exp_adjustment_add_sub_datab_w;\n\twire  [8:0]  exp_adjustment_add_sub_w;\n\twire  [7:0]  exp_all_ones_w;\n\twire  [7:0]  exp_all_zeros_w;\n\twire  exp_amb_mux_dffe13_wi;\n\twire  exp_amb_mux_dffe13_wo;\n\twire  exp_amb_mux_dffe14_wi;\n\twire  exp_amb_mux_dffe14_wo;\n\twire  exp_amb_mux_dffe15_wi;\n\twire  exp_amb_mux_dffe15_wo;\n\twire  exp_amb_mux_w;\n\twire  [8:0]  exp_amb_w;\n\twire  [7:0]  exp_b_all_one_w;\n\twire  [7:0]  exp_b_not_zero_w;\n\twire  [8:0]  exp_bma_w;\n\twire  [2:0]  exp_diff_abs_exceed_max_w;\n\twire  [4:0]  exp_diff_abs_max_w;\n\twire  [7:0]  exp_diff_abs_w;\n\twire  [7:0]  exp_intermediate_res_dffe41_wi;\n\twire  [7:0]  exp_intermediate_res_dffe41_wo;\n\twire  [7:0]  exp_intermediate_res_dffe42_wi;\n\twire  [7:0]  exp_intermediate_res_dffe42_wo;\n\twire  [7:0]  exp_intermediate_res_w;\n\twire  [7:0]  exp_out_dffe5_wi;\n\twire  [7:0]  exp_out_dffe5_wo;\n\twire  [7:0]  exp_res_dffe21_wi;\n\twire  [7:0]  exp_res_dffe21_wo;\n\twire  [7:0]  exp_res_dffe22_wi;\n\twire  [7:0]  exp_res_dffe22_wo;\n\twire  [7:0]  exp_res_dffe23_wi;\n\twire  [7:0]  exp_res_dffe23_wo;\n\twire  [7:0]  exp_res_dffe25_wi;\n\twire  [7:0]  exp_res_dffe25_wo;\n\twire  [7:0]  exp_res_dffe26_wi;\n\twire  [7:0]  exp_res_dffe26_wo;\n\twire  [7:0]  exp_res_dffe27_wi;\n\twire  [7:0]  exp_res_dffe27_wo;\n\twire  [7:0]  exp_res_dffe2_wi;\n\twire  [7:0]  exp_res_dffe2_wo;\n\twire  [7:0]  exp_res_dffe32_wi;\n\twire  [7:0]  exp_res_dffe32_wo;\n\twire  [7:0]  exp_res_dffe33_wi;\n\twire  [7:0]  exp_res_dffe33_wo;\n\twire  [7:0]  exp_res_dffe3_wi;\n\twire  [7:0]  exp_res_dffe3_wo;\n\twire  [7:0]  exp_res_dffe4_wi;\n\twire  [7:0]  exp_res_dffe4_wo;\n\twire  [7:0]  exp_res_max_w;\n\twire  [8:0]  exp_res_not_zero_w;\n\twire  [8:0]  exp_res_rounding_adder_dataa_w;\n\twire  [8:0]  exp_res_rounding_adder_w;\n\twire  exp_rounded_res_infinity_w;\n\twire  [7:0]  exp_rounded_res_max_w;\n\twire  [7:0]  exp_rounded_res_w;\n\twire  [8:0]  exp_rounding_adjustment_w;\n\twire  [8:0]  exp_value;\n\twire  force_infinity_w;\n\twire  force_nan_w;\n\twire  force_zero_w;\n\twire  guard_bit_dffe3_wo;\n\twire  infinite_output_sign_dffe1_wi;\n\twire  infinite_output_sign_dffe1_wo;\n\twire  infinite_output_sign_dffe21_wi;\n\twire  infinite_output_sign_dffe21_wo;\n\twire  infinite_output_sign_dffe22_wi;\n\twire  infinite_output_sign_dffe22_wo;\n\twire  infinite_output_sign_dffe23_wi;\n\twire  infinite_output_sign_dffe23_wo;\n\twire  infinite_output_sign_dffe25_wi;\n\twire  infinite_output_sign_dffe25_wo;\n\twire  infinite_output_sign_dffe26_wi;\n\twire  infinite_output_sign_dffe26_wo;\n\twire  infinite_output_sign_dffe27_wi;\n\twire  infinite_output_sign_dffe27_wo;\n\twire  infinite_output_sign_dffe2_wi;\n\twire  infinite_output_sign_dffe2_wo;\n\twire  infinite_output_sign_dffe31_wi;\n\twire  infinite_output_sign_dffe31_wo;\n\twire  infinite_output_sign_dffe32_wi;\n\twire  infinite_output_sign_dffe32_wo;\n\twire  infinite_output_sign_dffe33_wi;\n\twire  infinite_output_sign_dffe33_wo;\n\twire  infinite_output_sign_dffe3_wi;\n\twire  infinite_output_sign_dffe3_wo;\n\twire  infinite_output_sign_dffe41_wi;\n\twire  infinite_output_sign_dffe41_wo;\n\twire  infinite_output_sign_dffe42_wi;\n\twire  infinite_output_sign_dffe42_wo;\n\twire  infinite_output_sign_dffe4_wi;\n\twire  infinite_output_sign_dffe4_wo;\n\twire  infinite_res_dff32_wi;\n\twire  infinite_res_dff32_wo;\n\twire  infinite_res_dff33_wi;\n\twire  infinite_res_dff33_wo;\n\twire  infinite_res_dffe3_wi;\n\twire  infinite_res_dffe3_wo;\n\twire  infinite_res_dffe41_wi;\n\twire  infinite_res_dffe41_wo;\n\twire  infinite_res_dffe42_wi;\n\twire  infinite_res_dffe42_wo;\n\twire  infinite_res_dffe4_wi;\n\twire  infinite_res_dffe4_wo;\n\twire  infinity_magnitude_sub_dffe21_wi;\n\twire  infinity_magnitude_sub_dffe21_wo;\n\twire  infinity_magnitude_sub_dffe22_wi;\n\twire  infinity_magnitude_sub_dffe22_wo;\n\twire  infinity_magnitude_sub_dffe23_wi;\n\twire  infinity_magnitude_sub_dffe23_wo;\n\twire  infinity_magnitude_sub_dffe26_wi;\n\twire  infinity_magnitude_sub_dffe26_wo;\n\twire  infinity_magnitude_sub_dffe27_wi;\n\twire  infinity_magnitude_sub_dffe27_wo;\n\twire  infinity_magnitude_sub_dffe2_wi;\n\twire  infinity_magnitude_sub_dffe2_wo;\n\twire  infinity_magnitude_sub_dffe31_wi;\n\twire  infinity_magnitude_sub_dffe31_wo;\n\twire  infinity_magnitude_sub_dffe32_wi;\n\twire  infinity_magnitude_sub_dffe32_wo;\n\twire  infinity_magnitude_sub_dffe33_wi;\n\twire  infinity_magnitude_sub_dffe33_wo;\n\twire  infinity_magnitude_sub_dffe3_wi;\n\twire  infinity_magnitude_sub_dffe3_wo;\n\twire  infinity_magnitude_sub_dffe41_wi;\n\twire  infinity_magnitude_sub_dffe41_wo;\n\twire  infinity_magnitude_sub_dffe42_wi;\n\twire  infinity_magnitude_sub_dffe42_wo;\n\twire  infinity_magnitude_sub_dffe4_wi;\n\twire  infinity_magnitude_sub_dffe4_wo;\n\twire  input_dataa_denormal_dffe11_wi;\n\twire  input_dataa_denormal_dffe11_wo;\n\twire  input_dataa_denormal_w;\n\twire  input_dataa_infinite_dffe11_wi;\n\twire  input_dataa_infinite_dffe11_wo;\n\twire  input_dataa_infinite_dffe12_wi;\n\twire  input_dataa_infinite_dffe12_wo;\n\twire  input_dataa_infinite_dffe13_wi;\n\twire  input_dataa_infinite_dffe13_wo;\n\twire  input_dataa_infinite_dffe14_wi;\n\twire  input_dataa_infinite_dffe14_wo;\n\twire  input_dataa_infinite_dffe15_wi;\n\twire  input_dataa_infinite_dffe15_wo;\n\twire  input_dataa_infinite_w;\n\twire  input_dataa_nan_dffe11_wi;\n\twire  input_dataa_nan_dffe11_wo;\n\twire  input_dataa_nan_dffe12_wi;\n\twire  input_dataa_nan_dffe12_wo;\n\twire  input_dataa_nan_w;\n\twire  input_dataa_zero_dffe11_wi;\n\twire  input_dataa_zero_dffe11_wo;\n\twire  input_dataa_zero_w;\n\twire  input_datab_denormal_dffe11_wi;\n\twire  input_datab_denormal_dffe11_wo;\n\twire  input_datab_denormal_w;\n\twire  input_datab_infinite_dffe11_wi;\n\twire  input_datab_infinite_dffe11_wo;\n\twire  input_datab_infinite_dffe12_wi;\n\twire  input_datab_infinite_dffe12_wo;\n\twire  input_datab_infinite_dffe13_wi;\n\twire  input_datab_infinite_dffe13_wo;\n\twire  input_datab_infinite_dffe14_wi;\n\twire  input_datab_infinite_dffe14_wo;\n\twire  input_datab_infinite_dffe15_wi;\n\twire  input_datab_infinite_dffe15_wo;\n\twire  input_datab_infinite_w;\n\twire  input_datab_nan_dffe11_wi;\n\twire  input_datab_nan_dffe11_wo;\n\twire  input_datab_nan_dffe12_wi;\n\twire  input_datab_nan_dffe12_wo;\n\twire  input_datab_nan_w;\n\twire  input_datab_zero_dffe11_wi;\n\twire  input_datab_zero_dffe11_wo;\n\twire  input_datab_zero_w;\n\twire  input_is_infinite_dffe1_wi;\n\twire  input_is_infinite_dffe1_wo;\n\twire  input_is_infinite_dffe21_wi;\n\twire  input_is_infinite_dffe21_wo;\n\twire  input_is_infinite_dffe22_wi;\n\twire  input_is_infinite_dffe22_wo;\n\twire  input_is_infinite_dffe23_wi;\n\twire  input_is_infinite_dffe23_wo;\n\twire  input_is_infinite_dffe25_wi;\n\twire  input_is_infinite_dffe25_wo;\n\twire  input_is_infinite_dffe26_wi;\n\twire  input_is_infinite_dffe26_wo;\n\twire  input_is_infinite_dffe27_wi;\n\twire  input_is_infinite_dffe27_wo;\n\twire  input_is_infinite_dffe2_wi;\n\twire  input_is_infinite_dffe2_wo;\n\twire  input_is_infinite_dffe31_wi;\n\twire  input_is_infinite_dffe31_wo;\n\twire  input_is_infinite_dffe32_wi;\n\twire  input_is_infinite_dffe32_wo;\n\twire  input_is_infinite_dffe33_wi;\n\twire  input_is_infinite_dffe33_wo;\n\twire  input_is_infinite_dffe3_wi;\n\twire  input_is_infinite_dffe3_wo;\n\twire  input_is_infinite_dffe41_wi;\n\twire  input_is_infinite_dffe41_wo;\n\twire  input_is_infinite_dffe42_wi;\n\twire  input_is_infinite_dffe42_wo;\n\twire  input_is_infinite_dffe4_wi;\n\twire  input_is_infinite_dffe4_wo;\n\twire  input_is_nan_dffe13_wi;\n\twire  input_is_nan_dffe13_wo;\n\twire  input_is_nan_dffe14_wi;\n\twire  input_is_nan_dffe14_wo;\n\twire  input_is_nan_dffe15_wi;\n\twire  input_is_nan_dffe15_wo;\n\twire  input_is_nan_dffe1_wi;\n\twire  input_is_nan_dffe1_wo;\n\twire  input_is_nan_dffe21_wi;\n\twire  input_is_nan_dffe21_wo;\n\twire  input_is_nan_dffe22_wi;\n\twire  input_is_nan_dffe22_wo;\n\twire  input_is_nan_dffe23_wi;\n\twire  input_is_nan_dffe23_wo;\n\twire  input_is_nan_dffe25_wi;\n\twire  input_is_nan_dffe25_wo;\n\twire  input_is_nan_dffe26_wi;\n\twire  input_is_nan_dffe26_wo;\n\twire  input_is_nan_dffe27_wi;\n\twire  input_is_nan_dffe27_wo;\n\twire  input_is_nan_dffe2_wi;\n\twire  input_is_nan_dffe2_wo;\n\twire  input_is_nan_dffe31_wi;\n\twire  input_is_nan_dffe31_wo;\n\twire  input_is_nan_dffe32_wi;\n\twire  input_is_nan_dffe32_wo;\n\twire  input_is_nan_dffe33_wi;\n\twire  input_is_nan_dffe33_wo;\n\twire  input_is_nan_dffe3_wi;\n\twire  input_is_nan_dffe3_wo;\n\twire  input_is_nan_dffe41_wi;\n\twire  input_is_nan_dffe41_wo;\n\twire  input_is_nan_dffe42_wi;\n\twire  input_is_nan_dffe42_wo;\n\twire  input_is_nan_dffe4_wi;\n\twire  input_is_nan_dffe4_wo;\n\twire  [27:0]  man_2comp_res_dataa_w;\n\twire  [27:0]  man_2comp_res_datab_w;\n\twire  [27:0]  man_2comp_res_w;\n\twire  [22:0]  man_a_not_zero_w;\n\twire  [27:0]  man_add_sub_dataa_w;\n\twire  [27:0]  man_add_sub_datab_w;\n\twire  [25:0]  man_add_sub_res_mag_dffe21_wi;\n\twire  [25:0]  man_add_sub_res_mag_dffe21_wo;\n\twire  [25:0]  man_add_sub_res_mag_dffe23_wi;\n\twire  [25:0]  man_add_sub_res_mag_dffe23_wo;\n\twire  [25:0]  man_add_sub_res_mag_dffe26_wi;\n\twire  [25:0]  man_add_sub_res_mag_dffe26_wo;\n\twire  [27:0]  man_add_sub_res_mag_dffe27_wi;\n\twire  [27:0]  man_add_sub_res_mag_dffe27_wo;\n\twire  [27:0]  man_add_sub_res_mag_w2;\n\twire  man_add_sub_res_sign_dffe21_wo;\n\twire  man_add_sub_res_sign_dffe23_wi;\n\twire  man_add_sub_res_sign_dffe23_wo;\n\twire  man_add_sub_res_sign_dffe26_wi;\n\twire  man_add_sub_res_sign_dffe26_wo;\n\twire  man_add_sub_res_sign_dffe27_wi;\n\twire  man_add_sub_res_sign_dffe27_wo;\n\twire  man_add_sub_res_sign_w2;\n\twire  [27:0]  man_add_sub_w;\n\twire  [22:0]  man_all_zeros_w;\n\twire  [22:0]  man_b_not_zero_w;\n\twire  [25:0]  man_dffe31_wo;\n\twire  [25:0]  man_intermediate_res_w;\n\twire  [4:0]  man_leading_zeros_cnt_w;\n\twire  [4:0]  man_leading_zeros_dffe31_wi;\n\twire  [4:0]  man_leading_zeros_dffe31_wo;\n\twire  [22:0]  man_nan_w;\n\twire  [22:0]  man_out_dffe5_wi;\n\twire  [22:0]  man_out_dffe5_wo;\n\twire  [22:0]  man_res_dffe4_wi;\n\twire  [22:0]  man_res_dffe4_wo;\n\twire  man_res_is_not_zero_dffe31_wi;\n\twire  man_res_is_not_zero_dffe31_wo;\n\twire  man_res_is_not_zero_dffe32_wi;\n\twire  man_res_is_not_zero_dffe32_wo;\n\twire  man_res_is_not_zero_dffe33_wi;\n\twire  man_res_is_not_zero_dffe33_wo;\n\twire  man_res_is_not_zero_dffe3_wi;\n\twire  man_res_is_not_zero_dffe3_wo;\n\twire  man_res_is_not_zero_dffe41_wi;\n\twire  man_res_is_not_zero_dffe41_wo;\n\twire  man_res_is_not_zero_dffe42_wi;\n\twire  man_res_is_not_zero_dffe42_wo;\n\twire  man_res_is_not_zero_dffe4_wi;\n\twire  man_res_is_not_zero_dffe4_wo;\n\twire  [25:0]  man_res_mag_w2;\n\twire  man_res_not_zero_dffe23_wi;\n\twire  man_res_not_zero_dffe23_wo;\n\twire  man_res_not_zero_dffe26_wi;\n\twire  man_res_not_zero_dffe26_wo;\n\twire  [24:0]  man_res_not_zero_w2;\n\twire  [25:0]  man_res_rounding_add_sub_datab_w;\n\twire  [25:0]  man_res_rounding_add_sub_w;\n\twire  [23:0]  man_res_w3;\n\twire  [22:0]  man_rounded_res_w;\n\twire  man_rounding_add_value_w;\n\twire  [23:0]  man_smaller_dffe13_wi;\n\twire  [23:0]  man_smaller_dffe13_wo;\n\twire  [23:0]  man_smaller_w;\n\twire  need_complement_dffe22_wi;\n\twire  need_complement_dffe22_wo;\n\twire  need_complement_dffe2_wi;\n\twire  need_complement_dffe2_wo;\n\twire  [1:0]  pos_sign_bit_ext;\n\twire  [3:0]  priority_encoder_1pads_w;\n\twire  round_bit_dffe21_wi;\n\twire  round_bit_dffe21_wo;\n\twire  round_bit_dffe23_wi;\n\twire  round_bit_dffe23_wo;\n\twire  round_bit_dffe26_wi;\n\twire  round_bit_dffe26_wo;\n\twire  round_bit_dffe31_wi;\n\twire  round_bit_dffe31_wo;\n\twire  round_bit_dffe32_wi;\n\twire  round_bit_dffe32_wo;\n\twire  round_bit_dffe33_wi;\n\twire  round_bit_dffe33_wo;\n\twire  round_bit_dffe3_wi;\n\twire  round_bit_dffe3_wo;\n\twire  round_bit_w;\n\twire  rounded_res_infinity_dffe4_wi;\n\twire  rounded_res_infinity_dffe4_wo;\n\twire  [4:0]  rshift_distance_dffe13_wi;\n\twire  [4:0]  rshift_distance_dffe13_wo;\n\twire  [4:0]  rshift_distance_dffe14_wi;\n\twire  [4:0]  rshift_distance_dffe14_wo;\n\twire  [4:0]  rshift_distance_dffe15_wi;\n\twire  [4:0]  rshift_distance_dffe15_wo;\n\twire  [4:0]  rshift_distance_w;\n\twire  sign_dffe31_wi;\n\twire  sign_dffe31_wo;\n\twire  sign_dffe32_wi;\n\twire  sign_dffe32_wo;\n\twire  sign_dffe33_wi;\n\twire  sign_dffe33_wo;\n\twire  sign_out_dffe5_wi;\n\twire  sign_out_dffe5_wo;\n\twire  sign_res_dffe3_wi;\n\twire  sign_res_dffe3_wo;\n\twire  sign_res_dffe41_wi;\n\twire  sign_res_dffe41_wo;\n\twire  sign_res_dffe42_wi;\n\twire  sign_res_dffe42_wo;\n\twire  sign_res_dffe4_wi;\n\twire  sign_res_dffe4_wo;\n\twire  [5:0]  sticky_bit_cnt_dataa_w;\n\twire  [5:0]  sticky_bit_cnt_datab_w;\n\twire  [5:0]  sticky_bit_cnt_res_w;\n\twire  sticky_bit_dffe1_wi;\n\twire  sticky_bit_dffe1_wo;\n\twire  sticky_bit_dffe21_wi;\n\twire  sticky_bit_dffe21_wo;\n\twire  sticky_bit_dffe22_wi;\n\twire  sticky_bit_dffe22_wo;\n\twire  sticky_bit_dffe23_wi;\n\twire  sticky_bit_dffe23_wo;\n\twire  sticky_bit_dffe25_wi;\n\twire  sticky_bit_dffe25_wo;\n\twire  sticky_bit_dffe26_wi;\n\twire  sticky_bit_dffe26_wo;\n\twire  sticky_bit_dffe27_wi;\n\twire  sticky_bit_dffe27_wo;\n\twire  sticky_bit_dffe2_wi;\n\twire  sticky_bit_dffe2_wo;\n\twire  sticky_bit_dffe31_wi;\n\twire  sticky_bit_dffe31_wo;\n\twire  sticky_bit_dffe32_wi;\n\twire  sticky_bit_dffe32_wo;\n\twire  sticky_bit_dffe33_wi;\n\twire  sticky_bit_dffe33_wo;\n\twire  sticky_bit_dffe3_wi;\n\twire  sticky_bit_dffe3_wo;\n\twire  sticky_bit_w;\n\twire  [5:0]  trailing_zeros_limit_w;\n\twire  zero_man_sign_dffe21_wi;\n\twire  zero_man_sign_dffe21_wo;\n\twire  zero_man_sign_dffe22_wi;\n\twire  zero_man_sign_dffe22_wo;\n\twire  zero_man_sign_dffe23_wi;\n\twire  zero_man_sign_dffe23_wo;\n\twire  zero_man_sign_dffe26_wi;\n\twire  zero_man_sign_dffe26_wo;\n\twire  zero_man_sign_dffe27_wi;\n\twire  zero_man_sign_dffe27_wo;\n\twire  zero_man_sign_dffe2_wi;\n\twire  zero_man_sign_dffe2_wo;\n\n\tfpoint_qsys_addsub_single_altbarrel_shift_fjg   lbarrel_shift\n\t( \n\t.aclr(aclr),\n\t.clk_en(clk_en),\n\t.clock(clock),\n\t.data(man_dffe31_wo),\n\t.distance(man_leading_zeros_cnt_w),\n\t.result(wire_lbarrel_shift_result));\n\tfpoint_qsys_addsub_single_altbarrel_shift_44e   rbarrel_shift\n\t( \n\t.data({man_smaller_dffe13_wo, {2{1'b0}}}),\n\t.distance(rshift_distance_dffe13_wo),\n\t.result(wire_rbarrel_shift_result));\n\tfpoint_qsys_addsub_single_altpriority_encoder_9u8   leading_zeroes_cnt\n\t( \n\t.data({man_add_sub_res_mag_dffe21_wo[25:1], 1'b1, {6{1'b0}}}),\n\t.q(wire_leading_zeroes_cnt_q));\n\tfpoint_qsys_addsub_single_altpriority_encoder_tma   trailing_zeros_cnt\n\t( \n\t.data({{9{1'b1}}, man_smaller_dffe13_wo[22:0]}),\n\t.q(wire_trailing_zeros_cnt_q));\n\t\n\tinitial\n\t\tadd_sub_dffe1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) add_sub_dffe1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   add_sub_dffe1 <= add_sub_dffe1_wi;\n\t\n\tinitial\n\t\tadd_sub_dffe12 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) add_sub_dffe12 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   add_sub_dffe12 <= add_sub_dffe12_wi;\n\t\n\tinitial\n\t\taligned_dataa_exp_dffe12 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) aligned_dataa_exp_dffe12 <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   aligned_dataa_exp_dffe12 <= aligned_dataa_exp_dffe12_wi;\n\t\n\tinitial\n\t\taligned_dataa_man_dffe12 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) aligned_dataa_man_dffe12 <= 24'b0;\n\t\telse if  (clk_en == 1'b1)   aligned_dataa_man_dffe12 <= aligned_dataa_man_dffe12_wi;\n\t\n\tinitial\n\t\taligned_dataa_sign_dffe12 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) aligned_dataa_sign_dffe12 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   aligned_dataa_sign_dffe12 <= aligned_dataa_sign_dffe12_wi;\n\t\n\tinitial\n\t\taligned_datab_exp_dffe12 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) aligned_datab_exp_dffe12 <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   aligned_datab_exp_dffe12 <= aligned_datab_exp_dffe12_wi;\n\t\n\tinitial\n\t\taligned_datab_man_dffe12 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) aligned_datab_man_dffe12 <= 24'b0;\n\t\telse if  (clk_en == 1'b1)   aligned_datab_man_dffe12 <= aligned_datab_man_dffe12_wi;\n\t\n\tinitial\n\t\taligned_datab_sign_dffe12 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) aligned_datab_sign_dffe12 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   aligned_datab_sign_dffe12 <= aligned_datab_sign_dffe12_wi;\n\t\n\tinitial\n\t\tboth_inputs_are_infinite_dffe1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) both_inputs_are_infinite_dffe1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   both_inputs_are_infinite_dffe1 <= both_inputs_are_infinite_dffe1_wi;\n\t\n\tinitial\n\t\tdata_exp_dffe1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) data_exp_dffe1 <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   data_exp_dffe1 <= data_exp_dffe1_wi;\n\t\n\tinitial\n\t\tdataa_man_dffe1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) dataa_man_dffe1 <= 26'b0;\n\t\telse if  (clk_en == 1'b1)   dataa_man_dffe1 <= dataa_man_dffe1_wi;\n\t\n\tinitial\n\t\tdataa_sign_dffe1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) dataa_sign_dffe1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   dataa_sign_dffe1 <= dataa_sign_dffe1_wi;\n\t\n\tinitial\n\t\tdatab_man_dffe1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) datab_man_dffe1 <= 26'b0;\n\t\telse if  (clk_en == 1'b1)   datab_man_dffe1 <= datab_man_dffe1_wi;\n\t\n\tinitial\n\t\tdatab_sign_dffe1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) datab_sign_dffe1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   datab_sign_dffe1 <= datab_sign_dffe1_wi;\n\t\n\tinitial\n\t\tdenormal_res_dffe3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) denormal_res_dffe3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   denormal_res_dffe3 <= denormal_res_dffe3_wi;\n\t\n\tinitial\n\t\tdenormal_res_dffe4 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) denormal_res_dffe4 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   denormal_res_dffe4 <= denormal_res_dffe4_wi;\n\t\n\tinitial\n\t\texp_adj_dffe21 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_adj_dffe21 <= 2'b0;\n\t\telse if  (clk_en == 1'b1)   exp_adj_dffe21 <= exp_adj_dffe21_wi;\n\t\n\tinitial\n\t\texp_out_dffe5 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_out_dffe5 <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   exp_out_dffe5 <= exp_out_dffe5_wi;\n\t\n\tinitial\n\t\texp_res_dffe2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_res_dffe2 <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   exp_res_dffe2 <= exp_res_dffe2_wi;\n\t\n\tinitial\n\t\texp_res_dffe21 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_res_dffe21 <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   exp_res_dffe21 <= exp_res_dffe21_wi;\n\t\n\tinitial\n\t\texp_res_dffe3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_res_dffe3 <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   exp_res_dffe3 <= exp_res_dffe3_wi;\n\t\n\tinitial\n\t\texp_res_dffe4 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_res_dffe4 <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   exp_res_dffe4 <= exp_res_dffe4_wi;\n\t\n\tinitial\n\t\tinfinite_output_sign_dffe1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) infinite_output_sign_dffe1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   infinite_output_sign_dffe1 <= infinite_output_sign_dffe1_wi;\n\t\n\tinitial\n\t\tinfinite_output_sign_dffe2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) infinite_output_sign_dffe2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   infinite_output_sign_dffe2 <= infinite_output_sign_dffe2_wi;\n\t\n\tinitial\n\t\tinfinite_output_sign_dffe21 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) infinite_output_sign_dffe21 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   infinite_output_sign_dffe21 <= infinite_output_sign_dffe21_wi;\n\t\n\tinitial\n\t\tinfinite_output_sign_dffe3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) infinite_output_sign_dffe3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   infinite_output_sign_dffe3 <= infinite_output_sign_dffe3_wi;\n\t\n\tinitial\n\t\tinfinite_output_sign_dffe31 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) infinite_output_sign_dffe31 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   infinite_output_sign_dffe31 <= infinite_output_sign_dffe31_wi;\n\t\n\tinitial\n\t\tinfinite_output_sign_dffe4 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) infinite_output_sign_dffe4 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   infinite_output_sign_dffe4 <= infinite_output_sign_dffe4_wi;\n\t\n\tinitial\n\t\tinfinite_res_dffe3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) infinite_res_dffe3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   infinite_res_dffe3 <= infinite_res_dffe3_wi;\n\t\n\tinitial\n\t\tinfinite_res_dffe4 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) infinite_res_dffe4 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   infinite_res_dffe4 <= infinite_res_dffe4_wi;\n\t\n\tinitial\n\t\tinfinity_magnitude_sub_dffe2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) infinity_magnitude_sub_dffe2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   infinity_magnitude_sub_dffe2 <= infinity_magnitude_sub_dffe2_wi;\n\t\n\tinitial\n\t\tinfinity_magnitude_sub_dffe21 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) infinity_magnitude_sub_dffe21 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   infinity_magnitude_sub_dffe21 <= infinity_magnitude_sub_dffe21_wi;\n\t\n\tinitial\n\t\tinfinity_magnitude_sub_dffe3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) infinity_magnitude_sub_dffe3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   infinity_magnitude_sub_dffe3 <= infinity_magnitude_sub_dffe3_wi;\n\t\n\tinitial\n\t\tinfinity_magnitude_sub_dffe31 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) infinity_magnitude_sub_dffe31 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   infinity_magnitude_sub_dffe31 <= infinity_magnitude_sub_dffe31_wi;\n\t\n\tinitial\n\t\tinfinity_magnitude_sub_dffe4 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) infinity_magnitude_sub_dffe4 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   infinity_magnitude_sub_dffe4 <= infinity_magnitude_sub_dffe4_wi;\n\t\n\tinitial\n\t\tinput_dataa_infinite_dffe12 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_dataa_infinite_dffe12 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_dataa_infinite_dffe12 <= input_dataa_infinite_dffe12_wi;\n\t\n\tinitial\n\t\tinput_dataa_nan_dffe12 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_dataa_nan_dffe12 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_dataa_nan_dffe12 <= input_dataa_nan_dffe12_wi;\n\t\n\tinitial\n\t\tinput_datab_infinite_dffe12 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_datab_infinite_dffe12 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_datab_infinite_dffe12 <= input_datab_infinite_dffe12_wi;\n\t\n\tinitial\n\t\tinput_datab_nan_dffe12 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_datab_nan_dffe12 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_datab_nan_dffe12 <= input_datab_nan_dffe12_wi;\n\t\n\tinitial\n\t\tinput_is_infinite_dffe1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_infinite_dffe1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_infinite_dffe1 <= input_is_infinite_dffe1_wi;\n\t\n\tinitial\n\t\tinput_is_infinite_dffe2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_infinite_dffe2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_infinite_dffe2 <= input_is_infinite_dffe2_wi;\n\t\n\tinitial\n\t\tinput_is_infinite_dffe21 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_infinite_dffe21 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_infinite_dffe21 <= input_is_infinite_dffe21_wi;\n\t\n\tinitial\n\t\tinput_is_infinite_dffe3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_infinite_dffe3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_infinite_dffe3 <= input_is_infinite_dffe3_wi;\n\t\n\tinitial\n\t\tinput_is_infinite_dffe31 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_infinite_dffe31 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_infinite_dffe31 <= input_is_infinite_dffe31_wi;\n\t\n\tinitial\n\t\tinput_is_infinite_dffe4 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_infinite_dffe4 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_infinite_dffe4 <= input_is_infinite_dffe4_wi;\n\t\n\tinitial\n\t\tinput_is_nan_dffe1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_nan_dffe1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_nan_dffe1 <= input_is_nan_dffe1_wi;\n\t\n\tinitial\n\t\tinput_is_nan_dffe2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_nan_dffe2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_nan_dffe2 <= input_is_nan_dffe2_wi;\n\t\n\tinitial\n\t\tinput_is_nan_dffe21 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_nan_dffe21 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_nan_dffe21 <= input_is_nan_dffe21_wi;\n\t\n\tinitial\n\t\tinput_is_nan_dffe3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_nan_dffe3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_nan_dffe3 <= input_is_nan_dffe3_wi;\n\t\n\tinitial\n\t\tinput_is_nan_dffe31 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_nan_dffe31 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_nan_dffe31 <= input_is_nan_dffe31_wi;\n\t\n\tinitial\n\t\tinput_is_nan_dffe4 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_nan_dffe4 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_nan_dffe4 <= input_is_nan_dffe4_wi;\n\t\n\tinitial\n\t\tman_add_sub_res_mag_dffe21 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_add_sub_res_mag_dffe21 <= 26'b0;\n\t\telse if  (clk_en == 1'b1)   man_add_sub_res_mag_dffe21 <= man_add_sub_res_mag_dffe21_wi;\n\t\n\tinitial\n\t\tman_add_sub_res_sign_dffe21 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_add_sub_res_sign_dffe21 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   man_add_sub_res_sign_dffe21 <= man_add_sub_res_sign_dffe27_wo;\n\t\n\tinitial\n\t\tman_dffe31 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_dffe31 <= 26'b0;\n\t\telse if  (clk_en == 1'b1)   man_dffe31 <= man_add_sub_res_mag_dffe26_wo;\n\t\n\tinitial\n\t\tman_leading_zeros_dffe31 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_leading_zeros_dffe31 <= 5'b0;\n\t\telse if  (clk_en == 1'b1)   man_leading_zeros_dffe31 <= man_leading_zeros_dffe31_wi;\n\t\n\tinitial\n\t\tman_out_dffe5 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_out_dffe5 <= 23'b0;\n\t\telse if  (clk_en == 1'b1)   man_out_dffe5 <= man_out_dffe5_wi;\n\t\n\tinitial\n\t\tman_res_dffe4 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_res_dffe4 <= 23'b0;\n\t\telse if  (clk_en == 1'b1)   man_res_dffe4 <= man_res_dffe4_wi;\n\t\n\tinitial\n\t\tman_res_is_not_zero_dffe3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_res_is_not_zero_dffe3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   man_res_is_not_zero_dffe3 <= man_res_is_not_zero_dffe3_wi;\n\t\n\tinitial\n\t\tman_res_is_not_zero_dffe31 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_res_is_not_zero_dffe31 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   man_res_is_not_zero_dffe31 <= man_res_is_not_zero_dffe31_wi;\n\t\n\tinitial\n\t\tman_res_is_not_zero_dffe4 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_res_is_not_zero_dffe4 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   man_res_is_not_zero_dffe4 <= man_res_is_not_zero_dffe4_wi;\n\t\n\tinitial\n\t\tneed_complement_dffe2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) need_complement_dffe2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   need_complement_dffe2 <= need_complement_dffe2_wi;\n\t\n\tinitial\n\t\tround_bit_dffe21 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) round_bit_dffe21 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   round_bit_dffe21 <= round_bit_dffe21_wi;\n\t\n\tinitial\n\t\tround_bit_dffe3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) round_bit_dffe3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   round_bit_dffe3 <= round_bit_dffe3_wi;\n\t\n\tinitial\n\t\tround_bit_dffe31 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) round_bit_dffe31 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   round_bit_dffe31 <= round_bit_dffe31_wi;\n\t\n\tinitial\n\t\trounded_res_infinity_dffe4 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) rounded_res_infinity_dffe4 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   rounded_res_infinity_dffe4 <= rounded_res_infinity_dffe4_wi;\n\t\n\tinitial\n\t\tsign_dffe31 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_dffe31 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_dffe31 <= sign_dffe31_wi;\n\t\n\tinitial\n\t\tsign_out_dffe5 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_out_dffe5 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_out_dffe5 <= sign_out_dffe5_wi;\n\t\n\tinitial\n\t\tsign_res_dffe3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_res_dffe3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_res_dffe3 <= sign_res_dffe3_wi;\n\t\n\tinitial\n\t\tsign_res_dffe4 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_res_dffe4 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_res_dffe4 <= sign_res_dffe4_wi;\n\t\n\tinitial\n\t\tsticky_bit_dffe1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sticky_bit_dffe1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sticky_bit_dffe1 <= sticky_bit_dffe1_wi;\n\t\n\tinitial\n\t\tsticky_bit_dffe2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sticky_bit_dffe2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sticky_bit_dffe2 <= sticky_bit_dffe2_wi;\n\t\n\tinitial\n\t\tsticky_bit_dffe21 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sticky_bit_dffe21 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sticky_bit_dffe21 <= sticky_bit_dffe21_wi;\n\t\n\tinitial\n\t\tsticky_bit_dffe3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sticky_bit_dffe3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sticky_bit_dffe3 <= sticky_bit_dffe3_wi;\n\t\n\tinitial\n\t\tsticky_bit_dffe31 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sticky_bit_dffe31 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sticky_bit_dffe31 <= sticky_bit_dffe31_wi;\n\t\n\tinitial\n\t\tzero_man_sign_dffe2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) zero_man_sign_dffe2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   zero_man_sign_dffe2 <= zero_man_sign_dffe2_wi;\n\t\n\tinitial\n\t\tzero_man_sign_dffe21 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) zero_man_sign_dffe21 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   zero_man_sign_dffe21 <= zero_man_sign_dffe21_wi;\n\tlpm_add_sub   add_sub1\n\t( \n\t.aclr(aclr),\n\t.clken(clk_en),\n\t.clock(clock),\n\t.cout(),\n\t.dataa(aligned_dataa_exp_w),\n\t.datab(aligned_datab_exp_w),\n\t.overflow(),\n\t.result(wire_add_sub1_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.add_sub(1'b1),\n\t.cin()\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tadd_sub1.lpm_direction = \"SUB\",\n\t\tadd_sub1.lpm_pipeline = 1,\n\t\tadd_sub1.lpm_representation = \"SIGNED\",\n\t\tadd_sub1.lpm_width = 9,\n\t\tadd_sub1.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   add_sub2\n\t( \n\t.aclr(aclr),\n\t.clken(clk_en),\n\t.clock(clock),\n\t.cout(),\n\t.dataa(aligned_datab_exp_w),\n\t.datab(aligned_dataa_exp_w),\n\t.overflow(),\n\t.result(wire_add_sub2_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.add_sub(1'b1),\n\t.cin()\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tadd_sub2.lpm_direction = \"SUB\",\n\t\tadd_sub2.lpm_pipeline = 1,\n\t\tadd_sub2.lpm_representation = \"SIGNED\",\n\t\tadd_sub2.lpm_width = 9,\n\t\tadd_sub2.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   add_sub3\n\t( \n\t.cout(),\n\t.dataa(sticky_bit_cnt_dataa_w),\n\t.datab(sticky_bit_cnt_datab_w),\n\t.overflow(),\n\t.result(wire_add_sub3_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.cin(),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tadd_sub3.lpm_direction = \"SUB\",\n\t\tadd_sub3.lpm_representation = \"SIGNED\",\n\t\tadd_sub3.lpm_width = 6,\n\t\tadd_sub3.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   add_sub4\n\t( \n\t.cout(),\n\t.dataa(exp_adjustment_add_sub_dataa_w),\n\t.datab(exp_adjustment_add_sub_datab_w),\n\t.overflow(),\n\t.result(wire_add_sub4_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.cin(),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tadd_sub4.lpm_direction = \"ADD\",\n\t\tadd_sub4.lpm_representation = \"SIGNED\",\n\t\tadd_sub4.lpm_width = 9,\n\t\tadd_sub4.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   add_sub5\n\t( \n\t.aclr(aclr),\n\t.clken(clk_en),\n\t.clock(clock),\n\t.cout(),\n\t.dataa(exp_adjustment2_add_sub_dataa_w),\n\t.datab(exp_adjustment2_add_sub_datab_w),\n\t.overflow(),\n\t.result(wire_add_sub5_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.add_sub(1'b1),\n\t.cin()\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tadd_sub5.lpm_direction = \"ADD\",\n\t\tadd_sub5.lpm_pipeline = 1,\n\t\tadd_sub5.lpm_representation = \"SIGNED\",\n\t\tadd_sub5.lpm_width = 9,\n\t\tadd_sub5.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   add_sub6\n\t( \n\t.cout(),\n\t.dataa(exp_res_rounding_adder_dataa_w),\n\t.datab(exp_rounding_adjustment_w),\n\t.overflow(),\n\t.result(wire_add_sub6_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.cin(),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tadd_sub6.lpm_direction = \"ADD\",\n\t\tadd_sub6.lpm_representation = \"SIGNED\",\n\t\tadd_sub6.lpm_width = 9,\n\t\tadd_sub6.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   man_2comp_res_lower\n\t( \n\t.aclr(aclr),\n\t.add_sub(add_sub_w2),\n\t.cin(borrow_w),\n\t.clken(clk_en),\n\t.clock(clock),\n\t.cout(wire_man_2comp_res_lower_cout),\n\t.dataa(man_2comp_res_dataa_w[13:0]),\n\t.datab(man_2comp_res_datab_w[13:0]),\n\t.overflow(),\n\t.result(wire_man_2comp_res_lower_result));\n\tdefparam\n\t\tman_2comp_res_lower.lpm_pipeline = 1,\n\t\tman_2comp_res_lower.lpm_representation = \"SIGNED\",\n\t\tman_2comp_res_lower.lpm_width = 14,\n\t\tman_2comp_res_lower.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   man_2comp_res_upper0\n\t( \n\t.aclr(aclr),\n\t.add_sub(add_sub_w2),\n\t.cin(1'b0),\n\t.clken(clk_en),\n\t.clock(clock),\n\t.cout(),\n\t.dataa(man_2comp_res_dataa_w[27:14]),\n\t.datab(man_2comp_res_datab_w[27:14]),\n\t.overflow(),\n\t.result(wire_man_2comp_res_upper0_result));\n\tdefparam\n\t\tman_2comp_res_upper0.lpm_pipeline = 1,\n\t\tman_2comp_res_upper0.lpm_representation = \"SIGNED\",\n\t\tman_2comp_res_upper0.lpm_width = 14,\n\t\tman_2comp_res_upper0.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   man_2comp_res_upper1\n\t( \n\t.aclr(aclr),\n\t.add_sub(add_sub_w2),\n\t.cin(1'b1),\n\t.clken(clk_en),\n\t.clock(clock),\n\t.cout(),\n\t.dataa(man_2comp_res_dataa_w[27:14]),\n\t.datab(man_2comp_res_datab_w[27:14]),\n\t.overflow(),\n\t.result(wire_man_2comp_res_upper1_result));\n\tdefparam\n\t\tman_2comp_res_upper1.lpm_pipeline = 1,\n\t\tman_2comp_res_upper1.lpm_representation = \"SIGNED\",\n\t\tman_2comp_res_upper1.lpm_width = 14,\n\t\tman_2comp_res_upper1.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   man_add_sub_lower\n\t( \n\t.aclr(aclr),\n\t.add_sub(add_sub_w2),\n\t.cin(borrow_w),\n\t.clken(clk_en),\n\t.clock(clock),\n\t.cout(wire_man_add_sub_lower_cout),\n\t.dataa(man_add_sub_dataa_w[13:0]),\n\t.datab(man_add_sub_datab_w[13:0]),\n\t.overflow(),\n\t.result(wire_man_add_sub_lower_result));\n\tdefparam\n\t\tman_add_sub_lower.lpm_pipeline = 1,\n\t\tman_add_sub_lower.lpm_representation = \"SIGNED\",\n\t\tman_add_sub_lower.lpm_width = 14,\n\t\tman_add_sub_lower.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   man_add_sub_upper0\n\t( \n\t.aclr(aclr),\n\t.add_sub(add_sub_w2),\n\t.cin(1'b0),\n\t.clken(clk_en),\n\t.clock(clock),\n\t.cout(),\n\t.dataa(man_add_sub_dataa_w[27:14]),\n\t.datab(man_add_sub_datab_w[27:14]),\n\t.overflow(),\n\t.result(wire_man_add_sub_upper0_result));\n\tdefparam\n\t\tman_add_sub_upper0.lpm_pipeline = 1,\n\t\tman_add_sub_upper0.lpm_representation = \"SIGNED\",\n\t\tman_add_sub_upper0.lpm_width = 14,\n\t\tman_add_sub_upper0.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   man_add_sub_upper1\n\t( \n\t.aclr(aclr),\n\t.add_sub(add_sub_w2),\n\t.cin(1'b1),\n\t.clken(clk_en),\n\t.clock(clock),\n\t.cout(),\n\t.dataa(man_add_sub_dataa_w[27:14]),\n\t.datab(man_add_sub_datab_w[27:14]),\n\t.overflow(),\n\t.result(wire_man_add_sub_upper1_result));\n\tdefparam\n\t\tman_add_sub_upper1.lpm_pipeline = 1,\n\t\tman_add_sub_upper1.lpm_representation = \"SIGNED\",\n\t\tman_add_sub_upper1.lpm_width = 14,\n\t\tman_add_sub_upper1.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   man_res_rounding_add_sub_lower\n\t( \n\t.cout(wire_man_res_rounding_add_sub_lower_cout),\n\t.dataa(man_intermediate_res_w[12:0]),\n\t.datab(man_res_rounding_add_sub_datab_w[12:0]),\n\t.overflow(),\n\t.result(wire_man_res_rounding_add_sub_lower_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.cin(),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tman_res_rounding_add_sub_lower.lpm_direction = \"ADD\",\n\t\tman_res_rounding_add_sub_lower.lpm_representation = \"SIGNED\",\n\t\tman_res_rounding_add_sub_lower.lpm_width = 13,\n\t\tman_res_rounding_add_sub_lower.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   man_res_rounding_add_sub_upper1\n\t( \n\t.cin(1'b1),\n\t.cout(),\n\t.dataa(man_intermediate_res_w[25:13]),\n\t.datab(man_res_rounding_add_sub_datab_w[25:13]),\n\t.overflow(),\n\t.result(wire_man_res_rounding_add_sub_upper1_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tman_res_rounding_add_sub_upper1.lpm_direction = \"ADD\",\n\t\tman_res_rounding_add_sub_upper1.lpm_representation = \"SIGNED\",\n\t\tman_res_rounding_add_sub_upper1.lpm_width = 13,\n\t\tman_res_rounding_add_sub_upper1.lpm_type = \"lpm_add_sub\";\n\tlpm_compare   trailing_zeros_limit_comparator\n\t( \n\t.aeb(),\n\t.agb(wire_trailing_zeros_limit_comparator_agb),\n\t.ageb(),\n\t.alb(),\n\t.aleb(),\n\t.aneb(),\n\t.dataa(sticky_bit_cnt_res_w),\n\t.datab(trailing_zeros_limit_w)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\ttrailing_zeros_limit_comparator.lpm_representation = \"SIGNED\",\n\t\ttrailing_zeros_limit_comparator.lpm_width = 6,\n\t\ttrailing_zeros_limit_comparator.lpm_type = \"lpm_compare\";\n\tassign\n\t\tadd_sub_dffe11_wi = add_sub,\n\t\tadd_sub_dffe11_wo = add_sub_dffe11_wi,\n\t\tadd_sub_dffe12_wi = add_sub_dffe11_wo,\n\t\tadd_sub_dffe12_wo = add_sub_dffe12,\n\t\tadd_sub_dffe13_wi = add_sub_dffe12_wo,\n\t\tadd_sub_dffe13_wo = add_sub_dffe13_wi,\n\t\tadd_sub_dffe14_wi = add_sub_dffe13_wo,\n\t\tadd_sub_dffe14_wo = add_sub_dffe14_wi,\n\t\tadd_sub_dffe15_wi = add_sub_dffe14_wo,\n\t\tadd_sub_dffe15_wo = add_sub_dffe15_wi,\n\t\tadd_sub_dffe1_wi = add_sub_dffe15_wo,\n\t\tadd_sub_dffe1_wo = add_sub_dffe1,\n\t\tadd_sub_dffe25_wi = add_sub_w2,\n\t\tadd_sub_dffe25_wo = add_sub_dffe25_wi,\n\t\tadd_sub_w2 = (((((dataa_sign_dffe1_wo & (~ datab_sign_dffe1_wo)) & (~ add_sub_dffe1_wo)) | (((~ dataa_sign_dffe1_wo) & (~ datab_sign_dffe1_wo)) & add_sub_dffe1_wo)) | (((~ dataa_sign_dffe1_wo) & datab_sign_dffe1_wo) & (~ add_sub_dffe1_wo))) | ((dataa_sign_dffe1_wo & datab_sign_dffe1_wo) & add_sub_dffe1_wo)),\n\t\tadder_upper_w = man_intermediate_res_w[25:13],\n\t\taligned_dataa_exp_dffe12_wi = aligned_dataa_exp_w,\n\t\taligned_dataa_exp_dffe12_wo = aligned_dataa_exp_dffe12,\n\t\taligned_dataa_exp_dffe13_wi = aligned_dataa_exp_dffe12_wo,\n\t\taligned_dataa_exp_dffe13_wo = aligned_dataa_exp_dffe13_wi,\n\t\taligned_dataa_exp_dffe14_wi = aligned_dataa_exp_dffe13_wo,\n\t\taligned_dataa_exp_dffe14_wo = aligned_dataa_exp_dffe14_wi,\n\t\taligned_dataa_exp_dffe15_wi = aligned_dataa_exp_dffe14_wo,\n\t\taligned_dataa_exp_dffe15_wo = aligned_dataa_exp_dffe15_wi,\n\t\taligned_dataa_exp_w = {1'b0, ({8{(~ input_dataa_denormal_dffe11_wo)}} & dataa_dffe11_wo[30:23])},\n\t\taligned_dataa_man_dffe12_wi = aligned_dataa_man_w[25:2],\n\t\taligned_dataa_man_dffe12_wo = aligned_dataa_man_dffe12,\n\t\taligned_dataa_man_dffe13_wi = aligned_dataa_man_dffe12_wo,\n\t\taligned_dataa_man_dffe13_wo = aligned_dataa_man_dffe13_wi,\n\t\taligned_dataa_man_dffe14_wi = aligned_dataa_man_dffe13_wo,\n\t\taligned_dataa_man_dffe14_wo = aligned_dataa_man_dffe14_wi,\n\t\taligned_dataa_man_dffe15_w = {aligned_dataa_man_dffe15_wo, {2{1'b0}}},\n\t\taligned_dataa_man_dffe15_wi = aligned_dataa_man_dffe14_wo,\n\t\taligned_dataa_man_dffe15_wo = aligned_dataa_man_dffe15_wi,\n\t\taligned_dataa_man_w = {(((~ input_dataa_infinite_dffe11_wo) & (~ input_dataa_denormal_dffe11_wo)) & (~ input_dataa_zero_dffe11_wo)), ({23{(~ input_dataa_denormal_dffe11_wo)}} & dataa_dffe11_wo[22:0]), {2{1'b0}}},\n\t\taligned_dataa_sign_dffe12_wi = aligned_dataa_sign_w,\n\t\taligned_dataa_sign_dffe12_wo = aligned_dataa_sign_dffe12,\n\t\taligned_dataa_sign_dffe13_wi = aligned_dataa_sign_dffe12_wo,\n\t\taligned_dataa_sign_dffe13_wo = aligned_dataa_sign_dffe13_wi,\n\t\taligned_dataa_sign_dffe14_wi = aligned_dataa_sign_dffe13_wo,\n\t\taligned_dataa_sign_dffe14_wo = aligned_dataa_sign_dffe14_wi,\n\t\taligned_dataa_sign_dffe15_wi = aligned_dataa_sign_dffe14_wo,\n\t\taligned_dataa_sign_dffe15_wo = aligned_dataa_sign_dffe15_wi,\n\t\taligned_dataa_sign_w = dataa_dffe11_wo[31],\n\t\taligned_datab_exp_dffe12_wi = aligned_datab_exp_w,\n\t\taligned_datab_exp_dffe12_wo = aligned_datab_exp_dffe12,\n\t\taligned_datab_exp_dffe13_wi = aligned_datab_exp_dffe12_wo,\n\t\taligned_datab_exp_dffe13_wo = aligned_datab_exp_dffe13_wi,\n\t\taligned_datab_exp_dffe14_wi = aligned_datab_exp_dffe13_wo,\n\t\taligned_datab_exp_dffe14_wo = aligned_datab_exp_dffe14_wi,\n\t\taligned_datab_exp_dffe15_wi = aligned_datab_exp_dffe14_wo,\n\t\taligned_datab_exp_dffe15_wo = aligned_datab_exp_dffe15_wi,\n\t\taligned_datab_exp_w = {1'b0, ({8{(~ input_datab_denormal_dffe11_wo)}} & datab_dffe11_wo[30:23])},\n\t\taligned_datab_man_dffe12_wi = aligned_datab_man_w[25:2],\n\t\taligned_datab_man_dffe12_wo = aligned_datab_man_dffe12,\n\t\taligned_datab_man_dffe13_wi = aligned_datab_man_dffe12_wo,\n\t\taligned_datab_man_dffe13_wo = aligned_datab_man_dffe13_wi,\n\t\taligned_datab_man_dffe14_wi = aligned_datab_man_dffe13_wo,\n\t\taligned_datab_man_dffe14_wo = aligned_datab_man_dffe14_wi,\n\t\taligned_datab_man_dffe15_w = {aligned_datab_man_dffe15_wo, {2{1'b0}}},\n\t\taligned_datab_man_dffe15_wi = aligned_datab_man_dffe14_wo,\n\t\taligned_datab_man_dffe15_wo = aligned_datab_man_dffe15_wi,\n\t\taligned_datab_man_w = {(((~ input_datab_infinite_dffe11_wo) & (~ input_datab_denormal_dffe11_wo)) & (~ input_datab_zero_dffe11_wo)), ({23{(~ input_datab_denormal_dffe11_wo)}} & datab_dffe11_wo[22:0]), {2{1'b0}}},\n\t\taligned_datab_sign_dffe12_wi = aligned_datab_sign_w,\n\t\taligned_datab_sign_dffe12_wo = aligned_datab_sign_dffe12,\n\t\taligned_datab_sign_dffe13_wi = aligned_datab_sign_dffe12_wo,\n\t\taligned_datab_sign_dffe13_wo = aligned_datab_sign_dffe13_wi,\n\t\taligned_datab_sign_dffe14_wi = aligned_datab_sign_dffe13_wo,\n\t\taligned_datab_sign_dffe14_wo = aligned_datab_sign_dffe14_wi,\n\t\taligned_datab_sign_dffe15_wi = aligned_datab_sign_dffe14_wo,\n\t\taligned_datab_sign_dffe15_wo = aligned_datab_sign_dffe15_wi,\n\t\taligned_datab_sign_w = datab_dffe11_wo[31],\n\t\tborrow_w = ((~ sticky_bit_dffe1_wo) & (~ add_sub_w2)),\n\t\tboth_inputs_are_infinite_dffe1_wi = (input_dataa_infinite_dffe15_wo & input_datab_infinite_dffe15_wo),\n\t\tboth_inputs_are_infinite_dffe1_wo = both_inputs_are_infinite_dffe1,\n\t\tboth_inputs_are_infinite_dffe25_wi = both_inputs_are_infinite_dffe1_wo,\n\t\tboth_inputs_are_infinite_dffe25_wo = both_inputs_are_infinite_dffe25_wi,\n\t\tdata_exp_dffe1_wi = (({8{(~ exp_amb_mux_dffe15_wo)}} & aligned_dataa_exp_dffe15_wo[7:0]) | ({8{exp_amb_mux_dffe15_wo}} & aligned_datab_exp_dffe15_wo[7:0])),\n\t\tdata_exp_dffe1_wo = data_exp_dffe1,\n\t\tdataa_dffe11_wi = dataa,\n\t\tdataa_dffe11_wo = dataa_dffe11_wi,\n\t\tdataa_man_dffe1_wi = (({26{(~ exp_amb_mux_dffe15_wo)}} & aligned_dataa_man_dffe15_w) | ({26{exp_amb_mux_dffe15_wo}} & wire_rbarrel_shift_result)),\n\t\tdataa_man_dffe1_wo = dataa_man_dffe1,\n\t\tdataa_sign_dffe1_wi = aligned_dataa_sign_dffe15_wo,\n\t\tdataa_sign_dffe1_wo = dataa_sign_dffe1,\n\t\tdataa_sign_dffe25_wi = dataa_sign_dffe1_wo,\n\t\tdataa_sign_dffe25_wo = dataa_sign_dffe25_wi,\n\t\tdatab_dffe11_wi = datab,\n\t\tdatab_dffe11_wo = datab_dffe11_wi,\n\t\tdatab_man_dffe1_wi = (({26{(~ exp_amb_mux_dffe15_wo)}} & wire_rbarrel_shift_result) | ({26{exp_amb_mux_dffe15_wo}} & aligned_datab_man_dffe15_w)),\n\t\tdatab_man_dffe1_wo = datab_man_dffe1,\n\t\tdatab_sign_dffe1_wi = aligned_datab_sign_dffe15_wo,\n\t\tdatab_sign_dffe1_wo = datab_sign_dffe1,\n\t\tdenormal_flag_w = ((((~ force_nan_w) & (~ force_infinity_w)) & (~ force_zero_w)) & denormal_res_dffe4_wo),\n\t\tdenormal_res_dffe32_wi = denormal_result_w,\n\t\tdenormal_res_dffe32_wo = denormal_res_dffe32_wi,\n\t\tdenormal_res_dffe33_wi = denormal_res_dffe32_wo,\n\t\tdenormal_res_dffe33_wo = denormal_res_dffe33_wi,\n\t\tdenormal_res_dffe3_wi = denormal_res_dffe33_wo,\n\t\tdenormal_res_dffe3_wo = denormal_res_dffe3,\n\t\tdenormal_res_dffe41_wi = denormal_res_dffe42_wo,\n\t\tdenormal_res_dffe41_wo = denormal_res_dffe41_wi,\n\t\tdenormal_res_dffe42_wi = denormal_res_dffe3_wo,\n\t\tdenormal_res_dffe42_wo = denormal_res_dffe42_wi,\n\t\tdenormal_res_dffe4_wi = denormal_res_dffe41_wo,\n\t\tdenormal_res_dffe4_wo = denormal_res_dffe4,\n\t\tdenormal_result_w = ((~ exp_res_not_zero_w[8]) | exp_adjustment2_add_sub_w[8]),\n\t\texp_a_all_one_w = {(dataa[30] & exp_a_all_one_w[6]), (dataa[29] & exp_a_all_one_w[5]), (dataa[28] & exp_a_all_one_w[4]), (dataa[27] & exp_a_all_one_w[3]), (dataa[26] & exp_a_all_one_w[2]), (dataa[25] & exp_a_all_one_w[1]), (dataa[24] & exp_a_all_one_w[0]), dataa[23]},\n\t\texp_a_not_zero_w = {(dataa[30] | exp_a_not_zero_w[6]), (dataa[29] | exp_a_not_zero_w[5]), (dataa[28] | exp_a_not_zero_w[4]), (dataa[27] | exp_a_not_zero_w[3]), (dataa[26] | exp_a_not_zero_w[2]), (dataa[25] | exp_a_not_zero_w[1]), (dataa[24] | exp_a_not_zero_w[0]), dataa[23]},\n\t\texp_adj_0pads = {7{1'b0}},\n\t\texp_adj_dffe21_wi = (({2{man_add_sub_res_mag_dffe27_wo[26]}} & exp_adjust_by_add2) | ({2{(~ man_add_sub_res_mag_dffe27_wo[26])}} & exp_adjust_by_add1)),\n\t\texp_adj_dffe21_wo = exp_adj_dffe21,\n\t\texp_adj_dffe23_wi = exp_adj_dffe21_wo,\n\t\texp_adj_dffe23_wo = exp_adj_dffe23_wi,\n\t\texp_adj_dffe26_wi = exp_adj_dffe23_wo,\n\t\texp_adj_dffe26_wo = exp_adj_dffe26_wi,\n\t\texp_adjust_by_add1 = 2'b01,\n\t\texp_adjust_by_add2 = 2'b10,\n\t\texp_adjustment2_add_sub_dataa_w = exp_value,\n\t\texp_adjustment2_add_sub_datab_w = exp_adjustment_add_sub_w,\n\t\texp_adjustment2_add_sub_w = wire_add_sub5_result,\n\t\texp_adjustment_add_sub_dataa_w = {priority_encoder_1pads_w, wire_leading_zeroes_cnt_q},\n\t\texp_adjustment_add_sub_datab_w = {exp_adj_0pads, exp_adj_dffe26_wo},\n\t\texp_adjustment_add_sub_w = wire_add_sub4_result,\n\t\texp_all_ones_w = {8{1'b1}},\n\t\texp_all_zeros_w = {8{1'b0}},\n\t\texp_amb_mux_dffe13_wi = exp_amb_mux_w,\n\t\texp_amb_mux_dffe13_wo = exp_amb_mux_dffe13_wi,\n\t\texp_amb_mux_dffe14_wi = exp_amb_mux_dffe13_wo,\n\t\texp_amb_mux_dffe14_wo = exp_amb_mux_dffe14_wi,\n\t\texp_amb_mux_dffe15_wi = exp_amb_mux_dffe14_wo,\n\t\texp_amb_mux_dffe15_wo = exp_amb_mux_dffe15_wi,\n\t\texp_amb_mux_w = exp_amb_w[8],\n\t\texp_amb_w = wire_add_sub1_result,\n\t\texp_b_all_one_w = {(datab[30] & exp_b_all_one_w[6]), (datab[29] & exp_b_all_one_w[5]), (datab[28] & exp_b_all_one_w[4]), (datab[27] & exp_b_all_one_w[3]), (datab[26] & exp_b_all_one_w[2]), (datab[25] & exp_b_all_one_w[1]), (datab[24] & exp_b_all_one_w[0]), datab[23]},\n\t\texp_b_not_zero_w = {(datab[30] | exp_b_not_zero_w[6]), (datab[29] | exp_b_not_zero_w[5]), (datab[28] | exp_b_not_zero_w[4]), (datab[27] | exp_b_not_zero_w[3]), (datab[26] | exp_b_not_zero_w[2]), (datab[25] | exp_b_not_zero_w[1]), (datab[24] | exp_b_not_zero_w[0]), datab[23]},\n\t\texp_bma_w = wire_add_sub2_result,\n\t\texp_diff_abs_exceed_max_w = {(exp_diff_abs_exceed_max_w[1] | exp_diff_abs_w[7]), (exp_diff_abs_exceed_max_w[0] | exp_diff_abs_w[6]), exp_diff_abs_w[5]},\n\t\texp_diff_abs_max_w = {5{1'b1}},\n\t\texp_diff_abs_w = (({8{(~ exp_amb_mux_w)}} & exp_amb_w[7:0]) | ({8{exp_amb_mux_w}} & exp_bma_w[7:0])),\n\t\texp_intermediate_res_dffe41_wi = exp_intermediate_res_dffe42_wo,\n\t\texp_intermediate_res_dffe41_wo = exp_intermediate_res_dffe41_wi,\n\t\texp_intermediate_res_dffe42_wi = exp_intermediate_res_w,\n\t\texp_intermediate_res_dffe42_wo = exp_intermediate_res_dffe42_wi,\n\t\texp_intermediate_res_w = exp_res_dffe3_wo,\n\t\texp_out_dffe5_wi = (({8{force_nan_w}} & exp_all_ones_w) | ({8{(~ force_nan_w)}} & (({8{force_infinity_w}} & exp_all_ones_w) | ({8{(~ force_infinity_w)}} & (({8{(force_zero_w | denormal_flag_w)}} & exp_all_zeros_w) | ({8{(~ (force_zero_w | denormal_flag_w))}} & exp_res_dffe4_wo)))))),\n\t\texp_out_dffe5_wo = exp_out_dffe5,\n\t\texp_res_dffe21_wi = exp_res_dffe27_wo,\n\t\texp_res_dffe21_wo = exp_res_dffe21,\n\t\texp_res_dffe22_wi = exp_res_dffe2_wo,\n\t\texp_res_dffe22_wo = exp_res_dffe22_wi,\n\t\texp_res_dffe23_wi = exp_res_dffe21_wo,\n\t\texp_res_dffe23_wo = exp_res_dffe23_wi,\n\t\texp_res_dffe25_wi = data_exp_dffe1_wo,\n\t\texp_res_dffe25_wo = exp_res_dffe25_wi,\n\t\texp_res_dffe26_wi = exp_res_dffe23_wo,\n\t\texp_res_dffe26_wo = exp_res_dffe26_wi,\n\t\texp_res_dffe27_wi = exp_res_dffe22_wo,\n\t\texp_res_dffe27_wo = exp_res_dffe27_wi,\n\t\texp_res_dffe2_wi = exp_res_dffe25_wo,\n\t\texp_res_dffe2_wo = exp_res_dffe2,\n\t\texp_res_dffe32_wi = ({8{(~ denormal_result_w)}} & exp_adjustment2_add_sub_w[7:0]),\n\t\texp_res_dffe32_wo = exp_res_dffe32_wi,\n\t\texp_res_dffe33_wi = exp_res_dffe32_wo,\n\t\texp_res_dffe33_wo = exp_res_dffe33_wi,\n\t\texp_res_dffe3_wi = exp_res_dffe33_wo,\n\t\texp_res_dffe3_wo = exp_res_dffe3,\n\t\texp_res_dffe4_wi = exp_rounded_res_w,\n\t\texp_res_dffe4_wo = exp_res_dffe4,\n\t\texp_res_max_w = {(exp_res_max_w[6] & exp_adjustment2_add_sub_w[7]), (exp_res_max_w[5] & exp_adjustment2_add_sub_w[6]), (exp_res_max_w[4] & exp_adjustment2_add_sub_w[5]), (exp_res_max_w[3] & exp_adjustment2_add_sub_w[4]), (exp_res_max_w[2] & exp_adjustment2_add_sub_w[3]), (exp_res_max_w[1] & exp_adjustment2_add_sub_w[2]), (exp_res_max_w[0] & exp_adjustment2_add_sub_w[1]), exp_adjustment2_add_sub_w[0]},\n\t\texp_res_not_zero_w = {(exp_res_not_zero_w[7] | exp_adjustment2_add_sub_w[8]), (exp_res_not_zero_w[6] | exp_adjustment2_add_sub_w[7]), (exp_res_not_zero_w[5] | exp_adjustment2_add_sub_w[6]), (exp_res_not_zero_w[4] | exp_adjustment2_add_sub_w[5]), (exp_res_not_zero_w[3] | exp_adjustment2_add_sub_w[4]), (exp_res_not_zero_w[2] | exp_adjustment2_add_sub_w[3]), (exp_res_not_zero_w[1] | exp_adjustment2_add_sub_w[2]), (exp_res_not_zero_w[0] | exp_adjustment2_add_sub_w[1]), exp_adjustment2_add_sub_w[0]},\n\t\texp_res_rounding_adder_dataa_w = {1'b0, exp_intermediate_res_dffe41_wo},\n\t\texp_res_rounding_adder_w = wire_add_sub6_result,\n\t\texp_rounded_res_infinity_w = exp_rounded_res_max_w[7],\n\t\texp_rounded_res_max_w = {(exp_rounded_res_max_w[6] & exp_rounded_res_w[7]), (exp_rounded_res_max_w[5] & exp_rounded_res_w[6]), (exp_rounded_res_max_w[4] & exp_rounded_res_w[5]), (exp_rounded_res_max_w[3] & exp_rounded_res_w[4]), (exp_rounded_res_max_w[2] & exp_rounded_res_w[3]), (exp_rounded_res_max_w[1] & exp_rounded_res_w[2]), (exp_rounded_res_max_w[0] & exp_rounded_res_w[1]), exp_rounded_res_w[0]},\n\t\texp_rounded_res_w = exp_res_rounding_adder_w[7:0],\n\t\texp_rounding_adjustment_w = {{8{1'b0}}, man_res_rounding_add_sub_w[24]},\n\t\texp_value = {1'b0, exp_res_dffe26_wo},\n\t\tforce_infinity_w = ((input_is_infinite_dffe4_wo | rounded_res_infinity_dffe4_wo) | infinite_res_dffe4_wo),\n\t\tforce_nan_w = (infinity_magnitude_sub_dffe4_wo | input_is_nan_dffe4_wo),\n\t\tforce_zero_w = (~ man_res_is_not_zero_dffe4_wo),\n\t\tguard_bit_dffe3_wo = man_res_w3[0],\n\t\tinfinite_output_sign_dffe1_wi = (((~ input_datab_infinite_dffe15_wo) & aligned_dataa_sign_dffe15_wo) | (input_datab_infinite_dffe15_wo & (~ (aligned_datab_sign_dffe15_wo ^ add_sub_dffe15_wo)))),\n\t\tinfinite_output_sign_dffe1_wo = infinite_output_sign_dffe1,\n\t\tinfinite_output_sign_dffe21_wi = infinite_output_sign_dffe27_wo,\n\t\tinfinite_output_sign_dffe21_wo = infinite_output_sign_dffe21,\n\t\tinfinite_output_sign_dffe22_wi = infinite_output_sign_dffe2_wo,\n\t\tinfinite_output_sign_dffe22_wo = infinite_output_sign_dffe22_wi,\n\t\tinfinite_output_sign_dffe23_wi = infinite_output_sign_dffe21_wo,\n\t\tinfinite_output_sign_dffe23_wo = infinite_output_sign_dffe23_wi,\n\t\tinfinite_output_sign_dffe25_wi = infinite_output_sign_dffe1_wo,\n\t\tinfinite_output_sign_dffe25_wo = infinite_output_sign_dffe25_wi,\n\t\tinfinite_output_sign_dffe26_wi = infinite_output_sign_dffe23_wo,\n\t\tinfinite_output_sign_dffe26_wo = infinite_output_sign_dffe26_wi,\n\t\tinfinite_output_sign_dffe27_wi = infinite_output_sign_dffe22_wo,\n\t\tinfinite_output_sign_dffe27_wo = infinite_output_sign_dffe27_wi,\n\t\tinfinite_output_sign_dffe2_wi = infinite_output_sign_dffe25_wo,\n\t\tinfinite_output_sign_dffe2_wo = infinite_output_sign_dffe2,\n\t\tinfinite_output_sign_dffe31_wi = infinite_output_sign_dffe26_wo,\n\t\tinfinite_output_sign_dffe31_wo = infinite_output_sign_dffe31,\n\t\tinfinite_output_sign_dffe32_wi = infinite_output_sign_dffe31_wo,\n\t\tinfinite_output_sign_dffe32_wo = infinite_output_sign_dffe32_wi,\n\t\tinfinite_output_sign_dffe33_wi = infinite_output_sign_dffe32_wo,\n\t\tinfinite_output_sign_dffe33_wo = infinite_output_sign_dffe33_wi,\n\t\tinfinite_output_sign_dffe3_wi = infinite_output_sign_dffe33_wo,\n\t\tinfinite_output_sign_dffe3_wo = infinite_output_sign_dffe3,\n\t\tinfinite_output_sign_dffe41_wi = infinite_output_sign_dffe42_wo,\n\t\tinfinite_output_sign_dffe41_wo = infinite_output_sign_dffe41_wi,\n\t\tinfinite_output_sign_dffe42_wi = infinite_output_sign_dffe3_wo,\n\t\tinfinite_output_sign_dffe42_wo = infinite_output_sign_dffe42_wi,\n\t\tinfinite_output_sign_dffe4_wi = infinite_output_sign_dffe41_wo,\n\t\tinfinite_output_sign_dffe4_wo = infinite_output_sign_dffe4,\n\t\tinfinite_res_dff32_wi = (exp_res_max_w[7] & (~ exp_adjustment2_add_sub_w[8])),\n\t\tinfinite_res_dff32_wo = infinite_res_dff32_wi,\n\t\tinfinite_res_dff33_wi = infinite_res_dff32_wo,\n\t\tinfinite_res_dff33_wo = infinite_res_dff33_wi,\n\t\tinfinite_res_dffe3_wi = infinite_res_dff33_wo,\n\t\tinfinite_res_dffe3_wo = infinite_res_dffe3,\n\t\tinfinite_res_dffe41_wi = infinite_res_dffe42_wo,\n\t\tinfinite_res_dffe41_wo = infinite_res_dffe41_wi,\n\t\tinfinite_res_dffe42_wi = infinite_res_dffe3_wo,\n\t\tinfinite_res_dffe42_wo = infinite_res_dffe42_wi,\n\t\tinfinite_res_dffe4_wi = infinite_res_dffe41_wo,\n\t\tinfinite_res_dffe4_wo = infinite_res_dffe4,\n\t\tinfinity_magnitude_sub_dffe21_wi = infinity_magnitude_sub_dffe27_wo,\n\t\tinfinity_magnitude_sub_dffe21_wo = infinity_magnitude_sub_dffe21,\n\t\tinfinity_magnitude_sub_dffe22_wi = infinity_magnitude_sub_dffe2_wo,\n\t\tinfinity_magnitude_sub_dffe22_wo = infinity_magnitude_sub_dffe22_wi,\n\t\tinfinity_magnitude_sub_dffe23_wi = infinity_magnitude_sub_dffe21_wo,\n\t\tinfinity_magnitude_sub_dffe23_wo = infinity_magnitude_sub_dffe23_wi,\n\t\tinfinity_magnitude_sub_dffe26_wi = infinity_magnitude_sub_dffe23_wo,\n\t\tinfinity_magnitude_sub_dffe26_wo = infinity_magnitude_sub_dffe26_wi,\n\t\tinfinity_magnitude_sub_dffe27_wi = infinity_magnitude_sub_dffe22_wo,\n\t\tinfinity_magnitude_sub_dffe27_wo = infinity_magnitude_sub_dffe27_wi,\n\t\tinfinity_magnitude_sub_dffe2_wi = ((~ add_sub_dffe25_wo) & both_inputs_are_infinite_dffe25_wo),\n\t\tinfinity_magnitude_sub_dffe2_wo = infinity_magnitude_sub_dffe2,\n\t\tinfinity_magnitude_sub_dffe31_wi = infinity_magnitude_sub_dffe26_wo,\n\t\tinfinity_magnitude_sub_dffe31_wo = infinity_magnitude_sub_dffe31,\n\t\tinfinity_magnitude_sub_dffe32_wi = infinity_magnitude_sub_dffe31_wo,\n\t\tinfinity_magnitude_sub_dffe32_wo = infinity_magnitude_sub_dffe32_wi,\n\t\tinfinity_magnitude_sub_dffe33_wi = infinity_magnitude_sub_dffe32_wo,\n\t\tinfinity_magnitude_sub_dffe33_wo = infinity_magnitude_sub_dffe33_wi,\n\t\tinfinity_magnitude_sub_dffe3_wi = infinity_magnitude_sub_dffe33_wo,\n\t\tinfinity_magnitude_sub_dffe3_wo = infinity_magnitude_sub_dffe3,\n\t\tinfinity_magnitude_sub_dffe41_wi = infinity_magnitude_sub_dffe42_wo,\n\t\tinfinity_magnitude_sub_dffe41_wo = infinity_magnitude_sub_dffe41_wi,\n\t\tinfinity_magnitude_sub_dffe42_wi = infinity_magnitude_sub_dffe3_wo,\n\t\tinfinity_magnitude_sub_dffe42_wo = infinity_magnitude_sub_dffe42_wi,\n\t\tinfinity_magnitude_sub_dffe4_wi = infinity_magnitude_sub_dffe41_wo,\n\t\tinfinity_magnitude_sub_dffe4_wo = infinity_magnitude_sub_dffe4,\n\t\tinput_dataa_denormal_dffe11_wi = input_dataa_denormal_w,\n\t\tinput_dataa_denormal_dffe11_wo = input_dataa_denormal_dffe11_wi,\n\t\tinput_dataa_denormal_w = ((~ exp_a_not_zero_w[7]) & man_a_not_zero_w[22]),\n\t\tinput_dataa_infinite_dffe11_wi = input_dataa_infinite_w,\n\t\tinput_dataa_infinite_dffe11_wo = input_dataa_infinite_dffe11_wi,\n\t\tinput_dataa_infinite_dffe12_wi = input_dataa_infinite_dffe11_wo,\n\t\tinput_dataa_infinite_dffe12_wo = input_dataa_infinite_dffe12,\n\t\tinput_dataa_infinite_dffe13_wi = input_dataa_infinite_dffe12_wo,\n\t\tinput_dataa_infinite_dffe13_wo = input_dataa_infinite_dffe13_wi,\n\t\tinput_dataa_infinite_dffe14_wi = input_dataa_infinite_dffe13_wo,\n\t\tinput_dataa_infinite_dffe14_wo = input_dataa_infinite_dffe14_wi,\n\t\tinput_dataa_infinite_dffe15_wi = input_dataa_infinite_dffe14_wo,\n\t\tinput_dataa_infinite_dffe15_wo = input_dataa_infinite_dffe15_wi,\n\t\tinput_dataa_infinite_w = (exp_a_all_one_w[7] & (~ man_a_not_zero_w[22])),\n\t\tinput_dataa_nan_dffe11_wi = input_dataa_nan_w,\n\t\tinput_dataa_nan_dffe11_wo = input_dataa_nan_dffe11_wi,\n\t\tinput_dataa_nan_dffe12_wi = input_dataa_nan_dffe11_wo,\n\t\tinput_dataa_nan_dffe12_wo = input_dataa_nan_dffe12,\n\t\tinput_dataa_nan_w = (exp_a_all_one_w[7] & man_a_not_zero_w[22]),\n\t\tinput_dataa_zero_dffe11_wi = input_dataa_zero_w,\n\t\tinput_dataa_zero_dffe11_wo = input_dataa_zero_dffe11_wi,\n\t\tinput_dataa_zero_w = ((~ exp_a_not_zero_w[7]) & (~ man_a_not_zero_w[22])),\n\t\tinput_datab_denormal_dffe11_wi = input_datab_denormal_w,\n\t\tinput_datab_denormal_dffe11_wo = input_datab_denormal_dffe11_wi,\n\t\tinput_datab_denormal_w = ((~ exp_b_not_zero_w[7]) & man_b_not_zero_w[22]),\n\t\tinput_datab_infinite_dffe11_wi = input_datab_infinite_w,\n\t\tinput_datab_infinite_dffe11_wo = input_datab_infinite_dffe11_wi,\n\t\tinput_datab_infinite_dffe12_wi = input_datab_infinite_dffe11_wo,\n\t\tinput_datab_infinite_dffe12_wo = input_datab_infinite_dffe12,\n\t\tinput_datab_infinite_dffe13_wi = input_datab_infinite_dffe12_wo,\n\t\tinput_datab_infinite_dffe13_wo = input_datab_infinite_dffe13_wi,\n\t\tinput_datab_infinite_dffe14_wi = input_datab_infinite_dffe13_wo,\n\t\tinput_datab_infinite_dffe14_wo = input_datab_infinite_dffe14_wi,\n\t\tinput_datab_infinite_dffe15_wi = input_datab_infinite_dffe14_wo,\n\t\tinput_datab_infinite_dffe15_wo = input_datab_infinite_dffe15_wi,\n\t\tinput_datab_infinite_w = (exp_b_all_one_w[7] & (~ man_b_not_zero_w[22])),\n\t\tinput_datab_nan_dffe11_wi = input_datab_nan_w,\n\t\tinput_datab_nan_dffe11_wo = input_datab_nan_dffe11_wi,\n\t\tinput_datab_nan_dffe12_wi = input_datab_nan_dffe11_wo,\n\t\tinput_datab_nan_dffe12_wo = input_datab_nan_dffe12,\n\t\tinput_datab_nan_w = (exp_b_all_one_w[7] & man_b_not_zero_w[22]),\n\t\tinput_datab_zero_dffe11_wi = input_datab_zero_w,\n\t\tinput_datab_zero_dffe11_wo = input_datab_zero_dffe11_wi,\n\t\tinput_datab_zero_w = ((~ exp_b_not_zero_w[7]) & (~ man_b_not_zero_w[22])),\n\t\tinput_is_infinite_dffe1_wi = (input_dataa_infinite_dffe15_wo | input_datab_infinite_dffe15_wo),\n\t\tinput_is_infinite_dffe1_wo = input_is_infinite_dffe1,\n\t\tinput_is_infinite_dffe21_wi = input_is_infinite_dffe27_wo,\n\t\tinput_is_infinite_dffe21_wo = input_is_infinite_dffe21,\n\t\tinput_is_infinite_dffe22_wi = input_is_infinite_dffe2_wo,\n\t\tinput_is_infinite_dffe22_wo = input_is_infinite_dffe22_wi,\n\t\tinput_is_infinite_dffe23_wi = input_is_infinite_dffe21_wo,\n\t\tinput_is_infinite_dffe23_wo = input_is_infinite_dffe23_wi,\n\t\tinput_is_infinite_dffe25_wi = input_is_infinite_dffe1_wo,\n\t\tinput_is_infinite_dffe25_wo = input_is_infinite_dffe25_wi,\n\t\tinput_is_infinite_dffe26_wi = input_is_infinite_dffe23_wo,\n\t\tinput_is_infinite_dffe26_wo = input_is_infinite_dffe26_wi,\n\t\tinput_is_infinite_dffe27_wi = input_is_infinite_dffe22_wo,\n\t\tinput_is_infinite_dffe27_wo = input_is_infinite_dffe27_wi,\n\t\tinput_is_infinite_dffe2_wi = input_is_infinite_dffe25_wo,\n\t\tinput_is_infinite_dffe2_wo = input_is_infinite_dffe2,\n\t\tinput_is_infinite_dffe31_wi = input_is_infinite_dffe26_wo,\n\t\tinput_is_infinite_dffe31_wo = input_is_infinite_dffe31,\n\t\tinput_is_infinite_dffe32_wi = input_is_infinite_dffe31_wo,\n\t\tinput_is_infinite_dffe32_wo = input_is_infinite_dffe32_wi,\n\t\tinput_is_infinite_dffe33_wi = input_is_infinite_dffe32_wo,\n\t\tinput_is_infinite_dffe33_wo = input_is_infinite_dffe33_wi,\n\t\tinput_is_infinite_dffe3_wi = input_is_infinite_dffe33_wo,\n\t\tinput_is_infinite_dffe3_wo = input_is_infinite_dffe3,\n\t\tinput_is_infinite_dffe41_wi = input_is_infinite_dffe42_wo,\n\t\tinput_is_infinite_dffe41_wo = input_is_infinite_dffe41_wi,\n\t\tinput_is_infinite_dffe42_wi = input_is_infinite_dffe3_wo,\n\t\tinput_is_infinite_dffe42_wo = input_is_infinite_dffe42_wi,\n\t\tinput_is_infinite_dffe4_wi = input_is_infinite_dffe41_wo,\n\t\tinput_is_infinite_dffe4_wo = input_is_infinite_dffe4,\n\t\tinput_is_nan_dffe13_wi = (input_dataa_nan_dffe12_wo | input_datab_nan_dffe12_wo),\n\t\tinput_is_nan_dffe13_wo = input_is_nan_dffe13_wi,\n\t\tinput_is_nan_dffe14_wi = input_is_nan_dffe13_wo,\n\t\tinput_is_nan_dffe14_wo = input_is_nan_dffe14_wi,\n\t\tinput_is_nan_dffe15_wi = input_is_nan_dffe14_wo,\n\t\tinput_is_nan_dffe15_wo = input_is_nan_dffe15_wi,\n\t\tinput_is_nan_dffe1_wi = input_is_nan_dffe15_wo,\n\t\tinput_is_nan_dffe1_wo = input_is_nan_dffe1,\n\t\tinput_is_nan_dffe21_wi = input_is_nan_dffe27_wo,\n\t\tinput_is_nan_dffe21_wo = input_is_nan_dffe21,\n\t\tinput_is_nan_dffe22_wi = input_is_nan_dffe2_wo,\n\t\tinput_is_nan_dffe22_wo = input_is_nan_dffe22_wi,\n\t\tinput_is_nan_dffe23_wi = input_is_nan_dffe21_wo,\n\t\tinput_is_nan_dffe23_wo = input_is_nan_dffe23_wi,\n\t\tinput_is_nan_dffe25_wi = input_is_nan_dffe1_wo,\n\t\tinput_is_nan_dffe25_wo = input_is_nan_dffe25_wi,\n\t\tinput_is_nan_dffe26_wi = input_is_nan_dffe23_wo,\n\t\tinput_is_nan_dffe26_wo = input_is_nan_dffe26_wi,\n\t\tinput_is_nan_dffe27_wi = input_is_nan_dffe22_wo,\n\t\tinput_is_nan_dffe27_wo = input_is_nan_dffe27_wi,\n\t\tinput_is_nan_dffe2_wi = input_is_nan_dffe25_wo,\n\t\tinput_is_nan_dffe2_wo = input_is_nan_dffe2,\n\t\tinput_is_nan_dffe31_wi = input_is_nan_dffe26_wo,\n\t\tinput_is_nan_dffe31_wo = input_is_nan_dffe31,\n\t\tinput_is_nan_dffe32_wi = input_is_nan_dffe31_wo,\n\t\tinput_is_nan_dffe32_wo = input_is_nan_dffe32_wi,\n\t\tinput_is_nan_dffe33_wi = input_is_nan_dffe32_wo,\n\t\tinput_is_nan_dffe33_wo = input_is_nan_dffe33_wi,\n\t\tinput_is_nan_dffe3_wi = input_is_nan_dffe33_wo,\n\t\tinput_is_nan_dffe3_wo = input_is_nan_dffe3,\n\t\tinput_is_nan_dffe41_wi = input_is_nan_dffe42_wo,\n\t\tinput_is_nan_dffe41_wo = input_is_nan_dffe41_wi,\n\t\tinput_is_nan_dffe42_wi = input_is_nan_dffe3_wo,\n\t\tinput_is_nan_dffe42_wo = input_is_nan_dffe42_wi,\n\t\tinput_is_nan_dffe4_wi = input_is_nan_dffe41_wo,\n\t\tinput_is_nan_dffe4_wo = input_is_nan_dffe4,\n\t\tman_2comp_res_dataa_w = {pos_sign_bit_ext, datab_man_dffe1_wo},\n\t\tman_2comp_res_datab_w = {pos_sign_bit_ext, dataa_man_dffe1_wo},\n\t\tman_2comp_res_w = {(({14{(~ wire_man_2comp_res_lower_cout)}} & wire_man_2comp_res_upper0_result) | ({14{wire_man_2comp_res_lower_cout}} & wire_man_2comp_res_upper1_result)), wire_man_2comp_res_lower_result},\n\t\tman_a_not_zero_w = {(dataa[22] | man_a_not_zero_w[21]), (dataa[21] | man_a_not_zero_w[20]), (dataa[20] | man_a_not_zero_w[19]), (dataa[19] | man_a_not_zero_w[18]), (dataa[18] | man_a_not_zero_w[17]), (dataa[17] | man_a_not_zero_w[16]), (dataa[16] | man_a_not_zero_w[15]), (dataa[15] | man_a_not_zero_w[14]), (dataa[14] | man_a_not_zero_w[13]), (dataa[13] | man_a_not_zero_w[12]), (dataa[12] | man_a_not_zero_w[11]), (dataa[11] | man_a_not_zero_w[10]), (dataa[10] | man_a_not_zero_w[9]), (dataa[9] | man_a_not_zero_w[8]), (dataa[8] | man_a_not_zero_w[7]), (dataa[7] | man_a_not_zero_w[6]), (dataa[6] | man_a_not_zero_w[5]), (dataa[5] | man_a_not_zero_w[4]), (dataa[4] | man_a_not_zero_w[3]), (dataa[3] | man_a_not_zero_w[2]), (dataa[2] | man_a_not_zero_w[1]), (dataa[1] | man_a_not_zero_w[0]), dataa[0]},\n\t\tman_add_sub_dataa_w = {pos_sign_bit_ext, dataa_man_dffe1_wo},\n\t\tman_add_sub_datab_w = {pos_sign_bit_ext, datab_man_dffe1_wo},\n\t\tman_add_sub_res_mag_dffe21_wi = man_res_mag_w2,\n\t\tman_add_sub_res_mag_dffe21_wo = man_add_sub_res_mag_dffe21,\n\t\tman_add_sub_res_mag_dffe23_wi = man_add_sub_res_mag_dffe21_wo,\n\t\tman_add_sub_res_mag_dffe23_wo = man_add_sub_res_mag_dffe23_wi,\n\t\tman_add_sub_res_mag_dffe26_wi = man_add_sub_res_mag_dffe23_wo,\n\t\tman_add_sub_res_mag_dffe26_wo = man_add_sub_res_mag_dffe26_wi,\n\t\tman_add_sub_res_mag_dffe27_wi = man_add_sub_res_mag_w2,\n\t\tman_add_sub_res_mag_dffe27_wo = man_add_sub_res_mag_dffe27_wi,\n\t\tman_add_sub_res_mag_w2 = (({28{man_add_sub_w[27]}} & man_2comp_res_w) | ({28{(~ man_add_sub_w[27])}} & man_add_sub_w)),\n\t\tman_add_sub_res_sign_dffe21_wo = man_add_sub_res_sign_dffe21,\n\t\tman_add_sub_res_sign_dffe23_wi = man_add_sub_res_sign_dffe21_wo,\n\t\tman_add_sub_res_sign_dffe23_wo = man_add_sub_res_sign_dffe23_wi,\n\t\tman_add_sub_res_sign_dffe26_wi = man_add_sub_res_sign_dffe23_wo,\n\t\tman_add_sub_res_sign_dffe26_wo = man_add_sub_res_sign_dffe26_wi,\n\t\tman_add_sub_res_sign_dffe27_wi = man_add_sub_res_sign_w2,\n\t\tman_add_sub_res_sign_dffe27_wo = man_add_sub_res_sign_dffe27_wi,\n\t\tman_add_sub_res_sign_w2 = ((need_complement_dffe22_wo & (~ man_add_sub_w[27])) | ((~ need_complement_dffe22_wo) & man_add_sub_w[27])),\n\t\tman_add_sub_w = {(({14{(~ wire_man_add_sub_lower_cout)}} & wire_man_add_sub_upper0_result) | ({14{wire_man_add_sub_lower_cout}} & wire_man_add_sub_upper1_result)), wire_man_add_sub_lower_result},\n\t\tman_all_zeros_w = {23{1'b0}},\n\t\tman_b_not_zero_w = {(datab[22] | man_b_not_zero_w[21]), (datab[21] | man_b_not_zero_w[20]), (datab[20] | man_b_not_zero_w[19]), (datab[19] | man_b_not_zero_w[18]), (datab[18] | man_b_not_zero_w[17]), (datab[17] | man_b_not_zero_w[16]), (datab[16] | man_b_not_zero_w[15]), (datab[15] | man_b_not_zero_w[14]), (datab[14] | man_b_not_zero_w[13]), (datab[13] | man_b_not_zero_w[12]), (datab[12] | man_b_not_zero_w[11]), (datab[11] | man_b_not_zero_w[10]), (datab[10] | man_b_not_zero_w[9]), (datab[9] | man_b_not_zero_w[8]), (datab[8] | man_b_not_zero_w[7]), (datab[7] | man_b_not_zero_w[6]), (datab[6] | man_b_not_zero_w[5]), (datab[5] | man_b_not_zero_w[4]), (datab[4] | man_b_not_zero_w[3]), (datab[3] | man_b_not_zero_w[2]), (datab[2] | man_b_not_zero_w[1]), (datab[1] | man_b_not_zero_w[0]), datab[0]},\n\t\tman_dffe31_wo = man_dffe31,\n\t\tman_intermediate_res_w = {{2{1'b0}}, man_res_w3},\n\t\tman_leading_zeros_cnt_w = man_leading_zeros_dffe31_wo,\n\t\tman_leading_zeros_dffe31_wi = (~ wire_leading_zeroes_cnt_q),\n\t\tman_leading_zeros_dffe31_wo = man_leading_zeros_dffe31,\n\t\tman_nan_w = 23'b10000000000000000000000,\n\t\tman_out_dffe5_wi = (({23{force_nan_w}} & man_nan_w) | ({23{(~ force_nan_w)}} & (({23{force_infinity_w}} & man_all_zeros_w) | ({23{(~ force_infinity_w)}} & (({23{(force_zero_w | denormal_flag_w)}} & man_all_zeros_w) | ({23{(~ (force_zero_w | denormal_flag_w))}} & man_res_dffe4_wo)))))),\n\t\tman_out_dffe5_wo = man_out_dffe5,\n\t\tman_res_dffe4_wi = man_rounded_res_w,\n\t\tman_res_dffe4_wo = man_res_dffe4,\n\t\tman_res_is_not_zero_dffe31_wi = man_res_not_zero_dffe26_wo,\n\t\tman_res_is_not_zero_dffe31_wo = man_res_is_not_zero_dffe31,\n\t\tman_res_is_not_zero_dffe32_wi = man_res_is_not_zero_dffe31_wo,\n\t\tman_res_is_not_zero_dffe32_wo = man_res_is_not_zero_dffe32_wi,\n\t\tman_res_is_not_zero_dffe33_wi = man_res_is_not_zero_dffe32_wo,\n\t\tman_res_is_not_zero_dffe33_wo = man_res_is_not_zero_dffe33_wi,\n\t\tman_res_is_not_zero_dffe3_wi = man_res_is_not_zero_dffe33_wo,\n\t\tman_res_is_not_zero_dffe3_wo = man_res_is_not_zero_dffe3,\n\t\tman_res_is_not_zero_dffe41_wi = man_res_is_not_zero_dffe42_wo,\n\t\tman_res_is_not_zero_dffe41_wo = man_res_is_not_zero_dffe41_wi,\n\t\tman_res_is_not_zero_dffe42_wi = man_res_is_not_zero_dffe3_wo,\n\t\tman_res_is_not_zero_dffe42_wo = man_res_is_not_zero_dffe42_wi,\n\t\tman_res_is_not_zero_dffe4_wi = man_res_is_not_zero_dffe41_wo,\n\t\tman_res_is_not_zero_dffe4_wo = man_res_is_not_zero_dffe4,\n\t\tman_res_mag_w2 = (({26{man_add_sub_res_mag_dffe27_wo[26]}} & man_add_sub_res_mag_dffe27_wo[26:1]) | ({26{(~ man_add_sub_res_mag_dffe27_wo[26])}} & man_add_sub_res_mag_dffe27_wo[25:0])),\n\t\tman_res_not_zero_dffe23_wi = man_res_not_zero_w2[24],\n\t\tman_res_not_zero_dffe23_wo = man_res_not_zero_dffe23_wi,\n\t\tman_res_not_zero_dffe26_wi = man_res_not_zero_dffe23_wo,\n\t\tman_res_not_zero_dffe26_wo = man_res_not_zero_dffe26_wi,\n\t\tman_res_not_zero_w2 = {(man_res_not_zero_w2[23] | man_add_sub_res_mag_dffe21_wo[25]), (man_res_not_zero_w2[22] | man_add_sub_res_mag_dffe21_wo[24]), (man_res_not_zero_w2[21] | man_add_sub_res_mag_dffe21_wo[23]), (man_res_not_zero_w2[20] | man_add_sub_res_mag_dffe21_wo[22]), (man_res_not_zero_w2[19] | man_add_sub_res_mag_dffe21_wo[21]), (man_res_not_zero_w2[18] | man_add_sub_res_mag_dffe21_wo[20]), (man_res_not_zero_w2[17] | man_add_sub_res_mag_dffe21_wo[19]), (man_res_not_zero_w2[16] | man_add_sub_res_mag_dffe21_wo[18]), (man_res_not_zero_w2[15] | man_add_sub_res_mag_dffe21_wo[17]), (man_res_not_zero_w2[14] | man_add_sub_res_mag_dffe21_wo[16]), (man_res_not_zero_w2[13] | man_add_sub_res_mag_dffe21_wo[15]), (man_res_not_zero_w2[12] | man_add_sub_res_mag_dffe21_wo[14]), (man_res_not_zero_w2[11] | man_add_sub_res_mag_dffe21_wo[13]), (man_res_not_zero_w2[10] | man_add_sub_res_mag_dffe21_wo[12]), (man_res_not_zero_w2[9] | man_add_sub_res_mag_dffe21_wo[11]), (man_res_not_zero_w2[8] | man_add_sub_res_mag_dffe21_wo[10]), (man_res_not_zero_w2[7] | man_add_sub_res_mag_dffe21_wo[9]), (man_res_not_zero_w2[6] | man_add_sub_res_mag_dffe21_wo[8]), (man_res_not_zero_w2[5] | man_add_sub_res_mag_dffe21_wo[7]), (man_res_not_zero_w2[4] | man_add_sub_res_mag_dffe21_wo[6]), (man_res_not_zero_w2[3] | man_add_sub_res_mag_dffe21_wo[5]), (man_res_not_zero_w2[2] | man_add_sub_res_mag_dffe21_wo[4]), (man_res_not_zero_w2[1] | man_add_sub_res_mag_dffe21_wo[3]), (man_res_not_zero_w2[0] | man_add_sub_res_mag_dffe21_wo[2]), man_add_sub_res_mag_dffe21_wo[1]},\n\t\tman_res_rounding_add_sub_datab_w = {{25{1'b0}}, man_rounding_add_value_w},\n\t\tman_res_rounding_add_sub_w = {(({13{(~ wire_man_res_rounding_add_sub_lower_cout)}} & adder_upper_w) | ({13{wire_man_res_rounding_add_sub_lower_cout}} & wire_man_res_rounding_add_sub_upper1_result)), wire_man_res_rounding_add_sub_lower_result},\n\t\tman_res_w3 = wire_lbarrel_shift_result[25:2],\n\t\tman_rounded_res_w = (({23{man_res_rounding_add_sub_w[24]}} & man_res_rounding_add_sub_w[23:1]) | ({23{(~ man_res_rounding_add_sub_w[24])}} & man_res_rounding_add_sub_w[22:0])),\n\t\tman_rounding_add_value_w = (round_bit_dffe3_wo & (sticky_bit_dffe3_wo | guard_bit_dffe3_wo)),\n\t\tman_smaller_dffe13_wi = man_smaller_w,\n\t\tman_smaller_dffe13_wo = man_smaller_dffe13_wi,\n\t\tman_smaller_w = (({24{exp_amb_mux_w}} & aligned_dataa_man_dffe12_wo) | ({24{(~ exp_amb_mux_w)}} & aligned_datab_man_dffe12_wo)),\n\t\tneed_complement_dffe22_wi = need_complement_dffe2_wo,\n\t\tneed_complement_dffe22_wo = need_complement_dffe22_wi,\n\t\tneed_complement_dffe2_wi = dataa_sign_dffe25_wo,\n\t\tneed_complement_dffe2_wo = need_complement_dffe2,\n\t\tpos_sign_bit_ext = {2{1'b0}},\n\t\tpriority_encoder_1pads_w = {4{1'b1}},\n\t\tresult = {sign_out_dffe5_wo, exp_out_dffe5_wo, man_out_dffe5_wo},\n\t\tround_bit_dffe21_wi = round_bit_w,\n\t\tround_bit_dffe21_wo = round_bit_dffe21,\n\t\tround_bit_dffe23_wi = round_bit_dffe21_wo,\n\t\tround_bit_dffe23_wo = round_bit_dffe23_wi,\n\t\tround_bit_dffe26_wi = round_bit_dffe23_wo,\n\t\tround_bit_dffe26_wo = round_bit_dffe26_wi,\n\t\tround_bit_dffe31_wi = round_bit_dffe26_wo,\n\t\tround_bit_dffe31_wo = round_bit_dffe31,\n\t\tround_bit_dffe32_wi = round_bit_dffe31_wo,\n\t\tround_bit_dffe32_wo = round_bit_dffe32_wi,\n\t\tround_bit_dffe33_wi = round_bit_dffe32_wo,\n\t\tround_bit_dffe33_wo = round_bit_dffe33_wi,\n\t\tround_bit_dffe3_wi = round_bit_dffe33_wo,\n\t\tround_bit_dffe3_wo = round_bit_dffe3,\n\t\tround_bit_w = ((((((~ man_add_sub_res_mag_dffe27_wo[26]) & (~ man_add_sub_res_mag_dffe27_wo[25])) & man_add_sub_res_mag_dffe27_wo[0]) | (((~ man_add_sub_res_mag_dffe27_wo[26]) & man_add_sub_res_mag_dffe27_wo[25]) & man_add_sub_res_mag_dffe27_wo[1])) | ((man_add_sub_res_mag_dffe27_wo[26] & (~ man_add_sub_res_mag_dffe27_wo[25])) & man_add_sub_res_mag_dffe27_wo[2])) | ((man_add_sub_res_mag_dffe27_wo[26] & man_add_sub_res_mag_dffe27_wo[25]) & man_add_sub_res_mag_dffe27_wo[2])),\n\t\trounded_res_infinity_dffe4_wi = exp_rounded_res_infinity_w,\n\t\trounded_res_infinity_dffe4_wo = rounded_res_infinity_dffe4,\n\t\trshift_distance_dffe13_wi = rshift_distance_w,\n\t\trshift_distance_dffe13_wo = rshift_distance_dffe13_wi,\n\t\trshift_distance_dffe14_wi = rshift_distance_dffe13_wo,\n\t\trshift_distance_dffe14_wo = rshift_distance_dffe14_wi,\n\t\trshift_distance_dffe15_wi = rshift_distance_dffe14_wo,\n\t\trshift_distance_dffe15_wo = rshift_distance_dffe15_wi,\n\t\trshift_distance_w = (({5{exp_diff_abs_exceed_max_w[2]}} & exp_diff_abs_max_w) | ({5{(~ exp_diff_abs_exceed_max_w[2])}} & exp_diff_abs_w[4:0])),\n\t\tsign_dffe31_wi = ((man_res_not_zero_dffe26_wo & man_add_sub_res_sign_dffe26_wo) | ((~ man_res_not_zero_dffe26_wo) & zero_man_sign_dffe26_wo)),\n\t\tsign_dffe31_wo = sign_dffe31,\n\t\tsign_dffe32_wi = sign_dffe31_wo,\n\t\tsign_dffe32_wo = sign_dffe32_wi,\n\t\tsign_dffe33_wi = sign_dffe32_wo,\n\t\tsign_dffe33_wo = sign_dffe33_wi,\n\t\tsign_out_dffe5_wi = ((~ force_nan_w) & ((force_infinity_w & infinite_output_sign_dffe4_wo) | ((~ force_infinity_w) & sign_res_dffe4_wo))),\n\t\tsign_out_dffe5_wo = sign_out_dffe5,\n\t\tsign_res_dffe3_wi = sign_dffe33_wo,\n\t\tsign_res_dffe3_wo = sign_res_dffe3,\n\t\tsign_res_dffe41_wi = sign_res_dffe42_wo,\n\t\tsign_res_dffe41_wo = sign_res_dffe41_wi,\n\t\tsign_res_dffe42_wi = sign_res_dffe3_wo,\n\t\tsign_res_dffe42_wo = sign_res_dffe42_wi,\n\t\tsign_res_dffe4_wi = sign_res_dffe41_wo,\n\t\tsign_res_dffe4_wo = sign_res_dffe4,\n\t\tsticky_bit_cnt_dataa_w = {1'b0, rshift_distance_dffe15_wo},\n\t\tsticky_bit_cnt_datab_w = {1'b0, wire_trailing_zeros_cnt_q},\n\t\tsticky_bit_cnt_res_w = wire_add_sub3_result,\n\t\tsticky_bit_dffe1_wi = wire_trailing_zeros_limit_comparator_agb,\n\t\tsticky_bit_dffe1_wo = sticky_bit_dffe1,\n\t\tsticky_bit_dffe21_wi = sticky_bit_w,\n\t\tsticky_bit_dffe21_wo = sticky_bit_dffe21,\n\t\tsticky_bit_dffe22_wi = sticky_bit_dffe2_wo,\n\t\tsticky_bit_dffe22_wo = sticky_bit_dffe22_wi,\n\t\tsticky_bit_dffe23_wi = sticky_bit_dffe21_wo,\n\t\tsticky_bit_dffe23_wo = sticky_bit_dffe23_wi,\n\t\tsticky_bit_dffe25_wi = sticky_bit_dffe1_wo,\n\t\tsticky_bit_dffe25_wo = sticky_bit_dffe25_wi,\n\t\tsticky_bit_dffe26_wi = sticky_bit_dffe23_wo,\n\t\tsticky_bit_dffe26_wo = sticky_bit_dffe26_wi,\n\t\tsticky_bit_dffe27_wi = sticky_bit_dffe22_wo,\n\t\tsticky_bit_dffe27_wo = sticky_bit_dffe27_wi,\n\t\tsticky_bit_dffe2_wi = sticky_bit_dffe25_wo,\n\t\tsticky_bit_dffe2_wo = sticky_bit_dffe2,\n\t\tsticky_bit_dffe31_wi = sticky_bit_dffe26_wo,\n\t\tsticky_bit_dffe31_wo = sticky_bit_dffe31,\n\t\tsticky_bit_dffe32_wi = sticky_bit_dffe31_wo,\n\t\tsticky_bit_dffe32_wo = sticky_bit_dffe32_wi,\n\t\tsticky_bit_dffe33_wi = sticky_bit_dffe32_wo,\n\t\tsticky_bit_dffe33_wo = sticky_bit_dffe33_wi,\n\t\tsticky_bit_dffe3_wi = sticky_bit_dffe33_wo,\n\t\tsticky_bit_dffe3_wo = sticky_bit_dffe3,\n\t\tsticky_bit_w = ((((((~ man_add_sub_res_mag_dffe27_wo[26]) & (~ man_add_sub_res_mag_dffe27_wo[25])) & sticky_bit_dffe27_wo) | (((~ man_add_sub_res_mag_dffe27_wo[26]) & man_add_sub_res_mag_dffe27_wo[25]) & (sticky_bit_dffe27_wo | man_add_sub_res_mag_dffe27_wo[0]))) | ((man_add_sub_res_mag_dffe27_wo[26] & (~ man_add_sub_res_mag_dffe27_wo[25])) & ((sticky_bit_dffe27_wo | man_add_sub_res_mag_dffe27_wo[0]) | man_add_sub_res_mag_dffe27_wo[1]))) | ((man_add_sub_res_mag_dffe27_wo[26] & man_add_sub_res_mag_dffe27_wo[25]) & ((sticky_bit_dffe27_wo | man_add_sub_res_mag_dffe27_wo[0]) | man_add_sub_res_mag_dffe27_wo[1]))),\n\t\ttrailing_zeros_limit_w = 6'b000010,\n\t\tzero_man_sign_dffe21_wi = zero_man_sign_dffe27_wo,\n\t\tzero_man_sign_dffe21_wo = zero_man_sign_dffe21,\n\t\tzero_man_sign_dffe22_wi = zero_man_sign_dffe2_wo,\n\t\tzero_man_sign_dffe22_wo = zero_man_sign_dffe22_wi,\n\t\tzero_man_sign_dffe23_wi = zero_man_sign_dffe21_wo,\n\t\tzero_man_sign_dffe23_wo = zero_man_sign_dffe23_wi,\n\t\tzero_man_sign_dffe26_wi = zero_man_sign_dffe23_wo,\n\t\tzero_man_sign_dffe26_wo = zero_man_sign_dffe26_wi,\n\t\tzero_man_sign_dffe27_wi = zero_man_sign_dffe22_wo,\n\t\tzero_man_sign_dffe27_wo = zero_man_sign_dffe27_wi,\n\t\tzero_man_sign_dffe2_wi = (dataa_sign_dffe25_wo & add_sub_dffe25_wo),\n\t\tzero_man_sign_dffe2_wo = zero_man_sign_dffe2;\nendmodule \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n`timescale 1ns / 1ps\n\n\n\n\n\n\nmodule fpoint_qsys (\n                     \n                      clk,\n                      clk_en,\n                      dataa,\n                      datab,\n                      n,\n                      reset,\n                      start,\n\n                     \n                      done,\n                      result\n                   )\n;\n\n  output           done;\n  output  [ 31: 0] result;\n  input            clk;\n  input            clk_en;\n  input   [ 31: 0] dataa;\n  input   [ 31: 0] datab;\n  input   [  1: 0] n;\n  input            reset;\n  input            start;\n\n  wire             add_sub;\n  wire    [  3: 0] counter_in;\n  reg     [  3: 0] counter_out;\n  reg     [ 31: 0] dataa_regout;\n  reg     [ 31: 0] datab_regout;\n  wire             done;\n  wire    [  3: 0] load_data;\n  wire             local_reset_n;\n  wire    [ 31: 0] result;\n  wire    [ 31: 0] result_addsub;\n  wire    [ 31: 0] result_mult;\n  \n  always @(posedge clk or negedge local_reset_n)\n    begin\n      if (local_reset_n == 0)\n          dataa_regout <= 0;\n      else if (clk_en)\n          dataa_regout <= dataa;\n    end\n\n\n  \n  always @(posedge clk or negedge local_reset_n)\n    begin\n      if (local_reset_n == 0)\n          datab_regout <= 0;\n      else if (clk_en)\n          datab_regout <= datab;\n    end\n\n\n  fpoint_qsys_mult_single the_fp_mult\n    (\n      .aclr (reset),\n      .clk_en (clk_en),\n      .clock (clk),\n      .dataa (dataa_regout),\n      .datab (datab_regout),\n      .result (result_mult)\n    );\n\n\n  fpoint_qsys_addsub_single the_fp_addsub\n    (\n      .aclr (reset),\n      .add_sub (add_sub),\n      .clk_en (clk_en),\n      .clock (clk),\n      .dataa (dataa_regout),\n      .datab (datab_regout),\n      .result (result_addsub)\n    );\n\n\n  \n  \n  always @(posedge clk or negedge local_reset_n)\n    begin\n      if (local_reset_n == 0)\n          counter_out <= 4'd10;\n      else if (clk_en)\n          counter_out <= counter_in;\n    end\n\n\n  \n  assign counter_in = (start == 0)? counter_out - 1'b1 :\n    load_data;\n\n  assign add_sub = n[0];\n  assign local_reset_n = ~reset;\n  assign done = clk_en & ~|counter_out & ~start;\n  \n  assign load_data = (n == 0)? 10 :\n    (n == 1)? 8 :\n    8;\n\n  \n  assign result = (n == 0)? result_mult :\n    (n == 1)? result_addsub :\n    result_addsub;\n\n\nendmodule\n\n```"
        },
        {
            "role": "user",
            "content": "Based on the provided original Verilog code, its comments and above answers, generate a detailed specification for the module. Include the following information in a single, concise paragraph:\n1. The name of the module.\n2. A simple explanation of the module's functionality.\n3. The input and output ports, along with a brief explanation of each.\n4. The internal signals used within the module, with a brief explanation of their purpose.\n5. An overview of the different blocks or sections in the code and their functions.\nEnsure that the specification is clear and accurately reflects the details from the code and comments.\nYour answer should be structured and well-organized, providing a comprehensive and detailed overview of the module's design and operation.\nPlease provide your answer in the following format:\nModule name: [module name]. Module specification: [module specification]."
        },
        {
            "role": "assistant",
            "content": "Module name: fpoint_qsys. Module specification: This module implements a floating-point arithmetic unit capable of performing multiplication and addition/subtraction operations on 32-bit floating-point numbers. It takes input operands (dataa and datab), a 2-bit operation selector (n), and control signals (clk, clk_en, reset, start). The module outputs a 32-bit result and a done signal. Internally, it uses registered versions of input operands (dataa_regout and datab_regout), a counter (counter_out) for operation timing, and separate sub-modules for multiplication (the_fp_mult) and addition/subtraction (the_fp_addsub). The module selects between multiplication and addition/subtraction based on the n input, with n=0 for multiplication and n=1 or n=2 for addition/subtraction. The add_"
        }
    ],
    "claude-message": [
        {
            "role": "user",
            "content": [
                {
                    "type": "text",
                    "text": "You are an expert in hardware design with a deep understanding of Verilog RTL codes. Now I want to train a large language model for code comment generation tasks specifically focused on Verilog RTL codes. And I want you to help me process the raw data, transforming it into suitable formats that can serve as inputs and outputs for the model."
                },
                {
                    "type": "text",
                    "text": "Name of the module and its functionality is as follows: \nModule name: fpoint_qsys\n\nExplanation: This module appears to be a floating-point arithmetic unit capable of performing multiplication and addition/subtraction operations on 32-bit floating-point numbers. It takes two input operands (dataa and datab), a 2-bit operation selector (n), and control signals (clk, clk_en, reset, start). The module contains separate sub-modules for multiplication and addition/subtraction. It uses a counter to control the operation timing and generates a 'done' signal upon completion. The result is output as a 32-bit floating-point number. The module can perform multiplication when n=0, and addition or subtraction when n=1 or n=2, with the add_sub signal determining addition or subtraction for the latter cases."
                },
                {
                    "type": "text",
                    "text": "Input and output ports and their explanation is as follows: \nBased on the given Verilog code for the fpoint_qsys module, here are the input and output ports along with their explanations:\n\nInput ports: clk, clk_en, dataa, datab, n, reset, start. Explanation:\n- clk: Clock input for synchronous operations\n- clk_en: Clock enable signal\n- dataa: 32-bit input operand A\n- datab: 32-bit input operand B\n- n: 2-bit operation selector (0 for multiplication, 1 or 2 for addition/subtraction)\n- reset: Reset signal to initialize the module\n- start: Signal to initiate the arithmetic operation\n\nOutput ports: done, result. Explanation:\n- done: Signal indicating the completion of the arithmetic operation\n- result: 32-bit output containing the result of the arithmetic operation\n\nThese ports define the interface of the fpoint_qsys module, allowing it to receive input data and control signals, perform floating-point arithmetic operations, and provide the result along with a completion signal."
                },
                {
                    "type": "text",
                    "text": "Internal signals and their explanation is as follows: \nBased on the given code and previous information, here are the internal signals and their explanations:\n\nInternal signals: add_sub, counter_in, counter_out, dataa_regout, datab_regout, load_data, local_reset_n, result_addsub, result_mult.\n\nExplanation:\n1. add_sub: Determines whether addition or subtraction is performed in the addsub unit.\n2. counter_in: Input value for the counter, used to control operation timing.\n3. counter_out: Current value of the counter, decrements until operation is complete.\n4. dataa_regout: Registered version of input dataa, used for synchronization.\n5. datab_regout: Registered version of input datab, used for synchronization.\n6. load_data: Initial counter value based on the operation type.\n7. local_reset_n: Inverted reset signal for internal use.\n8. result_addsub: Output from the addition/subtraction unit.\n9. result_mult: Output from the multiplication unit.\n\nThese internal signals facilitate the operation of the floating-point arithmetic unit, managing data flow, timing, and intermediate results."
                },
                {
                    "type": "text",
                    "text": "Original Verilog code is as follows: \n<code>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_qsys_mult_single\n\t( \n\taclr,\n\tclk_en,\n\tclock,\n\tdataa,\n\tdatab,\n\tresult) ;\n\tinput   aclr;\n\tinput   clk_en;\n\tinput   clock;\n\tinput   [31:0]  dataa;\n\tinput   [31:0]  datab;\n\toutput   [31:0]  result;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\ttri0   aclr;\n\ttri1   clk_en;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\n\treg\tdataa_exp_all_one_ff_p1;\n\treg\tdataa_exp_not_zero_ff_p1;\n\treg\tdataa_man_not_zero_ff_p1;\n\treg\tdataa_man_not_zero_ff_p2;\n\treg\tdatab_exp_all_one_ff_p1;\n\treg\tdatab_exp_not_zero_ff_p1;\n\treg\tdatab_man_not_zero_ff_p1;\n\treg\tdatab_man_not_zero_ff_p2;\n\treg\t[9:0]\tdelay_exp2_bias;\n\treg\t[9:0]\tdelay_exp3_bias;\n\treg\t[9:0]\tdelay_exp_bias;\n\treg\tdelay_man_product_msb;\n\treg\tdelay_man_product_msb2;\n\treg\tdelay_man_product_msb_p0;\n\treg\t[23:0]\tdelay_round;\n\treg\t[8:0]\texp_add_p1;\n\treg\t[9:0]\texp_adj_p1;\n\treg\t[9:0]\texp_adj_p2;\n\treg\t[8:0]\texp_bias_p1;\n\treg\t[8:0]\texp_bias_p2;\n\treg\t[7:0]\texp_result_ff;\n\treg\tinput_is_infinity_dffe_0;\n\treg\tinput_is_infinity_dffe_1;\n\treg\tinput_is_infinity_dffe_2;\n\treg\tinput_is_infinity_dffe_3;\n\treg\tinput_is_infinity_ff1;\n\treg\tinput_is_infinity_ff2;\n\treg\tinput_is_infinity_ff3;\n\treg\tinput_is_infinity_ff4;\n\treg\tinput_is_nan_dffe_0;\n\treg\tinput_is_nan_dffe_1;\n\treg\tinput_is_nan_dffe_2;\n\treg\tinput_is_nan_dffe_3;\n\treg\tinput_is_nan_ff1;\n\treg\tinput_is_nan_ff2;\n\treg\tinput_is_nan_ff3;\n\treg\tinput_is_nan_ff4;\n\treg\tinput_not_zero_dffe_0;\n\treg\tinput_not_zero_dffe_1;\n\treg\tinput_not_zero_dffe_2;\n\treg\tinput_not_zero_dffe_3;\n\treg\tinput_not_zero_ff1;\n\treg\tinput_not_zero_ff2;\n\treg\tinput_not_zero_ff3;\n\treg\tinput_not_zero_ff4;\n\treg\tlsb_dffe;\n\treg\t[22:0]\tman_result_ff;\n\treg\tman_round_carry_p0;\n\treg\t[23:0]\tman_round_p;\n\treg\t[23:0]\tman_round_p0;\n\treg\t[24:0]\tman_round_p2;\n\treg\tround_dffe;\n\treg\t[0:0]\tsign_node_ff0;\n\treg\t[0:0]\tsign_node_ff1;\n\treg\t[0:0]\tsign_node_ff2;\n\treg\t[0:0]\tsign_node_ff3;\n\treg\t[0:0]\tsign_node_ff4;\n\treg\t[0:0]\tsign_node_ff5;\n\treg\t[0:0]\tsign_node_ff6;\n\treg\t[0:0]\tsign_node_ff7;\n\treg\t[0:0]\tsign_node_ff8;\n\treg\t[0:0]\tsign_node_ff9;\n\treg\tsticky_dffe;\n\twire  [8:0]   wire_exp_add_adder_result;\n\twire  [9:0]   wire_exp_adj_adder_result;\n\twire  [9:0]   wire_exp_bias_subtr_result;\n\twire  [24:0]   wire_man_round_adder_result;\n\twire  [47:0]   wire_man_product2_mult_result;\n\twire  [9:0]  bias;\n\twire  [7:0]  dataa_exp_all_one;\n\twire  [7:0]  dataa_exp_not_zero;\n\twire  [22:0]  dataa_man_not_zero;\n\twire  [7:0]  datab_exp_all_one;\n\twire  [7:0]  datab_exp_not_zero;\n\twire  [22:0]  datab_man_not_zero;\n\twire  exp_is_inf;\n\twire  exp_is_zero;\n\twire  [9:0]  expmod;\n\twire  [7:0]  inf_num;\n\twire  lsb_bit;\n\twire  [24:0]  man_shift_full;\n\twire  [7:0]  result_exp_all_one;\n\twire  [8:0]  result_exp_not_zero;\n\twire  round_bit;\n\twire  round_carry;\n\twire  [22:0]  sticky_bit;\n\n\t\n\tinitial\n\t\tdataa_exp_all_one_ff_p1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) dataa_exp_all_one_ff_p1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   dataa_exp_all_one_ff_p1 <= dataa_exp_all_one[7];\n\t\n\tinitial\n\t\tdataa_exp_not_zero_ff_p1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) dataa_exp_not_zero_ff_p1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   dataa_exp_not_zero_ff_p1 <= dataa_exp_not_zero[7];\n\t\n\tinitial\n\t\tdataa_man_not_zero_ff_p1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) dataa_man_not_zero_ff_p1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   dataa_man_not_zero_ff_p1 <= dataa_man_not_zero[10];\n\t\n\tinitial\n\t\tdataa_man_not_zero_ff_p2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) dataa_man_not_zero_ff_p2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   dataa_man_not_zero_ff_p2 <= dataa_man_not_zero[22];\n\t\n\tinitial\n\t\tdatab_exp_all_one_ff_p1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) datab_exp_all_one_ff_p1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   datab_exp_all_one_ff_p1 <= datab_exp_all_one[7];\n\t\n\tinitial\n\t\tdatab_exp_not_zero_ff_p1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) datab_exp_not_zero_ff_p1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   datab_exp_not_zero_ff_p1 <= datab_exp_not_zero[7];\n\t\n\tinitial\n\t\tdatab_man_not_zero_ff_p1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) datab_man_not_zero_ff_p1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   datab_man_not_zero_ff_p1 <= datab_man_not_zero[10];\n\t\n\tinitial\n\t\tdatab_man_not_zero_ff_p2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) datab_man_not_zero_ff_p2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   datab_man_not_zero_ff_p2 <= datab_man_not_zero[22];\n\t\n\tinitial\n\t\tdelay_exp2_bias = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) delay_exp2_bias <= 10'b0;\n\t\telse if  (clk_en == 1'b1)   delay_exp2_bias <= delay_exp_bias;\n\t\n\tinitial\n\t\tdelay_exp3_bias = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) delay_exp3_bias <= 10'b0;\n\t\telse if  (clk_en == 1'b1)   delay_exp3_bias <= delay_exp2_bias;\n\t\n\tinitial\n\t\tdelay_exp_bias = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) delay_exp_bias <= 10'b0;\n\t\telse if  (clk_en == 1'b1)   delay_exp_bias <= wire_exp_bias_subtr_result;\n\t\n\tinitial\n\t\tdelay_man_product_msb = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) delay_man_product_msb <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   delay_man_product_msb <= delay_man_product_msb_p0;\n\t\n\tinitial\n\t\tdelay_man_product_msb2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) delay_man_product_msb2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   delay_man_product_msb2 <= delay_man_product_msb;\n\t\n\tinitial\n\t\tdelay_man_product_msb_p0 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) delay_man_product_msb_p0 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   delay_man_product_msb_p0 <= wire_man_product2_mult_result[47];\n\t\n\tinitial\n\t\tdelay_round = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) delay_round <= 24'b0;\n\t\telse if  (clk_en == 1'b1)   delay_round <= ((man_round_p2[23:0] & {24{(~ man_round_p2[24])}}) | (man_round_p2[24:1] & {24{man_round_p2[24]}}));\n\t\n\tinitial\n\t\texp_add_p1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_add_p1 <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_add_p1 <= wire_exp_add_adder_result;\n\t\n\tinitial\n\t\texp_adj_p1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_adj_p1 <= 10'b0;\n\t\telse if  (clk_en == 1'b1)   exp_adj_p1 <= delay_exp3_bias;\n\t\n\tinitial\n\t\texp_adj_p2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_adj_p2 <= 10'b0;\n\t\telse if  (clk_en == 1'b1)   exp_adj_p2 <= wire_exp_adj_adder_result;\n\t\n\tinitial\n\t\texp_bias_p1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_bias_p1 <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_bias_p1 <= exp_add_p1[8:0];\n\t\n\tinitial\n\t\texp_bias_p2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_bias_p2 <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   exp_bias_p2 <= exp_bias_p1;\n\t\n\tinitial\n\t\texp_result_ff = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_result_ff <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   exp_result_ff <= ((inf_num & {8{((exp_is_inf | input_is_infinity_ff4) | input_is_nan_ff4)}}) | ((exp_adj_p2[7:0] & {8{(~ exp_is_zero)}}) & {8{input_not_zero_ff4}}));\n\t\n\tinitial\n\t\tinput_is_infinity_dffe_0 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_infinity_dffe_0 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_infinity_dffe_0 <= ((dataa_exp_all_one_ff_p1 & (~ (dataa_man_not_zero_ff_p1 | dataa_man_not_zero_ff_p2))) | (datab_exp_all_one_ff_p1 & (~ (datab_man_not_zero_ff_p1 | datab_man_not_zero_ff_p2))));\n\t\n\tinitial\n\t\tinput_is_infinity_dffe_1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_infinity_dffe_1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_infinity_dffe_1 <= input_is_infinity_dffe_0;\n\t\n\tinitial\n\t\tinput_is_infinity_dffe_2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_infinity_dffe_2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_infinity_dffe_2 <= input_is_infinity_dffe_1;\n\t\n\tinitial\n\t\tinput_is_infinity_dffe_3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_infinity_dffe_3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_infinity_dffe_3 <= input_is_infinity_dffe_2;\n\t\n\tinitial\n\t\tinput_is_infinity_ff1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_infinity_ff1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_infinity_ff1 <= input_is_infinity_dffe_3;\n\t\n\tinitial\n\t\tinput_is_infinity_ff2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_infinity_ff2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_infinity_ff2 <= input_is_infinity_ff1;\n\t\n\tinitial\n\t\tinput_is_infinity_ff3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_infinity_ff3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_infinity_ff3 <= input_is_infinity_ff2;\n\t\n\tinitial\n\t\tinput_is_infinity_ff4 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_infinity_ff4 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_infinity_ff4 <= input_is_infinity_ff3;\n\t\n\tinitial\n\t\tinput_is_nan_dffe_0 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_nan_dffe_0 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_nan_dffe_0 <= ((dataa_exp_all_one_ff_p1 & (dataa_man_not_zero_ff_p1 | dataa_man_not_zero_ff_p2)) | (datab_exp_all_one_ff_p1 & (datab_man_not_zero_ff_p1 | datab_man_not_zero_ff_p2)));\n\t\n\tinitial\n\t\tinput_is_nan_dffe_1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_nan_dffe_1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_nan_dffe_1 <= input_is_nan_dffe_0;\n\t\n\tinitial\n\t\tinput_is_nan_dffe_2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_nan_dffe_2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_nan_dffe_2 <= input_is_nan_dffe_1;\n\t\n\tinitial\n\t\tinput_is_nan_dffe_3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_nan_dffe_3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_nan_dffe_3 <= input_is_nan_dffe_2;\n\t\n\tinitial\n\t\tinput_is_nan_ff1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_nan_ff1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_nan_ff1 <= input_is_nan_dffe_3;\n\t\n\tinitial\n\t\tinput_is_nan_ff2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_nan_ff2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_nan_ff2 <= input_is_nan_ff1;\n\t\n\tinitial\n\t\tinput_is_nan_ff3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_nan_ff3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_nan_ff3 <= input_is_nan_ff2;\n\t\n\tinitial\n\t\tinput_is_nan_ff4 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_nan_ff4 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_nan_ff4 <= input_is_nan_ff3;\n\t\n\tinitial\n\t\tinput_not_zero_dffe_0 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_not_zero_dffe_0 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_not_zero_dffe_0 <= (dataa_exp_not_zero_ff_p1 & datab_exp_not_zero_ff_p1);\n\t\n\tinitial\n\t\tinput_not_zero_dffe_1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_not_zero_dffe_1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_not_zero_dffe_1 <= input_not_zero_dffe_0;\n\t\n\tinitial\n\t\tinput_not_zero_dffe_2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_not_zero_dffe_2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_not_zero_dffe_2 <= input_not_zero_dffe_1;\n\t\n\tinitial\n\t\tinput_not_zero_dffe_3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_not_zero_dffe_3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_not_zero_dffe_3 <= input_not_zero_dffe_2;\n\t\n\tinitial\n\t\tinput_not_zero_ff1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_not_zero_ff1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_not_zero_ff1 <= input_not_zero_dffe_3;\n\t\n\tinitial\n\t\tinput_not_zero_ff2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_not_zero_ff2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_not_zero_ff2 <= input_not_zero_ff1;\n\t\n\tinitial\n\t\tinput_not_zero_ff3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_not_zero_ff3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_not_zero_ff3 <= input_not_zero_ff2;\n\t\n\tinitial\n\t\tinput_not_zero_ff4 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_not_zero_ff4 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_not_zero_ff4 <= input_not_zero_ff3;\n\t\n\tinitial\n\t\tlsb_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) lsb_dffe <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   lsb_dffe <= lsb_bit;\n\t\n\tinitial\n\t\tman_result_ff = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_result_ff <= 23'b0;\n\t\telse if  (clk_en == 1'b1)   man_result_ff <= {((((((delay_round[22] & input_not_zero_ff4) & (~ input_is_infinity_ff4)) & (~ exp_is_inf)) & (~ exp_is_zero)) | (input_is_infinity_ff4 & (~ input_not_zero_ff4))) | input_is_nan_ff4), (((((delay_round[21:0] & {22{input_not_zero_ff4}}) & {22{(~ input_is_infinity_ff4)}}) & {22{(~ exp_is_inf)}}) & {22{(~ exp_is_zero)}}) & {22{(~ input_is_nan_ff4)}})};\n\t\n\tinitial\n\t\tman_round_carry_p0 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_round_carry_p0 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   man_round_carry_p0 <= round_carry;\n\t\n\tinitial\n\t\tman_round_p = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_round_p <= 24'b0;\n\t\telse if  (clk_en == 1'b1)   man_round_p <= man_shift_full[24:1];\n\t\n\tinitial\n\t\tman_round_p0 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_round_p0 <= 24'b0;\n\t\telse if  (clk_en == 1'b1)   man_round_p0 <= man_round_p;\n\t\n\tinitial\n\t\tman_round_p2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_round_p2 <= 25'b0;\n\t\telse if  (clk_en == 1'b1)   man_round_p2 <= wire_man_round_adder_result;\n\t\n\tinitial\n\t\tround_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) round_dffe <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   round_dffe <= round_bit;\n\t\n\tinitial\n\t\tsign_node_ff0 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_node_ff0 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_node_ff0 <= (dataa[31] ^ datab[31]);\n\t\n\tinitial\n\t\tsign_node_ff1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_node_ff1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_node_ff1 <= sign_node_ff0[0:0];\n\t\n\tinitial\n\t\tsign_node_ff2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_node_ff2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_node_ff2 <= sign_node_ff1[0:0];\n\t\n\tinitial\n\t\tsign_node_ff3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_node_ff3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_node_ff3 <= sign_node_ff2[0:0];\n\t\n\tinitial\n\t\tsign_node_ff4 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_node_ff4 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_node_ff4 <= sign_node_ff3[0:0];\n\t\n\tinitial\n\t\tsign_node_ff5 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_node_ff5 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_node_ff5 <= sign_node_ff4[0:0];\n\t\n\tinitial\n\t\tsign_node_ff6 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_node_ff6 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_node_ff6 <= sign_node_ff5[0:0];\n\t\n\tinitial\n\t\tsign_node_ff7 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_node_ff7 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_node_ff7 <= sign_node_ff6[0:0];\n\t\n\tinitial\n\t\tsign_node_ff8 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_node_ff8 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_node_ff8 <= sign_node_ff7[0:0];\n\t\n\tinitial\n\t\tsign_node_ff9 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_node_ff9 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_node_ff9 <= sign_node_ff8[0:0];\n\t\n\tinitial\n\t\tsticky_dffe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sticky_dffe <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sticky_dffe <= sticky_bit[22];\n\tlpm_add_sub   exp_add_adder\n\t( \n\t.aclr(aclr),\n\t.cin(1'b0),\n\t.clken(clk_en),\n\t.clock(clock),\n\t.cout(),\n\t.dataa({1'b0, dataa[30:23]}),\n\t.datab({1'b0, datab[30:23]}),\n\t.overflow(),\n\t.result(wire_exp_add_adder_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.add_sub(1'b1)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\texp_add_adder.lpm_pipeline = 1,\n\t\texp_add_adder.lpm_width = 9,\n\t\texp_add_adder.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   exp_adj_adder\n\t( \n\t.cin(1'b0),\n\t.cout(),\n\t.dataa(exp_adj_p1),\n\t.datab({expmod[9:0]}),\n\t.overflow(),\n\t.result(wire_exp_adj_adder_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\texp_adj_adder.lpm_pipeline = 0,\n\t\texp_adj_adder.lpm_width = 10,\n\t\texp_adj_adder.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   exp_bias_subtr\n\t( \n\t.cout(),\n\t.dataa({1'b0, exp_bias_p2}),\n\t.datab({bias[9:0]}),\n\t.overflow(),\n\t.result(wire_exp_bias_subtr_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.cin(),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\texp_bias_subtr.lpm_direction = \"SUB\",\n\t\texp_bias_subtr.lpm_pipeline = 0,\n\t\texp_bias_subtr.lpm_representation = \"UNSIGNED\",\n\t\texp_bias_subtr.lpm_width = 10,\n\t\texp_bias_subtr.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   man_round_adder\n\t( \n\t.cout(),\n\t.dataa({1'b0, man_round_p0}),\n\t.datab({{24{1'b0}}, man_round_carry_p0}),\n\t.overflow(),\n\t.result(wire_man_round_adder_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.cin(),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tman_round_adder.lpm_pipeline = 0,\n\t\tman_round_adder.lpm_width = 25,\n\t\tman_round_adder.lpm_type = \"lpm_add_sub\";\n\tlpm_mult   man_product2_mult\n\t( \n\t.aclr(aclr),\n\t.clken(clk_en),\n\t.clock(clock),\n\t.dataa({1'b1, dataa[22:0]}),\n\t.datab({1'b1, datab[22:0]}),\n\t.result(wire_man_product2_mult_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.sum({1{1'b0}})\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tman_product2_mult.lpm_pipeline = 5,\n\t\tman_product2_mult.lpm_representation = \"UNSIGNED\",\n\t\tman_product2_mult.lpm_widtha = 24,\n\t\tman_product2_mult.lpm_widthb = 24,\n\t\tman_product2_mult.lpm_widthp = 48,\n\t\tman_product2_mult.lpm_widths = 1,\n\t\tman_product2_mult.lpm_type = \"lpm_mult\",\n\t\tman_product2_mult.lpm_hint = \"DEDICATED_MULTIPLIER_CIRCUITRY=YES\";\n\tassign\n\t\tbias = {{3{1'b0}}, {7{1'b1}}},\n\t\tdataa_exp_all_one = {(dataa[30] & dataa_exp_all_one[6]), (dataa[29] & dataa_exp_all_one[5]), (dataa[28] & dataa_exp_all_one[4]), (dataa[27] & dataa_exp_all_one[3]), (dataa[26] & dataa_exp_all_one[2]), (dataa[25] & dataa_exp_all_one[1]), (dataa[24] & dataa_exp_all_one[0]), dataa[23]},\n\t\tdataa_exp_not_zero = {(dataa[30] | dataa_exp_not_zero[6]), (dataa[29] | dataa_exp_not_zero[5]), (dataa[28] | dataa_exp_not_zero[4]), (dataa[27] | dataa_exp_not_zero[3]), (dataa[26] | dataa_exp_not_zero[2]), (dataa[25] | dataa_exp_not_zero[1]), (dataa[24] | dataa_exp_not_zero[0]), dataa[23]},\n\t\tdataa_man_not_zero = {(dataa[22] | dataa_man_not_zero[21]), (dataa[21] | dataa_man_not_zero[20]), (dataa[20] | dataa_man_not_zero[19]), (dataa[19] | dataa_man_not_zero[18]), (dataa[18] | dataa_man_not_zero[17]), (dataa[17] | dataa_man_not_zero[16]), (dataa[16] | dataa_man_not_zero[15]), (dataa[15] | dataa_man_not_zero[14]), (dataa[14] | dataa_man_not_zero[13]), (dataa[13] | dataa_man_not_zero[12]), (dataa[12] | dataa_man_not_zero[11]), dataa[11], (dataa[10] | dataa_man_not_zero[9]), (dataa[9] | dataa_man_not_zero[8]), (dataa[8] | dataa_man_not_zero[7]), (dataa[7] | dataa_man_not_zero[6]), (dataa[6] | dataa_man_not_zero[5]), (dataa[5] | dataa_man_not_zero[4]), (dataa[4] | dataa_man_not_zero[3]), (dataa[3] | dataa_man_not_zero[2]), (dataa[2] | dataa_man_not_zero[1]), (dataa[1] | dataa_man_not_zero[0]), dataa[0]},\n\t\tdatab_exp_all_one = {(datab[30] & datab_exp_all_one[6]), (datab[29] & datab_exp_all_one[5]), (datab[28] & datab_exp_all_one[4]), (datab[27] & datab_exp_all_one[3]), (datab[26] & datab_exp_all_one[2]), (datab[25] & datab_exp_all_one[1]), (datab[24] & datab_exp_all_one[0]), datab[23]},\n\t\tdatab_exp_not_zero = {(datab[30] | datab_exp_not_zero[6]), (datab[29] | datab_exp_not_zero[5]), (datab[28] | datab_exp_not_zero[4]), (datab[27] | datab_exp_not_zero[3]), (datab[26] | datab_exp_not_zero[2]), (datab[25] | datab_exp_not_zero[1]), (datab[24] | datab_exp_not_zero[0]), datab[23]},\n\t\tdatab_man_not_zero = {(datab[22] | datab_man_not_zero[21]), (datab[21] | datab_man_not_zero[20]), (datab[20] | datab_man_not_zero[19]), (datab[19] | datab_man_not_zero[18]), (datab[18] | datab_man_not_zero[17]), (datab[17] | datab_man_not_zero[16]), (datab[16] | datab_man_not_zero[15]), (datab[15] | datab_man_not_zero[14]), (datab[14] | datab_man_not_zero[13]), (datab[13] | datab_man_not_zero[12]), (datab[12] | datab_man_not_zero[11]), datab[11], (datab[10] | datab_man_not_zero[9]), (datab[9] | datab_man_not_zero[8]), (datab[8] | datab_man_not_zero[7]), (datab[7] | datab_man_not_zero[6]), (datab[6] | datab_man_not_zero[5]), (datab[5] | datab_man_not_zero[4]), (datab[4] | datab_man_not_zero[3]), (datab[3] | datab_man_not_zero[2]), (datab[2] | datab_man_not_zero[1]), (datab[1] | datab_man_not_zero[0]), datab[0]},\n\t\texp_is_inf = (((~ exp_adj_p2[9]) & exp_adj_p2[8]) | ((~ exp_adj_p2[8]) & result_exp_all_one[7])),\n\t\texp_is_zero = (exp_adj_p2[9] | (~ result_exp_not_zero[8])),\n\t\texpmod = {{8{1'b0}}, (delay_man_product_msb2 & man_round_p2[24]), (delay_man_product_msb2 ^ man_round_p2[24])},\n\t\tinf_num = {8{1'b1}},\n\t\tlsb_bit = man_shift_full[1],\n\t\tman_shift_full = ((wire_man_product2_mult_result[46:22] & {25{(~ wire_man_product2_mult_result[47])}}) | (wire_man_product2_mult_result[47:23] & {25{wire_man_product2_mult_result[47]}})),\n\t\tresult = {sign_node_ff9[0:0], exp_result_ff[7:0], man_result_ff[22:0]},\n\t\tresult_exp_all_one = {(result_exp_all_one[6] & exp_adj_p2[7]), (result_exp_all_one[5] & exp_adj_p2[6]), (result_exp_all_one[4] & exp_adj_p2[5]), (result_exp_all_one[3] & exp_adj_p2[4]), (result_exp_all_one[2] & exp_adj_p2[3]), (result_exp_all_one[1] & exp_adj_p2[2]), (result_exp_all_one[0] & exp_adj_p2[1]), exp_adj_p2[0]},\n\t\tresult_exp_not_zero = {(result_exp_not_zero[7] | exp_adj_p2[8]), (result_exp_not_zero[6] | exp_adj_p2[7]), (result_exp_not_zero[5] | exp_adj_p2[6]), (result_exp_not_zero[4] | exp_adj_p2[5]), (result_exp_not_zero[3] | exp_adj_p2[4]), (result_exp_not_zero[2] | exp_adj_p2[3]), (result_exp_not_zero[1] | exp_adj_p2[2]), (result_exp_not_zero[0] | exp_adj_p2[1]), exp_adj_p2[0]},\n\t\tround_bit = man_shift_full[0],\n\t\tround_carry = (round_dffe & (lsb_dffe | sticky_dffe)),\n\t\tsticky_bit = {(sticky_bit[21] | (wire_man_product2_mult_result[47] & wire_man_product2_mult_result[22])), (sticky_bit[20] | wire_man_product2_mult_result[21]), (sticky_bit[19] | wire_man_product2_mult_result[20]), (sticky_bit[18] | wire_man_product2_mult_result[19]), (sticky_bit[17] | wire_man_product2_mult_result[18]), (sticky_bit[16] | wire_man_product2_mult_result[17]), (sticky_bit[15] | wire_man_product2_mult_result[16]), (sticky_bit[14] | wire_man_product2_mult_result[15]), (sticky_bit[13] | wire_man_product2_mult_result[14]), (sticky_bit[12] | wire_man_product2_mult_result[13]), (sticky_bit[11] | wire_man_product2_mult_result[12]), (sticky_bit[10] | wire_man_product2_mult_result[11]), (sticky_bit[9] | wire_man_product2_mult_result[10]), (sticky_bit[8] | wire_man_product2_mult_result[9]), (sticky_bit[7] | wire_man_product2_mult_result[8]), (sticky_bit[6] | wire_man_product2_mult_result[7]), (sticky_bit[5] | wire_man_product2_mult_result[6]), (sticky_bit[4] | wire_man_product2_mult_result[5]), (sticky_bit[3] | wire_man_product2_mult_result[4]), (sticky_bit[2] | wire_man_product2_mult_result[3]), (sticky_bit[1] | wire_man_product2_mult_result[2]), (sticky_bit[0] | wire_man_product2_mult_result[1]), wire_man_product2_mult_result[0]};\nendmodule \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_qsys_addsub_single_altbarrel_shift_fjg\n\t( \n\taclr,\n\tclk_en,\n\tclock,\n\tdata,\n\tdistance,\n\tresult) ;\n\tinput   aclr;\n\tinput   clk_en;\n\tinput   clock;\n\tinput   [25:0]  data;\n\tinput   [4:0]  distance;\n\toutput   [25:0]  result;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\ttri0   aclr;\n\ttri1   clk_en;\n\ttri0   clock;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\n\treg\t[0:0]\tdir_pipe;\n\treg\t[25:0]\tsbit_piper1d;\n\twire  [5:0]  dir_w;\n\twire  direction_w;\n\twire  [15:0]  pad_w;\n\twire  [155:0]  sbit_w;\n\twire  [4:0]  sel_w;\n\twire  [129:0]  smux_w;\n\n\t\n\tinitial\n\t\tdir_pipe = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) dir_pipe <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   dir_pipe <= {dir_w[4]};\n\t\n\tinitial\n\t\tsbit_piper1d = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sbit_piper1d <= 26'b0;\n\t\telse if  (clk_en == 1'b1)   sbit_piper1d <= smux_w[129:104];\n\tassign\n\t\tdir_w = {dir_pipe[0], dir_w[3:0], direction_w},\n\t\tdirection_w = 1'b0,\n\t\tpad_w = {16{1'b0}},\n\t\tresult = sbit_w[155:130],\n\t\tsbit_w = {sbit_piper1d, smux_w[103:0], data},\n\t\tsel_w = {distance[4:0]},\n\t\tsmux_w = {((({26{(sel_w[4] & (~ dir_w[4]))}} & {sbit_w[113:104], pad_w[15:0]}) | ({26{(sel_w[4] & dir_w[4])}} & {pad_w[15:0], sbit_w[129:120]})) | ({26{(~ sel_w[4])}} & sbit_w[129:104])), ((({26{(sel_w[3] & (~ dir_w[3]))}} & {sbit_w[95:78], pad_w[7:0]}) | ({26{(sel_w[3] & dir_w[3])}} & {pad_w[7:0], sbit_w[103:86]})) | ({26{(~ sel_w[3])}} & sbit_w[103:78])), ((({26{(sel_w[2] & (~ dir_w[2]))}} & {sbit_w[73:52], pad_w[3:0]}) | ({26{(sel_w[2] & dir_w[2])}} & {pad_w[3:0], sbit_w[77:56]})) | ({26{(~ sel_w[2])}} & sbit_w[77:52])), ((({26{(sel_w[1] & (~ dir_w[1]))}} & {sbit_w[49:26], pad_w[1:0]}) | ({26{(sel_w[1] & dir_w[1])}} & {pad_w[1:0], sbit_w[51:28]})) | ({26{(~ sel_w[1])}} & sbit_w[51:26])), ((({26{(sel_w[0] & (~ dir_w[0]))}} & {sbit_w[24:0], pad_w[0]}) | ({26{(sel_w[0] & dir_w[0])}} & {pad_w[0], sbit_w[25:1]})) | ({26{(~ sel_w[0])}} & sbit_w[25:0]))};\nendmodule \n\n\n\n\n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_qsys_addsub_single_altbarrel_shift_44e\n\t( \n\tdata,\n\tdistance,\n\tresult) ;\n\tinput   [25:0]  data;\n\tinput   [4:0]  distance;\n\toutput   [25:0]  result;\n\n\twire  [5:0]  dir_w;\n\twire  direction_w;\n\twire  [15:0]  pad_w;\n\twire  [155:0]  sbit_w;\n\twire  [4:0]  sel_w;\n\twire  [129:0]  smux_w;\n\n\tassign\n\t\tdir_w = {dir_w[4:0], direction_w},\n\t\tdirection_w = 1'b1,\n\t\tpad_w = {16{1'b0}},\n\t\tresult = sbit_w[155:130],\n\t\tsbit_w = {smux_w[129:0], data},\n\t\tsel_w = {distance[4:0]},\n\t\tsmux_w = {((({26{(sel_w[4] & (~ dir_w[4]))}} & {sbit_w[113:104], pad_w[15:0]}) | ({26{(sel_w[4] & dir_w[4])}} & {pad_w[15:0], sbit_w[129:120]})) | ({26{(~ sel_w[4])}} & sbit_w[129:104])), ((({26{(sel_w[3] & (~ dir_w[3]))}} & {sbit_w[95:78], pad_w[7:0]}) | ({26{(sel_w[3] & dir_w[3])}} & {pad_w[7:0], sbit_w[103:86]})) | ({26{(~ sel_w[3])}} & sbit_w[103:78])), ((({26{(sel_w[2] & (~ dir_w[2]))}} & {sbit_w[73:52], pad_w[3:0]}) | ({26{(sel_w[2] & dir_w[2])}} & {pad_w[3:0], sbit_w[77:56]})) | ({26{(~ sel_w[2])}} & sbit_w[77:52])), ((({26{(sel_w[1] & (~ dir_w[1]))}} & {sbit_w[49:26], pad_w[1:0]}) | ({26{(sel_w[1] & dir_w[1])}} & {pad_w[1:0], sbit_w[51:28]})) | ({26{(~ sel_w[1])}} & sbit_w[51:26])), ((({26{(sel_w[0] & (~ dir_w[0]))}} & {sbit_w[24:0], pad_w[0]}) | ({26{(sel_w[0] & dir_w[0])}} & {pad_w[0], sbit_w[25:1]})) | ({26{(~ sel_w[0])}} & sbit_w[25:0]))};\nendmodule \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_qsys_addsub_single_altpriority_encoder_i0b\n\t( \n\tdata,\n\tq,\n\tzero) ;\n\tinput   [1:0]  data;\n\toutput   [0:0]  q;\n\toutput   zero;\n\n\n\tassign\n\t\tq = {data[1]},\n\t\tzero = (~ (data[0] | data[1]));\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_qsys_addsub_single_altpriority_encoder_l0b\n\t( \n\tdata,\n\tq,\n\tzero) ;\n\tinput   [3:0]  data;\n\toutput   [1:0]  q;\n\toutput   zero;\n\n\twire  [0:0]   wire_altpriority_encoder13_q;\n\twire  wire_altpriority_encoder13_zero;\n\twire  [0:0]   wire_altpriority_encoder14_q;\n\twire  wire_altpriority_encoder14_zero;\n\n\tfpoint_qsys_addsub_single_altpriority_encoder_i0b   altpriority_encoder13\n\t( \n\t.data(data[1:0]),\n\t.q(wire_altpriority_encoder13_q),\n\t.zero(wire_altpriority_encoder13_zero));\n\tfpoint_qsys_addsub_single_altpriority_encoder_i0b   altpriority_encoder14\n\t( \n\t.data(data[3:2]),\n\t.q(wire_altpriority_encoder14_q),\n\t.zero(wire_altpriority_encoder14_zero));\n\tassign\n\t\tq = {(~ wire_altpriority_encoder14_zero), ((wire_altpriority_encoder14_zero & wire_altpriority_encoder13_q) | ((~ wire_altpriority_encoder14_zero) & wire_altpriority_encoder14_q))},\n\t\tzero = (wire_altpriority_encoder13_zero & wire_altpriority_encoder14_zero);\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_qsys_addsub_single_altpriority_encoder_q0b\n\t( \n\tdata,\n\tq,\n\tzero) ;\n\tinput   [7:0]  data;\n\toutput   [2:0]  q;\n\toutput   zero;\n\n\twire  [1:0]   wire_altpriority_encoder11_q;\n\twire  wire_altpriority_encoder11_zero;\n\twire  [1:0]   wire_altpriority_encoder12_q;\n\twire  wire_altpriority_encoder12_zero;\n\n\tfpoint_qsys_addsub_single_altpriority_encoder_l0b   altpriority_encoder11\n\t( \n\t.data(data[3:0]),\n\t.q(wire_altpriority_encoder11_q),\n\t.zero(wire_altpriority_encoder11_zero));\n\tfpoint_qsys_addsub_single_altpriority_encoder_l0b   altpriority_encoder12\n\t( \n\t.data(data[7:4]),\n\t.q(wire_altpriority_encoder12_q),\n\t.zero(wire_altpriority_encoder12_zero));\n\tassign\n\t\tq = {(~ wire_altpriority_encoder12_zero), (({2{wire_altpriority_encoder12_zero}} & wire_altpriority_encoder11_q) | ({2{(~ wire_altpriority_encoder12_zero)}} & wire_altpriority_encoder12_q))},\n\t\tzero = (wire_altpriority_encoder11_zero & wire_altpriority_encoder12_zero);\nendmodule \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_qsys_addsub_single_altpriority_encoder_iha\n\t( \n\tdata,\n\tq) ;\n\tinput   [1:0]  data;\n\toutput   [0:0]  q;\n\n\n\tassign\n\t\tq = {data[1]};\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_qsys_addsub_single_altpriority_encoder_lha\n\t( \n\tdata,\n\tq) ;\n\tinput   [3:0]  data;\n\toutput   [1:0]  q;\n\n\twire  [0:0]   wire_altpriority_encoder17_q;\n\twire  [0:0]   wire_altpriority_encoder18_q;\n\twire  wire_altpriority_encoder18_zero;\n\n\tfpoint_qsys_addsub_single_altpriority_encoder_iha   altpriority_encoder17\n\t( \n\t.data(data[1:0]),\n\t.q(wire_altpriority_encoder17_q));\n\tfpoint_qsys_addsub_single_altpriority_encoder_i0b   altpriority_encoder18\n\t( \n\t.data(data[3:2]),\n\t.q(wire_altpriority_encoder18_q),\n\t.zero(wire_altpriority_encoder18_zero));\n\tassign\n\t\tq = {(~ wire_altpriority_encoder18_zero), ((wire_altpriority_encoder18_zero & wire_altpriority_encoder17_q) | ((~ wire_altpriority_encoder18_zero) & wire_altpriority_encoder18_q))};\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_qsys_addsub_single_altpriority_encoder_qha\n\t( \n\tdata,\n\tq) ;\n\tinput   [7:0]  data;\n\toutput   [2:0]  q;\n\n\twire  [1:0]   wire_altpriority_encoder15_q;\n\twire  [1:0]   wire_altpriority_encoder16_q;\n\twire  wire_altpriority_encoder16_zero;\n\n\tfpoint_qsys_addsub_single_altpriority_encoder_lha   altpriority_encoder15\n\t( \n\t.data(data[3:0]),\n\t.q(wire_altpriority_encoder15_q));\n\tfpoint_qsys_addsub_single_altpriority_encoder_l0b   altpriority_encoder16\n\t( \n\t.data(data[7:4]),\n\t.q(wire_altpriority_encoder16_q),\n\t.zero(wire_altpriority_encoder16_zero));\n\tassign\n\t\tq = {(~ wire_altpriority_encoder16_zero), (({2{wire_altpriority_encoder16_zero}} & wire_altpriority_encoder15_q) | ({2{(~ wire_altpriority_encoder16_zero)}} & wire_altpriority_encoder16_q))};\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_qsys_addsub_single_altpriority_encoder_aja\n\t( \n\tdata,\n\tq) ;\n\tinput   [15:0]  data;\n\toutput   [3:0]  q;\n\n\twire  [2:0]   wire_altpriority_encoder10_q;\n\twire  wire_altpriority_encoder10_zero;\n\twire  [2:0]   wire_altpriority_encoder9_q;\n\n\tfpoint_qsys_addsub_single_altpriority_encoder_q0b   altpriority_encoder10\n\t( \n\t.data(data[15:8]),\n\t.q(wire_altpriority_encoder10_q),\n\t.zero(wire_altpriority_encoder10_zero));\n\tfpoint_qsys_addsub_single_altpriority_encoder_qha   altpriority_encoder9\n\t( \n\t.data(data[7:0]),\n\t.q(wire_altpriority_encoder9_q));\n\tassign\n\t\tq = {(~ wire_altpriority_encoder10_zero), (({3{wire_altpriority_encoder10_zero}} & wire_altpriority_encoder9_q) | ({3{(~ wire_altpriority_encoder10_zero)}} & wire_altpriority_encoder10_q))};\nendmodule \n\n\n\n\n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_qsys_addsub_single_altpriority_encoder_a2b\n\t( \n\tdata,\n\tq,\n\tzero) ;\n\tinput   [15:0]  data;\n\toutput   [3:0]  q;\n\toutput   zero;\n\n\twire  [2:0]   wire_altpriority_encoder19_q;\n\twire  wire_altpriority_encoder19_zero;\n\twire  [2:0]   wire_altpriority_encoder20_q;\n\twire  wire_altpriority_encoder20_zero;\n\n\tfpoint_qsys_addsub_single_altpriority_encoder_q0b   altpriority_encoder19\n\t( \n\t.data(data[7:0]),\n\t.q(wire_altpriority_encoder19_q),\n\t.zero(wire_altpriority_encoder19_zero));\n\tfpoint_qsys_addsub_single_altpriority_encoder_q0b   altpriority_encoder20\n\t( \n\t.data(data[15:8]),\n\t.q(wire_altpriority_encoder20_q),\n\t.zero(wire_altpriority_encoder20_zero));\n\tassign\n\t\tq = {(~ wire_altpriority_encoder20_zero), (({3{wire_altpriority_encoder20_zero}} & wire_altpriority_encoder19_q) | ({3{(~ wire_altpriority_encoder20_zero)}} & wire_altpriority_encoder20_q))},\n\t\tzero = (wire_altpriority_encoder19_zero & wire_altpriority_encoder20_zero);\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_qsys_addsub_single_altpriority_encoder_9u8\n\t( \n\tdata,\n\tq) ;\n\tinput   [31:0]  data;\n\toutput   [4:0]  q;\n\n\twire  [3:0]   wire_altpriority_encoder7_q;\n\twire  [3:0]   wire_altpriority_encoder8_q;\n\twire  wire_altpriority_encoder8_zero;\n\n\tfpoint_qsys_addsub_single_altpriority_encoder_aja   altpriority_encoder7\n\t( \n\t.data(data[15:0]),\n\t.q(wire_altpriority_encoder7_q));\n\tfpoint_qsys_addsub_single_altpriority_encoder_a2b   altpriority_encoder8\n\t( \n\t.data(data[31:16]),\n\t.q(wire_altpriority_encoder8_q),\n\t.zero(wire_altpriority_encoder8_zero));\n\tassign\n\t\tq = {(~ wire_altpriority_encoder8_zero), (({4{wire_altpriority_encoder8_zero}} & wire_altpriority_encoder7_q) | ({4{(~ wire_altpriority_encoder8_zero)}} & wire_altpriority_encoder8_q))};\nendmodule \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_qsys_addsub_single_altpriority_encoder_64b\n\t( \n\tdata,\n\tq,\n\tzero) ;\n\tinput   [1:0]  data;\n\toutput   [0:0]  q;\n\toutput   zero;\n\n\n\tassign\n\t\tq = {(~ data[0])},\n\t\tzero = (~ (data[0] | data[1]));\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_qsys_addsub_single_altpriority_encoder_94b\n\t( \n\tdata,\n\tq,\n\tzero) ;\n\tinput   [3:0]  data;\n\toutput   [1:0]  q;\n\toutput   zero;\n\n\twire  [0:0]   wire_altpriority_encoder27_q;\n\twire  wire_altpriority_encoder27_zero;\n\twire  [0:0]   wire_altpriority_encoder28_q;\n\twire  wire_altpriority_encoder28_zero;\n\n\tfpoint_qsys_addsub_single_altpriority_encoder_64b   altpriority_encoder27\n\t( \n\t.data(data[1:0]),\n\t.q(wire_altpriority_encoder27_q),\n\t.zero(wire_altpriority_encoder27_zero));\n\tfpoint_qsys_addsub_single_altpriority_encoder_64b   altpriority_encoder28\n\t( \n\t.data(data[3:2]),\n\t.q(wire_altpriority_encoder28_q),\n\t.zero(wire_altpriority_encoder28_zero));\n\tassign\n\t\tq = {wire_altpriority_encoder27_zero, ((wire_altpriority_encoder27_zero & wire_altpriority_encoder28_q) | ((~ wire_altpriority_encoder27_zero) & wire_altpriority_encoder27_q))},\n\t\tzero = (wire_altpriority_encoder27_zero & wire_altpriority_encoder28_zero);\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_qsys_addsub_single_altpriority_encoder_e4b\n\t( \n\tdata,\n\tq,\n\tzero) ;\n\tinput   [7:0]  data;\n\toutput   [2:0]  q;\n\toutput   zero;\n\n\twire  [1:0]   wire_altpriority_encoder25_q;\n\twire  wire_altpriority_encoder25_zero;\n\twire  [1:0]   wire_altpriority_encoder26_q;\n\twire  wire_altpriority_encoder26_zero;\n\n\tfpoint_qsys_addsub_single_altpriority_encoder_94b   altpriority_encoder25\n\t( \n\t.data(data[3:0]),\n\t.q(wire_altpriority_encoder25_q),\n\t.zero(wire_altpriority_encoder25_zero));\n\tfpoint_qsys_addsub_single_altpriority_encoder_94b   altpriority_encoder26\n\t( \n\t.data(data[7:4]),\n\t.q(wire_altpriority_encoder26_q),\n\t.zero(wire_altpriority_encoder26_zero));\n\tassign\n\t\tq = {wire_altpriority_encoder25_zero, (({2{wire_altpriority_encoder25_zero}} & wire_altpriority_encoder26_q) | ({2{(~ wire_altpriority_encoder25_zero)}} & wire_altpriority_encoder25_q))},\n\t\tzero = (wire_altpriority_encoder25_zero & wire_altpriority_encoder26_zero);\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_qsys_addsub_single_altpriority_encoder_u5b\n\t( \n\tdata,\n\tq,\n\tzero) ;\n\tinput   [15:0]  data;\n\toutput   [3:0]  q;\n\toutput   zero;\n\n\twire  [2:0]   wire_altpriority_encoder23_q;\n\twire  wire_altpriority_encoder23_zero;\n\twire  [2:0]   wire_altpriority_encoder24_q;\n\twire  wire_altpriority_encoder24_zero;\n\n\tfpoint_qsys_addsub_single_altpriority_encoder_e4b   altpriority_encoder23\n\t( \n\t.data(data[7:0]),\n\t.q(wire_altpriority_encoder23_q),\n\t.zero(wire_altpriority_encoder23_zero));\n\tfpoint_qsys_addsub_single_altpriority_encoder_e4b   altpriority_encoder24\n\t( \n\t.data(data[15:8]),\n\t.q(wire_altpriority_encoder24_q),\n\t.zero(wire_altpriority_encoder24_zero));\n\tassign\n\t\tq = {wire_altpriority_encoder23_zero, (({3{wire_altpriority_encoder23_zero}} & wire_altpriority_encoder24_q) | ({3{(~ wire_altpriority_encoder23_zero)}} & wire_altpriority_encoder23_q))},\n\t\tzero = (wire_altpriority_encoder23_zero & wire_altpriority_encoder24_zero);\nendmodule \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_qsys_addsub_single_altpriority_encoder_6la\n\t( \n\tdata,\n\tq) ;\n\tinput   [1:0]  data;\n\toutput   [0:0]  q;\n\n\n\tassign\n\t\tq = {(~ data[0])};\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_qsys_addsub_single_altpriority_encoder_9la\n\t( \n\tdata,\n\tq) ;\n\tinput   [3:0]  data;\n\toutput   [1:0]  q;\n\n\twire  [0:0]   wire_altpriority_encoder33_q;\n\twire  wire_altpriority_encoder33_zero;\n\twire  [0:0]   wire_altpriority_encoder34_q;\n\n\tfpoint_qsys_addsub_single_altpriority_encoder_64b   altpriority_encoder33\n\t( \n\t.data(data[1:0]),\n\t.q(wire_altpriority_encoder33_q),\n\t.zero(wire_altpriority_encoder33_zero));\n\tfpoint_qsys_addsub_single_altpriority_encoder_6la   altpriority_encoder34\n\t( \n\t.data(data[3:2]),\n\t.q(wire_altpriority_encoder34_q));\n\tassign\n\t\tq = {wire_altpriority_encoder33_zero, ((wire_altpriority_encoder33_zero & wire_altpriority_encoder34_q) | ((~ wire_altpriority_encoder33_zero) & wire_altpriority_encoder33_q))};\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_qsys_addsub_single_altpriority_encoder_ela\n\t( \n\tdata,\n\tq) ;\n\tinput   [7:0]  data;\n\toutput   [2:0]  q;\n\n\twire  [1:0]   wire_altpriority_encoder31_q;\n\twire  wire_altpriority_encoder31_zero;\n\twire  [1:0]   wire_altpriority_encoder32_q;\n\n\tfpoint_qsys_addsub_single_altpriority_encoder_94b   altpriority_encoder31\n\t( \n\t.data(data[3:0]),\n\t.q(wire_altpriority_encoder31_q),\n\t.zero(wire_altpriority_encoder31_zero));\n\tfpoint_qsys_addsub_single_altpriority_encoder_9la   altpriority_encoder32\n\t( \n\t.data(data[7:4]),\n\t.q(wire_altpriority_encoder32_q));\n\tassign\n\t\tq = {wire_altpriority_encoder31_zero, (({2{wire_altpriority_encoder31_zero}} & wire_altpriority_encoder32_q) | ({2{(~ wire_altpriority_encoder31_zero)}} & wire_altpriority_encoder31_q))};\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_qsys_addsub_single_altpriority_encoder_uma\n\t( \n\tdata,\n\tq) ;\n\tinput   [15:0]  data;\n\toutput   [3:0]  q;\n\n\twire  [2:0]   wire_altpriority_encoder29_q;\n\twire  wire_altpriority_encoder29_zero;\n\twire  [2:0]   wire_altpriority_encoder30_q;\n\n\tfpoint_qsys_addsub_single_altpriority_encoder_e4b   altpriority_encoder29\n\t( \n\t.data(data[7:0]),\n\t.q(wire_altpriority_encoder29_q),\n\t.zero(wire_altpriority_encoder29_zero));\n\tfpoint_qsys_addsub_single_altpriority_encoder_ela   altpriority_encoder30\n\t( \n\t.data(data[15:8]),\n\t.q(wire_altpriority_encoder30_q));\n\tassign\n\t\tq = {wire_altpriority_encoder29_zero, (({3{wire_altpriority_encoder29_zero}} & wire_altpriority_encoder30_q) | ({3{(~ wire_altpriority_encoder29_zero)}} & wire_altpriority_encoder29_q))};\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_qsys_addsub_single_altpriority_encoder_tma\n\t( \n\tdata,\n\tq) ;\n\tinput   [31:0]  data;\n\toutput   [4:0]  q;\n\n\twire  [3:0]   wire_altpriority_encoder21_q;\n\twire  wire_altpriority_encoder21_zero;\n\twire  [3:0]   wire_altpriority_encoder22_q;\n\n\tfpoint_qsys_addsub_single_altpriority_encoder_u5b   altpriority_encoder21\n\t( \n\t.data(data[15:0]),\n\t.q(wire_altpriority_encoder21_q),\n\t.zero(wire_altpriority_encoder21_zero));\n\tfpoint_qsys_addsub_single_altpriority_encoder_uma   altpriority_encoder22\n\t( \n\t.data(data[31:16]),\n\t.q(wire_altpriority_encoder22_q));\n\tassign\n\t\tq = {wire_altpriority_encoder21_zero, (({4{wire_altpriority_encoder21_zero}} & wire_altpriority_encoder22_q) | ({4{(~ wire_altpriority_encoder21_zero)}} & wire_altpriority_encoder21_q))};\nendmodule \n\n\n\n`timescale 1 ps / 1 ps\n\nmodule  fpoint_qsys_addsub_single\n\t( \n\taclr,\n\tadd_sub,\n\tclk_en,\n\tclock,\n\tdataa,\n\tdatab,\n\tresult) ;\n\tinput   aclr;\n\tinput   add_sub;\n\tinput   clk_en;\n\tinput   clock;\n\tinput   [31:0]  dataa;\n\tinput   [31:0]  datab;\n\toutput   [31:0]  result;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\ttri0   aclr;\n\ttri1   add_sub;\n\ttri1   clk_en;\n`ifndef ALTERA_RESERVED_QIS\n\n`endif\n\n\twire  [25:0]   wire_lbarrel_shift_result;\n\twire  [25:0]   wire_rbarrel_shift_result;\n\twire  [4:0]   wire_leading_zeroes_cnt_q;\n\twire  [4:0]   wire_trailing_zeros_cnt_q;\n\treg\tadd_sub_dffe1;\n\treg\tadd_sub_dffe12;\n\treg\t[8:0]\taligned_dataa_exp_dffe12;\n\treg\t[23:0]\taligned_dataa_man_dffe12;\n\treg\taligned_dataa_sign_dffe12;\n\treg\t[8:0]\taligned_datab_exp_dffe12;\n\treg\t[23:0]\taligned_datab_man_dffe12;\n\treg\taligned_datab_sign_dffe12;\n\treg\tboth_inputs_are_infinite_dffe1;\n\treg\t[7:0]\tdata_exp_dffe1;\n\treg\t[25:0]\tdataa_man_dffe1;\n\treg\tdataa_sign_dffe1;\n\treg\t[25:0]\tdatab_man_dffe1;\n\treg\tdatab_sign_dffe1;\n\treg\tdenormal_res_dffe3;\n\treg\tdenormal_res_dffe4;\n\treg\t[1:0]\texp_adj_dffe21;\n\treg\t[7:0]\texp_out_dffe5;\n\treg\t[7:0]\texp_res_dffe2;\n\treg\t[7:0]\texp_res_dffe21;\n\treg\t[7:0]\texp_res_dffe3;\n\treg\t[7:0]\texp_res_dffe4;\n\treg\tinfinite_output_sign_dffe1;\n\treg\tinfinite_output_sign_dffe2;\n\treg\tinfinite_output_sign_dffe21;\n\treg\tinfinite_output_sign_dffe3;\n\treg\tinfinite_output_sign_dffe31;\n\treg\tinfinite_output_sign_dffe4;\n\treg\tinfinite_res_dffe3;\n\treg\tinfinite_res_dffe4;\n\treg\tinfinity_magnitude_sub_dffe2;\n\treg\tinfinity_magnitude_sub_dffe21;\n\treg\tinfinity_magnitude_sub_dffe3;\n\treg\tinfinity_magnitude_sub_dffe31;\n\treg\tinfinity_magnitude_sub_dffe4;\n\treg\tinput_dataa_infinite_dffe12;\n\treg\tinput_dataa_nan_dffe12;\n\treg\tinput_datab_infinite_dffe12;\n\treg\tinput_datab_nan_dffe12;\n\treg\tinput_is_infinite_dffe1;\n\treg\tinput_is_infinite_dffe2;\n\treg\tinput_is_infinite_dffe21;\n\treg\tinput_is_infinite_dffe3;\n\treg\tinput_is_infinite_dffe31;\n\treg\tinput_is_infinite_dffe4;\n\treg\tinput_is_nan_dffe1;\n\treg\tinput_is_nan_dffe2;\n\treg\tinput_is_nan_dffe21;\n\treg\tinput_is_nan_dffe3;\n\treg\tinput_is_nan_dffe31;\n\treg\tinput_is_nan_dffe4;\n\treg\t[25:0]\tman_add_sub_res_mag_dffe21;\n\treg\tman_add_sub_res_sign_dffe21;\n\treg\t[25:0]\tman_dffe31;\n\treg\t[4:0]\tman_leading_zeros_dffe31;\n\treg\t[22:0]\tman_out_dffe5;\n\treg\t[22:0]\tman_res_dffe4;\n\treg\tman_res_is_not_zero_dffe3;\n\treg\tman_res_is_not_zero_dffe31;\n\treg\tman_res_is_not_zero_dffe4;\n\treg\tneed_complement_dffe2;\n\treg\tround_bit_dffe21;\n\treg\tround_bit_dffe3;\n\treg\tround_bit_dffe31;\n\treg\trounded_res_infinity_dffe4;\n\treg\tsign_dffe31;\n\treg\tsign_out_dffe5;\n\treg\tsign_res_dffe3;\n\treg\tsign_res_dffe4;\n\treg\tsticky_bit_dffe1;\n\treg\tsticky_bit_dffe2;\n\treg\tsticky_bit_dffe21;\n\treg\tsticky_bit_dffe3;\n\treg\tsticky_bit_dffe31;\n\treg\tzero_man_sign_dffe2;\n\treg\tzero_man_sign_dffe21;\n\twire  [8:0]   wire_add_sub1_result;\n\twire  [8:0]   wire_add_sub2_result;\n\twire  [5:0]   wire_add_sub3_result;\n\twire  [8:0]   wire_add_sub4_result;\n\twire  [8:0]   wire_add_sub5_result;\n\twire  [8:0]   wire_add_sub6_result;\n\twire  wire_man_2comp_res_lower_cout;\n\twire  [13:0]   wire_man_2comp_res_lower_result;\n\twire  [13:0]   wire_man_2comp_res_upper0_result;\n\twire  [13:0]   wire_man_2comp_res_upper1_result;\n\twire  wire_man_add_sub_lower_cout;\n\twire  [13:0]   wire_man_add_sub_lower_result;\n\twire  [13:0]   wire_man_add_sub_upper0_result;\n\twire  [13:0]   wire_man_add_sub_upper1_result;\n\twire  wire_man_res_rounding_add_sub_lower_cout;\n\twire  [12:0]   wire_man_res_rounding_add_sub_lower_result;\n\twire  [12:0]   wire_man_res_rounding_add_sub_upper1_result;\n\twire  wire_trailing_zeros_limit_comparator_agb;\n\twire  add_sub_dffe11_wi;\n\twire  add_sub_dffe11_wo;\n\twire  add_sub_dffe12_wi;\n\twire  add_sub_dffe12_wo;\n\twire  add_sub_dffe13_wi;\n\twire  add_sub_dffe13_wo;\n\twire  add_sub_dffe14_wi;\n\twire  add_sub_dffe14_wo;\n\twire  add_sub_dffe15_wi;\n\twire  add_sub_dffe15_wo;\n\twire  add_sub_dffe1_wi;\n\twire  add_sub_dffe1_wo;\n\twire  add_sub_dffe25_wi;\n\twire  add_sub_dffe25_wo;\n\twire  add_sub_w2;\n\twire  [12:0]  adder_upper_w;\n\twire  [8:0]  aligned_dataa_exp_dffe12_wi;\n\twire  [8:0]  aligned_dataa_exp_dffe12_wo;\n\twire  [8:0]  aligned_dataa_exp_dffe13_wi;\n\twire  [8:0]  aligned_dataa_exp_dffe13_wo;\n\twire  [8:0]  aligned_dataa_exp_dffe14_wi;\n\twire  [8:0]  aligned_dataa_exp_dffe14_wo;\n\twire  [8:0]  aligned_dataa_exp_dffe15_wi;\n\twire  [8:0]  aligned_dataa_exp_dffe15_wo;\n\twire  [8:0]  aligned_dataa_exp_w;\n\twire  [23:0]  aligned_dataa_man_dffe12_wi;\n\twire  [23:0]  aligned_dataa_man_dffe12_wo;\n\twire  [23:0]  aligned_dataa_man_dffe13_wi;\n\twire  [23:0]  aligned_dataa_man_dffe13_wo;\n\twire  [23:0]  aligned_dataa_man_dffe14_wi;\n\twire  [23:0]  aligned_dataa_man_dffe14_wo;\n\twire  [25:0]  aligned_dataa_man_dffe15_w;\n\twire  [23:0]  aligned_dataa_man_dffe15_wi;\n\twire  [23:0]  aligned_dataa_man_dffe15_wo;\n\twire  [25:0]  aligned_dataa_man_w;\n\twire  aligned_dataa_sign_dffe12_wi;\n\twire  aligned_dataa_sign_dffe12_wo;\n\twire  aligned_dataa_sign_dffe13_wi;\n\twire  aligned_dataa_sign_dffe13_wo;\n\twire  aligned_dataa_sign_dffe14_wi;\n\twire  aligned_dataa_sign_dffe14_wo;\n\twire  aligned_dataa_sign_dffe15_wi;\n\twire  aligned_dataa_sign_dffe15_wo;\n\twire  aligned_dataa_sign_w;\n\twire  [8:0]  aligned_datab_exp_dffe12_wi;\n\twire  [8:0]  aligned_datab_exp_dffe12_wo;\n\twire  [8:0]  aligned_datab_exp_dffe13_wi;\n\twire  [8:0]  aligned_datab_exp_dffe13_wo;\n\twire  [8:0]  aligned_datab_exp_dffe14_wi;\n\twire  [8:0]  aligned_datab_exp_dffe14_wo;\n\twire  [8:0]  aligned_datab_exp_dffe15_wi;\n\twire  [8:0]  aligned_datab_exp_dffe15_wo;\n\twire  [8:0]  aligned_datab_exp_w;\n\twire  [23:0]  aligned_datab_man_dffe12_wi;\n\twire  [23:0]  aligned_datab_man_dffe12_wo;\n\twire  [23:0]  aligned_datab_man_dffe13_wi;\n\twire  [23:0]  aligned_datab_man_dffe13_wo;\n\twire  [23:0]  aligned_datab_man_dffe14_wi;\n\twire  [23:0]  aligned_datab_man_dffe14_wo;\n\twire  [25:0]  aligned_datab_man_dffe15_w;\n\twire  [23:0]  aligned_datab_man_dffe15_wi;\n\twire  [23:0]  aligned_datab_man_dffe15_wo;\n\twire  [25:0]  aligned_datab_man_w;\n\twire  aligned_datab_sign_dffe12_wi;\n\twire  aligned_datab_sign_dffe12_wo;\n\twire  aligned_datab_sign_dffe13_wi;\n\twire  aligned_datab_sign_dffe13_wo;\n\twire  aligned_datab_sign_dffe14_wi;\n\twire  aligned_datab_sign_dffe14_wo;\n\twire  aligned_datab_sign_dffe15_wi;\n\twire  aligned_datab_sign_dffe15_wo;\n\twire  aligned_datab_sign_w;\n\twire  borrow_w;\n\twire  both_inputs_are_infinite_dffe1_wi;\n\twire  both_inputs_are_infinite_dffe1_wo;\n\twire  both_inputs_are_infinite_dffe25_wi;\n\twire  both_inputs_are_infinite_dffe25_wo;\n\twire  [7:0]  data_exp_dffe1_wi;\n\twire  [7:0]  data_exp_dffe1_wo;\n\twire  [31:0]  dataa_dffe11_wi;\n\twire  [31:0]  dataa_dffe11_wo;\n\twire  [25:0]  dataa_man_dffe1_wi;\n\twire  [25:0]  dataa_man_dffe1_wo;\n\twire  dataa_sign_dffe1_wi;\n\twire  dataa_sign_dffe1_wo;\n\twire  dataa_sign_dffe25_wi;\n\twire  dataa_sign_dffe25_wo;\n\twire  [31:0]  datab_dffe11_wi;\n\twire  [31:0]  datab_dffe11_wo;\n\twire  [25:0]  datab_man_dffe1_wi;\n\twire  [25:0]  datab_man_dffe1_wo;\n\twire  datab_sign_dffe1_wi;\n\twire  datab_sign_dffe1_wo;\n\twire  denormal_flag_w;\n\twire  denormal_res_dffe32_wi;\n\twire  denormal_res_dffe32_wo;\n\twire  denormal_res_dffe33_wi;\n\twire  denormal_res_dffe33_wo;\n\twire  denormal_res_dffe3_wi;\n\twire  denormal_res_dffe3_wo;\n\twire  denormal_res_dffe41_wi;\n\twire  denormal_res_dffe41_wo;\n\twire  denormal_res_dffe42_wi;\n\twire  denormal_res_dffe42_wo;\n\twire  denormal_res_dffe4_wi;\n\twire  denormal_res_dffe4_wo;\n\twire  denormal_result_w;\n\twire  [7:0]  exp_a_all_one_w;\n\twire  [7:0]  exp_a_not_zero_w;\n\twire  [6:0]  exp_adj_0pads;\n\twire  [1:0]  exp_adj_dffe21_wi;\n\twire  [1:0]  exp_adj_dffe21_wo;\n\twire  [1:0]  exp_adj_dffe23_wi;\n\twire  [1:0]  exp_adj_dffe23_wo;\n\twire  [1:0]  exp_adj_dffe26_wi;\n\twire  [1:0]  exp_adj_dffe26_wo;\n\twire  [1:0]  exp_adjust_by_add1;\n\twire  [1:0]  exp_adjust_by_add2;\n\twire  [8:0]  exp_adjustment2_add_sub_dataa_w;\n\twire  [8:0]  exp_adjustment2_add_sub_datab_w;\n\twire  [8:0]  exp_adjustment2_add_sub_w;\n\twire  [8:0]  exp_adjustment_add_sub_dataa_w;\n\twire  [8:0]  exp_adjustment_add_sub_datab_w;\n\twire  [8:0]  exp_adjustment_add_sub_w;\n\twire  [7:0]  exp_all_ones_w;\n\twire  [7:0]  exp_all_zeros_w;\n\twire  exp_amb_mux_dffe13_wi;\n\twire  exp_amb_mux_dffe13_wo;\n\twire  exp_amb_mux_dffe14_wi;\n\twire  exp_amb_mux_dffe14_wo;\n\twire  exp_amb_mux_dffe15_wi;\n\twire  exp_amb_mux_dffe15_wo;\n\twire  exp_amb_mux_w;\n\twire  [8:0]  exp_amb_w;\n\twire  [7:0]  exp_b_all_one_w;\n\twire  [7:0]  exp_b_not_zero_w;\n\twire  [8:0]  exp_bma_w;\n\twire  [2:0]  exp_diff_abs_exceed_max_w;\n\twire  [4:0]  exp_diff_abs_max_w;\n\twire  [7:0]  exp_diff_abs_w;\n\twire  [7:0]  exp_intermediate_res_dffe41_wi;\n\twire  [7:0]  exp_intermediate_res_dffe41_wo;\n\twire  [7:0]  exp_intermediate_res_dffe42_wi;\n\twire  [7:0]  exp_intermediate_res_dffe42_wo;\n\twire  [7:0]  exp_intermediate_res_w;\n\twire  [7:0]  exp_out_dffe5_wi;\n\twire  [7:0]  exp_out_dffe5_wo;\n\twire  [7:0]  exp_res_dffe21_wi;\n\twire  [7:0]  exp_res_dffe21_wo;\n\twire  [7:0]  exp_res_dffe22_wi;\n\twire  [7:0]  exp_res_dffe22_wo;\n\twire  [7:0]  exp_res_dffe23_wi;\n\twire  [7:0]  exp_res_dffe23_wo;\n\twire  [7:0]  exp_res_dffe25_wi;\n\twire  [7:0]  exp_res_dffe25_wo;\n\twire  [7:0]  exp_res_dffe26_wi;\n\twire  [7:0]  exp_res_dffe26_wo;\n\twire  [7:0]  exp_res_dffe27_wi;\n\twire  [7:0]  exp_res_dffe27_wo;\n\twire  [7:0]  exp_res_dffe2_wi;\n\twire  [7:0]  exp_res_dffe2_wo;\n\twire  [7:0]  exp_res_dffe32_wi;\n\twire  [7:0]  exp_res_dffe32_wo;\n\twire  [7:0]  exp_res_dffe33_wi;\n\twire  [7:0]  exp_res_dffe33_wo;\n\twire  [7:0]  exp_res_dffe3_wi;\n\twire  [7:0]  exp_res_dffe3_wo;\n\twire  [7:0]  exp_res_dffe4_wi;\n\twire  [7:0]  exp_res_dffe4_wo;\n\twire  [7:0]  exp_res_max_w;\n\twire  [8:0]  exp_res_not_zero_w;\n\twire  [8:0]  exp_res_rounding_adder_dataa_w;\n\twire  [8:0]  exp_res_rounding_adder_w;\n\twire  exp_rounded_res_infinity_w;\n\twire  [7:0]  exp_rounded_res_max_w;\n\twire  [7:0]  exp_rounded_res_w;\n\twire  [8:0]  exp_rounding_adjustment_w;\n\twire  [8:0]  exp_value;\n\twire  force_infinity_w;\n\twire  force_nan_w;\n\twire  force_zero_w;\n\twire  guard_bit_dffe3_wo;\n\twire  infinite_output_sign_dffe1_wi;\n\twire  infinite_output_sign_dffe1_wo;\n\twire  infinite_output_sign_dffe21_wi;\n\twire  infinite_output_sign_dffe21_wo;\n\twire  infinite_output_sign_dffe22_wi;\n\twire  infinite_output_sign_dffe22_wo;\n\twire  infinite_output_sign_dffe23_wi;\n\twire  infinite_output_sign_dffe23_wo;\n\twire  infinite_output_sign_dffe25_wi;\n\twire  infinite_output_sign_dffe25_wo;\n\twire  infinite_output_sign_dffe26_wi;\n\twire  infinite_output_sign_dffe26_wo;\n\twire  infinite_output_sign_dffe27_wi;\n\twire  infinite_output_sign_dffe27_wo;\n\twire  infinite_output_sign_dffe2_wi;\n\twire  infinite_output_sign_dffe2_wo;\n\twire  infinite_output_sign_dffe31_wi;\n\twire  infinite_output_sign_dffe31_wo;\n\twire  infinite_output_sign_dffe32_wi;\n\twire  infinite_output_sign_dffe32_wo;\n\twire  infinite_output_sign_dffe33_wi;\n\twire  infinite_output_sign_dffe33_wo;\n\twire  infinite_output_sign_dffe3_wi;\n\twire  infinite_output_sign_dffe3_wo;\n\twire  infinite_output_sign_dffe41_wi;\n\twire  infinite_output_sign_dffe41_wo;\n\twire  infinite_output_sign_dffe42_wi;\n\twire  infinite_output_sign_dffe42_wo;\n\twire  infinite_output_sign_dffe4_wi;\n\twire  infinite_output_sign_dffe4_wo;\n\twire  infinite_res_dff32_wi;\n\twire  infinite_res_dff32_wo;\n\twire  infinite_res_dff33_wi;\n\twire  infinite_res_dff33_wo;\n\twire  infinite_res_dffe3_wi;\n\twire  infinite_res_dffe3_wo;\n\twire  infinite_res_dffe41_wi;\n\twire  infinite_res_dffe41_wo;\n\twire  infinite_res_dffe42_wi;\n\twire  infinite_res_dffe42_wo;\n\twire  infinite_res_dffe4_wi;\n\twire  infinite_res_dffe4_wo;\n\twire  infinity_magnitude_sub_dffe21_wi;\n\twire  infinity_magnitude_sub_dffe21_wo;\n\twire  infinity_magnitude_sub_dffe22_wi;\n\twire  infinity_magnitude_sub_dffe22_wo;\n\twire  infinity_magnitude_sub_dffe23_wi;\n\twire  infinity_magnitude_sub_dffe23_wo;\n\twire  infinity_magnitude_sub_dffe26_wi;\n\twire  infinity_magnitude_sub_dffe26_wo;\n\twire  infinity_magnitude_sub_dffe27_wi;\n\twire  infinity_magnitude_sub_dffe27_wo;\n\twire  infinity_magnitude_sub_dffe2_wi;\n\twire  infinity_magnitude_sub_dffe2_wo;\n\twire  infinity_magnitude_sub_dffe31_wi;\n\twire  infinity_magnitude_sub_dffe31_wo;\n\twire  infinity_magnitude_sub_dffe32_wi;\n\twire  infinity_magnitude_sub_dffe32_wo;\n\twire  infinity_magnitude_sub_dffe33_wi;\n\twire  infinity_magnitude_sub_dffe33_wo;\n\twire  infinity_magnitude_sub_dffe3_wi;\n\twire  infinity_magnitude_sub_dffe3_wo;\n\twire  infinity_magnitude_sub_dffe41_wi;\n\twire  infinity_magnitude_sub_dffe41_wo;\n\twire  infinity_magnitude_sub_dffe42_wi;\n\twire  infinity_magnitude_sub_dffe42_wo;\n\twire  infinity_magnitude_sub_dffe4_wi;\n\twire  infinity_magnitude_sub_dffe4_wo;\n\twire  input_dataa_denormal_dffe11_wi;\n\twire  input_dataa_denormal_dffe11_wo;\n\twire  input_dataa_denormal_w;\n\twire  input_dataa_infinite_dffe11_wi;\n\twire  input_dataa_infinite_dffe11_wo;\n\twire  input_dataa_infinite_dffe12_wi;\n\twire  input_dataa_infinite_dffe12_wo;\n\twire  input_dataa_infinite_dffe13_wi;\n\twire  input_dataa_infinite_dffe13_wo;\n\twire  input_dataa_infinite_dffe14_wi;\n\twire  input_dataa_infinite_dffe14_wo;\n\twire  input_dataa_infinite_dffe15_wi;\n\twire  input_dataa_infinite_dffe15_wo;\n\twire  input_dataa_infinite_w;\n\twire  input_dataa_nan_dffe11_wi;\n\twire  input_dataa_nan_dffe11_wo;\n\twire  input_dataa_nan_dffe12_wi;\n\twire  input_dataa_nan_dffe12_wo;\n\twire  input_dataa_nan_w;\n\twire  input_dataa_zero_dffe11_wi;\n\twire  input_dataa_zero_dffe11_wo;\n\twire  input_dataa_zero_w;\n\twire  input_datab_denormal_dffe11_wi;\n\twire  input_datab_denormal_dffe11_wo;\n\twire  input_datab_denormal_w;\n\twire  input_datab_infinite_dffe11_wi;\n\twire  input_datab_infinite_dffe11_wo;\n\twire  input_datab_infinite_dffe12_wi;\n\twire  input_datab_infinite_dffe12_wo;\n\twire  input_datab_infinite_dffe13_wi;\n\twire  input_datab_infinite_dffe13_wo;\n\twire  input_datab_infinite_dffe14_wi;\n\twire  input_datab_infinite_dffe14_wo;\n\twire  input_datab_infinite_dffe15_wi;\n\twire  input_datab_infinite_dffe15_wo;\n\twire  input_datab_infinite_w;\n\twire  input_datab_nan_dffe11_wi;\n\twire  input_datab_nan_dffe11_wo;\n\twire  input_datab_nan_dffe12_wi;\n\twire  input_datab_nan_dffe12_wo;\n\twire  input_datab_nan_w;\n\twire  input_datab_zero_dffe11_wi;\n\twire  input_datab_zero_dffe11_wo;\n\twire  input_datab_zero_w;\n\twire  input_is_infinite_dffe1_wi;\n\twire  input_is_infinite_dffe1_wo;\n\twire  input_is_infinite_dffe21_wi;\n\twire  input_is_infinite_dffe21_wo;\n\twire  input_is_infinite_dffe22_wi;\n\twire  input_is_infinite_dffe22_wo;\n\twire  input_is_infinite_dffe23_wi;\n\twire  input_is_infinite_dffe23_wo;\n\twire  input_is_infinite_dffe25_wi;\n\twire  input_is_infinite_dffe25_wo;\n\twire  input_is_infinite_dffe26_wi;\n\twire  input_is_infinite_dffe26_wo;\n\twire  input_is_infinite_dffe27_wi;\n\twire  input_is_infinite_dffe27_wo;\n\twire  input_is_infinite_dffe2_wi;\n\twire  input_is_infinite_dffe2_wo;\n\twire  input_is_infinite_dffe31_wi;\n\twire  input_is_infinite_dffe31_wo;\n\twire  input_is_infinite_dffe32_wi;\n\twire  input_is_infinite_dffe32_wo;\n\twire  input_is_infinite_dffe33_wi;\n\twire  input_is_infinite_dffe33_wo;\n\twire  input_is_infinite_dffe3_wi;\n\twire  input_is_infinite_dffe3_wo;\n\twire  input_is_infinite_dffe41_wi;\n\twire  input_is_infinite_dffe41_wo;\n\twire  input_is_infinite_dffe42_wi;\n\twire  input_is_infinite_dffe42_wo;\n\twire  input_is_infinite_dffe4_wi;\n\twire  input_is_infinite_dffe4_wo;\n\twire  input_is_nan_dffe13_wi;\n\twire  input_is_nan_dffe13_wo;\n\twire  input_is_nan_dffe14_wi;\n\twire  input_is_nan_dffe14_wo;\n\twire  input_is_nan_dffe15_wi;\n\twire  input_is_nan_dffe15_wo;\n\twire  input_is_nan_dffe1_wi;\n\twire  input_is_nan_dffe1_wo;\n\twire  input_is_nan_dffe21_wi;\n\twire  input_is_nan_dffe21_wo;\n\twire  input_is_nan_dffe22_wi;\n\twire  input_is_nan_dffe22_wo;\n\twire  input_is_nan_dffe23_wi;\n\twire  input_is_nan_dffe23_wo;\n\twire  input_is_nan_dffe25_wi;\n\twire  input_is_nan_dffe25_wo;\n\twire  input_is_nan_dffe26_wi;\n\twire  input_is_nan_dffe26_wo;\n\twire  input_is_nan_dffe27_wi;\n\twire  input_is_nan_dffe27_wo;\n\twire  input_is_nan_dffe2_wi;\n\twire  input_is_nan_dffe2_wo;\n\twire  input_is_nan_dffe31_wi;\n\twire  input_is_nan_dffe31_wo;\n\twire  input_is_nan_dffe32_wi;\n\twire  input_is_nan_dffe32_wo;\n\twire  input_is_nan_dffe33_wi;\n\twire  input_is_nan_dffe33_wo;\n\twire  input_is_nan_dffe3_wi;\n\twire  input_is_nan_dffe3_wo;\n\twire  input_is_nan_dffe41_wi;\n\twire  input_is_nan_dffe41_wo;\n\twire  input_is_nan_dffe42_wi;\n\twire  input_is_nan_dffe42_wo;\n\twire  input_is_nan_dffe4_wi;\n\twire  input_is_nan_dffe4_wo;\n\twire  [27:0]  man_2comp_res_dataa_w;\n\twire  [27:0]  man_2comp_res_datab_w;\n\twire  [27:0]  man_2comp_res_w;\n\twire  [22:0]  man_a_not_zero_w;\n\twire  [27:0]  man_add_sub_dataa_w;\n\twire  [27:0]  man_add_sub_datab_w;\n\twire  [25:0]  man_add_sub_res_mag_dffe21_wi;\n\twire  [25:0]  man_add_sub_res_mag_dffe21_wo;\n\twire  [25:0]  man_add_sub_res_mag_dffe23_wi;\n\twire  [25:0]  man_add_sub_res_mag_dffe23_wo;\n\twire  [25:0]  man_add_sub_res_mag_dffe26_wi;\n\twire  [25:0]  man_add_sub_res_mag_dffe26_wo;\n\twire  [27:0]  man_add_sub_res_mag_dffe27_wi;\n\twire  [27:0]  man_add_sub_res_mag_dffe27_wo;\n\twire  [27:0]  man_add_sub_res_mag_w2;\n\twire  man_add_sub_res_sign_dffe21_wo;\n\twire  man_add_sub_res_sign_dffe23_wi;\n\twire  man_add_sub_res_sign_dffe23_wo;\n\twire  man_add_sub_res_sign_dffe26_wi;\n\twire  man_add_sub_res_sign_dffe26_wo;\n\twire  man_add_sub_res_sign_dffe27_wi;\n\twire  man_add_sub_res_sign_dffe27_wo;\n\twire  man_add_sub_res_sign_w2;\n\twire  [27:0]  man_add_sub_w;\n\twire  [22:0]  man_all_zeros_w;\n\twire  [22:0]  man_b_not_zero_w;\n\twire  [25:0]  man_dffe31_wo;\n\twire  [25:0]  man_intermediate_res_w;\n\twire  [4:0]  man_leading_zeros_cnt_w;\n\twire  [4:0]  man_leading_zeros_dffe31_wi;\n\twire  [4:0]  man_leading_zeros_dffe31_wo;\n\twire  [22:0]  man_nan_w;\n\twire  [22:0]  man_out_dffe5_wi;\n\twire  [22:0]  man_out_dffe5_wo;\n\twire  [22:0]  man_res_dffe4_wi;\n\twire  [22:0]  man_res_dffe4_wo;\n\twire  man_res_is_not_zero_dffe31_wi;\n\twire  man_res_is_not_zero_dffe31_wo;\n\twire  man_res_is_not_zero_dffe32_wi;\n\twire  man_res_is_not_zero_dffe32_wo;\n\twire  man_res_is_not_zero_dffe33_wi;\n\twire  man_res_is_not_zero_dffe33_wo;\n\twire  man_res_is_not_zero_dffe3_wi;\n\twire  man_res_is_not_zero_dffe3_wo;\n\twire  man_res_is_not_zero_dffe41_wi;\n\twire  man_res_is_not_zero_dffe41_wo;\n\twire  man_res_is_not_zero_dffe42_wi;\n\twire  man_res_is_not_zero_dffe42_wo;\n\twire  man_res_is_not_zero_dffe4_wi;\n\twire  man_res_is_not_zero_dffe4_wo;\n\twire  [25:0]  man_res_mag_w2;\n\twire  man_res_not_zero_dffe23_wi;\n\twire  man_res_not_zero_dffe23_wo;\n\twire  man_res_not_zero_dffe26_wi;\n\twire  man_res_not_zero_dffe26_wo;\n\twire  [24:0]  man_res_not_zero_w2;\n\twire  [25:0]  man_res_rounding_add_sub_datab_w;\n\twire  [25:0]  man_res_rounding_add_sub_w;\n\twire  [23:0]  man_res_w3;\n\twire  [22:0]  man_rounded_res_w;\n\twire  man_rounding_add_value_w;\n\twire  [23:0]  man_smaller_dffe13_wi;\n\twire  [23:0]  man_smaller_dffe13_wo;\n\twire  [23:0]  man_smaller_w;\n\twire  need_complement_dffe22_wi;\n\twire  need_complement_dffe22_wo;\n\twire  need_complement_dffe2_wi;\n\twire  need_complement_dffe2_wo;\n\twire  [1:0]  pos_sign_bit_ext;\n\twire  [3:0]  priority_encoder_1pads_w;\n\twire  round_bit_dffe21_wi;\n\twire  round_bit_dffe21_wo;\n\twire  round_bit_dffe23_wi;\n\twire  round_bit_dffe23_wo;\n\twire  round_bit_dffe26_wi;\n\twire  round_bit_dffe26_wo;\n\twire  round_bit_dffe31_wi;\n\twire  round_bit_dffe31_wo;\n\twire  round_bit_dffe32_wi;\n\twire  round_bit_dffe32_wo;\n\twire  round_bit_dffe33_wi;\n\twire  round_bit_dffe33_wo;\n\twire  round_bit_dffe3_wi;\n\twire  round_bit_dffe3_wo;\n\twire  round_bit_w;\n\twire  rounded_res_infinity_dffe4_wi;\n\twire  rounded_res_infinity_dffe4_wo;\n\twire  [4:0]  rshift_distance_dffe13_wi;\n\twire  [4:0]  rshift_distance_dffe13_wo;\n\twire  [4:0]  rshift_distance_dffe14_wi;\n\twire  [4:0]  rshift_distance_dffe14_wo;\n\twire  [4:0]  rshift_distance_dffe15_wi;\n\twire  [4:0]  rshift_distance_dffe15_wo;\n\twire  [4:0]  rshift_distance_w;\n\twire  sign_dffe31_wi;\n\twire  sign_dffe31_wo;\n\twire  sign_dffe32_wi;\n\twire  sign_dffe32_wo;\n\twire  sign_dffe33_wi;\n\twire  sign_dffe33_wo;\n\twire  sign_out_dffe5_wi;\n\twire  sign_out_dffe5_wo;\n\twire  sign_res_dffe3_wi;\n\twire  sign_res_dffe3_wo;\n\twire  sign_res_dffe41_wi;\n\twire  sign_res_dffe41_wo;\n\twire  sign_res_dffe42_wi;\n\twire  sign_res_dffe42_wo;\n\twire  sign_res_dffe4_wi;\n\twire  sign_res_dffe4_wo;\n\twire  [5:0]  sticky_bit_cnt_dataa_w;\n\twire  [5:0]  sticky_bit_cnt_datab_w;\n\twire  [5:0]  sticky_bit_cnt_res_w;\n\twire  sticky_bit_dffe1_wi;\n\twire  sticky_bit_dffe1_wo;\n\twire  sticky_bit_dffe21_wi;\n\twire  sticky_bit_dffe21_wo;\n\twire  sticky_bit_dffe22_wi;\n\twire  sticky_bit_dffe22_wo;\n\twire  sticky_bit_dffe23_wi;\n\twire  sticky_bit_dffe23_wo;\n\twire  sticky_bit_dffe25_wi;\n\twire  sticky_bit_dffe25_wo;\n\twire  sticky_bit_dffe26_wi;\n\twire  sticky_bit_dffe26_wo;\n\twire  sticky_bit_dffe27_wi;\n\twire  sticky_bit_dffe27_wo;\n\twire  sticky_bit_dffe2_wi;\n\twire  sticky_bit_dffe2_wo;\n\twire  sticky_bit_dffe31_wi;\n\twire  sticky_bit_dffe31_wo;\n\twire  sticky_bit_dffe32_wi;\n\twire  sticky_bit_dffe32_wo;\n\twire  sticky_bit_dffe33_wi;\n\twire  sticky_bit_dffe33_wo;\n\twire  sticky_bit_dffe3_wi;\n\twire  sticky_bit_dffe3_wo;\n\twire  sticky_bit_w;\n\twire  [5:0]  trailing_zeros_limit_w;\n\twire  zero_man_sign_dffe21_wi;\n\twire  zero_man_sign_dffe21_wo;\n\twire  zero_man_sign_dffe22_wi;\n\twire  zero_man_sign_dffe22_wo;\n\twire  zero_man_sign_dffe23_wi;\n\twire  zero_man_sign_dffe23_wo;\n\twire  zero_man_sign_dffe26_wi;\n\twire  zero_man_sign_dffe26_wo;\n\twire  zero_man_sign_dffe27_wi;\n\twire  zero_man_sign_dffe27_wo;\n\twire  zero_man_sign_dffe2_wi;\n\twire  zero_man_sign_dffe2_wo;\n\n\tfpoint_qsys_addsub_single_altbarrel_shift_fjg   lbarrel_shift\n\t( \n\t.aclr(aclr),\n\t.clk_en(clk_en),\n\t.clock(clock),\n\t.data(man_dffe31_wo),\n\t.distance(man_leading_zeros_cnt_w),\n\t.result(wire_lbarrel_shift_result));\n\tfpoint_qsys_addsub_single_altbarrel_shift_44e   rbarrel_shift\n\t( \n\t.data({man_smaller_dffe13_wo, {2{1'b0}}}),\n\t.distance(rshift_distance_dffe13_wo),\n\t.result(wire_rbarrel_shift_result));\n\tfpoint_qsys_addsub_single_altpriority_encoder_9u8   leading_zeroes_cnt\n\t( \n\t.data({man_add_sub_res_mag_dffe21_wo[25:1], 1'b1, {6{1'b0}}}),\n\t.q(wire_leading_zeroes_cnt_q));\n\tfpoint_qsys_addsub_single_altpriority_encoder_tma   trailing_zeros_cnt\n\t( \n\t.data({{9{1'b1}}, man_smaller_dffe13_wo[22:0]}),\n\t.q(wire_trailing_zeros_cnt_q));\n\t\n\tinitial\n\t\tadd_sub_dffe1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) add_sub_dffe1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   add_sub_dffe1 <= add_sub_dffe1_wi;\n\t\n\tinitial\n\t\tadd_sub_dffe12 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) add_sub_dffe12 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   add_sub_dffe12 <= add_sub_dffe12_wi;\n\t\n\tinitial\n\t\taligned_dataa_exp_dffe12 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) aligned_dataa_exp_dffe12 <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   aligned_dataa_exp_dffe12 <= aligned_dataa_exp_dffe12_wi;\n\t\n\tinitial\n\t\taligned_dataa_man_dffe12 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) aligned_dataa_man_dffe12 <= 24'b0;\n\t\telse if  (clk_en == 1'b1)   aligned_dataa_man_dffe12 <= aligned_dataa_man_dffe12_wi;\n\t\n\tinitial\n\t\taligned_dataa_sign_dffe12 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) aligned_dataa_sign_dffe12 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   aligned_dataa_sign_dffe12 <= aligned_dataa_sign_dffe12_wi;\n\t\n\tinitial\n\t\taligned_datab_exp_dffe12 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) aligned_datab_exp_dffe12 <= 9'b0;\n\t\telse if  (clk_en == 1'b1)   aligned_datab_exp_dffe12 <= aligned_datab_exp_dffe12_wi;\n\t\n\tinitial\n\t\taligned_datab_man_dffe12 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) aligned_datab_man_dffe12 <= 24'b0;\n\t\telse if  (clk_en == 1'b1)   aligned_datab_man_dffe12 <= aligned_datab_man_dffe12_wi;\n\t\n\tinitial\n\t\taligned_datab_sign_dffe12 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) aligned_datab_sign_dffe12 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   aligned_datab_sign_dffe12 <= aligned_datab_sign_dffe12_wi;\n\t\n\tinitial\n\t\tboth_inputs_are_infinite_dffe1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) both_inputs_are_infinite_dffe1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   both_inputs_are_infinite_dffe1 <= both_inputs_are_infinite_dffe1_wi;\n\t\n\tinitial\n\t\tdata_exp_dffe1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) data_exp_dffe1 <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   data_exp_dffe1 <= data_exp_dffe1_wi;\n\t\n\tinitial\n\t\tdataa_man_dffe1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) dataa_man_dffe1 <= 26'b0;\n\t\telse if  (clk_en == 1'b1)   dataa_man_dffe1 <= dataa_man_dffe1_wi;\n\t\n\tinitial\n\t\tdataa_sign_dffe1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) dataa_sign_dffe1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   dataa_sign_dffe1 <= dataa_sign_dffe1_wi;\n\t\n\tinitial\n\t\tdatab_man_dffe1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) datab_man_dffe1 <= 26'b0;\n\t\telse if  (clk_en == 1'b1)   datab_man_dffe1 <= datab_man_dffe1_wi;\n\t\n\tinitial\n\t\tdatab_sign_dffe1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) datab_sign_dffe1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   datab_sign_dffe1 <= datab_sign_dffe1_wi;\n\t\n\tinitial\n\t\tdenormal_res_dffe3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) denormal_res_dffe3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   denormal_res_dffe3 <= denormal_res_dffe3_wi;\n\t\n\tinitial\n\t\tdenormal_res_dffe4 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) denormal_res_dffe4 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   denormal_res_dffe4 <= denormal_res_dffe4_wi;\n\t\n\tinitial\n\t\texp_adj_dffe21 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_adj_dffe21 <= 2'b0;\n\t\telse if  (clk_en == 1'b1)   exp_adj_dffe21 <= exp_adj_dffe21_wi;\n\t\n\tinitial\n\t\texp_out_dffe5 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_out_dffe5 <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   exp_out_dffe5 <= exp_out_dffe5_wi;\n\t\n\tinitial\n\t\texp_res_dffe2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_res_dffe2 <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   exp_res_dffe2 <= exp_res_dffe2_wi;\n\t\n\tinitial\n\t\texp_res_dffe21 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_res_dffe21 <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   exp_res_dffe21 <= exp_res_dffe21_wi;\n\t\n\tinitial\n\t\texp_res_dffe3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_res_dffe3 <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   exp_res_dffe3 <= exp_res_dffe3_wi;\n\t\n\tinitial\n\t\texp_res_dffe4 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) exp_res_dffe4 <= 8'b0;\n\t\telse if  (clk_en == 1'b1)   exp_res_dffe4 <= exp_res_dffe4_wi;\n\t\n\tinitial\n\t\tinfinite_output_sign_dffe1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) infinite_output_sign_dffe1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   infinite_output_sign_dffe1 <= infinite_output_sign_dffe1_wi;\n\t\n\tinitial\n\t\tinfinite_output_sign_dffe2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) infinite_output_sign_dffe2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   infinite_output_sign_dffe2 <= infinite_output_sign_dffe2_wi;\n\t\n\tinitial\n\t\tinfinite_output_sign_dffe21 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) infinite_output_sign_dffe21 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   infinite_output_sign_dffe21 <= infinite_output_sign_dffe21_wi;\n\t\n\tinitial\n\t\tinfinite_output_sign_dffe3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) infinite_output_sign_dffe3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   infinite_output_sign_dffe3 <= infinite_output_sign_dffe3_wi;\n\t\n\tinitial\n\t\tinfinite_output_sign_dffe31 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) infinite_output_sign_dffe31 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   infinite_output_sign_dffe31 <= infinite_output_sign_dffe31_wi;\n\t\n\tinitial\n\t\tinfinite_output_sign_dffe4 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) infinite_output_sign_dffe4 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   infinite_output_sign_dffe4 <= infinite_output_sign_dffe4_wi;\n\t\n\tinitial\n\t\tinfinite_res_dffe3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) infinite_res_dffe3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   infinite_res_dffe3 <= infinite_res_dffe3_wi;\n\t\n\tinitial\n\t\tinfinite_res_dffe4 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) infinite_res_dffe4 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   infinite_res_dffe4 <= infinite_res_dffe4_wi;\n\t\n\tinitial\n\t\tinfinity_magnitude_sub_dffe2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) infinity_magnitude_sub_dffe2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   infinity_magnitude_sub_dffe2 <= infinity_magnitude_sub_dffe2_wi;\n\t\n\tinitial\n\t\tinfinity_magnitude_sub_dffe21 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) infinity_magnitude_sub_dffe21 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   infinity_magnitude_sub_dffe21 <= infinity_magnitude_sub_dffe21_wi;\n\t\n\tinitial\n\t\tinfinity_magnitude_sub_dffe3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) infinity_magnitude_sub_dffe3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   infinity_magnitude_sub_dffe3 <= infinity_magnitude_sub_dffe3_wi;\n\t\n\tinitial\n\t\tinfinity_magnitude_sub_dffe31 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) infinity_magnitude_sub_dffe31 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   infinity_magnitude_sub_dffe31 <= infinity_magnitude_sub_dffe31_wi;\n\t\n\tinitial\n\t\tinfinity_magnitude_sub_dffe4 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) infinity_magnitude_sub_dffe4 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   infinity_magnitude_sub_dffe4 <= infinity_magnitude_sub_dffe4_wi;\n\t\n\tinitial\n\t\tinput_dataa_infinite_dffe12 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_dataa_infinite_dffe12 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_dataa_infinite_dffe12 <= input_dataa_infinite_dffe12_wi;\n\t\n\tinitial\n\t\tinput_dataa_nan_dffe12 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_dataa_nan_dffe12 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_dataa_nan_dffe12 <= input_dataa_nan_dffe12_wi;\n\t\n\tinitial\n\t\tinput_datab_infinite_dffe12 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_datab_infinite_dffe12 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_datab_infinite_dffe12 <= input_datab_infinite_dffe12_wi;\n\t\n\tinitial\n\t\tinput_datab_nan_dffe12 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_datab_nan_dffe12 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_datab_nan_dffe12 <= input_datab_nan_dffe12_wi;\n\t\n\tinitial\n\t\tinput_is_infinite_dffe1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_infinite_dffe1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_infinite_dffe1 <= input_is_infinite_dffe1_wi;\n\t\n\tinitial\n\t\tinput_is_infinite_dffe2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_infinite_dffe2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_infinite_dffe2 <= input_is_infinite_dffe2_wi;\n\t\n\tinitial\n\t\tinput_is_infinite_dffe21 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_infinite_dffe21 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_infinite_dffe21 <= input_is_infinite_dffe21_wi;\n\t\n\tinitial\n\t\tinput_is_infinite_dffe3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_infinite_dffe3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_infinite_dffe3 <= input_is_infinite_dffe3_wi;\n\t\n\tinitial\n\t\tinput_is_infinite_dffe31 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_infinite_dffe31 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_infinite_dffe31 <= input_is_infinite_dffe31_wi;\n\t\n\tinitial\n\t\tinput_is_infinite_dffe4 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_infinite_dffe4 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_infinite_dffe4 <= input_is_infinite_dffe4_wi;\n\t\n\tinitial\n\t\tinput_is_nan_dffe1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_nan_dffe1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_nan_dffe1 <= input_is_nan_dffe1_wi;\n\t\n\tinitial\n\t\tinput_is_nan_dffe2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_nan_dffe2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_nan_dffe2 <= input_is_nan_dffe2_wi;\n\t\n\tinitial\n\t\tinput_is_nan_dffe21 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_nan_dffe21 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_nan_dffe21 <= input_is_nan_dffe21_wi;\n\t\n\tinitial\n\t\tinput_is_nan_dffe3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_nan_dffe3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_nan_dffe3 <= input_is_nan_dffe3_wi;\n\t\n\tinitial\n\t\tinput_is_nan_dffe31 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_nan_dffe31 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_nan_dffe31 <= input_is_nan_dffe31_wi;\n\t\n\tinitial\n\t\tinput_is_nan_dffe4 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) input_is_nan_dffe4 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   input_is_nan_dffe4 <= input_is_nan_dffe4_wi;\n\t\n\tinitial\n\t\tman_add_sub_res_mag_dffe21 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_add_sub_res_mag_dffe21 <= 26'b0;\n\t\telse if  (clk_en == 1'b1)   man_add_sub_res_mag_dffe21 <= man_add_sub_res_mag_dffe21_wi;\n\t\n\tinitial\n\t\tman_add_sub_res_sign_dffe21 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_add_sub_res_sign_dffe21 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   man_add_sub_res_sign_dffe21 <= man_add_sub_res_sign_dffe27_wo;\n\t\n\tinitial\n\t\tman_dffe31 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_dffe31 <= 26'b0;\n\t\telse if  (clk_en == 1'b1)   man_dffe31 <= man_add_sub_res_mag_dffe26_wo;\n\t\n\tinitial\n\t\tman_leading_zeros_dffe31 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_leading_zeros_dffe31 <= 5'b0;\n\t\telse if  (clk_en == 1'b1)   man_leading_zeros_dffe31 <= man_leading_zeros_dffe31_wi;\n\t\n\tinitial\n\t\tman_out_dffe5 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_out_dffe5 <= 23'b0;\n\t\telse if  (clk_en == 1'b1)   man_out_dffe5 <= man_out_dffe5_wi;\n\t\n\tinitial\n\t\tman_res_dffe4 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_res_dffe4 <= 23'b0;\n\t\telse if  (clk_en == 1'b1)   man_res_dffe4 <= man_res_dffe4_wi;\n\t\n\tinitial\n\t\tman_res_is_not_zero_dffe3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_res_is_not_zero_dffe3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   man_res_is_not_zero_dffe3 <= man_res_is_not_zero_dffe3_wi;\n\t\n\tinitial\n\t\tman_res_is_not_zero_dffe31 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_res_is_not_zero_dffe31 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   man_res_is_not_zero_dffe31 <= man_res_is_not_zero_dffe31_wi;\n\t\n\tinitial\n\t\tman_res_is_not_zero_dffe4 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) man_res_is_not_zero_dffe4 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   man_res_is_not_zero_dffe4 <= man_res_is_not_zero_dffe4_wi;\n\t\n\tinitial\n\t\tneed_complement_dffe2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) need_complement_dffe2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   need_complement_dffe2 <= need_complement_dffe2_wi;\n\t\n\tinitial\n\t\tround_bit_dffe21 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) round_bit_dffe21 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   round_bit_dffe21 <= round_bit_dffe21_wi;\n\t\n\tinitial\n\t\tround_bit_dffe3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) round_bit_dffe3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   round_bit_dffe3 <= round_bit_dffe3_wi;\n\t\n\tinitial\n\t\tround_bit_dffe31 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) round_bit_dffe31 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   round_bit_dffe31 <= round_bit_dffe31_wi;\n\t\n\tinitial\n\t\trounded_res_infinity_dffe4 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) rounded_res_infinity_dffe4 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   rounded_res_infinity_dffe4 <= rounded_res_infinity_dffe4_wi;\n\t\n\tinitial\n\t\tsign_dffe31 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_dffe31 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_dffe31 <= sign_dffe31_wi;\n\t\n\tinitial\n\t\tsign_out_dffe5 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_out_dffe5 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_out_dffe5 <= sign_out_dffe5_wi;\n\t\n\tinitial\n\t\tsign_res_dffe3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_res_dffe3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_res_dffe3 <= sign_res_dffe3_wi;\n\t\n\tinitial\n\t\tsign_res_dffe4 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sign_res_dffe4 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sign_res_dffe4 <= sign_res_dffe4_wi;\n\t\n\tinitial\n\t\tsticky_bit_dffe1 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sticky_bit_dffe1 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sticky_bit_dffe1 <= sticky_bit_dffe1_wi;\n\t\n\tinitial\n\t\tsticky_bit_dffe2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sticky_bit_dffe2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sticky_bit_dffe2 <= sticky_bit_dffe2_wi;\n\t\n\tinitial\n\t\tsticky_bit_dffe21 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sticky_bit_dffe21 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sticky_bit_dffe21 <= sticky_bit_dffe21_wi;\n\t\n\tinitial\n\t\tsticky_bit_dffe3 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sticky_bit_dffe3 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sticky_bit_dffe3 <= sticky_bit_dffe3_wi;\n\t\n\tinitial\n\t\tsticky_bit_dffe31 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) sticky_bit_dffe31 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   sticky_bit_dffe31 <= sticky_bit_dffe31_wi;\n\t\n\tinitial\n\t\tzero_man_sign_dffe2 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) zero_man_sign_dffe2 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   zero_man_sign_dffe2 <= zero_man_sign_dffe2_wi;\n\t\n\tinitial\n\t\tzero_man_sign_dffe21 = 0;\n\t\n\talways @ ( posedge clock or  posedge aclr)\n\t\tif (aclr == 1'b1) zero_man_sign_dffe21 <= 1'b0;\n\t\telse if  (clk_en == 1'b1)   zero_man_sign_dffe21 <= zero_man_sign_dffe21_wi;\n\tlpm_add_sub   add_sub1\n\t( \n\t.aclr(aclr),\n\t.clken(clk_en),\n\t.clock(clock),\n\t.cout(),\n\t.dataa(aligned_dataa_exp_w),\n\t.datab(aligned_datab_exp_w),\n\t.overflow(),\n\t.result(wire_add_sub1_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.add_sub(1'b1),\n\t.cin()\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tadd_sub1.lpm_direction = \"SUB\",\n\t\tadd_sub1.lpm_pipeline = 1,\n\t\tadd_sub1.lpm_representation = \"SIGNED\",\n\t\tadd_sub1.lpm_width = 9,\n\t\tadd_sub1.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   add_sub2\n\t( \n\t.aclr(aclr),\n\t.clken(clk_en),\n\t.clock(clock),\n\t.cout(),\n\t.dataa(aligned_datab_exp_w),\n\t.datab(aligned_dataa_exp_w),\n\t.overflow(),\n\t.result(wire_add_sub2_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.add_sub(1'b1),\n\t.cin()\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tadd_sub2.lpm_direction = \"SUB\",\n\t\tadd_sub2.lpm_pipeline = 1,\n\t\tadd_sub2.lpm_representation = \"SIGNED\",\n\t\tadd_sub2.lpm_width = 9,\n\t\tadd_sub2.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   add_sub3\n\t( \n\t.cout(),\n\t.dataa(sticky_bit_cnt_dataa_w),\n\t.datab(sticky_bit_cnt_datab_w),\n\t.overflow(),\n\t.result(wire_add_sub3_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.cin(),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tadd_sub3.lpm_direction = \"SUB\",\n\t\tadd_sub3.lpm_representation = \"SIGNED\",\n\t\tadd_sub3.lpm_width = 6,\n\t\tadd_sub3.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   add_sub4\n\t( \n\t.cout(),\n\t.dataa(exp_adjustment_add_sub_dataa_w),\n\t.datab(exp_adjustment_add_sub_datab_w),\n\t.overflow(),\n\t.result(wire_add_sub4_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.cin(),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tadd_sub4.lpm_direction = \"ADD\",\n\t\tadd_sub4.lpm_representation = \"SIGNED\",\n\t\tadd_sub4.lpm_width = 9,\n\t\tadd_sub4.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   add_sub5\n\t( \n\t.aclr(aclr),\n\t.clken(clk_en),\n\t.clock(clock),\n\t.cout(),\n\t.dataa(exp_adjustment2_add_sub_dataa_w),\n\t.datab(exp_adjustment2_add_sub_datab_w),\n\t.overflow(),\n\t.result(wire_add_sub5_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.add_sub(1'b1),\n\t.cin()\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tadd_sub5.lpm_direction = \"ADD\",\n\t\tadd_sub5.lpm_pipeline = 1,\n\t\tadd_sub5.lpm_representation = \"SIGNED\",\n\t\tadd_sub5.lpm_width = 9,\n\t\tadd_sub5.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   add_sub6\n\t( \n\t.cout(),\n\t.dataa(exp_res_rounding_adder_dataa_w),\n\t.datab(exp_rounding_adjustment_w),\n\t.overflow(),\n\t.result(wire_add_sub6_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.cin(),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tadd_sub6.lpm_direction = \"ADD\",\n\t\tadd_sub6.lpm_representation = \"SIGNED\",\n\t\tadd_sub6.lpm_width = 9,\n\t\tadd_sub6.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   man_2comp_res_lower\n\t( \n\t.aclr(aclr),\n\t.add_sub(add_sub_w2),\n\t.cin(borrow_w),\n\t.clken(clk_en),\n\t.clock(clock),\n\t.cout(wire_man_2comp_res_lower_cout),\n\t.dataa(man_2comp_res_dataa_w[13:0]),\n\t.datab(man_2comp_res_datab_w[13:0]),\n\t.overflow(),\n\t.result(wire_man_2comp_res_lower_result));\n\tdefparam\n\t\tman_2comp_res_lower.lpm_pipeline = 1,\n\t\tman_2comp_res_lower.lpm_representation = \"SIGNED\",\n\t\tman_2comp_res_lower.lpm_width = 14,\n\t\tman_2comp_res_lower.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   man_2comp_res_upper0\n\t( \n\t.aclr(aclr),\n\t.add_sub(add_sub_w2),\n\t.cin(1'b0),\n\t.clken(clk_en),\n\t.clock(clock),\n\t.cout(),\n\t.dataa(man_2comp_res_dataa_w[27:14]),\n\t.datab(man_2comp_res_datab_w[27:14]),\n\t.overflow(),\n\t.result(wire_man_2comp_res_upper0_result));\n\tdefparam\n\t\tman_2comp_res_upper0.lpm_pipeline = 1,\n\t\tman_2comp_res_upper0.lpm_representation = \"SIGNED\",\n\t\tman_2comp_res_upper0.lpm_width = 14,\n\t\tman_2comp_res_upper0.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   man_2comp_res_upper1\n\t( \n\t.aclr(aclr),\n\t.add_sub(add_sub_w2),\n\t.cin(1'b1),\n\t.clken(clk_en),\n\t.clock(clock),\n\t.cout(),\n\t.dataa(man_2comp_res_dataa_w[27:14]),\n\t.datab(man_2comp_res_datab_w[27:14]),\n\t.overflow(),\n\t.result(wire_man_2comp_res_upper1_result));\n\tdefparam\n\t\tman_2comp_res_upper1.lpm_pipeline = 1,\n\t\tman_2comp_res_upper1.lpm_representation = \"SIGNED\",\n\t\tman_2comp_res_upper1.lpm_width = 14,\n\t\tman_2comp_res_upper1.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   man_add_sub_lower\n\t( \n\t.aclr(aclr),\n\t.add_sub(add_sub_w2),\n\t.cin(borrow_w),\n\t.clken(clk_en),\n\t.clock(clock),\n\t.cout(wire_man_add_sub_lower_cout),\n\t.dataa(man_add_sub_dataa_w[13:0]),\n\t.datab(man_add_sub_datab_w[13:0]),\n\t.overflow(),\n\t.result(wire_man_add_sub_lower_result));\n\tdefparam\n\t\tman_add_sub_lower.lpm_pipeline = 1,\n\t\tman_add_sub_lower.lpm_representation = \"SIGNED\",\n\t\tman_add_sub_lower.lpm_width = 14,\n\t\tman_add_sub_lower.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   man_add_sub_upper0\n\t( \n\t.aclr(aclr),\n\t.add_sub(add_sub_w2),\n\t.cin(1'b0),\n\t.clken(clk_en),\n\t.clock(clock),\n\t.cout(),\n\t.dataa(man_add_sub_dataa_w[27:14]),\n\t.datab(man_add_sub_datab_w[27:14]),\n\t.overflow(),\n\t.result(wire_man_add_sub_upper0_result));\n\tdefparam\n\t\tman_add_sub_upper0.lpm_pipeline = 1,\n\t\tman_add_sub_upper0.lpm_representation = \"SIGNED\",\n\t\tman_add_sub_upper0.lpm_width = 14,\n\t\tman_add_sub_upper0.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   man_add_sub_upper1\n\t( \n\t.aclr(aclr),\n\t.add_sub(add_sub_w2),\n\t.cin(1'b1),\n\t.clken(clk_en),\n\t.clock(clock),\n\t.cout(),\n\t.dataa(man_add_sub_dataa_w[27:14]),\n\t.datab(man_add_sub_datab_w[27:14]),\n\t.overflow(),\n\t.result(wire_man_add_sub_upper1_result));\n\tdefparam\n\t\tman_add_sub_upper1.lpm_pipeline = 1,\n\t\tman_add_sub_upper1.lpm_representation = \"SIGNED\",\n\t\tman_add_sub_upper1.lpm_width = 14,\n\t\tman_add_sub_upper1.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   man_res_rounding_add_sub_lower\n\t( \n\t.cout(wire_man_res_rounding_add_sub_lower_cout),\n\t.dataa(man_intermediate_res_w[12:0]),\n\t.datab(man_res_rounding_add_sub_datab_w[12:0]),\n\t.overflow(),\n\t.result(wire_man_res_rounding_add_sub_lower_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.cin(),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tman_res_rounding_add_sub_lower.lpm_direction = \"ADD\",\n\t\tman_res_rounding_add_sub_lower.lpm_representation = \"SIGNED\",\n\t\tman_res_rounding_add_sub_lower.lpm_width = 13,\n\t\tman_res_rounding_add_sub_lower.lpm_type = \"lpm_add_sub\";\n\tlpm_add_sub   man_res_rounding_add_sub_upper1\n\t( \n\t.cin(1'b1),\n\t.cout(),\n\t.dataa(man_intermediate_res_w[25:13]),\n\t.datab(man_res_rounding_add_sub_datab_w[25:13]),\n\t.overflow(),\n\t.result(wire_man_res_rounding_add_sub_upper1_result)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.add_sub(1'b1),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\tman_res_rounding_add_sub_upper1.lpm_direction = \"ADD\",\n\t\tman_res_rounding_add_sub_upper1.lpm_representation = \"SIGNED\",\n\t\tman_res_rounding_add_sub_upper1.lpm_width = 13,\n\t\tman_res_rounding_add_sub_upper1.lpm_type = \"lpm_add_sub\";\n\tlpm_compare   trailing_zeros_limit_comparator\n\t( \n\t.aeb(),\n\t.agb(wire_trailing_zeros_limit_comparator_agb),\n\t.ageb(),\n\t.alb(),\n\t.aleb(),\n\t.aneb(),\n\t.dataa(sticky_bit_cnt_res_w),\n\t.datab(trailing_zeros_limit_w)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t,\n\t.aclr(1'b0),\n\t.clken(1'b1),\n\t.clock(1'b0)\n\t`ifndef FORMAL_VERIFICATION\n\t\n\t`endif\n\t);\n\tdefparam\n\t\ttrailing_zeros_limit_comparator.lpm_representation = \"SIGNED\",\n\t\ttrailing_zeros_limit_comparator.lpm_width = 6,\n\t\ttrailing_zeros_limit_comparator.lpm_type = \"lpm_compare\";\n\tassign\n\t\tadd_sub_dffe11_wi = add_sub,\n\t\tadd_sub_dffe11_wo = add_sub_dffe11_wi,\n\t\tadd_sub_dffe12_wi = add_sub_dffe11_wo,\n\t\tadd_sub_dffe12_wo = add_sub_dffe12,\n\t\tadd_sub_dffe13_wi = add_sub_dffe12_wo,\n\t\tadd_sub_dffe13_wo = add_sub_dffe13_wi,\n\t\tadd_sub_dffe14_wi = add_sub_dffe13_wo,\n\t\tadd_sub_dffe14_wo = add_sub_dffe14_wi,\n\t\tadd_sub_dffe15_wi = add_sub_dffe14_wo,\n\t\tadd_sub_dffe15_wo = add_sub_dffe15_wi,\n\t\tadd_sub_dffe1_wi = add_sub_dffe15_wo,\n\t\tadd_sub_dffe1_wo = add_sub_dffe1,\n\t\tadd_sub_dffe25_wi = add_sub_w2,\n\t\tadd_sub_dffe25_wo = add_sub_dffe25_wi,\n\t\tadd_sub_w2 = (((((dataa_sign_dffe1_wo & (~ datab_sign_dffe1_wo)) & (~ add_sub_dffe1_wo)) | (((~ dataa_sign_dffe1_wo) & (~ datab_sign_dffe1_wo)) & add_sub_dffe1_wo)) | (((~ dataa_sign_dffe1_wo) & datab_sign_dffe1_wo) & (~ add_sub_dffe1_wo))) | ((dataa_sign_dffe1_wo & datab_sign_dffe1_wo) & add_sub_dffe1_wo)),\n\t\tadder_upper_w = man_intermediate_res_w[25:13],\n\t\taligned_dataa_exp_dffe12_wi = aligned_dataa_exp_w,\n\t\taligned_dataa_exp_dffe12_wo = aligned_dataa_exp_dffe12,\n\t\taligned_dataa_exp_dffe13_wi = aligned_dataa_exp_dffe12_wo,\n\t\taligned_dataa_exp_dffe13_wo = aligned_dataa_exp_dffe13_wi,\n\t\taligned_dataa_exp_dffe14_wi = aligned_dataa_exp_dffe13_wo,\n\t\taligned_dataa_exp_dffe14_wo = aligned_dataa_exp_dffe14_wi,\n\t\taligned_dataa_exp_dffe15_wi = aligned_dataa_exp_dffe14_wo,\n\t\taligned_dataa_exp_dffe15_wo = aligned_dataa_exp_dffe15_wi,\n\t\taligned_dataa_exp_w = {1'b0, ({8{(~ input_dataa_denormal_dffe11_wo)}} & dataa_dffe11_wo[30:23])},\n\t\taligned_dataa_man_dffe12_wi = aligned_dataa_man_w[25:2],\n\t\taligned_dataa_man_dffe12_wo = aligned_dataa_man_dffe12,\n\t\taligned_dataa_man_dffe13_wi = aligned_dataa_man_dffe12_wo,\n\t\taligned_dataa_man_dffe13_wo = aligned_dataa_man_dffe13_wi,\n\t\taligned_dataa_man_dffe14_wi = aligned_dataa_man_dffe13_wo,\n\t\taligned_dataa_man_dffe14_wo = aligned_dataa_man_dffe14_wi,\n\t\taligned_dataa_man_dffe15_w = {aligned_dataa_man_dffe15_wo, {2{1'b0}}},\n\t\taligned_dataa_man_dffe15_wi = aligned_dataa_man_dffe14_wo,\n\t\taligned_dataa_man_dffe15_wo = aligned_dataa_man_dffe15_wi,\n\t\taligned_dataa_man_w = {(((~ input_dataa_infinite_dffe11_wo) & (~ input_dataa_denormal_dffe11_wo)) & (~ input_dataa_zero_dffe11_wo)), ({23{(~ input_dataa_denormal_dffe11_wo)}} & dataa_dffe11_wo[22:0]), {2{1'b0}}},\n\t\taligned_dataa_sign_dffe12_wi = aligned_dataa_sign_w,\n\t\taligned_dataa_sign_dffe12_wo = aligned_dataa_sign_dffe12,\n\t\taligned_dataa_sign_dffe13_wi = aligned_dataa_sign_dffe12_wo,\n\t\taligned_dataa_sign_dffe13_wo = aligned_dataa_sign_dffe13_wi,\n\t\taligned_dataa_sign_dffe14_wi = aligned_dataa_sign_dffe13_wo,\n\t\taligned_dataa_sign_dffe14_wo = aligned_dataa_sign_dffe14_wi,\n\t\taligned_dataa_sign_dffe15_wi = aligned_dataa_sign_dffe14_wo,\n\t\taligned_dataa_sign_dffe15_wo = aligned_dataa_sign_dffe15_wi,\n\t\taligned_dataa_sign_w = dataa_dffe11_wo[31],\n\t\taligned_datab_exp_dffe12_wi = aligned_datab_exp_w,\n\t\taligned_datab_exp_dffe12_wo = aligned_datab_exp_dffe12,\n\t\taligned_datab_exp_dffe13_wi = aligned_datab_exp_dffe12_wo,\n\t\taligned_datab_exp_dffe13_wo = aligned_datab_exp_dffe13_wi,\n\t\taligned_datab_exp_dffe14_wi = aligned_datab_exp_dffe13_wo,\n\t\taligned_datab_exp_dffe14_wo = aligned_datab_exp_dffe14_wi,\n\t\taligned_datab_exp_dffe15_wi = aligned_datab_exp_dffe14_wo,\n\t\taligned_datab_exp_dffe15_wo = aligned_datab_exp_dffe15_wi,\n\t\taligned_datab_exp_w = {1'b0, ({8{(~ input_datab_denormal_dffe11_wo)}} & datab_dffe11_wo[30:23])},\n\t\taligned_datab_man_dffe12_wi = aligned_datab_man_w[25:2],\n\t\taligned_datab_man_dffe12_wo = aligned_datab_man_dffe12,\n\t\taligned_datab_man_dffe13_wi = aligned_datab_man_dffe12_wo,\n\t\taligned_datab_man_dffe13_wo = aligned_datab_man_dffe13_wi,\n\t\taligned_datab_man_dffe14_wi = aligned_datab_man_dffe13_wo,\n\t\taligned_datab_man_dffe14_wo = aligned_datab_man_dffe14_wi,\n\t\taligned_datab_man_dffe15_w = {aligned_datab_man_dffe15_wo, {2{1'b0}}},\n\t\taligned_datab_man_dffe15_wi = aligned_datab_man_dffe14_wo,\n\t\taligned_datab_man_dffe15_wo = aligned_datab_man_dffe15_wi,\n\t\taligned_datab_man_w = {(((~ input_datab_infinite_dffe11_wo) & (~ input_datab_denormal_dffe11_wo)) & (~ input_datab_zero_dffe11_wo)), ({23{(~ input_datab_denormal_dffe11_wo)}} & datab_dffe11_wo[22:0]), {2{1'b0}}},\n\t\taligned_datab_sign_dffe12_wi = aligned_datab_sign_w,\n\t\taligned_datab_sign_dffe12_wo = aligned_datab_sign_dffe12,\n\t\taligned_datab_sign_dffe13_wi = aligned_datab_sign_dffe12_wo,\n\t\taligned_datab_sign_dffe13_wo = aligned_datab_sign_dffe13_wi,\n\t\taligned_datab_sign_dffe14_wi = aligned_datab_sign_dffe13_wo,\n\t\taligned_datab_sign_dffe14_wo = aligned_datab_sign_dffe14_wi,\n\t\taligned_datab_sign_dffe15_wi = aligned_datab_sign_dffe14_wo,\n\t\taligned_datab_sign_dffe15_wo = aligned_datab_sign_dffe15_wi,\n\t\taligned_datab_sign_w = datab_dffe11_wo[31],\n\t\tborrow_w = ((~ sticky_bit_dffe1_wo) & (~ add_sub_w2)),\n\t\tboth_inputs_are_infinite_dffe1_wi = (input_dataa_infinite_dffe15_wo & input_datab_infinite_dffe15_wo),\n\t\tboth_inputs_are_infinite_dffe1_wo = both_inputs_are_infinite_dffe1,\n\t\tboth_inputs_are_infinite_dffe25_wi = both_inputs_are_infinite_dffe1_wo,\n\t\tboth_inputs_are_infinite_dffe25_wo = both_inputs_are_infinite_dffe25_wi,\n\t\tdata_exp_dffe1_wi = (({8{(~ exp_amb_mux_dffe15_wo)}} & aligned_dataa_exp_dffe15_wo[7:0]) | ({8{exp_amb_mux_dffe15_wo}} & aligned_datab_exp_dffe15_wo[7:0])),\n\t\tdata_exp_dffe1_wo = data_exp_dffe1,\n\t\tdataa_dffe11_wi = dataa,\n\t\tdataa_dffe11_wo = dataa_dffe11_wi,\n\t\tdataa_man_dffe1_wi = (({26{(~ exp_amb_mux_dffe15_wo)}} & aligned_dataa_man_dffe15_w) | ({26{exp_amb_mux_dffe15_wo}} & wire_rbarrel_shift_result)),\n\t\tdataa_man_dffe1_wo = dataa_man_dffe1,\n\t\tdataa_sign_dffe1_wi = aligned_dataa_sign_dffe15_wo,\n\t\tdataa_sign_dffe1_wo = dataa_sign_dffe1,\n\t\tdataa_sign_dffe25_wi = dataa_sign_dffe1_wo,\n\t\tdataa_sign_dffe25_wo = dataa_sign_dffe25_wi,\n\t\tdatab_dffe11_wi = datab,\n\t\tdatab_dffe11_wo = datab_dffe11_wi,\n\t\tdatab_man_dffe1_wi = (({26{(~ exp_amb_mux_dffe15_wo)}} & wire_rbarrel_shift_result) | ({26{exp_amb_mux_dffe15_wo}} & aligned_datab_man_dffe15_w)),\n\t\tdatab_man_dffe1_wo = datab_man_dffe1,\n\t\tdatab_sign_dffe1_wi = aligned_datab_sign_dffe15_wo,\n\t\tdatab_sign_dffe1_wo = datab_sign_dffe1,\n\t\tdenormal_flag_w = ((((~ force_nan_w) & (~ force_infinity_w)) & (~ force_zero_w)) & denormal_res_dffe4_wo),\n\t\tdenormal_res_dffe32_wi = denormal_result_w,\n\t\tdenormal_res_dffe32_wo = denormal_res_dffe32_wi,\n\t\tdenormal_res_dffe33_wi = denormal_res_dffe32_wo,\n\t\tdenormal_res_dffe33_wo = denormal_res_dffe33_wi,\n\t\tdenormal_res_dffe3_wi = denormal_res_dffe33_wo,\n\t\tdenormal_res_dffe3_wo = denormal_res_dffe3,\n\t\tdenormal_res_dffe41_wi = denormal_res_dffe42_wo,\n\t\tdenormal_res_dffe41_wo = denormal_res_dffe41_wi,\n\t\tdenormal_res_dffe42_wi = denormal_res_dffe3_wo,\n\t\tdenormal_res_dffe42_wo = denormal_res_dffe42_wi,\n\t\tdenormal_res_dffe4_wi = denormal_res_dffe41_wo,\n\t\tdenormal_res_dffe4_wo = denormal_res_dffe4,\n\t\tdenormal_result_w = ((~ exp_res_not_zero_w[8]) | exp_adjustment2_add_sub_w[8]),\n\t\texp_a_all_one_w = {(dataa[30] & exp_a_all_one_w[6]), (dataa[29] & exp_a_all_one_w[5]), (dataa[28] & exp_a_all_one_w[4]), (dataa[27] & exp_a_all_one_w[3]), (dataa[26] & exp_a_all_one_w[2]), (dataa[25] & exp_a_all_one_w[1]), (dataa[24] & exp_a_all_one_w[0]), dataa[23]},\n\t\texp_a_not_zero_w = {(dataa[30] | exp_a_not_zero_w[6]), (dataa[29] | exp_a_not_zero_w[5]), (dataa[28] | exp_a_not_zero_w[4]), (dataa[27] | exp_a_not_zero_w[3]), (dataa[26] | exp_a_not_zero_w[2]), (dataa[25] | exp_a_not_zero_w[1]), (dataa[24] | exp_a_not_zero_w[0]), dataa[23]},\n\t\texp_adj_0pads = {7{1'b0}},\n\t\texp_adj_dffe21_wi = (({2{man_add_sub_res_mag_dffe27_wo[26]}} & exp_adjust_by_add2) | ({2{(~ man_add_sub_res_mag_dffe27_wo[26])}} & exp_adjust_by_add1)),\n\t\texp_adj_dffe21_wo = exp_adj_dffe21,\n\t\texp_adj_dffe23_wi = exp_adj_dffe21_wo,\n\t\texp_adj_dffe23_wo = exp_adj_dffe23_wi,\n\t\texp_adj_dffe26_wi = exp_adj_dffe23_wo,\n\t\texp_adj_dffe26_wo = exp_adj_dffe26_wi,\n\t\texp_adjust_by_add1 = 2'b01,\n\t\texp_adjust_by_add2 = 2'b10,\n\t\texp_adjustment2_add_sub_dataa_w = exp_value,\n\t\texp_adjustment2_add_sub_datab_w = exp_adjustment_add_sub_w,\n\t\texp_adjustment2_add_sub_w = wire_add_sub5_result,\n\t\texp_adjustment_add_sub_dataa_w = {priority_encoder_1pads_w, wire_leading_zeroes_cnt_q},\n\t\texp_adjustment_add_sub_datab_w = {exp_adj_0pads, exp_adj_dffe26_wo},\n\t\texp_adjustment_add_sub_w = wire_add_sub4_result,\n\t\texp_all_ones_w = {8{1'b1}},\n\t\texp_all_zeros_w = {8{1'b0}},\n\t\texp_amb_mux_dffe13_wi = exp_amb_mux_w,\n\t\texp_amb_mux_dffe13_wo = exp_amb_mux_dffe13_wi,\n\t\texp_amb_mux_dffe14_wi = exp_amb_mux_dffe13_wo,\n\t\texp_amb_mux_dffe14_wo = exp_amb_mux_dffe14_wi,\n\t\texp_amb_mux_dffe15_wi = exp_amb_mux_dffe14_wo,\n\t\texp_amb_mux_dffe15_wo = exp_amb_mux_dffe15_wi,\n\t\texp_amb_mux_w = exp_amb_w[8],\n\t\texp_amb_w = wire_add_sub1_result,\n\t\texp_b_all_one_w = {(datab[30] & exp_b_all_one_w[6]), (datab[29] & exp_b_all_one_w[5]), (datab[28] & exp_b_all_one_w[4]), (datab[27] & exp_b_all_one_w[3]), (datab[26] & exp_b_all_one_w[2]), (datab[25] & exp_b_all_one_w[1]), (datab[24] & exp_b_all_one_w[0]), datab[23]},\n\t\texp_b_not_zero_w = {(datab[30] | exp_b_not_zero_w[6]), (datab[29] | exp_b_not_zero_w[5]), (datab[28] | exp_b_not_zero_w[4]), (datab[27] | exp_b_not_zero_w[3]), (datab[26] | exp_b_not_zero_w[2]), (datab[25] | exp_b_not_zero_w[1]), (datab[24] | exp_b_not_zero_w[0]), datab[23]},\n\t\texp_bma_w = wire_add_sub2_result,\n\t\texp_diff_abs_exceed_max_w = {(exp_diff_abs_exceed_max_w[1] | exp_diff_abs_w[7]), (exp_diff_abs_exceed_max_w[0] | exp_diff_abs_w[6]), exp_diff_abs_w[5]},\n\t\texp_diff_abs_max_w = {5{1'b1}},\n\t\texp_diff_abs_w = (({8{(~ exp_amb_mux_w)}} & exp_amb_w[7:0]) | ({8{exp_amb_mux_w}} & exp_bma_w[7:0])),\n\t\texp_intermediate_res_dffe41_wi = exp_intermediate_res_dffe42_wo,\n\t\texp_intermediate_res_dffe41_wo = exp_intermediate_res_dffe41_wi,\n\t\texp_intermediate_res_dffe42_wi = exp_intermediate_res_w,\n\t\texp_intermediate_res_dffe42_wo = exp_intermediate_res_dffe42_wi,\n\t\texp_intermediate_res_w = exp_res_dffe3_wo,\n\t\texp_out_dffe5_wi = (({8{force_nan_w}} & exp_all_ones_w) | ({8{(~ force_nan_w)}} & (({8{force_infinity_w}} & exp_all_ones_w) | ({8{(~ force_infinity_w)}} & (({8{(force_zero_w | denormal_flag_w)}} & exp_all_zeros_w) | ({8{(~ (force_zero_w | denormal_flag_w))}} & exp_res_dffe4_wo)))))),\n\t\texp_out_dffe5_wo = exp_out_dffe5,\n\t\texp_res_dffe21_wi = exp_res_dffe27_wo,\n\t\texp_res_dffe21_wo = exp_res_dffe21,\n\t\texp_res_dffe22_wi = exp_res_dffe2_wo,\n\t\texp_res_dffe22_wo = exp_res_dffe22_wi,\n\t\texp_res_dffe23_wi = exp_res_dffe21_wo,\n\t\texp_res_dffe23_wo = exp_res_dffe23_wi,\n\t\texp_res_dffe25_wi = data_exp_dffe1_wo,\n\t\texp_res_dffe25_wo = exp_res_dffe25_wi,\n\t\texp_res_dffe26_wi = exp_res_dffe23_wo,\n\t\texp_res_dffe26_wo = exp_res_dffe26_wi,\n\t\texp_res_dffe27_wi = exp_res_dffe22_wo,\n\t\texp_res_dffe27_wo = exp_res_dffe27_wi,\n\t\texp_res_dffe2_wi = exp_res_dffe25_wo,\n\t\texp_res_dffe2_wo = exp_res_dffe2,\n\t\texp_res_dffe32_wi = ({8{(~ denormal_result_w)}} & exp_adjustment2_add_sub_w[7:0]),\n\t\texp_res_dffe32_wo = exp_res_dffe32_wi,\n\t\texp_res_dffe33_wi = exp_res_dffe32_wo,\n\t\texp_res_dffe33_wo = exp_res_dffe33_wi,\n\t\texp_res_dffe3_wi = exp_res_dffe33_wo,\n\t\texp_res_dffe3_wo = exp_res_dffe3,\n\t\texp_res_dffe4_wi = exp_rounded_res_w,\n\t\texp_res_dffe4_wo = exp_res_dffe4,\n\t\texp_res_max_w = {(exp_res_max_w[6] & exp_adjustment2_add_sub_w[7]), (exp_res_max_w[5] & exp_adjustment2_add_sub_w[6]), (exp_res_max_w[4] & exp_adjustment2_add_sub_w[5]), (exp_res_max_w[3] & exp_adjustment2_add_sub_w[4]), (exp_res_max_w[2] & exp_adjustment2_add_sub_w[3]), (exp_res_max_w[1] & exp_adjustment2_add_sub_w[2]), (exp_res_max_w[0] & exp_adjustment2_add_sub_w[1]), exp_adjustment2_add_sub_w[0]},\n\t\texp_res_not_zero_w = {(exp_res_not_zero_w[7] | exp_adjustment2_add_sub_w[8]), (exp_res_not_zero_w[6] | exp_adjustment2_add_sub_w[7]), (exp_res_not_zero_w[5] | exp_adjustment2_add_sub_w[6]), (exp_res_not_zero_w[4] | exp_adjustment2_add_sub_w[5]), (exp_res_not_zero_w[3] | exp_adjustment2_add_sub_w[4]), (exp_res_not_zero_w[2] | exp_adjustment2_add_sub_w[3]), (exp_res_not_zero_w[1] | exp_adjustment2_add_sub_w[2]), (exp_res_not_zero_w[0] | exp_adjustment2_add_sub_w[1]), exp_adjustment2_add_sub_w[0]},\n\t\texp_res_rounding_adder_dataa_w = {1'b0, exp_intermediate_res_dffe41_wo},\n\t\texp_res_rounding_adder_w = wire_add_sub6_result,\n\t\texp_rounded_res_infinity_w = exp_rounded_res_max_w[7],\n\t\texp_rounded_res_max_w = {(exp_rounded_res_max_w[6] & exp_rounded_res_w[7]), (exp_rounded_res_max_w[5] & exp_rounded_res_w[6]), (exp_rounded_res_max_w[4] & exp_rounded_res_w[5]), (exp_rounded_res_max_w[3] & exp_rounded_res_w[4]), (exp_rounded_res_max_w[2] & exp_rounded_res_w[3]), (exp_rounded_res_max_w[1] & exp_rounded_res_w[2]), (exp_rounded_res_max_w[0] & exp_rounded_res_w[1]), exp_rounded_res_w[0]},\n\t\texp_rounded_res_w = exp_res_rounding_adder_w[7:0],\n\t\texp_rounding_adjustment_w = {{8{1'b0}}, man_res_rounding_add_sub_w[24]},\n\t\texp_value = {1'b0, exp_res_dffe26_wo},\n\t\tforce_infinity_w = ((input_is_infinite_dffe4_wo | rounded_res_infinity_dffe4_wo) | infinite_res_dffe4_wo),\n\t\tforce_nan_w = (infinity_magnitude_sub_dffe4_wo | input_is_nan_dffe4_wo),\n\t\tforce_zero_w = (~ man_res_is_not_zero_dffe4_wo),\n\t\tguard_bit_dffe3_wo = man_res_w3[0],\n\t\tinfinite_output_sign_dffe1_wi = (((~ input_datab_infinite_dffe15_wo) & aligned_dataa_sign_dffe15_wo) | (input_datab_infinite_dffe15_wo & (~ (aligned_datab_sign_dffe15_wo ^ add_sub_dffe15_wo)))),\n\t\tinfinite_output_sign_dffe1_wo = infinite_output_sign_dffe1,\n\t\tinfinite_output_sign_dffe21_wi = infinite_output_sign_dffe27_wo,\n\t\tinfinite_output_sign_dffe21_wo = infinite_output_sign_dffe21,\n\t\tinfinite_output_sign_dffe22_wi = infinite_output_sign_dffe2_wo,\n\t\tinfinite_output_sign_dffe22_wo = infinite_output_sign_dffe22_wi,\n\t\tinfinite_output_sign_dffe23_wi = infinite_output_sign_dffe21_wo,\n\t\tinfinite_output_sign_dffe23_wo = infinite_output_sign_dffe23_wi,\n\t\tinfinite_output_sign_dffe25_wi = infinite_output_sign_dffe1_wo,\n\t\tinfinite_output_sign_dffe25_wo = infinite_output_sign_dffe25_wi,\n\t\tinfinite_output_sign_dffe26_wi = infinite_output_sign_dffe23_wo,\n\t\tinfinite_output_sign_dffe26_wo = infinite_output_sign_dffe26_wi,\n\t\tinfinite_output_sign_dffe27_wi = infinite_output_sign_dffe22_wo,\n\t\tinfinite_output_sign_dffe27_wo = infinite_output_sign_dffe27_wi,\n\t\tinfinite_output_sign_dffe2_wi = infinite_output_sign_dffe25_wo,\n\t\tinfinite_output_sign_dffe2_wo = infinite_output_sign_dffe2,\n\t\tinfinite_output_sign_dffe31_wi = infinite_output_sign_dffe26_wo,\n\t\tinfinite_output_sign_dffe31_wo = infinite_output_sign_dffe31,\n\t\tinfinite_output_sign_dffe32_wi = infinite_output_sign_dffe31_wo,\n\t\tinfinite_output_sign_dffe32_wo = infinite_output_sign_dffe32_wi,\n\t\tinfinite_output_sign_dffe33_wi = infinite_output_sign_dffe32_wo,\n\t\tinfinite_output_sign_dffe33_wo = infinite_output_sign_dffe33_wi,\n\t\tinfinite_output_sign_dffe3_wi = infinite_output_sign_dffe33_wo,\n\t\tinfinite_output_sign_dffe3_wo = infinite_output_sign_dffe3,\n\t\tinfinite_output_sign_dffe41_wi = infinite_output_sign_dffe42_wo,\n\t\tinfinite_output_sign_dffe41_wo = infinite_output_sign_dffe41_wi,\n\t\tinfinite_output_sign_dffe42_wi = infinite_output_sign_dffe3_wo,\n\t\tinfinite_output_sign_dffe42_wo = infinite_output_sign_dffe42_wi,\n\t\tinfinite_output_sign_dffe4_wi = infinite_output_sign_dffe41_wo,\n\t\tinfinite_output_sign_dffe4_wo = infinite_output_sign_dffe4,\n\t\tinfinite_res_dff32_wi = (exp_res_max_w[7] & (~ exp_adjustment2_add_sub_w[8])),\n\t\tinfinite_res_dff32_wo = infinite_res_dff32_wi,\n\t\tinfinite_res_dff33_wi = infinite_res_dff32_wo,\n\t\tinfinite_res_dff33_wo = infinite_res_dff33_wi,\n\t\tinfinite_res_dffe3_wi = infinite_res_dff33_wo,\n\t\tinfinite_res_dffe3_wo = infinite_res_dffe3,\n\t\tinfinite_res_dffe41_wi = infinite_res_dffe42_wo,\n\t\tinfinite_res_dffe41_wo = infinite_res_dffe41_wi,\n\t\tinfinite_res_dffe42_wi = infinite_res_dffe3_wo,\n\t\tinfinite_res_dffe42_wo = infinite_res_dffe42_wi,\n\t\tinfinite_res_dffe4_wi = infinite_res_dffe41_wo,\n\t\tinfinite_res_dffe4_wo = infinite_res_dffe4,\n\t\tinfinity_magnitude_sub_dffe21_wi = infinity_magnitude_sub_dffe27_wo,\n\t\tinfinity_magnitude_sub_dffe21_wo = infinity_magnitude_sub_dffe21,\n\t\tinfinity_magnitude_sub_dffe22_wi = infinity_magnitude_sub_dffe2_wo,\n\t\tinfinity_magnitude_sub_dffe22_wo = infinity_magnitude_sub_dffe22_wi,\n\t\tinfinity_magnitude_sub_dffe23_wi = infinity_magnitude_sub_dffe21_wo,\n\t\tinfinity_magnitude_sub_dffe23_wo = infinity_magnitude_sub_dffe23_wi,\n\t\tinfinity_magnitude_sub_dffe26_wi = infinity_magnitude_sub_dffe23_wo,\n\t\tinfinity_magnitude_sub_dffe26_wo = infinity_magnitude_sub_dffe26_wi,\n\t\tinfinity_magnitude_sub_dffe27_wi = infinity_magnitude_sub_dffe22_wo,\n\t\tinfinity_magnitude_sub_dffe27_wo = infinity_magnitude_sub_dffe27_wi,\n\t\tinfinity_magnitude_sub_dffe2_wi = ((~ add_sub_dffe25_wo) & both_inputs_are_infinite_dffe25_wo),\n\t\tinfinity_magnitude_sub_dffe2_wo = infinity_magnitude_sub_dffe2,\n\t\tinfinity_magnitude_sub_dffe31_wi = infinity_magnitude_sub_dffe26_wo,\n\t\tinfinity_magnitude_sub_dffe31_wo = infinity_magnitude_sub_dffe31,\n\t\tinfinity_magnitude_sub_dffe32_wi = infinity_magnitude_sub_dffe31_wo,\n\t\tinfinity_magnitude_sub_dffe32_wo = infinity_magnitude_sub_dffe32_wi,\n\t\tinfinity_magnitude_sub_dffe33_wi = infinity_magnitude_sub_dffe32_wo,\n\t\tinfinity_magnitude_sub_dffe33_wo = infinity_magnitude_sub_dffe33_wi,\n\t\tinfinity_magnitude_sub_dffe3_wi = infinity_magnitude_sub_dffe33_wo,\n\t\tinfinity_magnitude_sub_dffe3_wo = infinity_magnitude_sub_dffe3,\n\t\tinfinity_magnitude_sub_dffe41_wi = infinity_magnitude_sub_dffe42_wo,\n\t\tinfinity_magnitude_sub_dffe41_wo = infinity_magnitude_sub_dffe41_wi,\n\t\tinfinity_magnitude_sub_dffe42_wi = infinity_magnitude_sub_dffe3_wo,\n\t\tinfinity_magnitude_sub_dffe42_wo = infinity_magnitude_sub_dffe42_wi,\n\t\tinfinity_magnitude_sub_dffe4_wi = infinity_magnitude_sub_dffe41_wo,\n\t\tinfinity_magnitude_sub_dffe4_wo = infinity_magnitude_sub_dffe4,\n\t\tinput_dataa_denormal_dffe11_wi = input_dataa_denormal_w,\n\t\tinput_dataa_denormal_dffe11_wo = input_dataa_denormal_dffe11_wi,\n\t\tinput_dataa_denormal_w = ((~ exp_a_not_zero_w[7]) & man_a_not_zero_w[22]),\n\t\tinput_dataa_infinite_dffe11_wi = input_dataa_infinite_w,\n\t\tinput_dataa_infinite_dffe11_wo = input_dataa_infinite_dffe11_wi,\n\t\tinput_dataa_infinite_dffe12_wi = input_dataa_infinite_dffe11_wo,\n\t\tinput_dataa_infinite_dffe12_wo = input_dataa_infinite_dffe12,\n\t\tinput_dataa_infinite_dffe13_wi = input_dataa_infinite_dffe12_wo,\n\t\tinput_dataa_infinite_dffe13_wo = input_dataa_infinite_dffe13_wi,\n\t\tinput_dataa_infinite_dffe14_wi = input_dataa_infinite_dffe13_wo,\n\t\tinput_dataa_infinite_dffe14_wo = input_dataa_infinite_dffe14_wi,\n\t\tinput_dataa_infinite_dffe15_wi = input_dataa_infinite_dffe14_wo,\n\t\tinput_dataa_infinite_dffe15_wo = input_dataa_infinite_dffe15_wi,\n\t\tinput_dataa_infinite_w = (exp_a_all_one_w[7] & (~ man_a_not_zero_w[22])),\n\t\tinput_dataa_nan_dffe11_wi = input_dataa_nan_w,\n\t\tinput_dataa_nan_dffe11_wo = input_dataa_nan_dffe11_wi,\n\t\tinput_dataa_nan_dffe12_wi = input_dataa_nan_dffe11_wo,\n\t\tinput_dataa_nan_dffe12_wo = input_dataa_nan_dffe12,\n\t\tinput_dataa_nan_w = (exp_a_all_one_w[7] & man_a_not_zero_w[22]),\n\t\tinput_dataa_zero_dffe11_wi = input_dataa_zero_w,\n\t\tinput_dataa_zero_dffe11_wo = input_dataa_zero_dffe11_wi,\n\t\tinput_dataa_zero_w = ((~ exp_a_not_zero_w[7]) & (~ man_a_not_zero_w[22])),\n\t\tinput_datab_denormal_dffe11_wi = input_datab_denormal_w,\n\t\tinput_datab_denormal_dffe11_wo = input_datab_denormal_dffe11_wi,\n\t\tinput_datab_denormal_w = ((~ exp_b_not_zero_w[7]) & man_b_not_zero_w[22]),\n\t\tinput_datab_infinite_dffe11_wi = input_datab_infinite_w,\n\t\tinput_datab_infinite_dffe11_wo = input_datab_infinite_dffe11_wi,\n\t\tinput_datab_infinite_dffe12_wi = input_datab_infinite_dffe11_wo,\n\t\tinput_datab_infinite_dffe12_wo = input_datab_infinite_dffe12,\n\t\tinput_datab_infinite_dffe13_wi = input_datab_infinite_dffe12_wo,\n\t\tinput_datab_infinite_dffe13_wo = input_datab_infinite_dffe13_wi,\n\t\tinput_datab_infinite_dffe14_wi = input_datab_infinite_dffe13_wo,\n\t\tinput_datab_infinite_dffe14_wo = input_datab_infinite_dffe14_wi,\n\t\tinput_datab_infinite_dffe15_wi = input_datab_infinite_dffe14_wo,\n\t\tinput_datab_infinite_dffe15_wo = input_datab_infinite_dffe15_wi,\n\t\tinput_datab_infinite_w = (exp_b_all_one_w[7] & (~ man_b_not_zero_w[22])),\n\t\tinput_datab_nan_dffe11_wi = input_datab_nan_w,\n\t\tinput_datab_nan_dffe11_wo = input_datab_nan_dffe11_wi,\n\t\tinput_datab_nan_dffe12_wi = input_datab_nan_dffe11_wo,\n\t\tinput_datab_nan_dffe12_wo = input_datab_nan_dffe12,\n\t\tinput_datab_nan_w = (exp_b_all_one_w[7] & man_b_not_zero_w[22]),\n\t\tinput_datab_zero_dffe11_wi = input_datab_zero_w,\n\t\tinput_datab_zero_dffe11_wo = input_datab_zero_dffe11_wi,\n\t\tinput_datab_zero_w = ((~ exp_b_not_zero_w[7]) & (~ man_b_not_zero_w[22])),\n\t\tinput_is_infinite_dffe1_wi = (input_dataa_infinite_dffe15_wo | input_datab_infinite_dffe15_wo),\n\t\tinput_is_infinite_dffe1_wo = input_is_infinite_dffe1,\n\t\tinput_is_infinite_dffe21_wi = input_is_infinite_dffe27_wo,\n\t\tinput_is_infinite_dffe21_wo = input_is_infinite_dffe21,\n\t\tinput_is_infinite_dffe22_wi = input_is_infinite_dffe2_wo,\n\t\tinput_is_infinite_dffe22_wo = input_is_infinite_dffe22_wi,\n\t\tinput_is_infinite_dffe23_wi = input_is_infinite_dffe21_wo,\n\t\tinput_is_infinite_dffe23_wo = input_is_infinite_dffe23_wi,\n\t\tinput_is_infinite_dffe25_wi = input_is_infinite_dffe1_wo,\n\t\tinput_is_infinite_dffe25_wo = input_is_infinite_dffe25_wi,\n\t\tinput_is_infinite_dffe26_wi = input_is_infinite_dffe23_wo,\n\t\tinput_is_infinite_dffe26_wo = input_is_infinite_dffe26_wi,\n\t\tinput_is_infinite_dffe27_wi = input_is_infinite_dffe22_wo,\n\t\tinput_is_infinite_dffe27_wo = input_is_infinite_dffe27_wi,\n\t\tinput_is_infinite_dffe2_wi = input_is_infinite_dffe25_wo,\n\t\tinput_is_infinite_dffe2_wo = input_is_infinite_dffe2,\n\t\tinput_is_infinite_dffe31_wi = input_is_infinite_dffe26_wo,\n\t\tinput_is_infinite_dffe31_wo = input_is_infinite_dffe31,\n\t\tinput_is_infinite_dffe32_wi = input_is_infinite_dffe31_wo,\n\t\tinput_is_infinite_dffe32_wo = input_is_infinite_dffe32_wi,\n\t\tinput_is_infinite_dffe33_wi = input_is_infinite_dffe32_wo,\n\t\tinput_is_infinite_dffe33_wo = input_is_infinite_dffe33_wi,\n\t\tinput_is_infinite_dffe3_wi = input_is_infinite_dffe33_wo,\n\t\tinput_is_infinite_dffe3_wo = input_is_infinite_dffe3,\n\t\tinput_is_infinite_dffe41_wi = input_is_infinite_dffe42_wo,\n\t\tinput_is_infinite_dffe41_wo = input_is_infinite_dffe41_wi,\n\t\tinput_is_infinite_dffe42_wi = input_is_infinite_dffe3_wo,\n\t\tinput_is_infinite_dffe42_wo = input_is_infinite_dffe42_wi,\n\t\tinput_is_infinite_dffe4_wi = input_is_infinite_dffe41_wo,\n\t\tinput_is_infinite_dffe4_wo = input_is_infinite_dffe4,\n\t\tinput_is_nan_dffe13_wi = (input_dataa_nan_dffe12_wo | input_datab_nan_dffe12_wo),\n\t\tinput_is_nan_dffe13_wo = input_is_nan_dffe13_wi,\n\t\tinput_is_nan_dffe14_wi = input_is_nan_dffe13_wo,\n\t\tinput_is_nan_dffe14_wo = input_is_nan_dffe14_wi,\n\t\tinput_is_nan_dffe15_wi = input_is_nan_dffe14_wo,\n\t\tinput_is_nan_dffe15_wo = input_is_nan_dffe15_wi,\n\t\tinput_is_nan_dffe1_wi = input_is_nan_dffe15_wo,\n\t\tinput_is_nan_dffe1_wo = input_is_nan_dffe1,\n\t\tinput_is_nan_dffe21_wi = input_is_nan_dffe27_wo,\n\t\tinput_is_nan_dffe21_wo = input_is_nan_dffe21,\n\t\tinput_is_nan_dffe22_wi = input_is_nan_dffe2_wo,\n\t\tinput_is_nan_dffe22_wo = input_is_nan_dffe22_wi,\n\t\tinput_is_nan_dffe23_wi = input_is_nan_dffe21_wo,\n\t\tinput_is_nan_dffe23_wo = input_is_nan_dffe23_wi,\n\t\tinput_is_nan_dffe25_wi = input_is_nan_dffe1_wo,\n\t\tinput_is_nan_dffe25_wo = input_is_nan_dffe25_wi,\n\t\tinput_is_nan_dffe26_wi = input_is_nan_dffe23_wo,\n\t\tinput_is_nan_dffe26_wo = input_is_nan_dffe26_wi,\n\t\tinput_is_nan_dffe27_wi = input_is_nan_dffe22_wo,\n\t\tinput_is_nan_dffe27_wo = input_is_nan_dffe27_wi,\n\t\tinput_is_nan_dffe2_wi = input_is_nan_dffe25_wo,\n\t\tinput_is_nan_dffe2_wo = input_is_nan_dffe2,\n\t\tinput_is_nan_dffe31_wi = input_is_nan_dffe26_wo,\n\t\tinput_is_nan_dffe31_wo = input_is_nan_dffe31,\n\t\tinput_is_nan_dffe32_wi = input_is_nan_dffe31_wo,\n\t\tinput_is_nan_dffe32_wo = input_is_nan_dffe32_wi,\n\t\tinput_is_nan_dffe33_wi = input_is_nan_dffe32_wo,\n\t\tinput_is_nan_dffe33_wo = input_is_nan_dffe33_wi,\n\t\tinput_is_nan_dffe3_wi = input_is_nan_dffe33_wo,\n\t\tinput_is_nan_dffe3_wo = input_is_nan_dffe3,\n\t\tinput_is_nan_dffe41_wi = input_is_nan_dffe42_wo,\n\t\tinput_is_nan_dffe41_wo = input_is_nan_dffe41_wi,\n\t\tinput_is_nan_dffe42_wi = input_is_nan_dffe3_wo,\n\t\tinput_is_nan_dffe42_wo = input_is_nan_dffe42_wi,\n\t\tinput_is_nan_dffe4_wi = input_is_nan_dffe41_wo,\n\t\tinput_is_nan_dffe4_wo = input_is_nan_dffe4,\n\t\tman_2comp_res_dataa_w = {pos_sign_bit_ext, datab_man_dffe1_wo},\n\t\tman_2comp_res_datab_w = {pos_sign_bit_ext, dataa_man_dffe1_wo},\n\t\tman_2comp_res_w = {(({14{(~ wire_man_2comp_res_lower_cout)}} & wire_man_2comp_res_upper0_result) | ({14{wire_man_2comp_res_lower_cout}} & wire_man_2comp_res_upper1_result)), wire_man_2comp_res_lower_result},\n\t\tman_a_not_zero_w = {(dataa[22] | man_a_not_zero_w[21]), (dataa[21] | man_a_not_zero_w[20]), (dataa[20] | man_a_not_zero_w[19]), (dataa[19] | man_a_not_zero_w[18]), (dataa[18] | man_a_not_zero_w[17]), (dataa[17] | man_a_not_zero_w[16]), (dataa[16] | man_a_not_zero_w[15]), (dataa[15] | man_a_not_zero_w[14]), (dataa[14] | man_a_not_zero_w[13]), (dataa[13] | man_a_not_zero_w[12]), (dataa[12] | man_a_not_zero_w[11]), (dataa[11] | man_a_not_zero_w[10]), (dataa[10] | man_a_not_zero_w[9]), (dataa[9] | man_a_not_zero_w[8]), (dataa[8] | man_a_not_zero_w[7]), (dataa[7] | man_a_not_zero_w[6]), (dataa[6] | man_a_not_zero_w[5]), (dataa[5] | man_a_not_zero_w[4]), (dataa[4] | man_a_not_zero_w[3]), (dataa[3] | man_a_not_zero_w[2]), (dataa[2] | man_a_not_zero_w[1]), (dataa[1] | man_a_not_zero_w[0]), dataa[0]},\n\t\tman_add_sub_dataa_w = {pos_sign_bit_ext, dataa_man_dffe1_wo},\n\t\tman_add_sub_datab_w = {pos_sign_bit_ext, datab_man_dffe1_wo},\n\t\tman_add_sub_res_mag_dffe21_wi = man_res_mag_w2,\n\t\tman_add_sub_res_mag_dffe21_wo = man_add_sub_res_mag_dffe21,\n\t\tman_add_sub_res_mag_dffe23_wi = man_add_sub_res_mag_dffe21_wo,\n\t\tman_add_sub_res_mag_dffe23_wo = man_add_sub_res_mag_dffe23_wi,\n\t\tman_add_sub_res_mag_dffe26_wi = man_add_sub_res_mag_dffe23_wo,\n\t\tman_add_sub_res_mag_dffe26_wo = man_add_sub_res_mag_dffe26_wi,\n\t\tman_add_sub_res_mag_dffe27_wi = man_add_sub_res_mag_w2,\n\t\tman_add_sub_res_mag_dffe27_wo = man_add_sub_res_mag_dffe27_wi,\n\t\tman_add_sub_res_mag_w2 = (({28{man_add_sub_w[27]}} & man_2comp_res_w) | ({28{(~ man_add_sub_w[27])}} & man_add_sub_w)),\n\t\tman_add_sub_res_sign_dffe21_wo = man_add_sub_res_sign_dffe21,\n\t\tman_add_sub_res_sign_dffe23_wi = man_add_sub_res_sign_dffe21_wo,\n\t\tman_add_sub_res_sign_dffe23_wo = man_add_sub_res_sign_dffe23_wi,\n\t\tman_add_sub_res_sign_dffe26_wi = man_add_sub_res_sign_dffe23_wo,\n\t\tman_add_sub_res_sign_dffe26_wo = man_add_sub_res_sign_dffe26_wi,\n\t\tman_add_sub_res_sign_dffe27_wi = man_add_sub_res_sign_w2,\n\t\tman_add_sub_res_sign_dffe27_wo = man_add_sub_res_sign_dffe27_wi,\n\t\tman_add_sub_res_sign_w2 = ((need_complement_dffe22_wo & (~ man_add_sub_w[27])) | ((~ need_complement_dffe22_wo) & man_add_sub_w[27])),\n\t\tman_add_sub_w = {(({14{(~ wire_man_add_sub_lower_cout)}} & wire_man_add_sub_upper0_result) | ({14{wire_man_add_sub_lower_cout}} & wire_man_add_sub_upper1_result)), wire_man_add_sub_lower_result},\n\t\tman_all_zeros_w = {23{1'b0}},\n\t\tman_b_not_zero_w = {(datab[22] | man_b_not_zero_w[21]), (datab[21] | man_b_not_zero_w[20]), (datab[20] | man_b_not_zero_w[19]), (datab[19] | man_b_not_zero_w[18]), (datab[18] | man_b_not_zero_w[17]), (datab[17] | man_b_not_zero_w[16]), (datab[16] | man_b_not_zero_w[15]), (datab[15] | man_b_not_zero_w[14]), (datab[14] | man_b_not_zero_w[13]), (datab[13] | man_b_not_zero_w[12]), (datab[12] | man_b_not_zero_w[11]), (datab[11] | man_b_not_zero_w[10]), (datab[10] | man_b_not_zero_w[9]), (datab[9] | man_b_not_zero_w[8]), (datab[8] | man_b_not_zero_w[7]), (datab[7] | man_b_not_zero_w[6]), (datab[6] | man_b_not_zero_w[5]), (datab[5] | man_b_not_zero_w[4]), (datab[4] | man_b_not_zero_w[3]), (datab[3] | man_b_not_zero_w[2]), (datab[2] | man_b_not_zero_w[1]), (datab[1] | man_b_not_zero_w[0]), datab[0]},\n\t\tman_dffe31_wo = man_dffe31,\n\t\tman_intermediate_res_w = {{2{1'b0}}, man_res_w3},\n\t\tman_leading_zeros_cnt_w = man_leading_zeros_dffe31_wo,\n\t\tman_leading_zeros_dffe31_wi = (~ wire_leading_zeroes_cnt_q),\n\t\tman_leading_zeros_dffe31_wo = man_leading_zeros_dffe31,\n\t\tman_nan_w = 23'b10000000000000000000000,\n\t\tman_out_dffe5_wi = (({23{force_nan_w}} & man_nan_w) | ({23{(~ force_nan_w)}} & (({23{force_infinity_w}} & man_all_zeros_w) | ({23{(~ force_infinity_w)}} & (({23{(force_zero_w | denormal_flag_w)}} & man_all_zeros_w) | ({23{(~ (force_zero_w | denormal_flag_w))}} & man_res_dffe4_wo)))))),\n\t\tman_out_dffe5_wo = man_out_dffe5,\n\t\tman_res_dffe4_wi = man_rounded_res_w,\n\t\tman_res_dffe4_wo = man_res_dffe4,\n\t\tman_res_is_not_zero_dffe31_wi = man_res_not_zero_dffe26_wo,\n\t\tman_res_is_not_zero_dffe31_wo = man_res_is_not_zero_dffe31,\n\t\tman_res_is_not_zero_dffe32_wi = man_res_is_not_zero_dffe31_wo,\n\t\tman_res_is_not_zero_dffe32_wo = man_res_is_not_zero_dffe32_wi,\n\t\tman_res_is_not_zero_dffe33_wi = man_res_is_not_zero_dffe32_wo,\n\t\tman_res_is_not_zero_dffe33_wo = man_res_is_not_zero_dffe33_wi,\n\t\tman_res_is_not_zero_dffe3_wi = man_res_is_not_zero_dffe33_wo,\n\t\tman_res_is_not_zero_dffe3_wo = man_res_is_not_zero_dffe3,\n\t\tman_res_is_not_zero_dffe41_wi = man_res_is_not_zero_dffe42_wo,\n\t\tman_res_is_not_zero_dffe41_wo = man_res_is_not_zero_dffe41_wi,\n\t\tman_res_is_not_zero_dffe42_wi = man_res_is_not_zero_dffe3_wo,\n\t\tman_res_is_not_zero_dffe42_wo = man_res_is_not_zero_dffe42_wi,\n\t\tman_res_is_not_zero_dffe4_wi = man_res_is_not_zero_dffe41_wo,\n\t\tman_res_is_not_zero_dffe4_wo = man_res_is_not_zero_dffe4,\n\t\tman_res_mag_w2 = (({26{man_add_sub_res_mag_dffe27_wo[26]}} & man_add_sub_res_mag_dffe27_wo[26:1]) | ({26{(~ man_add_sub_res_mag_dffe27_wo[26])}} & man_add_sub_res_mag_dffe27_wo[25:0])),\n\t\tman_res_not_zero_dffe23_wi = man_res_not_zero_w2[24],\n\t\tman_res_not_zero_dffe23_wo = man_res_not_zero_dffe23_wi,\n\t\tman_res_not_zero_dffe26_wi = man_res_not_zero_dffe23_wo,\n\t\tman_res_not_zero_dffe26_wo = man_res_not_zero_dffe26_wi,\n\t\tman_res_not_zero_w2 = {(man_res_not_zero_w2[23] | man_add_sub_res_mag_dffe21_wo[25]), (man_res_not_zero_w2[22] | man_add_sub_res_mag_dffe21_wo[24]), (man_res_not_zero_w2[21] | man_add_sub_res_mag_dffe21_wo[23]), (man_res_not_zero_w2[20] | man_add_sub_res_mag_dffe21_wo[22]), (man_res_not_zero_w2[19] | man_add_sub_res_mag_dffe21_wo[21]), (man_res_not_zero_w2[18] | man_add_sub_res_mag_dffe21_wo[20]), (man_res_not_zero_w2[17] | man_add_sub_res_mag_dffe21_wo[19]), (man_res_not_zero_w2[16] | man_add_sub_res_mag_dffe21_wo[18]), (man_res_not_zero_w2[15] | man_add_sub_res_mag_dffe21_wo[17]), (man_res_not_zero_w2[14] | man_add_sub_res_mag_dffe21_wo[16]), (man_res_not_zero_w2[13] | man_add_sub_res_mag_dffe21_wo[15]), (man_res_not_zero_w2[12] | man_add_sub_res_mag_dffe21_wo[14]), (man_res_not_zero_w2[11] | man_add_sub_res_mag_dffe21_wo[13]), (man_res_not_zero_w2[10] | man_add_sub_res_mag_dffe21_wo[12]), (man_res_not_zero_w2[9] | man_add_sub_res_mag_dffe21_wo[11]), (man_res_not_zero_w2[8] | man_add_sub_res_mag_dffe21_wo[10]), (man_res_not_zero_w2[7] | man_add_sub_res_mag_dffe21_wo[9]), (man_res_not_zero_w2[6] | man_add_sub_res_mag_dffe21_wo[8]), (man_res_not_zero_w2[5] | man_add_sub_res_mag_dffe21_wo[7]), (man_res_not_zero_w2[4] | man_add_sub_res_mag_dffe21_wo[6]), (man_res_not_zero_w2[3] | man_add_sub_res_mag_dffe21_wo[5]), (man_res_not_zero_w2[2] | man_add_sub_res_mag_dffe21_wo[4]), (man_res_not_zero_w2[1] | man_add_sub_res_mag_dffe21_wo[3]), (man_res_not_zero_w2[0] | man_add_sub_res_mag_dffe21_wo[2]), man_add_sub_res_mag_dffe21_wo[1]},\n\t\tman_res_rounding_add_sub_datab_w = {{25{1'b0}}, man_rounding_add_value_w},\n\t\tman_res_rounding_add_sub_w = {(({13{(~ wire_man_res_rounding_add_sub_lower_cout)}} & adder_upper_w) | ({13{wire_man_res_rounding_add_sub_lower_cout}} & wire_man_res_rounding_add_sub_upper1_result)), wire_man_res_rounding_add_sub_lower_result},\n\t\tman_res_w3 = wire_lbarrel_shift_result[25:2],\n\t\tman_rounded_res_w = (({23{man_res_rounding_add_sub_w[24]}} & man_res_rounding_add_sub_w[23:1]) | ({23{(~ man_res_rounding_add_sub_w[24])}} & man_res_rounding_add_sub_w[22:0])),\n\t\tman_rounding_add_value_w = (round_bit_dffe3_wo & (sticky_bit_dffe3_wo | guard_bit_dffe3_wo)),\n\t\tman_smaller_dffe13_wi = man_smaller_w,\n\t\tman_smaller_dffe13_wo = man_smaller_dffe13_wi,\n\t\tman_smaller_w = (({24{exp_amb_mux_w}} & aligned_dataa_man_dffe12_wo) | ({24{(~ exp_amb_mux_w)}} & aligned_datab_man_dffe12_wo)),\n\t\tneed_complement_dffe22_wi = need_complement_dffe2_wo,\n\t\tneed_complement_dffe22_wo = need_complement_dffe22_wi,\n\t\tneed_complement_dffe2_wi = dataa_sign_dffe25_wo,\n\t\tneed_complement_dffe2_wo = need_complement_dffe2,\n\t\tpos_sign_bit_ext = {2{1'b0}},\n\t\tpriority_encoder_1pads_w = {4{1'b1}},\n\t\tresult = {sign_out_dffe5_wo, exp_out_dffe5_wo, man_out_dffe5_wo},\n\t\tround_bit_dffe21_wi = round_bit_w,\n\t\tround_bit_dffe21_wo = round_bit_dffe21,\n\t\tround_bit_dffe23_wi = round_bit_dffe21_wo,\n\t\tround_bit_dffe23_wo = round_bit_dffe23_wi,\n\t\tround_bit_dffe26_wi = round_bit_dffe23_wo,\n\t\tround_bit_dffe26_wo = round_bit_dffe26_wi,\n\t\tround_bit_dffe31_wi = round_bit_dffe26_wo,\n\t\tround_bit_dffe31_wo = round_bit_dffe31,\n\t\tround_bit_dffe32_wi = round_bit_dffe31_wo,\n\t\tround_bit_dffe32_wo = round_bit_dffe32_wi,\n\t\tround_bit_dffe33_wi = round_bit_dffe32_wo,\n\t\tround_bit_dffe33_wo = round_bit_dffe33_wi,\n\t\tround_bit_dffe3_wi = round_bit_dffe33_wo,\n\t\tround_bit_dffe3_wo = round_bit_dffe3,\n\t\tround_bit_w = ((((((~ man_add_sub_res_mag_dffe27_wo[26]) & (~ man_add_sub_res_mag_dffe27_wo[25])) & man_add_sub_res_mag_dffe27_wo[0]) | (((~ man_add_sub_res_mag_dffe27_wo[26]) & man_add_sub_res_mag_dffe27_wo[25]) & man_add_sub_res_mag_dffe27_wo[1])) | ((man_add_sub_res_mag_dffe27_wo[26] & (~ man_add_sub_res_mag_dffe27_wo[25])) & man_add_sub_res_mag_dffe27_wo[2])) | ((man_add_sub_res_mag_dffe27_wo[26] & man_add_sub_res_mag_dffe27_wo[25]) & man_add_sub_res_mag_dffe27_wo[2])),\n\t\trounded_res_infinity_dffe4_wi = exp_rounded_res_infinity_w,\n\t\trounded_res_infinity_dffe4_wo = rounded_res_infinity_dffe4,\n\t\trshift_distance_dffe13_wi = rshift_distance_w,\n\t\trshift_distance_dffe13_wo = rshift_distance_dffe13_wi,\n\t\trshift_distance_dffe14_wi = rshift_distance_dffe13_wo,\n\t\trshift_distance_dffe14_wo = rshift_distance_dffe14_wi,\n\t\trshift_distance_dffe15_wi = rshift_distance_dffe14_wo,\n\t\trshift_distance_dffe15_wo = rshift_distance_dffe15_wi,\n\t\trshift_distance_w = (({5{exp_diff_abs_exceed_max_w[2]}} & exp_diff_abs_max_w) | ({5{(~ exp_diff_abs_exceed_max_w[2])}} & exp_diff_abs_w[4:0])),\n\t\tsign_dffe31_wi = ((man_res_not_zero_dffe26_wo & man_add_sub_res_sign_dffe26_wo) | ((~ man_res_not_zero_dffe26_wo) & zero_man_sign_dffe26_wo)),\n\t\tsign_dffe31_wo = sign_dffe31,\n\t\tsign_dffe32_wi = sign_dffe31_wo,\n\t\tsign_dffe32_wo = sign_dffe32_wi,\n\t\tsign_dffe33_wi = sign_dffe32_wo,\n\t\tsign_dffe33_wo = sign_dffe33_wi,\n\t\tsign_out_dffe5_wi = ((~ force_nan_w) & ((force_infinity_w & infinite_output_sign_dffe4_wo) | ((~ force_infinity_w) & sign_res_dffe4_wo))),\n\t\tsign_out_dffe5_wo = sign_out_dffe5,\n\t\tsign_res_dffe3_wi = sign_dffe33_wo,\n\t\tsign_res_dffe3_wo = sign_res_dffe3,\n\t\tsign_res_dffe41_wi = sign_res_dffe42_wo,\n\t\tsign_res_dffe41_wo = sign_res_dffe41_wi,\n\t\tsign_res_dffe42_wi = sign_res_dffe3_wo,\n\t\tsign_res_dffe42_wo = sign_res_dffe42_wi,\n\t\tsign_res_dffe4_wi = sign_res_dffe41_wo,\n\t\tsign_res_dffe4_wo = sign_res_dffe4,\n\t\tsticky_bit_cnt_dataa_w = {1'b0, rshift_distance_dffe15_wo},\n\t\tsticky_bit_cnt_datab_w = {1'b0, wire_trailing_zeros_cnt_q},\n\t\tsticky_bit_cnt_res_w = wire_add_sub3_result,\n\t\tsticky_bit_dffe1_wi = wire_trailing_zeros_limit_comparator_agb,\n\t\tsticky_bit_dffe1_wo = sticky_bit_dffe1,\n\t\tsticky_bit_dffe21_wi = sticky_bit_w,\n\t\tsticky_bit_dffe21_wo = sticky_bit_dffe21,\n\t\tsticky_bit_dffe22_wi = sticky_bit_dffe2_wo,\n\t\tsticky_bit_dffe22_wo = sticky_bit_dffe22_wi,\n\t\tsticky_bit_dffe23_wi = sticky_bit_dffe21_wo,\n\t\tsticky_bit_dffe23_wo = sticky_bit_dffe23_wi,\n\t\tsticky_bit_dffe25_wi = sticky_bit_dffe1_wo,\n\t\tsticky_bit_dffe25_wo = sticky_bit_dffe25_wi,\n\t\tsticky_bit_dffe26_wi = sticky_bit_dffe23_wo,\n\t\tsticky_bit_dffe26_wo = sticky_bit_dffe26_wi,\n\t\tsticky_bit_dffe27_wi = sticky_bit_dffe22_wo,\n\t\tsticky_bit_dffe27_wo = sticky_bit_dffe27_wi,\n\t\tsticky_bit_dffe2_wi = sticky_bit_dffe25_wo,\n\t\tsticky_bit_dffe2_wo = sticky_bit_dffe2,\n\t\tsticky_bit_dffe31_wi = sticky_bit_dffe26_wo,\n\t\tsticky_bit_dffe31_wo = sticky_bit_dffe31,\n\t\tsticky_bit_dffe32_wi = sticky_bit_dffe31_wo,\n\t\tsticky_bit_dffe32_wo = sticky_bit_dffe32_wi,\n\t\tsticky_bit_dffe33_wi = sticky_bit_dffe32_wo,\n\t\tsticky_bit_dffe33_wo = sticky_bit_dffe33_wi,\n\t\tsticky_bit_dffe3_wi = sticky_bit_dffe33_wo,\n\t\tsticky_bit_dffe3_wo = sticky_bit_dffe3,\n\t\tsticky_bit_w = ((((((~ man_add_sub_res_mag_dffe27_wo[26]) & (~ man_add_sub_res_mag_dffe27_wo[25])) & sticky_bit_dffe27_wo) | (((~ man_add_sub_res_mag_dffe27_wo[26]) & man_add_sub_res_mag_dffe27_wo[25]) & (sticky_bit_dffe27_wo | man_add_sub_res_mag_dffe27_wo[0]))) | ((man_add_sub_res_mag_dffe27_wo[26] & (~ man_add_sub_res_mag_dffe27_wo[25])) & ((sticky_bit_dffe27_wo | man_add_sub_res_mag_dffe27_wo[0]) | man_add_sub_res_mag_dffe27_wo[1]))) | ((man_add_sub_res_mag_dffe27_wo[26] & man_add_sub_res_mag_dffe27_wo[25]) & ((sticky_bit_dffe27_wo | man_add_sub_res_mag_dffe27_wo[0]) | man_add_sub_res_mag_dffe27_wo[1]))),\n\t\ttrailing_zeros_limit_w = 6'b000010,\n\t\tzero_man_sign_dffe21_wi = zero_man_sign_dffe27_wo,\n\t\tzero_man_sign_dffe21_wo = zero_man_sign_dffe21,\n\t\tzero_man_sign_dffe22_wi = zero_man_sign_dffe2_wo,\n\t\tzero_man_sign_dffe22_wo = zero_man_sign_dffe22_wi,\n\t\tzero_man_sign_dffe23_wi = zero_man_sign_dffe21_wo,\n\t\tzero_man_sign_dffe23_wo = zero_man_sign_dffe23_wi,\n\t\tzero_man_sign_dffe26_wi = zero_man_sign_dffe23_wo,\n\t\tzero_man_sign_dffe26_wo = zero_man_sign_dffe26_wi,\n\t\tzero_man_sign_dffe27_wi = zero_man_sign_dffe22_wo,\n\t\tzero_man_sign_dffe27_wo = zero_man_sign_dffe27_wi,\n\t\tzero_man_sign_dffe2_wi = (dataa_sign_dffe25_wo & add_sub_dffe25_wo),\n\t\tzero_man_sign_dffe2_wo = zero_man_sign_dffe2;\nendmodule \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n`timescale 1ns / 1ps\n\n\n\n\n\n\nmodule fpoint_qsys (\n                     \n                      clk,\n                      clk_en,\n                      dataa,\n                      datab,\n                      n,\n                      reset,\n                      start,\n\n                     \n                      done,\n                      result\n                   )\n;\n\n  output           done;\n  output  [ 31: 0] result;\n  input            clk;\n  input            clk_en;\n  input   [ 31: 0] dataa;\n  input   [ 31: 0] datab;\n  input   [  1: 0] n;\n  input            reset;\n  input            start;\n\n  wire             add_sub;\n  wire    [  3: 0] counter_in;\n  reg     [  3: 0] counter_out;\n  reg     [ 31: 0] dataa_regout;\n  reg     [ 31: 0] datab_regout;\n  wire             done;\n  wire    [  3: 0] load_data;\n  wire             local_reset_n;\n  wire    [ 31: 0] result;\n  wire    [ 31: 0] result_addsub;\n  wire    [ 31: 0] result_mult;\n  \n  always @(posedge clk or negedge local_reset_n)\n    begin\n      if (local_reset_n == 0)\n          dataa_regout <= 0;\n      else if (clk_en)\n          dataa_regout <= dataa;\n    end\n\n\n  \n  always @(posedge clk or negedge local_reset_n)\n    begin\n      if (local_reset_n == 0)\n          datab_regout <= 0;\n      else if (clk_en)\n          datab_regout <= datab;\n    end\n\n\n  fpoint_qsys_mult_single the_fp_mult\n    (\n      .aclr (reset),\n      .clk_en (clk_en),\n      .clock (clk),\n      .dataa (dataa_regout),\n      .datab (datab_regout),\n      .result (result_mult)\n    );\n\n\n  fpoint_qsys_addsub_single the_fp_addsub\n    (\n      .aclr (reset),\n      .add_sub (add_sub),\n      .clk_en (clk_en),\n      .clock (clk),\n      .dataa (dataa_regout),\n      .datab (datab_regout),\n      .result (result_addsub)\n    );\n\n\n  \n  \n  always @(posedge clk or negedge local_reset_n)\n    begin\n      if (local_reset_n == 0)\n          counter_out <= 4'd10;\n      else if (clk_en)\n          counter_out <= counter_in;\n    end\n\n\n  \n  assign counter_in = (start == 0)? counter_out - 1'b1 :\n    load_data;\n\n  assign add_sub = n[0];\n  assign local_reset_n = ~reset;\n  assign done = clk_en & ~|counter_out & ~start;\n  \n  assign load_data = (n == 0)? 10 :\n    (n == 1)? 8 :\n    8;\n\n  \n  assign result = (n == 0)? result_mult :\n    (n == 1)? result_addsub :\n    result_addsub;\n\n\nendmodule\n\n</code>"
                },
                {
                    "type": "text",
                    "text": "Based on the provided original Verilog code, its comments and above answers, generate a detailed specification for the module. Include the following information in a single, concise paragraph:\n1. The name of the module.\n2. A simple explanation of the module's functionality.\n3. The input and output ports, along with a brief explanation of each.\n4. The internal signals used within the module, with a brief explanation of their purpose.\n5. An overview of the different blocks or sections in the code and their functions.\nEnsure that the specification is clear and accurately reflects the details from the code and comments.\nYour answer should be structured and well-organized, providing a comprehensive and detailed overview of the module's design and operation.\nPlease provide your answer in the following format:\nModule name: [module name]. Module specification: [module specification]."
                },
                {
                    "type": "text",
                    "text": "Module name: fpoint_qsys. Module specification: This module implements a floating-point arithmetic unit capable of performing multiplication and addition/subtraction operations on 32-bit floating-point numbers. It takes input operands (dataa and datab), a 2-bit operation selector (n), and control signals (clk, clk_en, reset, start). The module outputs a 32-bit result and a done signal. Internally, it uses registered versions of input operands (dataa_regout and datab_regout), a counter (counter_out) for operation timing, and separate sub-modules for multiplication (the_fp_mult) and addition/subtraction (the_fp_addsub). The module selects between multiplication and addition/subtraction based on the n input, with n=0 for multiplication and n=1 or n=2 for addition/subtraction. The add_"
                }
            ]
        }
    ]
}