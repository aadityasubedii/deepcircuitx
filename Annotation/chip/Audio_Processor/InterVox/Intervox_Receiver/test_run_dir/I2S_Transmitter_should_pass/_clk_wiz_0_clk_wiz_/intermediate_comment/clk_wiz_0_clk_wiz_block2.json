{
    "block_comment": "This block is a sequential logic block that captures the value of a signal on the rising edge of a system clock. The `always @(posedge MCLK_48K_clk_wiz_0_en_clk)` statement signifies that the logic inside this block will execute whenever there is a positive edge on `MCLK_48K_clk_wiz_0_en_clk`. The `seq_reg1 <= {seq_reg1[6:0],locked_int};` implementation stores the captured `locked_int` value and shifts the current 7 bits (bits 6:0) of `seq_reg1` to the left, effectively creating a shift register operation. This allows the system to remember the value of `locked_int` throughout each clock cycle."
}