{
    "spec": "Module name: lab7_soc. Module specification: The lab7_soc module is a System-on-Chip (SoC) design for a lab project, integrating various components including a Nios II processor, SDRAM controller, PLL for clock generation, JTAG UART, and custom interfaces. It has input ports for clock (clk_clk), reset (reset_reset_n), and OTG HPI data input (otg_hpi_data_in_port), along with multiple output ports for keycodes, OTG HPI interface signals, and SDRAM control signals. The module uses a bidirectional port (sdram_wire_dq) for SDRAM data transfer. Internally, it utilizes numerous signals for interconnecting components, such as Nios II data and instruction master interfaces, JTAG UART slave interface, and memory interconn",
    "gpt-message": [
        {
            "role": "system",
            "content": "You are an expert in hardware design with a deep understanding of Verilog RTL codes. Now I want to train a large language model for code comment generation tasks specifically focused on Verilog RTL codes. And I want you to help me process the raw data, transforming it into suitable formats that can serve as inputs and outputs for the model."
        },
        {
            "role": "user",
            "content": "Name of the module and its functionality is as follows: \nModule name: lab7_soc\n\nExplanation: This module appears to be a System-on-Chip (SoC) design for a lab project. It integrates various components including a Nios II processor, SDRAM controller, PLL for clock generation, JTAG UART, and several custom interfaces (keycode, OTG HPI). The module handles interconnections between these components, manages clock domains, and provides reset control. It likely serves as the top-level entity for a complex digital system, possibly for an FPGA-based lab assignment involving memory access, communication, and external device interfacing."
        },
        {
            "role": "user",
            "content": "Input and output ports and their explanation is as follows: \nInput ports:\nclk_clk, otg_hpi_data_in_port, reset_reset_n\n\nExplanation:\n- clk_clk: Main clock input for the system\n- otg_hpi_data_in_port: 16-bit input data port for OTG HPI interface\n- reset_reset_n: Active-low reset input for the system\n\nOutput ports:\nkeycode_0_export, keycode_1_export, keycode_2_export, otg_hpi_address_export, otg_hpi_cs_export, otg_hpi_data_out_port, otg_hpi_r_export, otg_hpi_reset_export, otg_hpi_w_export, sdram_clk_clk, sdram_wire_addr, sdram_wire_ba, sdram_wire_cas_n, sdram_wire_cke, sdram_wire_cs_n, sdram_wire_dqm, sdram_wire_ras_n, sdram_wire_we_n\n\nExplanation:\n- keycode_0_export, keycode_1_export, keycode_2_export: 16-bit keycode outputs\n- otg_hpi_address_export: 2-bit OTG HPI address output\n- otg_hpi_cs_export, otg_hpi_r_export, otg_hpi_w_export, otg_hpi_reset_export: Control signals for OTG HPI interface\n- otg_hpi_data_out_port: 16-bit output data port for OTG HPI interface\n- sdram_clk_clk: SDRAM clock output\n- sdram_wire_addr, sdram_wire_ba, sdram_wire_cas_n, sdram_wire_cke, sdram_wire_cs_n, sdram_wire_dqm, sdram_wire_ras_n, sdram_wire_we_n: SDRAM interface signals\n\nInout port:\nsdram_wire_dq\n\nExplanation:\n- sdram_wire_dq: 32-bit bidirectional data bus for SDRAM"
        },
        {
            "role": "user",
            "content": "Internal signals and their explanation is as follows: \nInternal signals:\nsdram_pll_c0_clk, nios2_gen2_0_data_master_readdata, nios2_gen2_0_data_master_waitrequest, nios2_gen2_0_data_master_debugaccess, nios2_gen2_0_data_master_address, nios2_gen2_0_data_master_byteenable, nios2_gen2_0_data_master_read, nios2_gen2_0_data_master_write, nios2_gen2_0_data_master_writedata, nios2_gen2_0_instruction_master_readdata, nios2_gen2_0_instruction_master_waitrequest, nios2_gen2_0_instruction_master_address, nios2_gen2_0_instruction_master_read, mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_chipselect, mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_readdata, mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_waitrequest, mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_address, mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_read, mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_write, mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_writedata.\n\nExplanation:\n- sdram_pll_c0_clk: Clock output from SDRAM PLL\n- nios2_gen2_0_data_master_*: Signals for Nios II processor's data master interface\n- nios2_gen2_0_instruction_master_*: Signals for Nios II processor's instruction master interface\n- mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_*: Signals for JTAG UART Avalon slave interface\n\nThese internal signals are used for communication between different components of the SoC, such as the Nios II processor, memory interfaces, and peripherals. They handle data transfer, addressing, and control operations within the system."
        },
        {
            "role": "user",
            "content": "Original Verilog code is as follows: \n```verilog\n\n\n\n\n`timescale 1 ps / 1 ps\nmodule lab7_soc (\n\t\tinput  wire        clk_clk,                \n\t\toutput wire [15:0] keycode_0_export,       \n\t\toutput wire [15:0] keycode_1_export,       \n\t\toutput wire [15:0] keycode_2_export,       \n\t\toutput wire [1:0]  otg_hpi_address_export, \n\t\toutput wire        otg_hpi_cs_export,      \n\t\tinput  wire [15:0] otg_hpi_data_in_port,   \n\t\toutput wire [15:0] otg_hpi_data_out_port,  \n\t\toutput wire        otg_hpi_r_export,       \n\t\toutput wire        otg_hpi_reset_export,   \n\t\toutput wire        otg_hpi_w_export,       \n\t\tinput  wire        reset_reset_n,          \n\t\toutput wire        sdram_clk_clk,          \n\t\toutput wire [12:0] sdram_wire_addr,        \n\t\toutput wire [1:0]  sdram_wire_ba,          \n\t\toutput wire        sdram_wire_cas_n,       \n\t\toutput wire        sdram_wire_cke,         \n\t\toutput wire        sdram_wire_cs_n,        \n\t\tinout  wire [31:0] sdram_wire_dq,          \n\t\toutput wire [3:0]  sdram_wire_dqm,         \n\t\toutput wire        sdram_wire_ras_n,       \n\t\toutput wire        sdram_wire_we_n         \n\t);\n\n\twire         sdram_pll_c0_clk;                                            \n\twire  [31:0] nios2_gen2_0_data_master_readdata;                           \n\twire         nios2_gen2_0_data_master_waitrequest;                        \n\twire         nios2_gen2_0_data_master_debugaccess;                        \n\twire  [28:0] nios2_gen2_0_data_master_address;                            \n\twire   [3:0] nios2_gen2_0_data_master_byteenable;                         \n\twire         nios2_gen2_0_data_master_read;                               \n\twire         nios2_gen2_0_data_master_write;                              \n\twire  [31:0] nios2_gen2_0_data_master_writedata;                          \n\twire  [31:0] nios2_gen2_0_instruction_master_readdata;                    \n\twire         nios2_gen2_0_instruction_master_waitrequest;                 \n\twire  [28:0] nios2_gen2_0_instruction_master_address;                     \n\twire         nios2_gen2_0_instruction_master_read;                        \n\twire         mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_chipselect;  \n\twire  [31:0] mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_readdata;    \n\twire         mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_waitrequest; \n\twire   [0:0] mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_address;     \n\twire         mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_read;        \n\twire         mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_write;       \n\twire  [31:0] mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_writedata;   \n\twire  [31:0] mm_interconnect_0_sysid_qsys_0_control_slave_readdata;       \n\twire   [0:0] mm_interconnect_0_sysid_qsys_0_control_slave_address;        \n\twire  [31:0] mm_interconnect_0_nios2_gen2_0_debug_mem_slave_readdata;     \n\twire         mm_interconnect_0_nios2_gen2_0_debug_mem_slave_waitrequest;  \n\twire         mm_interconnect_0_nios2_gen2_0_debug_mem_slave_debugaccess;  \n\twire   [8:0] mm_interconnect_0_nios2_gen2_0_debug_mem_slave_address;      \n\twire         mm_interconnect_0_nios2_gen2_0_debug_mem_slave_read;         \n\twire   [3:0] mm_interconnect_0_nios2_gen2_0_debug_mem_slave_byteenable;   \n\twire         mm_interconnect_0_nios2_gen2_0_debug_mem_slave_write;        \n\twire  [31:0] mm_interconnect_0_nios2_gen2_0_debug_mem_slave_writedata;    \n\twire  [31:0] mm_interconnect_0_sdram_pll_pll_slave_readdata;              \n\twire   [1:0] mm_interconnect_0_sdram_pll_pll_slave_address;               \n\twire         mm_interconnect_0_sdram_pll_pll_slave_read;                  \n\twire         mm_interconnect_0_sdram_pll_pll_slave_write;                 \n\twire  [31:0] mm_interconnect_0_sdram_pll_pll_slave_writedata;             \n\twire         mm_interconnect_0_onchip_memory2_0_s1_chipselect;            \n\twire  [31:0] mm_interconnect_0_onchip_memory2_0_s1_readdata;              \n\twire   [1:0] mm_interconnect_0_onchip_memory2_0_s1_address;               \n\twire   [3:0] mm_interconnect_0_onchip_memory2_0_s1_byteenable;            \n\twire         mm_interconnect_0_onchip_memory2_0_s1_write;                 \n\twire  [31:0] mm_interconnect_0_onchip_memory2_0_s1_writedata;             \n\twire         mm_interconnect_0_onchip_memory2_0_s1_clken;                 \n\twire         mm_interconnect_0_sdram_s1_chipselect;                       \n\twire  [31:0] mm_interconnect_0_sdram_s1_readdata;                         \n\twire         mm_interconnect_0_sdram_s1_waitrequest;                      \n\twire  [24:0] mm_interconnect_0_sdram_s1_address;                          \n\twire         mm_interconnect_0_sdram_s1_read;                             \n\twire   [3:0] mm_interconnect_0_sdram_s1_byteenable;                       \n\twire         mm_interconnect_0_sdram_s1_readdatavalid;                    \n\twire         mm_interconnect_0_sdram_s1_write;                            \n\twire  [31:0] mm_interconnect_0_sdram_s1_writedata;                        \n\twire         mm_interconnect_0_keycode_2_s1_chipselect;                   \n\twire  [31:0] mm_interconnect_0_keycode_2_s1_readdata;                     \n\twire   [1:0] mm_interconnect_0_keycode_2_s1_address;                      \n\twire         mm_interconnect_0_keycode_2_s1_write;                        \n\twire  [31:0] mm_interconnect_0_keycode_2_s1_writedata;                    \n\twire         mm_interconnect_0_otg_hpi_address_s1_chipselect;             \n\twire  [31:0] mm_interconnect_0_otg_hpi_address_s1_readdata;               \n\twire   [1:0] mm_interconnect_0_otg_hpi_address_s1_address;                \n\twire         mm_interconnect_0_otg_hpi_address_s1_write;                  \n\twire  [31:0] mm_interconnect_0_otg_hpi_address_s1_writedata;              \n\twire         mm_interconnect_0_otg_hpi_data_s1_chipselect;                \n\twire  [31:0] mm_interconnect_0_otg_hpi_data_s1_readdata;                  \n\twire   [1:0] mm_interconnect_0_otg_hpi_data_s1_address;                   \n\twire         mm_interconnect_0_otg_hpi_data_s1_write;                     \n\twire  [31:0] mm_interconnect_0_otg_hpi_data_s1_writedata;                 \n\twire         mm_interconnect_0_otg_hpi_r_s1_chipselect;                   \n\twire  [31:0] mm_interconnect_0_otg_hpi_r_s1_readdata;                     \n\twire   [1:0] mm_interconnect_0_otg_hpi_r_s1_address;                      \n\twire         mm_interconnect_0_otg_hpi_r_s1_write;                        \n\twire  [31:0] mm_interconnect_0_otg_hpi_r_s1_writedata;                    \n\twire         mm_interconnect_0_otg_hpi_w_s1_chipselect;                   \n\twire  [31:0] mm_interconnect_0_otg_hpi_w_s1_readdata;                     \n\twire   [1:0] mm_interconnect_0_otg_hpi_w_s1_address;                      \n\twire         mm_interconnect_0_otg_hpi_w_s1_write;                        \n\twire  [31:0] mm_interconnect_0_otg_hpi_w_s1_writedata;                    \n\twire         mm_interconnect_0_otg_hpi_cs_s1_chipselect;                  \n\twire  [31:0] mm_interconnect_0_otg_hpi_cs_s1_readdata;                    \n\twire   [1:0] mm_interconnect_0_otg_hpi_cs_s1_address;                     \n\twire         mm_interconnect_0_otg_hpi_cs_s1_write;                       \n\twire  [31:0] mm_interconnect_0_otg_hpi_cs_s1_writedata;                   \n\twire         mm_interconnect_0_otg_hpi_reset_s1_chipselect;               \n\twire  [31:0] mm_interconnect_0_otg_hpi_reset_s1_readdata;                 \n\twire   [1:0] mm_interconnect_0_otg_hpi_reset_s1_address;                  \n\twire         mm_interconnect_0_otg_hpi_reset_s1_write;                    \n\twire  [31:0] mm_interconnect_0_otg_hpi_reset_s1_writedata;                \n\twire         mm_interconnect_0_keycode_0_s1_chipselect;                   \n\twire  [31:0] mm_interconnect_0_keycode_0_s1_readdata;                     \n\twire   [1:0] mm_interconnect_0_keycode_0_s1_address;                      \n\twire         mm_interconnect_0_keycode_0_s1_write;                        \n\twire  [31:0] mm_interconnect_0_keycode_0_s1_writedata;                    \n\twire         mm_interconnect_0_keycode_1_s1_chipselect;                   \n\twire  [31:0] mm_interconnect_0_keycode_1_s1_readdata;                     \n\twire   [1:0] mm_interconnect_0_keycode_1_s1_address;                      \n\twire         mm_interconnect_0_keycode_1_s1_write;                        \n\twire  [31:0] mm_interconnect_0_keycode_1_s1_writedata;                    \n\twire         irq_mapper_receiver0_irq;                                    \n\twire  [31:0] nios2_gen2_0_irq_irq;                                        \n\twire         rst_controller_reset_out_reset;                              \n\twire         rst_controller_001_reset_out_reset;                          \n\twire         rst_controller_001_reset_out_reset_req;                      \n\twire         nios2_gen2_0_debug_reset_request_reset;                      \n\twire         rst_controller_002_reset_out_reset;                          \n\n\tlab7_soc_jtag_uart_0 jtag_uart_0 (\n\t\t.clk            (clk_clk),                                                     \n\t\t.rst_n          (~rst_controller_reset_out_reset),                             \n\t\t.av_chipselect  (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_chipselect),  \n\t\t.av_address     (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_address),     \n\t\t.av_read_n      (~mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_read),       \n\t\t.av_readdata    (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_readdata),    \n\t\t.av_write_n     (~mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_write),      \n\t\t.av_writedata   (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_writedata),   \n\t\t.av_waitrequest (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_waitrequest), \n\t\t.av_irq         (irq_mapper_receiver0_irq)                                     \n\t);\n\n\tlab7_soc_keycode_0 keycode_0 (\n\t\t.clk        (clk_clk),                                   \n\t\t.reset_n    (~rst_controller_reset_out_reset),           \n\t\t.address    (mm_interconnect_0_keycode_0_s1_address),    \n\t\t.write_n    (~mm_interconnect_0_keycode_0_s1_write),     \n\t\t.writedata  (mm_interconnect_0_keycode_0_s1_writedata),  \n\t\t.chipselect (mm_interconnect_0_keycode_0_s1_chipselect), \n\t\t.readdata   (mm_interconnect_0_keycode_0_s1_readdata),   \n\t\t.out_port   (keycode_0_export)                           \n\t);\n\n\tlab7_soc_keycode_0 keycode_1 (\n\t\t.clk        (clk_clk),                                   \n\t\t.reset_n    (~rst_controller_reset_out_reset),           \n\t\t.address    (mm_interconnect_0_keycode_1_s1_address),    \n\t\t.write_n    (~mm_interconnect_0_keycode_1_s1_write),     \n\t\t.writedata  (mm_interconnect_0_keycode_1_s1_writedata),  \n\t\t.chipselect (mm_interconnect_0_keycode_1_s1_chipselect), \n\t\t.readdata   (mm_interconnect_0_keycode_1_s1_readdata),   \n\t\t.out_port   (keycode_1_export)                           \n\t);\n\n\tlab7_soc_keycode_0 keycode_2 (\n\t\t.clk        (clk_clk),                                   \n\t\t.reset_n    (~rst_controller_reset_out_reset),           \n\t\t.address    (mm_interconnect_0_keycode_2_s1_address),    \n\t\t.write_n    (~mm_interconnect_0_keycode_2_s1_write),     \n\t\t.writedata  (mm_interconnect_0_keycode_2_s1_writedata),  \n\t\t.chipselect (mm_interconnect_0_keycode_2_s1_chipselect), \n\t\t.readdata   (mm_interconnect_0_keycode_2_s1_readdata),   \n\t\t.out_port   (keycode_2_export)                           \n\t);\n\n\tlab7_soc_nios2_gen2_0 nios2_gen2_0 (\n\t\t.clk                                 (clk_clk),                                                    \n\t\t.reset_n                             (~rst_controller_001_reset_out_reset),                        \n\t\t.reset_req                           (rst_controller_001_reset_out_reset_req),                     \n\t\t.d_address                           (nios2_gen2_0_data_master_address),                           \n\t\t.d_byteenable                        (nios2_gen2_0_data_master_byteenable),                        \n\t\t.d_read                              (nios2_gen2_0_data_master_read),                              \n\t\t.d_readdata                          (nios2_gen2_0_data_master_readdata),                          \n\t\t.d_waitrequest                       (nios2_gen2_0_data_master_waitrequest),                       \n\t\t.d_write                             (nios2_gen2_0_data_master_write),                             \n\t\t.d_writedata                         (nios2_gen2_0_data_master_writedata),                         \n\t\t.debug_mem_slave_debugaccess_to_roms (nios2_gen2_0_data_master_debugaccess),                       \n\t\t.i_address                           (nios2_gen2_0_instruction_master_address),                    \n\t\t.i_read                              (nios2_gen2_0_instruction_master_read),                       \n\t\t.i_readdata                          (nios2_gen2_0_instruction_master_readdata),                   \n\t\t.i_waitrequest                       (nios2_gen2_0_instruction_master_waitrequest),                \n\t\t.irq                                 (nios2_gen2_0_irq_irq),                                       \n\t\t.debug_reset_request                 (nios2_gen2_0_debug_reset_request_reset),                     \n\t\t.debug_mem_slave_address             (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_address),     \n\t\t.debug_mem_slave_byteenable          (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_byteenable),  \n\t\t.debug_mem_slave_debugaccess         (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_debugaccess), \n\t\t.debug_mem_slave_read                (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_read),        \n\t\t.debug_mem_slave_readdata            (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_readdata),    \n\t\t.debug_mem_slave_waitrequest         (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_waitrequest), \n\t\t.debug_mem_slave_write               (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_write),       \n\t\t.debug_mem_slave_writedata           (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_writedata),   \n\t\t.dummy_ci_port                       ()                                                            \n\t);\n\n\tlab7_soc_onchip_memory2_0 onchip_memory2_0 (\n\t\t.clk        (clk_clk),                                          \n\t\t.address    (mm_interconnect_0_onchip_memory2_0_s1_address),    \n\t\t.clken      (mm_interconnect_0_onchip_memory2_0_s1_clken),      \n\t\t.chipselect (mm_interconnect_0_onchip_memory2_0_s1_chipselect), \n\t\t.write      (mm_interconnect_0_onchip_memory2_0_s1_write),      \n\t\t.readdata   (mm_interconnect_0_onchip_memory2_0_s1_readdata),   \n\t\t.writedata  (mm_interconnect_0_onchip_memory2_0_s1_writedata),  \n\t\t.byteenable (mm_interconnect_0_onchip_memory2_0_s1_byteenable), \n\t\t.reset      (rst_controller_001_reset_out_reset),               \n\t\t.reset_req  (rst_controller_001_reset_out_reset_req),           \n\t\t.freeze     (1'b0)                                              \n\t);\n\n\tlab7_soc_otg_hpi_address otg_hpi_address (\n\t\t.clk        (clk_clk),                                         \n\t\t.reset_n    (~rst_controller_reset_out_reset),                 \n\t\t.address    (mm_interconnect_0_otg_hpi_address_s1_address),    \n\t\t.write_n    (~mm_interconnect_0_otg_hpi_address_s1_write),     \n\t\t.writedata  (mm_interconnect_0_otg_hpi_address_s1_writedata),  \n\t\t.chipselect (mm_interconnect_0_otg_hpi_address_s1_chipselect), \n\t\t.readdata   (mm_interconnect_0_otg_hpi_address_s1_readdata),   \n\t\t.out_port   (otg_hpi_address_export)                           \n\t);\n\n\tlab7_soc_otg_hpi_cs otg_hpi_cs (\n\t\t.clk        (clk_clk),                                    \n\t\t.reset_n    (~rst_controller_reset_out_reset),            \n\t\t.address    (mm_interconnect_0_otg_hpi_cs_s1_address),    \n\t\t.write_n    (~mm_interconnect_0_otg_hpi_cs_s1_write),     \n\t\t.writedata  (mm_interconnect_0_otg_hpi_cs_s1_writedata),  \n\t\t.chipselect (mm_interconnect_0_otg_hpi_cs_s1_chipselect), \n\t\t.readdata   (mm_interconnect_0_otg_hpi_cs_s1_readdata),   \n\t\t.out_port   (otg_hpi_cs_export)                           \n\t);\n\n\tlab7_soc_otg_hpi_data otg_hpi_data (\n\t\t.clk        (clk_clk),                                      \n\t\t.reset_n    (~rst_controller_reset_out_reset),              \n\t\t.address    (mm_interconnect_0_otg_hpi_data_s1_address),    \n\t\t.write_n    (~mm_interconnect_0_otg_hpi_data_s1_write),     \n\t\t.writedata  (mm_interconnect_0_otg_hpi_data_s1_writedata),  \n\t\t.chipselect (mm_interconnect_0_otg_hpi_data_s1_chipselect), \n\t\t.readdata   (mm_interconnect_0_otg_hpi_data_s1_readdata),   \n\t\t.in_port    (otg_hpi_data_in_port),                         \n\t\t.out_port   (otg_hpi_data_out_port)                         \n\t);\n\n\tlab7_soc_otg_hpi_cs otg_hpi_r (\n\t\t.clk        (clk_clk),                                   \n\t\t.reset_n    (~rst_controller_reset_out_reset),           \n\t\t.address    (mm_interconnect_0_otg_hpi_r_s1_address),    \n\t\t.write_n    (~mm_interconnect_0_otg_hpi_r_s1_write),     \n\t\t.writedata  (mm_interconnect_0_otg_hpi_r_s1_writedata),  \n\t\t.chipselect (mm_interconnect_0_otg_hpi_r_s1_chipselect), \n\t\t.readdata   (mm_interconnect_0_otg_hpi_r_s1_readdata),   \n\t\t.out_port   (otg_hpi_r_export)                           \n\t);\n\n\tlab7_soc_otg_hpi_cs otg_hpi_reset (\n\t\t.clk        (clk_clk),                                       \n\t\t.reset_n    (~rst_controller_reset_out_reset),               \n\t\t.address    (mm_interconnect_0_otg_hpi_reset_s1_address),    \n\t\t.write_n    (~mm_interconnect_0_otg_hpi_reset_s1_write),     \n\t\t.writedata  (mm_interconnect_0_otg_hpi_reset_s1_writedata),  \n\t\t.chipselect (mm_interconnect_0_otg_hpi_reset_s1_chipselect), \n\t\t.readdata   (mm_interconnect_0_otg_hpi_reset_s1_readdata),   \n\t\t.out_port   (otg_hpi_reset_export)                           \n\t);\n\n\tlab7_soc_otg_hpi_cs otg_hpi_w (\n\t\t.clk        (clk_clk),                                   \n\t\t.reset_n    (~rst_controller_reset_out_reset),           \n\t\t.address    (mm_interconnect_0_otg_hpi_w_s1_address),    \n\t\t.write_n    (~mm_interconnect_0_otg_hpi_w_s1_write),     \n\t\t.writedata  (mm_interconnect_0_otg_hpi_w_s1_writedata),  \n\t\t.chipselect (mm_interconnect_0_otg_hpi_w_s1_chipselect), \n\t\t.readdata   (mm_interconnect_0_otg_hpi_w_s1_readdata),   \n\t\t.out_port   (otg_hpi_w_export)                           \n\t);\n\n\tlab7_soc_sdram sdram (\n\t\t.clk            (sdram_pll_c0_clk),                         \n\t\t.reset_n        (~rst_controller_002_reset_out_reset),      \n\t\t.az_addr        (mm_interconnect_0_sdram_s1_address),       \n\t\t.az_be_n        (~mm_interconnect_0_sdram_s1_byteenable),   \n\t\t.az_cs          (mm_interconnect_0_sdram_s1_chipselect),    \n\t\t.az_data        (mm_interconnect_0_sdram_s1_writedata),     \n\t\t.az_rd_n        (~mm_interconnect_0_sdram_s1_read),         \n\t\t.az_wr_n        (~mm_interconnect_0_sdram_s1_write),        \n\t\t.za_data        (mm_interconnect_0_sdram_s1_readdata),      \n\t\t.za_valid       (mm_interconnect_0_sdram_s1_readdatavalid), \n\t\t.za_waitrequest (mm_interconnect_0_sdram_s1_waitrequest),   \n\t\t.zs_addr        (sdram_wire_addr),                          \n\t\t.zs_ba          (sdram_wire_ba),                            \n\t\t.zs_cas_n       (sdram_wire_cas_n),                         \n\t\t.zs_cke         (sdram_wire_cke),                           \n\t\t.zs_cs_n        (sdram_wire_cs_n),                          \n\t\t.zs_dq          (sdram_wire_dq),                            \n\t\t.zs_dqm         (sdram_wire_dqm),                           \n\t\t.zs_ras_n       (sdram_wire_ras_n),                         \n\t\t.zs_we_n        (sdram_wire_we_n)                           \n\t);\n\n\tlab7_soc_sdram_pll sdram_pll (\n\t\t.clk                (clk_clk),                                         \n\t\t.reset              (rst_controller_001_reset_out_reset),              \n\t\t.read               (mm_interconnect_0_sdram_pll_pll_slave_read),      \n\t\t.write              (mm_interconnect_0_sdram_pll_pll_slave_write),     \n\t\t.address            (mm_interconnect_0_sdram_pll_pll_slave_address),   \n\t\t.readdata           (mm_interconnect_0_sdram_pll_pll_slave_readdata),  \n\t\t.writedata          (mm_interconnect_0_sdram_pll_pll_slave_writedata), \n\t\t.c0                 (sdram_pll_c0_clk),                                \n\t\t.c1                 (sdram_clk_clk),                                   \n\t\t.scandone           (),                                                \n\t\t.scandataout        (),                                                \n\t\t.areset             (1'b0),                                            \n\t\t.locked             (),                                                \n\t\t.phasedone          (),                                                \n\t\t.phasecounterselect (4'b0000),                                         \n\t\t.phaseupdown        (1'b0),                                            \n\t\t.phasestep          (1'b0),                                            \n\t\t.scanclk            (1'b0),                                            \n\t\t.scanclkena         (1'b0),                                            \n\t\t.scandata           (1'b0),                                            \n\t\t.configupdate       (1'b0)                                             \n\t);\n\n\tlab7_soc_sysid_qsys_0 sysid_qsys_0 (\n\t\t.clock    (clk_clk),                                               \n\t\t.reset_n  (~rst_controller_001_reset_out_reset),                   \n\t\t.readdata (mm_interconnect_0_sysid_qsys_0_control_slave_readdata), \n\t\t.address  (mm_interconnect_0_sysid_qsys_0_control_slave_address)   \n\t);\n\n\tlab7_soc_mm_interconnect_0 mm_interconnect_0 (\n\t\t.clk_0_clk_clk                                  (clk_clk),                                                     \n\t\t.sdram_pll_c0_clk                               (sdram_pll_c0_clk),                                            \n\t\t.jtag_uart_0_reset_reset_bridge_in_reset_reset  (rst_controller_reset_out_reset),                              \n\t\t.nios2_gen2_0_reset_reset_bridge_in_reset_reset (rst_controller_001_reset_out_reset),                          \n\t\t.sdram_reset_reset_bridge_in_reset_reset        (rst_controller_002_reset_out_reset),                          \n\t\t.nios2_gen2_0_data_master_address               (nios2_gen2_0_data_master_address),                            \n\t\t.nios2_gen2_0_data_master_waitrequest           (nios2_gen2_0_data_master_waitrequest),                        \n\t\t.nios2_gen2_0_data_master_byteenable            (nios2_gen2_0_data_master_byteenable),                         \n\t\t.nios2_gen2_0_data_master_read                  (nios2_gen2_0_data_master_read),                               \n\t\t.nios2_gen2_0_data_master_readdata              (nios2_gen2_0_data_master_readdata),                           \n\t\t.nios2_gen2_0_data_master_write                 (nios2_gen2_0_data_master_write),                              \n\t\t.nios2_gen2_0_data_master_writedata             (nios2_gen2_0_data_master_writedata),                          \n\t\t.nios2_gen2_0_data_master_debugaccess           (nios2_gen2_0_data_master_debugaccess),                        \n\t\t.nios2_gen2_0_instruction_master_address        (nios2_gen2_0_instruction_master_address),                     \n\t\t.nios2_gen2_0_instruction_master_waitrequest    (nios2_gen2_0_instruction_master_waitrequest),                 \n\t\t.nios2_gen2_0_instruction_master_read           (nios2_gen2_0_instruction_master_read),                        \n\t\t.nios2_gen2_0_instruction_master_readdata       (nios2_gen2_0_instruction_master_readdata),                    \n\t\t.jtag_uart_0_avalon_jtag_slave_address          (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_address),     \n\t\t.jtag_uart_0_avalon_jtag_slave_write            (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_write),       \n\t\t.jtag_uart_0_avalon_jtag_slave_read             (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_read),        \n\t\t.jtag_uart_0_avalon_jtag_slave_readdata         (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_readdata),    \n\t\t.jtag_uart_0_avalon_jtag_slave_writedata        (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_writedata),   \n\t\t.jtag_uart_0_avalon_jtag_slave_waitrequest      (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_waitrequest), \n\t\t.jtag_uart_0_avalon_jtag_slave_chipselect       (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_chipselect),  \n\t\t.keycode_0_s1_address                           (mm_interconnect_0_keycode_0_s1_address),                      \n\t\t.keycode_0_s1_write                             (mm_interconnect_0_keycode_0_s1_write),                        \n\t\t.keycode_0_s1_readdata                          (mm_interconnect_0_keycode_0_s1_readdata),                     \n\t\t.keycode_0_s1_writedata                         (mm_interconnect_0_keycode_0_s1_writedata),                    \n\t\t.keycode_0_s1_chipselect                        (mm_interconnect_0_keycode_0_s1_chipselect),                   \n\t\t.keycode_1_s1_address                           (mm_interconnect_0_keycode_1_s1_address),                      \n\t\t.keycode_1_s1_write                             (mm_interconnect_0_keycode_1_s1_write),                        \n\t\t.keycode_1_s1_readdata                          (mm_interconnect_0_keycode_1_s1_readdata),                     \n\t\t.keycode_1_s1_writedata                         (mm_interconnect_0_keycode_1_s1_writedata),                    \n\t\t.keycode_1_s1_chipselect                        (mm_interconnect_0_keycode_1_s1_chipselect),                   \n\t\t.keycode_2_s1_address                           (mm_interconnect_0_keycode_2_s1_address),                      \n\t\t.keycode_2_s1_write                             (mm_interconnect_0_keycode_2_s1_write),                        \n\t\t.keycode_2_s1_readdata                          (mm_interconnect_0_keycode_2_s1_readdata),                     \n\t\t.keycode_2_s1_writedata                         (mm_interconnect_0_keycode_2_s1_writedata),                    \n\t\t.keycode_2_s1_chipselect                        (mm_interconnect_0_keycode_2_s1_chipselect),                   \n\t\t.nios2_gen2_0_debug_mem_slave_address           (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_address),      \n\t\t.nios2_gen2_0_debug_mem_slave_write             (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_write),        \n\t\t.nios2_gen2_0_debug_mem_slave_read              (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_read),         \n\t\t.nios2_gen2_0_debug_mem_slave_readdata          (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_readdata),     \n\t\t.nios2_gen2_0_debug_mem_slave_writedata         (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_writedata),    \n\t\t.nios2_gen2_0_debug_mem_slave_byteenable        (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_byteenable),   \n\t\t.nios2_gen2_0_debug_mem_slave_waitrequest       (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_waitrequest),  \n\t\t.nios2_gen2_0_debug_mem_slave_debugaccess       (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_debugaccess),  \n\t\t.onchip_memory2_0_s1_address                    (mm_interconnect_0_onchip_memory2_0_s1_address),               \n\t\t.onchip_memory2_0_s1_write                      (mm_interconnect_0_onchip_memory2_0_s1_write),                 \n\t\t.onchip_memory2_0_s1_readdata                   (mm_interconnect_0_onchip_memory2_0_s1_readdata),              \n\t\t.onchip_memory2_0_s1_writedata                  (mm_interconnect_0_onchip_memory2_0_s1_writedata),             \n\t\t.onchip_memory2_0_s1_byteenable                 (mm_interconnect_0_onchip_memory2_0_s1_byteenable),            \n\t\t.onchip_memory2_0_s1_chipselect                 (mm_interconnect_0_onchip_memory2_0_s1_chipselect),            \n\t\t.onchip_memory2_0_s1_clken                      (mm_interconnect_0_onchip_memory2_0_s1_clken),                 \n\t\t.otg_hpi_address_s1_address                     (mm_interconnect_0_otg_hpi_address_s1_address),                \n\t\t.otg_hpi_address_s1_write                       (mm_interconnect_0_otg_hpi_address_s1_write),                  \n\t\t.otg_hpi_address_s1_readdata                    (mm_interconnect_0_otg_hpi_address_s1_readdata),               \n\t\t.otg_hpi_address_s1_writedata                   (mm_interconnect_0_otg_hpi_address_s1_writedata),              \n\t\t.otg_hpi_address_s1_chipselect                  (mm_interconnect_0_otg_hpi_address_s1_chipselect),             \n\t\t.otg_hpi_cs_s1_address                          (mm_interconnect_0_otg_hpi_cs_s1_address),                     \n\t\t.otg_hpi_cs_s1_write                            (mm_interconnect_0_otg_hpi_cs_s1_write),                       \n\t\t.otg_hpi_cs_s1_readdata                         (mm_interconnect_0_otg_hpi_cs_s1_readdata),                    \n\t\t.otg_hpi_cs_s1_writedata                        (mm_interconnect_0_otg_hpi_cs_s1_writedata),                   \n\t\t.otg_hpi_cs_s1_chipselect                       (mm_interconnect_0_otg_hpi_cs_s1_chipselect),                  \n\t\t.otg_hpi_data_s1_address                        (mm_interconnect_0_otg_hpi_data_s1_address),                   \n\t\t.otg_hpi_data_s1_write                          (mm_interconnect_0_otg_hpi_data_s1_write),                     \n\t\t.otg_hpi_data_s1_readdata                       (mm_interconnect_0_otg_hpi_data_s1_readdata),                  \n\t\t.otg_hpi_data_s1_writedata                      (mm_interconnect_0_otg_hpi_data_s1_writedata),                 \n\t\t.otg_hpi_data_s1_chipselect                     (mm_interconnect_0_otg_hpi_data_s1_chipselect),                \n\t\t.otg_hpi_r_s1_address                           (mm_interconnect_0_otg_hpi_r_s1_address),                      \n\t\t.otg_hpi_r_s1_write                             (mm_interconnect_0_otg_hpi_r_s1_write),                        \n\t\t.otg_hpi_r_s1_readdata                          (mm_interconnect_0_otg_hpi_r_s1_readdata),                     \n\t\t.otg_hpi_r_s1_writedata                         (mm_interconnect_0_otg_hpi_r_s1_writedata),                    \n\t\t.otg_hpi_r_s1_chipselect                        (mm_interconnect_0_otg_hpi_r_s1_chipselect),                   \n\t\t.otg_hpi_reset_s1_address                       (mm_interconnect_0_otg_hpi_reset_s1_address),                  \n\t\t.otg_hpi_reset_s1_write                         (mm_interconnect_0_otg_hpi_reset_s1_write),                    \n\t\t.otg_hpi_reset_s1_readdata                      (mm_interconnect_0_otg_hpi_reset_s1_readdata),                 \n\t\t.otg_hpi_reset_s1_writedata                     (mm_interconnect_0_otg_hpi_reset_s1_writedata),                \n\t\t.otg_hpi_reset_s1_chipselect                    (mm_interconnect_0_otg_hpi_reset_s1_chipselect),               \n\t\t.otg_hpi_w_s1_address                           (mm_interconnect_0_otg_hpi_w_s1_address),                      \n\t\t.otg_hpi_w_s1_write                             (mm_interconnect_0_otg_hpi_w_s1_write),                        \n\t\t.otg_hpi_w_s1_readdata                          (mm_interconnect_0_otg_hpi_w_s1_readdata),                     \n\t\t.otg_hpi_w_s1_writedata                         (mm_interconnect_0_otg_hpi_w_s1_writedata),                    \n\t\t.otg_hpi_w_s1_chipselect                        (mm_interconnect_0_otg_hpi_w_s1_chipselect),                   \n\t\t.sdram_s1_address                               (mm_interconnect_0_sdram_s1_address),                          \n\t\t.sdram_s1_write                                 (mm_interconnect_0_sdram_s1_write),                            \n\t\t.sdram_s1_read                                  (mm_interconnect_0_sdram_s1_read),                             \n\t\t.sdram_s1_readdata                              (mm_interconnect_0_sdram_s1_readdata),                         \n\t\t.sdram_s1_writedata                             (mm_interconnect_0_sdram_s1_writedata),                        \n\t\t.sdram_s1_byteenable                            (mm_interconnect_0_sdram_s1_byteenable),                       \n\t\t.sdram_s1_readdatavalid                         (mm_interconnect_0_sdram_s1_readdatavalid),                    \n\t\t.sdram_s1_waitrequest                           (mm_interconnect_0_sdram_s1_waitrequest),                      \n\t\t.sdram_s1_chipselect                            (mm_interconnect_0_sdram_s1_chipselect),                       \n\t\t.sdram_pll_pll_slave_address                    (mm_interconnect_0_sdram_pll_pll_slave_address),               \n\t\t.sdram_pll_pll_slave_write                      (mm_interconnect_0_sdram_pll_pll_slave_write),                 \n\t\t.sdram_pll_pll_slave_read                       (mm_interconnect_0_sdram_pll_pll_slave_read),                  \n\t\t.sdram_pll_pll_slave_readdata                   (mm_interconnect_0_sdram_pll_pll_slave_readdata),              \n\t\t.sdram_pll_pll_slave_writedata                  (mm_interconnect_0_sdram_pll_pll_slave_writedata),             \n\t\t.sysid_qsys_0_control_slave_address             (mm_interconnect_0_sysid_qsys_0_control_slave_address),        \n\t\t.sysid_qsys_0_control_slave_readdata            (mm_interconnect_0_sysid_qsys_0_control_slave_readdata)        \n\t);\n\n\tlab7_soc_irq_mapper irq_mapper (\n\t\t.clk           (clk_clk),                            \n\t\t.reset         (rst_controller_001_reset_out_reset), \n\t\t.receiver0_irq (irq_mapper_receiver0_irq),           \n\t\t.sender_irq    (nios2_gen2_0_irq_irq)                \n\t);\n\n\taltera_reset_controller #(\n\t\t.NUM_RESET_INPUTS          (1),\n\t\t.OUTPUT_RESET_SYNC_EDGES   (\"deassert\"),\n\t\t.SYNC_DEPTH                (2),\n\t\t.RESET_REQUEST_PRESENT     (0),\n\t\t.RESET_REQ_WAIT_TIME       (1),\n\t\t.MIN_RST_ASSERTION_TIME    (3),\n\t\t.RESET_REQ_EARLY_DSRT_TIME (1),\n\t\t.USE_RESET_REQUEST_IN0     (0),\n\t\t.USE_RESET_REQUEST_IN1     (0),\n\t\t.USE_RESET_REQUEST_IN2     (0),\n\t\t.USE_RESET_REQUEST_IN3     (0),\n\t\t.USE_RESET_REQUEST_IN4     (0),\n\t\t.USE_RESET_REQUEST_IN5     (0),\n\t\t.USE_RESET_REQUEST_IN6     (0),\n\t\t.USE_RESET_REQUEST_IN7     (0),\n\t\t.USE_RESET_REQUEST_IN8     (0),\n\t\t.USE_RESET_REQUEST_IN9     (0),\n\t\t.USE_RESET_REQUEST_IN10    (0),\n\t\t.USE_RESET_REQUEST_IN11    (0),\n\t\t.USE_RESET_REQUEST_IN12    (0),\n\t\t.USE_RESET_REQUEST_IN13    (0),\n\t\t.USE_RESET_REQUEST_IN14    (0),\n\t\t.USE_RESET_REQUEST_IN15    (0),\n\t\t.ADAPT_RESET_REQUEST       (0)\n\t) rst_controller (\n\t\t.reset_in0      (~reset_reset_n),                 \n\t\t.clk            (clk_clk),                        \n\t\t.reset_out      (rst_controller_reset_out_reset), \n\t\t.reset_req      (),                               \n\t\t.reset_req_in0  (1'b0),                           \n\t\t.reset_in1      (1'b0),                           \n\t\t.reset_req_in1  (1'b0),                           \n\t\t.reset_in2      (1'b0),                           \n\t\t.reset_req_in2  (1'b0),                           \n\t\t.reset_in3      (1'b0),                           \n\t\t.reset_req_in3  (1'b0),                           \n\t\t.reset_in4      (1'b0),                           \n\t\t.reset_req_in4  (1'b0),                           \n\t\t.reset_in5      (1'b0),                           \n\t\t.reset_req_in5  (1'b0),                           \n\t\t.reset_in6      (1'b0),                           \n\t\t.reset_req_in6  (1'b0),                           \n\t\t.reset_in7      (1'b0),                           \n\t\t.reset_req_in7  (1'b0),                           \n\t\t.reset_in8      (1'b0),                           \n\t\t.reset_req_in8  (1'b0),                           \n\t\t.reset_in9      (1'b0),                           \n\t\t.reset_req_in9  (1'b0),                           \n\t\t.reset_in10     (1'b0),                           \n\t\t.reset_req_in10 (1'b0),                           \n\t\t.reset_in11     (1'b0),                           \n\t\t.reset_req_in11 (1'b0),                           \n\t\t.reset_in12     (1'b0),                           \n\t\t.reset_req_in12 (1'b0),                           \n\t\t.reset_in13     (1'b0),                           \n\t\t.reset_req_in13 (1'b0),                           \n\t\t.reset_in14     (1'b0),                           \n\t\t.reset_req_in14 (1'b0),                           \n\t\t.reset_in15     (1'b0),                           \n\t\t.reset_req_in15 (1'b0)                            \n\t);\n\n\taltera_reset_controller #(\n\t\t.NUM_RESET_INPUTS          (2),\n\t\t.OUTPUT_RESET_SYNC_EDGES   (\"deassert\"),\n\t\t.SYNC_DEPTH                (2),\n\t\t.RESET_REQUEST_PRESENT     (1),\n\t\t.RESET_REQ_WAIT_TIME       (1),\n\t\t.MIN_RST_ASSERTION_TIME    (3),\n\t\t.RESET_REQ_EARLY_DSRT_TIME (1),\n\t\t.USE_RESET_REQUEST_IN0     (0),\n\t\t.USE_RESET_REQUEST_IN1     (0),\n\t\t.USE_RESET_REQUEST_IN2     (0),\n\t\t.USE_RESET_REQUEST_IN3     (0),\n\t\t.USE_RESET_REQUEST_IN4     (0),\n\t\t.USE_RESET_REQUEST_IN5     (0),\n\t\t.USE_RESET_REQUEST_IN6     (0),\n\t\t.USE_RESET_REQUEST_IN7     (0),\n\t\t.USE_RESET_REQUEST_IN8     (0),\n\t\t.USE_RESET_REQUEST_IN9     (0),\n\t\t.USE_RESET_REQUEST_IN10    (0),\n\t\t.USE_RESET_REQUEST_IN11    (0),\n\t\t.USE_RESET_REQUEST_IN12    (0),\n\t\t.USE_RESET_REQUEST_IN13    (0),\n\t\t.USE_RESET_REQUEST_IN14    (0),\n\t\t.USE_RESET_REQUEST_IN15    (0),\n\t\t.ADAPT_RESET_REQUEST       (0)\n\t) rst_controller_001 (\n\t\t.reset_in0      (~reset_reset_n),                         \n\t\t.reset_in1      (nios2_gen2_0_debug_reset_request_reset), \n\t\t.clk            (clk_clk),                                \n\t\t.reset_out      (rst_controller_001_reset_out_reset),     \n\t\t.reset_req      (rst_controller_001_reset_out_reset_req), \n\t\t.reset_req_in0  (1'b0),                                   \n\t\t.reset_req_in1  (1'b0),                                   \n\t\t.reset_in2      (1'b0),                                   \n\t\t.reset_req_in2  (1'b0),                                   \n\t\t.reset_in3      (1'b0),                                   \n\t\t.reset_req_in3  (1'b0),                                   \n\t\t.reset_in4      (1'b0),                                   \n\t\t.reset_req_in4  (1'b0),                                   \n\t\t.reset_in5      (1'b0),                                   \n\t\t.reset_req_in5  (1'b0),                                   \n\t\t.reset_in6      (1'b0),                                   \n\t\t.reset_req_in6  (1'b0),                                   \n\t\t.reset_in7      (1'b0),                                   \n\t\t.reset_req_in7  (1'b0),                                   \n\t\t.reset_in8      (1'b0),                                   \n\t\t.reset_req_in8  (1'b0),                                   \n\t\t.reset_in9      (1'b0),                                   \n\t\t.reset_req_in9  (1'b0),                                   \n\t\t.reset_in10     (1'b0),                                   \n\t\t.reset_req_in10 (1'b0),                                   \n\t\t.reset_in11     (1'b0),                                   \n\t\t.reset_req_in11 (1'b0),                                   \n\t\t.reset_in12     (1'b0),                                   \n\t\t.reset_req_in12 (1'b0),                                   \n\t\t.reset_in13     (1'b0),                                   \n\t\t.reset_req_in13 (1'b0),                                   \n\t\t.reset_in14     (1'b0),                                   \n\t\t.reset_req_in14 (1'b0),                                   \n\t\t.reset_in15     (1'b0),                                   \n\t\t.reset_req_in15 (1'b0)                                    \n\t);\n\n\taltera_reset_controller #(\n\t\t.NUM_RESET_INPUTS          (2),\n\t\t.OUTPUT_RESET_SYNC_EDGES   (\"deassert\"),\n\t\t.SYNC_DEPTH                (2),\n\t\t.RESET_REQUEST_PRESENT     (0),\n\t\t.RESET_REQ_WAIT_TIME       (1),\n\t\t.MIN_RST_ASSERTION_TIME    (3),\n\t\t.RESET_REQ_EARLY_DSRT_TIME (1),\n\t\t.USE_RESET_REQUEST_IN0     (0),\n\t\t.USE_RESET_REQUEST_IN1     (0),\n\t\t.USE_RESET_REQUEST_IN2     (0),\n\t\t.USE_RESET_REQUEST_IN3     (0),\n\t\t.USE_RESET_REQUEST_IN4     (0),\n\t\t.USE_RESET_REQUEST_IN5     (0),\n\t\t.USE_RESET_REQUEST_IN6     (0),\n\t\t.USE_RESET_REQUEST_IN7     (0),\n\t\t.USE_RESET_REQUEST_IN8     (0),\n\t\t.USE_RESET_REQUEST_IN9     (0),\n\t\t.USE_RESET_REQUEST_IN10    (0),\n\t\t.USE_RESET_REQUEST_IN11    (0),\n\t\t.USE_RESET_REQUEST_IN12    (0),\n\t\t.USE_RESET_REQUEST_IN13    (0),\n\t\t.USE_RESET_REQUEST_IN14    (0),\n\t\t.USE_RESET_REQUEST_IN15    (0),\n\t\t.ADAPT_RESET_REQUEST       (0)\n\t) rst_controller_002 (\n\t\t.reset_in0      (~reset_reset_n),                         \n\t\t.reset_in1      (nios2_gen2_0_debug_reset_request_reset), \n\t\t.clk            (sdram_pll_c0_clk),                       \n\t\t.reset_out      (rst_controller_002_reset_out_reset),     \n\t\t.reset_req      (),                                       \n\t\t.reset_req_in0  (1'b0),                                   \n\t\t.reset_req_in1  (1'b0),                                   \n\t\t.reset_in2      (1'b0),                                   \n\t\t.reset_req_in2  (1'b0),                                   \n\t\t.reset_in3      (1'b0),                                   \n\t\t.reset_req_in3  (1'b0),                                   \n\t\t.reset_in4      (1'b0),                                   \n\t\t.reset_req_in4  (1'b0),                                   \n\t\t.reset_in5      (1'b0),                                   \n\t\t.reset_req_in5  (1'b0),                                   \n\t\t.reset_in6      (1'b0),                                   \n\t\t.reset_req_in6  (1'b0),                                   \n\t\t.reset_in7      (1'b0),                                   \n\t\t.reset_req_in7  (1'b0),                                   \n\t\t.reset_in8      (1'b0),                                   \n\t\t.reset_req_in8  (1'b0),                                   \n\t\t.reset_in9      (1'b0),                                   \n\t\t.reset_req_in9  (1'b0),                                   \n\t\t.reset_in10     (1'b0),                                   \n\t\t.reset_req_in10 (1'b0),                                   \n\t\t.reset_in11     (1'b0),                                   \n\t\t.reset_req_in11 (1'b0),                                   \n\t\t.reset_in12     (1'b0),                                   \n\t\t.reset_req_in12 (1'b0),                                   \n\t\t.reset_in13     (1'b0),                                   \n\t\t.reset_req_in13 (1'b0),                                   \n\t\t.reset_in14     (1'b0),                                   \n\t\t.reset_req_in14 (1'b0),                                   \n\t\t.reset_in15     (1'b0),                                   \n\t\t.reset_req_in15 (1'b0)                                    \n\t);\n\nendmodule\n```"
        },
        {
            "role": "user",
            "content": "Based on the provided original Verilog code, its comments and above answers, generate a detailed specification for the module. Include the following information in a single, concise paragraph:\n1. The name of the module.\n2. A simple explanation of the module's functionality.\n3. The input and output ports, along with a brief explanation of each.\n4. The internal signals used within the module, with a brief explanation of their purpose.\n5. An overview of the different blocks or sections in the code and their functions.\nEnsure that the specification is clear and accurately reflects the details from the code and comments.\nYour answer should be structured and well-organized, providing a comprehensive and detailed overview of the module's design and operation.\nPlease provide your answer in the following format:\nModule name: [module name]. Module specification: [module specification]."
        },
        {
            "role": "assistant",
            "content": "Module name: lab7_soc. Module specification: The lab7_soc module is a System-on-Chip (SoC) design for a lab project, integrating various components including a Nios II processor, SDRAM controller, PLL for clock generation, JTAG UART, and custom interfaces. It has input ports for clock (clk_clk), reset (reset_reset_n), and OTG HPI data input (otg_hpi_data_in_port), along with multiple output ports for keycodes, OTG HPI interface signals, and SDRAM control signals. The module uses a bidirectional port (sdram_wire_dq) for SDRAM data transfer. Internally, it utilizes numerous signals for interconnecting components, such as Nios II data and instruction master interfaces, JTAG UART slave interface, and memory interconn"
        }
    ],
    "claude-message": [
        {
            "role": "user",
            "content": [
                {
                    "type": "text",
                    "text": "You are an expert in hardware design with a deep understanding of Verilog RTL codes. Now I want to train a large language model for code comment generation tasks specifically focused on Verilog RTL codes. And I want you to help me process the raw data, transforming it into suitable formats that can serve as inputs and outputs for the model."
                },
                {
                    "type": "text",
                    "text": "Name of the module and its functionality is as follows: \nModule name: lab7_soc\n\nExplanation: This module appears to be a System-on-Chip (SoC) design for a lab project. It integrates various components including a Nios II processor, SDRAM controller, PLL for clock generation, JTAG UART, and several custom interfaces (keycode, OTG HPI). The module handles interconnections between these components, manages clock domains, and provides reset control. It likely serves as the top-level entity for a complex digital system, possibly for an FPGA-based lab assignment involving memory access, communication, and external device interfacing."
                },
                {
                    "type": "text",
                    "text": "Input and output ports and their explanation is as follows: \nInput ports:\nclk_clk, otg_hpi_data_in_port, reset_reset_n\n\nExplanation:\n- clk_clk: Main clock input for the system\n- otg_hpi_data_in_port: 16-bit input data port for OTG HPI interface\n- reset_reset_n: Active-low reset input for the system\n\nOutput ports:\nkeycode_0_export, keycode_1_export, keycode_2_export, otg_hpi_address_export, otg_hpi_cs_export, otg_hpi_data_out_port, otg_hpi_r_export, otg_hpi_reset_export, otg_hpi_w_export, sdram_clk_clk, sdram_wire_addr, sdram_wire_ba, sdram_wire_cas_n, sdram_wire_cke, sdram_wire_cs_n, sdram_wire_dqm, sdram_wire_ras_n, sdram_wire_we_n\n\nExplanation:\n- keycode_0_export, keycode_1_export, keycode_2_export: 16-bit keycode outputs\n- otg_hpi_address_export: 2-bit OTG HPI address output\n- otg_hpi_cs_export, otg_hpi_r_export, otg_hpi_w_export, otg_hpi_reset_export: Control signals for OTG HPI interface\n- otg_hpi_data_out_port: 16-bit output data port for OTG HPI interface\n- sdram_clk_clk: SDRAM clock output\n- sdram_wire_addr, sdram_wire_ba, sdram_wire_cas_n, sdram_wire_cke, sdram_wire_cs_n, sdram_wire_dqm, sdram_wire_ras_n, sdram_wire_we_n: SDRAM interface signals\n\nInout port:\nsdram_wire_dq\n\nExplanation:\n- sdram_wire_dq: 32-bit bidirectional data bus for SDRAM"
                },
                {
                    "type": "text",
                    "text": "Internal signals and their explanation is as follows: \nInternal signals:\nsdram_pll_c0_clk, nios2_gen2_0_data_master_readdata, nios2_gen2_0_data_master_waitrequest, nios2_gen2_0_data_master_debugaccess, nios2_gen2_0_data_master_address, nios2_gen2_0_data_master_byteenable, nios2_gen2_0_data_master_read, nios2_gen2_0_data_master_write, nios2_gen2_0_data_master_writedata, nios2_gen2_0_instruction_master_readdata, nios2_gen2_0_instruction_master_waitrequest, nios2_gen2_0_instruction_master_address, nios2_gen2_0_instruction_master_read, mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_chipselect, mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_readdata, mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_waitrequest, mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_address, mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_read, mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_write, mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_writedata.\n\nExplanation:\n- sdram_pll_c0_clk: Clock output from SDRAM PLL\n- nios2_gen2_0_data_master_*: Signals for Nios II processor's data master interface\n- nios2_gen2_0_instruction_master_*: Signals for Nios II processor's instruction master interface\n- mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_*: Signals for JTAG UART Avalon slave interface\n\nThese internal signals are used for communication between different components of the SoC, such as the Nios II processor, memory interfaces, and peripherals. They handle data transfer, addressing, and control operations within the system."
                },
                {
                    "type": "text",
                    "text": "Original Verilog code is as follows: \n<code>\n\n\n\n`timescale 1 ps / 1 ps\nmodule lab7_soc (\n\t\tinput  wire        clk_clk,                \n\t\toutput wire [15:0] keycode_0_export,       \n\t\toutput wire [15:0] keycode_1_export,       \n\t\toutput wire [15:0] keycode_2_export,       \n\t\toutput wire [1:0]  otg_hpi_address_export, \n\t\toutput wire        otg_hpi_cs_export,      \n\t\tinput  wire [15:0] otg_hpi_data_in_port,   \n\t\toutput wire [15:0] otg_hpi_data_out_port,  \n\t\toutput wire        otg_hpi_r_export,       \n\t\toutput wire        otg_hpi_reset_export,   \n\t\toutput wire        otg_hpi_w_export,       \n\t\tinput  wire        reset_reset_n,          \n\t\toutput wire        sdram_clk_clk,          \n\t\toutput wire [12:0] sdram_wire_addr,        \n\t\toutput wire [1:0]  sdram_wire_ba,          \n\t\toutput wire        sdram_wire_cas_n,       \n\t\toutput wire        sdram_wire_cke,         \n\t\toutput wire        sdram_wire_cs_n,        \n\t\tinout  wire [31:0] sdram_wire_dq,          \n\t\toutput wire [3:0]  sdram_wire_dqm,         \n\t\toutput wire        sdram_wire_ras_n,       \n\t\toutput wire        sdram_wire_we_n         \n\t);\n\n\twire         sdram_pll_c0_clk;                                            \n\twire  [31:0] nios2_gen2_0_data_master_readdata;                           \n\twire         nios2_gen2_0_data_master_waitrequest;                        \n\twire         nios2_gen2_0_data_master_debugaccess;                        \n\twire  [28:0] nios2_gen2_0_data_master_address;                            \n\twire   [3:0] nios2_gen2_0_data_master_byteenable;                         \n\twire         nios2_gen2_0_data_master_read;                               \n\twire         nios2_gen2_0_data_master_write;                              \n\twire  [31:0] nios2_gen2_0_data_master_writedata;                          \n\twire  [31:0] nios2_gen2_0_instruction_master_readdata;                    \n\twire         nios2_gen2_0_instruction_master_waitrequest;                 \n\twire  [28:0] nios2_gen2_0_instruction_master_address;                     \n\twire         nios2_gen2_0_instruction_master_read;                        \n\twire         mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_chipselect;  \n\twire  [31:0] mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_readdata;    \n\twire         mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_waitrequest; \n\twire   [0:0] mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_address;     \n\twire         mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_read;        \n\twire         mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_write;       \n\twire  [31:0] mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_writedata;   \n\twire  [31:0] mm_interconnect_0_sysid_qsys_0_control_slave_readdata;       \n\twire   [0:0] mm_interconnect_0_sysid_qsys_0_control_slave_address;        \n\twire  [31:0] mm_interconnect_0_nios2_gen2_0_debug_mem_slave_readdata;     \n\twire         mm_interconnect_0_nios2_gen2_0_debug_mem_slave_waitrequest;  \n\twire         mm_interconnect_0_nios2_gen2_0_debug_mem_slave_debugaccess;  \n\twire   [8:0] mm_interconnect_0_nios2_gen2_0_debug_mem_slave_address;      \n\twire         mm_interconnect_0_nios2_gen2_0_debug_mem_slave_read;         \n\twire   [3:0] mm_interconnect_0_nios2_gen2_0_debug_mem_slave_byteenable;   \n\twire         mm_interconnect_0_nios2_gen2_0_debug_mem_slave_write;        \n\twire  [31:0] mm_interconnect_0_nios2_gen2_0_debug_mem_slave_writedata;    \n\twire  [31:0] mm_interconnect_0_sdram_pll_pll_slave_readdata;              \n\twire   [1:0] mm_interconnect_0_sdram_pll_pll_slave_address;               \n\twire         mm_interconnect_0_sdram_pll_pll_slave_read;                  \n\twire         mm_interconnect_0_sdram_pll_pll_slave_write;                 \n\twire  [31:0] mm_interconnect_0_sdram_pll_pll_slave_writedata;             \n\twire         mm_interconnect_0_onchip_memory2_0_s1_chipselect;            \n\twire  [31:0] mm_interconnect_0_onchip_memory2_0_s1_readdata;              \n\twire   [1:0] mm_interconnect_0_onchip_memory2_0_s1_address;               \n\twire   [3:0] mm_interconnect_0_onchip_memory2_0_s1_byteenable;            \n\twire         mm_interconnect_0_onchip_memory2_0_s1_write;                 \n\twire  [31:0] mm_interconnect_0_onchip_memory2_0_s1_writedata;             \n\twire         mm_interconnect_0_onchip_memory2_0_s1_clken;                 \n\twire         mm_interconnect_0_sdram_s1_chipselect;                       \n\twire  [31:0] mm_interconnect_0_sdram_s1_readdata;                         \n\twire         mm_interconnect_0_sdram_s1_waitrequest;                      \n\twire  [24:0] mm_interconnect_0_sdram_s1_address;                          \n\twire         mm_interconnect_0_sdram_s1_read;                             \n\twire   [3:0] mm_interconnect_0_sdram_s1_byteenable;                       \n\twire         mm_interconnect_0_sdram_s1_readdatavalid;                    \n\twire         mm_interconnect_0_sdram_s1_write;                            \n\twire  [31:0] mm_interconnect_0_sdram_s1_writedata;                        \n\twire         mm_interconnect_0_keycode_2_s1_chipselect;                   \n\twire  [31:0] mm_interconnect_0_keycode_2_s1_readdata;                     \n\twire   [1:0] mm_interconnect_0_keycode_2_s1_address;                      \n\twire         mm_interconnect_0_keycode_2_s1_write;                        \n\twire  [31:0] mm_interconnect_0_keycode_2_s1_writedata;                    \n\twire         mm_interconnect_0_otg_hpi_address_s1_chipselect;             \n\twire  [31:0] mm_interconnect_0_otg_hpi_address_s1_readdata;               \n\twire   [1:0] mm_interconnect_0_otg_hpi_address_s1_address;                \n\twire         mm_interconnect_0_otg_hpi_address_s1_write;                  \n\twire  [31:0] mm_interconnect_0_otg_hpi_address_s1_writedata;              \n\twire         mm_interconnect_0_otg_hpi_data_s1_chipselect;                \n\twire  [31:0] mm_interconnect_0_otg_hpi_data_s1_readdata;                  \n\twire   [1:0] mm_interconnect_0_otg_hpi_data_s1_address;                   \n\twire         mm_interconnect_0_otg_hpi_data_s1_write;                     \n\twire  [31:0] mm_interconnect_0_otg_hpi_data_s1_writedata;                 \n\twire         mm_interconnect_0_otg_hpi_r_s1_chipselect;                   \n\twire  [31:0] mm_interconnect_0_otg_hpi_r_s1_readdata;                     \n\twire   [1:0] mm_interconnect_0_otg_hpi_r_s1_address;                      \n\twire         mm_interconnect_0_otg_hpi_r_s1_write;                        \n\twire  [31:0] mm_interconnect_0_otg_hpi_r_s1_writedata;                    \n\twire         mm_interconnect_0_otg_hpi_w_s1_chipselect;                   \n\twire  [31:0] mm_interconnect_0_otg_hpi_w_s1_readdata;                     \n\twire   [1:0] mm_interconnect_0_otg_hpi_w_s1_address;                      \n\twire         mm_interconnect_0_otg_hpi_w_s1_write;                        \n\twire  [31:0] mm_interconnect_0_otg_hpi_w_s1_writedata;                    \n\twire         mm_interconnect_0_otg_hpi_cs_s1_chipselect;                  \n\twire  [31:0] mm_interconnect_0_otg_hpi_cs_s1_readdata;                    \n\twire   [1:0] mm_interconnect_0_otg_hpi_cs_s1_address;                     \n\twire         mm_interconnect_0_otg_hpi_cs_s1_write;                       \n\twire  [31:0] mm_interconnect_0_otg_hpi_cs_s1_writedata;                   \n\twire         mm_interconnect_0_otg_hpi_reset_s1_chipselect;               \n\twire  [31:0] mm_interconnect_0_otg_hpi_reset_s1_readdata;                 \n\twire   [1:0] mm_interconnect_0_otg_hpi_reset_s1_address;                  \n\twire         mm_interconnect_0_otg_hpi_reset_s1_write;                    \n\twire  [31:0] mm_interconnect_0_otg_hpi_reset_s1_writedata;                \n\twire         mm_interconnect_0_keycode_0_s1_chipselect;                   \n\twire  [31:0] mm_interconnect_0_keycode_0_s1_readdata;                     \n\twire   [1:0] mm_interconnect_0_keycode_0_s1_address;                      \n\twire         mm_interconnect_0_keycode_0_s1_write;                        \n\twire  [31:0] mm_interconnect_0_keycode_0_s1_writedata;                    \n\twire         mm_interconnect_0_keycode_1_s1_chipselect;                   \n\twire  [31:0] mm_interconnect_0_keycode_1_s1_readdata;                     \n\twire   [1:0] mm_interconnect_0_keycode_1_s1_address;                      \n\twire         mm_interconnect_0_keycode_1_s1_write;                        \n\twire  [31:0] mm_interconnect_0_keycode_1_s1_writedata;                    \n\twire         irq_mapper_receiver0_irq;                                    \n\twire  [31:0] nios2_gen2_0_irq_irq;                                        \n\twire         rst_controller_reset_out_reset;                              \n\twire         rst_controller_001_reset_out_reset;                          \n\twire         rst_controller_001_reset_out_reset_req;                      \n\twire         nios2_gen2_0_debug_reset_request_reset;                      \n\twire         rst_controller_002_reset_out_reset;                          \n\n\tlab7_soc_jtag_uart_0 jtag_uart_0 (\n\t\t.clk            (clk_clk),                                                     \n\t\t.rst_n          (~rst_controller_reset_out_reset),                             \n\t\t.av_chipselect  (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_chipselect),  \n\t\t.av_address     (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_address),     \n\t\t.av_read_n      (~mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_read),       \n\t\t.av_readdata    (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_readdata),    \n\t\t.av_write_n     (~mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_write),      \n\t\t.av_writedata   (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_writedata),   \n\t\t.av_waitrequest (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_waitrequest), \n\t\t.av_irq         (irq_mapper_receiver0_irq)                                     \n\t);\n\n\tlab7_soc_keycode_0 keycode_0 (\n\t\t.clk        (clk_clk),                                   \n\t\t.reset_n    (~rst_controller_reset_out_reset),           \n\t\t.address    (mm_interconnect_0_keycode_0_s1_address),    \n\t\t.write_n    (~mm_interconnect_0_keycode_0_s1_write),     \n\t\t.writedata  (mm_interconnect_0_keycode_0_s1_writedata),  \n\t\t.chipselect (mm_interconnect_0_keycode_0_s1_chipselect), \n\t\t.readdata   (mm_interconnect_0_keycode_0_s1_readdata),   \n\t\t.out_port   (keycode_0_export)                           \n\t);\n\n\tlab7_soc_keycode_0 keycode_1 (\n\t\t.clk        (clk_clk),                                   \n\t\t.reset_n    (~rst_controller_reset_out_reset),           \n\t\t.address    (mm_interconnect_0_keycode_1_s1_address),    \n\t\t.write_n    (~mm_interconnect_0_keycode_1_s1_write),     \n\t\t.writedata  (mm_interconnect_0_keycode_1_s1_writedata),  \n\t\t.chipselect (mm_interconnect_0_keycode_1_s1_chipselect), \n\t\t.readdata   (mm_interconnect_0_keycode_1_s1_readdata),   \n\t\t.out_port   (keycode_1_export)                           \n\t);\n\n\tlab7_soc_keycode_0 keycode_2 (\n\t\t.clk        (clk_clk),                                   \n\t\t.reset_n    (~rst_controller_reset_out_reset),           \n\t\t.address    (mm_interconnect_0_keycode_2_s1_address),    \n\t\t.write_n    (~mm_interconnect_0_keycode_2_s1_write),     \n\t\t.writedata  (mm_interconnect_0_keycode_2_s1_writedata),  \n\t\t.chipselect (mm_interconnect_0_keycode_2_s1_chipselect), \n\t\t.readdata   (mm_interconnect_0_keycode_2_s1_readdata),   \n\t\t.out_port   (keycode_2_export)                           \n\t);\n\n\tlab7_soc_nios2_gen2_0 nios2_gen2_0 (\n\t\t.clk                                 (clk_clk),                                                    \n\t\t.reset_n                             (~rst_controller_001_reset_out_reset),                        \n\t\t.reset_req                           (rst_controller_001_reset_out_reset_req),                     \n\t\t.d_address                           (nios2_gen2_0_data_master_address),                           \n\t\t.d_byteenable                        (nios2_gen2_0_data_master_byteenable),                        \n\t\t.d_read                              (nios2_gen2_0_data_master_read),                              \n\t\t.d_readdata                          (nios2_gen2_0_data_master_readdata),                          \n\t\t.d_waitrequest                       (nios2_gen2_0_data_master_waitrequest),                       \n\t\t.d_write                             (nios2_gen2_0_data_master_write),                             \n\t\t.d_writedata                         (nios2_gen2_0_data_master_writedata),                         \n\t\t.debug_mem_slave_debugaccess_to_roms (nios2_gen2_0_data_master_debugaccess),                       \n\t\t.i_address                           (nios2_gen2_0_instruction_master_address),                    \n\t\t.i_read                              (nios2_gen2_0_instruction_master_read),                       \n\t\t.i_readdata                          (nios2_gen2_0_instruction_master_readdata),                   \n\t\t.i_waitrequest                       (nios2_gen2_0_instruction_master_waitrequest),                \n\t\t.irq                                 (nios2_gen2_0_irq_irq),                                       \n\t\t.debug_reset_request                 (nios2_gen2_0_debug_reset_request_reset),                     \n\t\t.debug_mem_slave_address             (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_address),     \n\t\t.debug_mem_slave_byteenable          (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_byteenable),  \n\t\t.debug_mem_slave_debugaccess         (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_debugaccess), \n\t\t.debug_mem_slave_read                (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_read),        \n\t\t.debug_mem_slave_readdata            (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_readdata),    \n\t\t.debug_mem_slave_waitrequest         (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_waitrequest), \n\t\t.debug_mem_slave_write               (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_write),       \n\t\t.debug_mem_slave_writedata           (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_writedata),   \n\t\t.dummy_ci_port                       ()                                                            \n\t);\n\n\tlab7_soc_onchip_memory2_0 onchip_memory2_0 (\n\t\t.clk        (clk_clk),                                          \n\t\t.address    (mm_interconnect_0_onchip_memory2_0_s1_address),    \n\t\t.clken      (mm_interconnect_0_onchip_memory2_0_s1_clken),      \n\t\t.chipselect (mm_interconnect_0_onchip_memory2_0_s1_chipselect), \n\t\t.write      (mm_interconnect_0_onchip_memory2_0_s1_write),      \n\t\t.readdata   (mm_interconnect_0_onchip_memory2_0_s1_readdata),   \n\t\t.writedata  (mm_interconnect_0_onchip_memory2_0_s1_writedata),  \n\t\t.byteenable (mm_interconnect_0_onchip_memory2_0_s1_byteenable), \n\t\t.reset      (rst_controller_001_reset_out_reset),               \n\t\t.reset_req  (rst_controller_001_reset_out_reset_req),           \n\t\t.freeze     (1'b0)                                              \n\t);\n\n\tlab7_soc_otg_hpi_address otg_hpi_address (\n\t\t.clk        (clk_clk),                                         \n\t\t.reset_n    (~rst_controller_reset_out_reset),                 \n\t\t.address    (mm_interconnect_0_otg_hpi_address_s1_address),    \n\t\t.write_n    (~mm_interconnect_0_otg_hpi_address_s1_write),     \n\t\t.writedata  (mm_interconnect_0_otg_hpi_address_s1_writedata),  \n\t\t.chipselect (mm_interconnect_0_otg_hpi_address_s1_chipselect), \n\t\t.readdata   (mm_interconnect_0_otg_hpi_address_s1_readdata),   \n\t\t.out_port   (otg_hpi_address_export)                           \n\t);\n\n\tlab7_soc_otg_hpi_cs otg_hpi_cs (\n\t\t.clk        (clk_clk),                                    \n\t\t.reset_n    (~rst_controller_reset_out_reset),            \n\t\t.address    (mm_interconnect_0_otg_hpi_cs_s1_address),    \n\t\t.write_n    (~mm_interconnect_0_otg_hpi_cs_s1_write),     \n\t\t.writedata  (mm_interconnect_0_otg_hpi_cs_s1_writedata),  \n\t\t.chipselect (mm_interconnect_0_otg_hpi_cs_s1_chipselect), \n\t\t.readdata   (mm_interconnect_0_otg_hpi_cs_s1_readdata),   \n\t\t.out_port   (otg_hpi_cs_export)                           \n\t);\n\n\tlab7_soc_otg_hpi_data otg_hpi_data (\n\t\t.clk        (clk_clk),                                      \n\t\t.reset_n    (~rst_controller_reset_out_reset),              \n\t\t.address    (mm_interconnect_0_otg_hpi_data_s1_address),    \n\t\t.write_n    (~mm_interconnect_0_otg_hpi_data_s1_write),     \n\t\t.writedata  (mm_interconnect_0_otg_hpi_data_s1_writedata),  \n\t\t.chipselect (mm_interconnect_0_otg_hpi_data_s1_chipselect), \n\t\t.readdata   (mm_interconnect_0_otg_hpi_data_s1_readdata),   \n\t\t.in_port    (otg_hpi_data_in_port),                         \n\t\t.out_port   (otg_hpi_data_out_port)                         \n\t);\n\n\tlab7_soc_otg_hpi_cs otg_hpi_r (\n\t\t.clk        (clk_clk),                                   \n\t\t.reset_n    (~rst_controller_reset_out_reset),           \n\t\t.address    (mm_interconnect_0_otg_hpi_r_s1_address),    \n\t\t.write_n    (~mm_interconnect_0_otg_hpi_r_s1_write),     \n\t\t.writedata  (mm_interconnect_0_otg_hpi_r_s1_writedata),  \n\t\t.chipselect (mm_interconnect_0_otg_hpi_r_s1_chipselect), \n\t\t.readdata   (mm_interconnect_0_otg_hpi_r_s1_readdata),   \n\t\t.out_port   (otg_hpi_r_export)                           \n\t);\n\n\tlab7_soc_otg_hpi_cs otg_hpi_reset (\n\t\t.clk        (clk_clk),                                       \n\t\t.reset_n    (~rst_controller_reset_out_reset),               \n\t\t.address    (mm_interconnect_0_otg_hpi_reset_s1_address),    \n\t\t.write_n    (~mm_interconnect_0_otg_hpi_reset_s1_write),     \n\t\t.writedata  (mm_interconnect_0_otg_hpi_reset_s1_writedata),  \n\t\t.chipselect (mm_interconnect_0_otg_hpi_reset_s1_chipselect), \n\t\t.readdata   (mm_interconnect_0_otg_hpi_reset_s1_readdata),   \n\t\t.out_port   (otg_hpi_reset_export)                           \n\t);\n\n\tlab7_soc_otg_hpi_cs otg_hpi_w (\n\t\t.clk        (clk_clk),                                   \n\t\t.reset_n    (~rst_controller_reset_out_reset),           \n\t\t.address    (mm_interconnect_0_otg_hpi_w_s1_address),    \n\t\t.write_n    (~mm_interconnect_0_otg_hpi_w_s1_write),     \n\t\t.writedata  (mm_interconnect_0_otg_hpi_w_s1_writedata),  \n\t\t.chipselect (mm_interconnect_0_otg_hpi_w_s1_chipselect), \n\t\t.readdata   (mm_interconnect_0_otg_hpi_w_s1_readdata),   \n\t\t.out_port   (otg_hpi_w_export)                           \n\t);\n\n\tlab7_soc_sdram sdram (\n\t\t.clk            (sdram_pll_c0_clk),                         \n\t\t.reset_n        (~rst_controller_002_reset_out_reset),      \n\t\t.az_addr        (mm_interconnect_0_sdram_s1_address),       \n\t\t.az_be_n        (~mm_interconnect_0_sdram_s1_byteenable),   \n\t\t.az_cs          (mm_interconnect_0_sdram_s1_chipselect),    \n\t\t.az_data        (mm_interconnect_0_sdram_s1_writedata),     \n\t\t.az_rd_n        (~mm_interconnect_0_sdram_s1_read),         \n\t\t.az_wr_n        (~mm_interconnect_0_sdram_s1_write),        \n\t\t.za_data        (mm_interconnect_0_sdram_s1_readdata),      \n\t\t.za_valid       (mm_interconnect_0_sdram_s1_readdatavalid), \n\t\t.za_waitrequest (mm_interconnect_0_sdram_s1_waitrequest),   \n\t\t.zs_addr        (sdram_wire_addr),                          \n\t\t.zs_ba          (sdram_wire_ba),                            \n\t\t.zs_cas_n       (sdram_wire_cas_n),                         \n\t\t.zs_cke         (sdram_wire_cke),                           \n\t\t.zs_cs_n        (sdram_wire_cs_n),                          \n\t\t.zs_dq          (sdram_wire_dq),                            \n\t\t.zs_dqm         (sdram_wire_dqm),                           \n\t\t.zs_ras_n       (sdram_wire_ras_n),                         \n\t\t.zs_we_n        (sdram_wire_we_n)                           \n\t);\n\n\tlab7_soc_sdram_pll sdram_pll (\n\t\t.clk                (clk_clk),                                         \n\t\t.reset              (rst_controller_001_reset_out_reset),              \n\t\t.read               (mm_interconnect_0_sdram_pll_pll_slave_read),      \n\t\t.write              (mm_interconnect_0_sdram_pll_pll_slave_write),     \n\t\t.address            (mm_interconnect_0_sdram_pll_pll_slave_address),   \n\t\t.readdata           (mm_interconnect_0_sdram_pll_pll_slave_readdata),  \n\t\t.writedata          (mm_interconnect_0_sdram_pll_pll_slave_writedata), \n\t\t.c0                 (sdram_pll_c0_clk),                                \n\t\t.c1                 (sdram_clk_clk),                                   \n\t\t.scandone           (),                                                \n\t\t.scandataout        (),                                                \n\t\t.areset             (1'b0),                                            \n\t\t.locked             (),                                                \n\t\t.phasedone          (),                                                \n\t\t.phasecounterselect (4'b0000),                                         \n\t\t.phaseupdown        (1'b0),                                            \n\t\t.phasestep          (1'b0),                                            \n\t\t.scanclk            (1'b0),                                            \n\t\t.scanclkena         (1'b0),                                            \n\t\t.scandata           (1'b0),                                            \n\t\t.configupdate       (1'b0)                                             \n\t);\n\n\tlab7_soc_sysid_qsys_0 sysid_qsys_0 (\n\t\t.clock    (clk_clk),                                               \n\t\t.reset_n  (~rst_controller_001_reset_out_reset),                   \n\t\t.readdata (mm_interconnect_0_sysid_qsys_0_control_slave_readdata), \n\t\t.address  (mm_interconnect_0_sysid_qsys_0_control_slave_address)   \n\t);\n\n\tlab7_soc_mm_interconnect_0 mm_interconnect_0 (\n\t\t.clk_0_clk_clk                                  (clk_clk),                                                     \n\t\t.sdram_pll_c0_clk                               (sdram_pll_c0_clk),                                            \n\t\t.jtag_uart_0_reset_reset_bridge_in_reset_reset  (rst_controller_reset_out_reset),                              \n\t\t.nios2_gen2_0_reset_reset_bridge_in_reset_reset (rst_controller_001_reset_out_reset),                          \n\t\t.sdram_reset_reset_bridge_in_reset_reset        (rst_controller_002_reset_out_reset),                          \n\t\t.nios2_gen2_0_data_master_address               (nios2_gen2_0_data_master_address),                            \n\t\t.nios2_gen2_0_data_master_waitrequest           (nios2_gen2_0_data_master_waitrequest),                        \n\t\t.nios2_gen2_0_data_master_byteenable            (nios2_gen2_0_data_master_byteenable),                         \n\t\t.nios2_gen2_0_data_master_read                  (nios2_gen2_0_data_master_read),                               \n\t\t.nios2_gen2_0_data_master_readdata              (nios2_gen2_0_data_master_readdata),                           \n\t\t.nios2_gen2_0_data_master_write                 (nios2_gen2_0_data_master_write),                              \n\t\t.nios2_gen2_0_data_master_writedata             (nios2_gen2_0_data_master_writedata),                          \n\t\t.nios2_gen2_0_data_master_debugaccess           (nios2_gen2_0_data_master_debugaccess),                        \n\t\t.nios2_gen2_0_instruction_master_address        (nios2_gen2_0_instruction_master_address),                     \n\t\t.nios2_gen2_0_instruction_master_waitrequest    (nios2_gen2_0_instruction_master_waitrequest),                 \n\t\t.nios2_gen2_0_instruction_master_read           (nios2_gen2_0_instruction_master_read),                        \n\t\t.nios2_gen2_0_instruction_master_readdata       (nios2_gen2_0_instruction_master_readdata),                    \n\t\t.jtag_uart_0_avalon_jtag_slave_address          (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_address),     \n\t\t.jtag_uart_0_avalon_jtag_slave_write            (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_write),       \n\t\t.jtag_uart_0_avalon_jtag_slave_read             (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_read),        \n\t\t.jtag_uart_0_avalon_jtag_slave_readdata         (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_readdata),    \n\t\t.jtag_uart_0_avalon_jtag_slave_writedata        (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_writedata),   \n\t\t.jtag_uart_0_avalon_jtag_slave_waitrequest      (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_waitrequest), \n\t\t.jtag_uart_0_avalon_jtag_slave_chipselect       (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_chipselect),  \n\t\t.keycode_0_s1_address                           (mm_interconnect_0_keycode_0_s1_address),                      \n\t\t.keycode_0_s1_write                             (mm_interconnect_0_keycode_0_s1_write),                        \n\t\t.keycode_0_s1_readdata                          (mm_interconnect_0_keycode_0_s1_readdata),                     \n\t\t.keycode_0_s1_writedata                         (mm_interconnect_0_keycode_0_s1_writedata),                    \n\t\t.keycode_0_s1_chipselect                        (mm_interconnect_0_keycode_0_s1_chipselect),                   \n\t\t.keycode_1_s1_address                           (mm_interconnect_0_keycode_1_s1_address),                      \n\t\t.keycode_1_s1_write                             (mm_interconnect_0_keycode_1_s1_write),                        \n\t\t.keycode_1_s1_readdata                          (mm_interconnect_0_keycode_1_s1_readdata),                     \n\t\t.keycode_1_s1_writedata                         (mm_interconnect_0_keycode_1_s1_writedata),                    \n\t\t.keycode_1_s1_chipselect                        (mm_interconnect_0_keycode_1_s1_chipselect),                   \n\t\t.keycode_2_s1_address                           (mm_interconnect_0_keycode_2_s1_address),                      \n\t\t.keycode_2_s1_write                             (mm_interconnect_0_keycode_2_s1_write),                        \n\t\t.keycode_2_s1_readdata                          (mm_interconnect_0_keycode_2_s1_readdata),                     \n\t\t.keycode_2_s1_writedata                         (mm_interconnect_0_keycode_2_s1_writedata),                    \n\t\t.keycode_2_s1_chipselect                        (mm_interconnect_0_keycode_2_s1_chipselect),                   \n\t\t.nios2_gen2_0_debug_mem_slave_address           (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_address),      \n\t\t.nios2_gen2_0_debug_mem_slave_write             (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_write),        \n\t\t.nios2_gen2_0_debug_mem_slave_read              (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_read),         \n\t\t.nios2_gen2_0_debug_mem_slave_readdata          (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_readdata),     \n\t\t.nios2_gen2_0_debug_mem_slave_writedata         (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_writedata),    \n\t\t.nios2_gen2_0_debug_mem_slave_byteenable        (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_byteenable),   \n\t\t.nios2_gen2_0_debug_mem_slave_waitrequest       (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_waitrequest),  \n\t\t.nios2_gen2_0_debug_mem_slave_debugaccess       (mm_interconnect_0_nios2_gen2_0_debug_mem_slave_debugaccess),  \n\t\t.onchip_memory2_0_s1_address                    (mm_interconnect_0_onchip_memory2_0_s1_address),               \n\t\t.onchip_memory2_0_s1_write                      (mm_interconnect_0_onchip_memory2_0_s1_write),                 \n\t\t.onchip_memory2_0_s1_readdata                   (mm_interconnect_0_onchip_memory2_0_s1_readdata),              \n\t\t.onchip_memory2_0_s1_writedata                  (mm_interconnect_0_onchip_memory2_0_s1_writedata),             \n\t\t.onchip_memory2_0_s1_byteenable                 (mm_interconnect_0_onchip_memory2_0_s1_byteenable),            \n\t\t.onchip_memory2_0_s1_chipselect                 (mm_interconnect_0_onchip_memory2_0_s1_chipselect),            \n\t\t.onchip_memory2_0_s1_clken                      (mm_interconnect_0_onchip_memory2_0_s1_clken),                 \n\t\t.otg_hpi_address_s1_address                     (mm_interconnect_0_otg_hpi_address_s1_address),                \n\t\t.otg_hpi_address_s1_write                       (mm_interconnect_0_otg_hpi_address_s1_write),                  \n\t\t.otg_hpi_address_s1_readdata                    (mm_interconnect_0_otg_hpi_address_s1_readdata),               \n\t\t.otg_hpi_address_s1_writedata                   (mm_interconnect_0_otg_hpi_address_s1_writedata),              \n\t\t.otg_hpi_address_s1_chipselect                  (mm_interconnect_0_otg_hpi_address_s1_chipselect),             \n\t\t.otg_hpi_cs_s1_address                          (mm_interconnect_0_otg_hpi_cs_s1_address),                     \n\t\t.otg_hpi_cs_s1_write                            (mm_interconnect_0_otg_hpi_cs_s1_write),                       \n\t\t.otg_hpi_cs_s1_readdata                         (mm_interconnect_0_otg_hpi_cs_s1_readdata),                    \n\t\t.otg_hpi_cs_s1_writedata                        (mm_interconnect_0_otg_hpi_cs_s1_writedata),                   \n\t\t.otg_hpi_cs_s1_chipselect                       (mm_interconnect_0_otg_hpi_cs_s1_chipselect),                  \n\t\t.otg_hpi_data_s1_address                        (mm_interconnect_0_otg_hpi_data_s1_address),                   \n\t\t.otg_hpi_data_s1_write                          (mm_interconnect_0_otg_hpi_data_s1_write),                     \n\t\t.otg_hpi_data_s1_readdata                       (mm_interconnect_0_otg_hpi_data_s1_readdata),                  \n\t\t.otg_hpi_data_s1_writedata                      (mm_interconnect_0_otg_hpi_data_s1_writedata),                 \n\t\t.otg_hpi_data_s1_chipselect                     (mm_interconnect_0_otg_hpi_data_s1_chipselect),                \n\t\t.otg_hpi_r_s1_address                           (mm_interconnect_0_otg_hpi_r_s1_address),                      \n\t\t.otg_hpi_r_s1_write                             (mm_interconnect_0_otg_hpi_r_s1_write),                        \n\t\t.otg_hpi_r_s1_readdata                          (mm_interconnect_0_otg_hpi_r_s1_readdata),                     \n\t\t.otg_hpi_r_s1_writedata                         (mm_interconnect_0_otg_hpi_r_s1_writedata),                    \n\t\t.otg_hpi_r_s1_chipselect                        (mm_interconnect_0_otg_hpi_r_s1_chipselect),                   \n\t\t.otg_hpi_reset_s1_address                       (mm_interconnect_0_otg_hpi_reset_s1_address),                  \n\t\t.otg_hpi_reset_s1_write                         (mm_interconnect_0_otg_hpi_reset_s1_write),                    \n\t\t.otg_hpi_reset_s1_readdata                      (mm_interconnect_0_otg_hpi_reset_s1_readdata),                 \n\t\t.otg_hpi_reset_s1_writedata                     (mm_interconnect_0_otg_hpi_reset_s1_writedata),                \n\t\t.otg_hpi_reset_s1_chipselect                    (mm_interconnect_0_otg_hpi_reset_s1_chipselect),               \n\t\t.otg_hpi_w_s1_address                           (mm_interconnect_0_otg_hpi_w_s1_address),                      \n\t\t.otg_hpi_w_s1_write                             (mm_interconnect_0_otg_hpi_w_s1_write),                        \n\t\t.otg_hpi_w_s1_readdata                          (mm_interconnect_0_otg_hpi_w_s1_readdata),                     \n\t\t.otg_hpi_w_s1_writedata                         (mm_interconnect_0_otg_hpi_w_s1_writedata),                    \n\t\t.otg_hpi_w_s1_chipselect                        (mm_interconnect_0_otg_hpi_w_s1_chipselect),                   \n\t\t.sdram_s1_address                               (mm_interconnect_0_sdram_s1_address),                          \n\t\t.sdram_s1_write                                 (mm_interconnect_0_sdram_s1_write),                            \n\t\t.sdram_s1_read                                  (mm_interconnect_0_sdram_s1_read),                             \n\t\t.sdram_s1_readdata                              (mm_interconnect_0_sdram_s1_readdata),                         \n\t\t.sdram_s1_writedata                             (mm_interconnect_0_sdram_s1_writedata),                        \n\t\t.sdram_s1_byteenable                            (mm_interconnect_0_sdram_s1_byteenable),                       \n\t\t.sdram_s1_readdatavalid                         (mm_interconnect_0_sdram_s1_readdatavalid),                    \n\t\t.sdram_s1_waitrequest                           (mm_interconnect_0_sdram_s1_waitrequest),                      \n\t\t.sdram_s1_chipselect                            (mm_interconnect_0_sdram_s1_chipselect),                       \n\t\t.sdram_pll_pll_slave_address                    (mm_interconnect_0_sdram_pll_pll_slave_address),               \n\t\t.sdram_pll_pll_slave_write                      (mm_interconnect_0_sdram_pll_pll_slave_write),                 \n\t\t.sdram_pll_pll_slave_read                       (mm_interconnect_0_sdram_pll_pll_slave_read),                  \n\t\t.sdram_pll_pll_slave_readdata                   (mm_interconnect_0_sdram_pll_pll_slave_readdata),              \n\t\t.sdram_pll_pll_slave_writedata                  (mm_interconnect_0_sdram_pll_pll_slave_writedata),             \n\t\t.sysid_qsys_0_control_slave_address             (mm_interconnect_0_sysid_qsys_0_control_slave_address),        \n\t\t.sysid_qsys_0_control_slave_readdata            (mm_interconnect_0_sysid_qsys_0_control_slave_readdata)        \n\t);\n\n\tlab7_soc_irq_mapper irq_mapper (\n\t\t.clk           (clk_clk),                            \n\t\t.reset         (rst_controller_001_reset_out_reset), \n\t\t.receiver0_irq (irq_mapper_receiver0_irq),           \n\t\t.sender_irq    (nios2_gen2_0_irq_irq)                \n\t);\n\n\taltera_reset_controller #(\n\t\t.NUM_RESET_INPUTS          (1),\n\t\t.OUTPUT_RESET_SYNC_EDGES   (\"deassert\"),\n\t\t.SYNC_DEPTH                (2),\n\t\t.RESET_REQUEST_PRESENT     (0),\n\t\t.RESET_REQ_WAIT_TIME       (1),\n\t\t.MIN_RST_ASSERTION_TIME    (3),\n\t\t.RESET_REQ_EARLY_DSRT_TIME (1),\n\t\t.USE_RESET_REQUEST_IN0     (0),\n\t\t.USE_RESET_REQUEST_IN1     (0),\n\t\t.USE_RESET_REQUEST_IN2     (0),\n\t\t.USE_RESET_REQUEST_IN3     (0),\n\t\t.USE_RESET_REQUEST_IN4     (0),\n\t\t.USE_RESET_REQUEST_IN5     (0),\n\t\t.USE_RESET_REQUEST_IN6     (0),\n\t\t.USE_RESET_REQUEST_IN7     (0),\n\t\t.USE_RESET_REQUEST_IN8     (0),\n\t\t.USE_RESET_REQUEST_IN9     (0),\n\t\t.USE_RESET_REQUEST_IN10    (0),\n\t\t.USE_RESET_REQUEST_IN11    (0),\n\t\t.USE_RESET_REQUEST_IN12    (0),\n\t\t.USE_RESET_REQUEST_IN13    (0),\n\t\t.USE_RESET_REQUEST_IN14    (0),\n\t\t.USE_RESET_REQUEST_IN15    (0),\n\t\t.ADAPT_RESET_REQUEST       (0)\n\t) rst_controller (\n\t\t.reset_in0      (~reset_reset_n),                 \n\t\t.clk            (clk_clk),                        \n\t\t.reset_out      (rst_controller_reset_out_reset), \n\t\t.reset_req      (),                               \n\t\t.reset_req_in0  (1'b0),                           \n\t\t.reset_in1      (1'b0),                           \n\t\t.reset_req_in1  (1'b0),                           \n\t\t.reset_in2      (1'b0),                           \n\t\t.reset_req_in2  (1'b0),                           \n\t\t.reset_in3      (1'b0),                           \n\t\t.reset_req_in3  (1'b0),                           \n\t\t.reset_in4      (1'b0),                           \n\t\t.reset_req_in4  (1'b0),                           \n\t\t.reset_in5      (1'b0),                           \n\t\t.reset_req_in5  (1'b0),                           \n\t\t.reset_in6      (1'b0),                           \n\t\t.reset_req_in6  (1'b0),                           \n\t\t.reset_in7      (1'b0),                           \n\t\t.reset_req_in7  (1'b0),                           \n\t\t.reset_in8      (1'b0),                           \n\t\t.reset_req_in8  (1'b0),                           \n\t\t.reset_in9      (1'b0),                           \n\t\t.reset_req_in9  (1'b0),                           \n\t\t.reset_in10     (1'b0),                           \n\t\t.reset_req_in10 (1'b0),                           \n\t\t.reset_in11     (1'b0),                           \n\t\t.reset_req_in11 (1'b0),                           \n\t\t.reset_in12     (1'b0),                           \n\t\t.reset_req_in12 (1'b0),                           \n\t\t.reset_in13     (1'b0),                           \n\t\t.reset_req_in13 (1'b0),                           \n\t\t.reset_in14     (1'b0),                           \n\t\t.reset_req_in14 (1'b0),                           \n\t\t.reset_in15     (1'b0),                           \n\t\t.reset_req_in15 (1'b0)                            \n\t);\n\n\taltera_reset_controller #(\n\t\t.NUM_RESET_INPUTS          (2),\n\t\t.OUTPUT_RESET_SYNC_EDGES   (\"deassert\"),\n\t\t.SYNC_DEPTH                (2),\n\t\t.RESET_REQUEST_PRESENT     (1),\n\t\t.RESET_REQ_WAIT_TIME       (1),\n\t\t.MIN_RST_ASSERTION_TIME    (3),\n\t\t.RESET_REQ_EARLY_DSRT_TIME (1),\n\t\t.USE_RESET_REQUEST_IN0     (0),\n\t\t.USE_RESET_REQUEST_IN1     (0),\n\t\t.USE_RESET_REQUEST_IN2     (0),\n\t\t.USE_RESET_REQUEST_IN3     (0),\n\t\t.USE_RESET_REQUEST_IN4     (0),\n\t\t.USE_RESET_REQUEST_IN5     (0),\n\t\t.USE_RESET_REQUEST_IN6     (0),\n\t\t.USE_RESET_REQUEST_IN7     (0),\n\t\t.USE_RESET_REQUEST_IN8     (0),\n\t\t.USE_RESET_REQUEST_IN9     (0),\n\t\t.USE_RESET_REQUEST_IN10    (0),\n\t\t.USE_RESET_REQUEST_IN11    (0),\n\t\t.USE_RESET_REQUEST_IN12    (0),\n\t\t.USE_RESET_REQUEST_IN13    (0),\n\t\t.USE_RESET_REQUEST_IN14    (0),\n\t\t.USE_RESET_REQUEST_IN15    (0),\n\t\t.ADAPT_RESET_REQUEST       (0)\n\t) rst_controller_001 (\n\t\t.reset_in0      (~reset_reset_n),                         \n\t\t.reset_in1      (nios2_gen2_0_debug_reset_request_reset), \n\t\t.clk            (clk_clk),                                \n\t\t.reset_out      (rst_controller_001_reset_out_reset),     \n\t\t.reset_req      (rst_controller_001_reset_out_reset_req), \n\t\t.reset_req_in0  (1'b0),                                   \n\t\t.reset_req_in1  (1'b0),                                   \n\t\t.reset_in2      (1'b0),                                   \n\t\t.reset_req_in2  (1'b0),                                   \n\t\t.reset_in3      (1'b0),                                   \n\t\t.reset_req_in3  (1'b0),                                   \n\t\t.reset_in4      (1'b0),                                   \n\t\t.reset_req_in4  (1'b0),                                   \n\t\t.reset_in5      (1'b0),                                   \n\t\t.reset_req_in5  (1'b0),                                   \n\t\t.reset_in6      (1'b0),                                   \n\t\t.reset_req_in6  (1'b0),                                   \n\t\t.reset_in7      (1'b0),                                   \n\t\t.reset_req_in7  (1'b0),                                   \n\t\t.reset_in8      (1'b0),                                   \n\t\t.reset_req_in8  (1'b0),                                   \n\t\t.reset_in9      (1'b0),                                   \n\t\t.reset_req_in9  (1'b0),                                   \n\t\t.reset_in10     (1'b0),                                   \n\t\t.reset_req_in10 (1'b0),                                   \n\t\t.reset_in11     (1'b0),                                   \n\t\t.reset_req_in11 (1'b0),                                   \n\t\t.reset_in12     (1'b0),                                   \n\t\t.reset_req_in12 (1'b0),                                   \n\t\t.reset_in13     (1'b0),                                   \n\t\t.reset_req_in13 (1'b0),                                   \n\t\t.reset_in14     (1'b0),                                   \n\t\t.reset_req_in14 (1'b0),                                   \n\t\t.reset_in15     (1'b0),                                   \n\t\t.reset_req_in15 (1'b0)                                    \n\t);\n\n\taltera_reset_controller #(\n\t\t.NUM_RESET_INPUTS          (2),\n\t\t.OUTPUT_RESET_SYNC_EDGES   (\"deassert\"),\n\t\t.SYNC_DEPTH                (2),\n\t\t.RESET_REQUEST_PRESENT     (0),\n\t\t.RESET_REQ_WAIT_TIME       (1),\n\t\t.MIN_RST_ASSERTION_TIME    (3),\n\t\t.RESET_REQ_EARLY_DSRT_TIME (1),\n\t\t.USE_RESET_REQUEST_IN0     (0),\n\t\t.USE_RESET_REQUEST_IN1     (0),\n\t\t.USE_RESET_REQUEST_IN2     (0),\n\t\t.USE_RESET_REQUEST_IN3     (0),\n\t\t.USE_RESET_REQUEST_IN4     (0),\n\t\t.USE_RESET_REQUEST_IN5     (0),\n\t\t.USE_RESET_REQUEST_IN6     (0),\n\t\t.USE_RESET_REQUEST_IN7     (0),\n\t\t.USE_RESET_REQUEST_IN8     (0),\n\t\t.USE_RESET_REQUEST_IN9     (0),\n\t\t.USE_RESET_REQUEST_IN10    (0),\n\t\t.USE_RESET_REQUEST_IN11    (0),\n\t\t.USE_RESET_REQUEST_IN12    (0),\n\t\t.USE_RESET_REQUEST_IN13    (0),\n\t\t.USE_RESET_REQUEST_IN14    (0),\n\t\t.USE_RESET_REQUEST_IN15    (0),\n\t\t.ADAPT_RESET_REQUEST       (0)\n\t) rst_controller_002 (\n\t\t.reset_in0      (~reset_reset_n),                         \n\t\t.reset_in1      (nios2_gen2_0_debug_reset_request_reset), \n\t\t.clk            (sdram_pll_c0_clk),                       \n\t\t.reset_out      (rst_controller_002_reset_out_reset),     \n\t\t.reset_req      (),                                       \n\t\t.reset_req_in0  (1'b0),                                   \n\t\t.reset_req_in1  (1'b0),                                   \n\t\t.reset_in2      (1'b0),                                   \n\t\t.reset_req_in2  (1'b0),                                   \n\t\t.reset_in3      (1'b0),                                   \n\t\t.reset_req_in3  (1'b0),                                   \n\t\t.reset_in4      (1'b0),                                   \n\t\t.reset_req_in4  (1'b0),                                   \n\t\t.reset_in5      (1'b0),                                   \n\t\t.reset_req_in5  (1'b0),                                   \n\t\t.reset_in6      (1'b0),                                   \n\t\t.reset_req_in6  (1'b0),                                   \n\t\t.reset_in7      (1'b0),                                   \n\t\t.reset_req_in7  (1'b0),                                   \n\t\t.reset_in8      (1'b0),                                   \n\t\t.reset_req_in8  (1'b0),                                   \n\t\t.reset_in9      (1'b0),                                   \n\t\t.reset_req_in9  (1'b0),                                   \n\t\t.reset_in10     (1'b0),                                   \n\t\t.reset_req_in10 (1'b0),                                   \n\t\t.reset_in11     (1'b0),                                   \n\t\t.reset_req_in11 (1'b0),                                   \n\t\t.reset_in12     (1'b0),                                   \n\t\t.reset_req_in12 (1'b0),                                   \n\t\t.reset_in13     (1'b0),                                   \n\t\t.reset_req_in13 (1'b0),                                   \n\t\t.reset_in14     (1'b0),                                   \n\t\t.reset_req_in14 (1'b0),                                   \n\t\t.reset_in15     (1'b0),                                   \n\t\t.reset_req_in15 (1'b0)                                    \n\t);\n\nendmodule\n</code>"
                },
                {
                    "type": "text",
                    "text": "Based on the provided original Verilog code, its comments and above answers, generate a detailed specification for the module. Include the following information in a single, concise paragraph:\n1. The name of the module.\n2. A simple explanation of the module's functionality.\n3. The input and output ports, along with a brief explanation of each.\n4. The internal signals used within the module, with a brief explanation of their purpose.\n5. An overview of the different blocks or sections in the code and their functions.\nEnsure that the specification is clear and accurately reflects the details from the code and comments.\nYour answer should be structured and well-organized, providing a comprehensive and detailed overview of the module's design and operation.\nPlease provide your answer in the following format:\nModule name: [module name]. Module specification: [module specification]."
                },
                {
                    "type": "text",
                    "text": "Module name: lab7_soc. Module specification: The lab7_soc module is a System-on-Chip (SoC) design for a lab project, integrating various components including a Nios II processor, SDRAM controller, PLL for clock generation, JTAG UART, and custom interfaces. It has input ports for clock (clk_clk), reset (reset_reset_n), and OTG HPI data input (otg_hpi_data_in_port), along with multiple output ports for keycodes, OTG HPI interface signals, and SDRAM control signals. The module uses a bidirectional port (sdram_wire_dq) for SDRAM data transfer. Internally, it utilizes numerous signals for interconnecting components, such as Nios II data and instruction master interfaces, JTAG UART slave interface, and memory interconn"
                }
            ]
        }
    ]
}