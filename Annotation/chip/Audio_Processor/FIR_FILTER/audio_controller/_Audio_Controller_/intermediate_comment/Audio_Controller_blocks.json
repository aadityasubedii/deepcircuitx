{
    "line_num": [
        [
            289,
            308
        ],
        [
            257,
            280
        ],
        [
            226,
            251
        ],
        [
            208,
            220
        ],
        [
            194,
            206
        ],
        [
            180,
            192
        ],
        [
            171,
            173
        ],
        [
            159,
            165
        ],
        [
            151,
            157
        ],
        [
            139,
            148
        ],
        [
            128,
            137
        ]
    ],
    "blocks": [
        "Audio_and_Video_Config Audio_Config (\n\t\n\t.clk\t\t\t(clk),\n\t.reset\t\t\t(reset),\n\n\t.ob_address\t\t(),\n\t.ob_byteenable\t(),\n\t.ob_chipselect\t(),\n\t.ob_read\t\t(),\n\t.ob_write\t\t(),\n\t.ob_writedata\t(),\n\n\t\n\t.I2C_SDAT\t\t(I2C_SDAT),\n\n\t\n\t.ob_readdata\t(),\n\t.ob_waitrequest\t(),\n\n\t.I2C_SCLK\t\t(I2C_SCLK)",
        "Altera_UP_Audio_Out_Serializer Audio_Out_Serializer (\n\t\n\t.clk\t\t\t\t\t\t\t(clk),\n\t.reset\t\t\t\t\t\t\t(reset | clear_audio_out_memory),\n\t\n\t.bit_clk_rising_edge\t\t\t(bclk_rising_edge),\n\t.bit_clk_falling_edge\t\t\t(bclk_falling_edge),\n\t.left_right_clk_rising_edge\t\t(done_dac_channel_sync & dac_lrclk_rising_edge),\n\t.left_right_clk_falling_edge\t(done_dac_channel_sync & dac_lrclk_falling_edge),\n\t\n\t.left_channel_data\t\t\t\t(left_channel_audio_out),\n\t.left_channel_data_en\t\t\t(write_audio_out & audio_out_allowed),\n\n\t.right_channel_data\t\t\t\t(right_channel_audio_out),\n\t.right_channel_data_en\t\t\t(write_audio_out & audio_out_allowed),\n\t\n\t\n\n\t\n\t.left_channel_fifo_write_space\t(left_channel_write_space),\n\t.right_channel_fifo_write_space\t(right_channel_write_space),\n\n\t.serial_audio_out_data\t\t\t(AUD_DACDAT)\n);",
        "Altera_UP_Audio_In_Deserializer Audio_In_Deserializer (\n\t\n\t.clk\t\t\t\t\t\t\t(clk),\n\t.reset\t\t\t\t\t\t\t(reset | clear_audio_in_memory),\n\t\n\t.bit_clk_rising_edge\t\t\t(bclk_rising_edge),\n\t.bit_clk_falling_edge\t\t\t(bclk_falling_edge),\n\t.left_right_clk_rising_edge\t\t(adc_lrclk_rising_edge),\n\t.left_right_clk_falling_edge\t(adc_lrclk_falling_edge),\n\n\t.done_channel_sync\t\t\t\t(done_adc_channel_sync),\n\n\t.serial_audio_in_data\t\t\t(AUD_ADCDAT),\n\n\t.read_left_audio_data_en\t\t(read_audio_in & audio_in_available),\n\t.read_right_audio_data_en\t\t(read_audio_in & audio_in_available),\n\n\t\n\n\t\n\t.left_audio_fifo_read_space\t\t(left_channel_read_available),\n\t.right_audio_fifo_read_space\t(right_channel_read_available),\n\n\t.left_channel_data\t\t\t\t(left_channel_audio_in),\n\t.right_channel_data\t\t\t\t(right_channel_audio_in)\n);",
        "Altera_UP_Clock_Edge DAC_Left_Right_Clock_Edges (\n\t\n\t.clk\t\t\t(clk),\n\t.reset\t\t\t(reset),\n\t\n\t.test_clk\t\t(AUD_DACLRCK),\n\t\n\t\n\n\t\n\t.rising_edge\t(dac_lrclk_rising_edge),\n\t.falling_edge\t(dac_lrclk_falling_edge)\n);",
        "Altera_UP_Clock_Edge ADC_Left_Right_Clock_Edges (\n\t\n\t.clk\t\t\t(clk),\n\t.reset\t\t\t(reset),\n\t\n\t.test_clk\t\t(AUD_ADCLRCK),\n\t\n\t\n\n\t\n\t.rising_edge\t(adc_lrclk_rising_edge),\n\t.falling_edge\t(adc_lrclk_falling_edge)\n);",
        "Altera_UP_Clock_Edge Bit_Clock_Edges (\n\t\n\t.clk\t\t\t(clk),\n\t.reset\t\t\t(reset),\n\t\n\t.test_clk\t\t(AUD_BCLK),\n\t\n\t\n\n\t\n\t.rising_edge\t(bclk_rising_edge),\n\t.falling_edge\t(bclk_falling_edge)\n);",
        "assign AUD_BCLK\t\t= 1'bZ;\nassign AUD_ADCLRCK\t= 1'bZ;\nassign AUD_DACLRCK\t= 1'bZ;",
        "always @ (posedge clk)\nbegin\n\tif (reset == 1'b1)\n\t\tdone_dac_channel_sync <= 1'b0;\n\telse if (dac_lrclk_falling_edge == 1'b1)\n\t\tdone_dac_channel_sync <= 1'b1;\nend",
        "always @ (posedge clk)\nbegin\n\tif (reset == 1'b1)\n\t\tdone_adc_channel_sync <= 1'b0;\n\telse if (adc_lrclk_rising_edge == 1'b1)\n\t\tdone_adc_channel_sync <= 1'b1;\nend",
        "always @ (posedge clk)\nbegin\n\tif (reset == 1'b1)\n\t\taudio_out_allowed <= 1'b0;\n\telse if ((left_channel_write_space[7] | left_channel_write_space[6])\n\t\t\t& (right_channel_write_space[7] | right_channel_write_space[6]))\n\t\taudio_out_allowed <= 1'b1;\n\telse\n\t\taudio_out_allowed <= 1'b0;\nend",
        "always @ (posedge clk)\nbegin\n\tif (reset == 1'b1)\n\t\taudio_in_available <= 1'b0;\n\telse if ((left_channel_read_available[7] | left_channel_read_available[6])\n\t\t\t& (right_channel_read_available[7] | right_channel_read_available[6]))\n\t\taudio_in_available <= 1'b1;\n\telse\n\t\taudio_in_available <= 1'b0;\nend"
    ]
}