{
    "line_num": [
        [
            267,
            323
        ],
        [
            265,
            265
        ],
        [
            263,
            263
        ],
        [
            260,
            260
        ],
        [
            248,
            254
        ],
        [
            237,
            245
        ],
        [
            227,
            235
        ],
        [
            217,
            225
        ],
        [
            203,
            215
        ],
        [
            189,
            201
        ],
        [
            117,
            182
        ],
        [
            109,
            115
        ]
    ],
    "blocks": [
        "always @(*)\nbegin\n\tcase (rom_address_counter)\n\t\n\t0\t\t:\trom_data\t<=\t{10'h334, 7'h0, AUD_LINE_IN_LC};\n\t1\t\t:\trom_data\t<=\t{10'h334, 7'h1, AUD_LINE_IN_RC};\n\t2\t\t:\trom_data\t<=\t{10'h334, 7'h2, AUD_LINE_OUT_LC};\n\t3\t\t:\trom_data\t<=\t{10'h334, 7'h3, AUD_LINE_OUT_RC};\n\t4\t\t:\trom_data\t<=\t{10'h334, 7'h4, AUD_ADC_PATH} + (26'h0000004 * USE_MIC_INPUT);\n\t5\t\t:\trom_data\t<=\t{10'h334, 7'h5, AUD_DAC_PATH};\n\t6\t\t:\trom_data\t<=\t{10'h334, 7'h6, AUD_POWER};\n\t7\t\t:\trom_data\t<=\t{10'h334, 7'h7, AUD_DATA_FORMAT};\n\t8\t\t:\trom_data\t<=\t{10'h334, 7'h8, AUD_SAMPLE_CTRL};\n\t9\t\t:\trom_data\t<=\t{10'h334, 7'h9, AUD_SET_ACTIVE};\n\t\n\t10\t\t:\trom_data\t<=\t26'h3401500;\n\t11\t\t:\trom_data\t<=\t26'h3401741;\n\t12\t\t:\trom_data\t<=\t26'h3403a16;\n\t13\t\t:\trom_data\t<=\t26'h3405004;\n\t14\t\t:\trom_data\t<=\t26'h340c305;\n\t15\t\t:\trom_data\t<=\t26'h340c480;\n\t16\t\t:\trom_data\t<=\t26'h3400e80;\n\t17\t\t:\trom_data\t<=\t26'h3405020;\n\t18\t\t:\trom_data\t<=\t26'h3405218;\n\t19\t\t:\trom_data\t<=\t26'h34058ed;\n\t20\t\t:\trom_data\t<=\t26'h34077c5;\n\t21\t\t:\trom_data\t<=\t26'h3407c93;\n\t22\t\t:\trom_data\t<=\t26'h3407d00;\n\t23\t\t:\trom_data\t<=\t26'h340d048;\n\t24\t\t:\trom_data\t<=\t26'h340d5a0;\n\t25\t\t:\trom_data\t<=\t26'h340d7ea;\n\t26\t\t:\trom_data\t<=\t26'h340e43e;\n\t27\t\t:\trom_data\t<=\t26'h340ea0f;\n\t28\t\t:\trom_data\t<=\t26'h3403112;\n\t29\t\t:\trom_data\t<=\t26'h3403281;\n\t30\t\t:\trom_data\t<=\t26'h3403384;\n\t31\t\t:\trom_data\t<=\t26'h34037A0;\n\t32\t\t:\trom_data\t<=\t26'h340e580;\n\t33\t\t:\trom_data\t<=\t26'h340e603;\n\t34\t\t:\trom_data\t<=\t26'h340e785;\n\t35\t\t:\trom_data\t<=\t26'h3405000;\n\t36\t\t:\trom_data\t<=\t26'h3405100;\n\t37\t\t:\trom_data\t<=\t26'h3400070;\n\t38\t\t:\trom_data\t<=\t26'h3401010;\n\t39\t\t:\trom_data\t<=\t26'h3400482;\n\t40\t\t:\trom_data\t<=\t26'h3400860;\n\t41\t\t:\trom_data\t<=\t26'h3400a18;\n\t42\t\t:\trom_data\t<=\t26'h3401100;\n\t43\t\t:\trom_data\t<=\t26'h3402b00;\n\t44\t\t:\trom_data\t<=\t26'h3402c8c;\n\t45\t\t:\trom_data\t<=\t26'h3402df2;\n\t46\t\t:\trom_data\t<=\t26'h3402eee;\n\t47\t\t:\trom_data\t<=\t26'h3402ff4;\n\t48\t\t:\trom_data\t<=\t26'h34030d2;\n\t49\t\t:\trom_data\t<=\t26'h3400e05;\n\tdefault\t:\trom_data\t<=\t26'h1000000;\n\tendcase",
        "assign finished_auto_init = (rom_address_counter == MAX_ROM_ADDRESS);",
        "assign change_state\t= transfer_complete & transfer_data;",
        "assign auto_init_complete = (s_i2c_auto_init == AUTO_STATE_7_DONE);",
        "always @(posedge clk)\nbegin\n\tif (reset == 1'b1)\n\t\trom_address_counter <= MIN_ROM_ADDRESS;\n\telse if (s_i2c_auto_init == AUTO_STATE_6_INCREASE_COUNTER)\n\t\trom_address_counter <= rom_address_counter + 6'h01;\nend",
        "always @(posedge clk)\nbegin\n\tif (reset == 1'b1)\n\t\tauto_init_error <= 1'b0;\n\telse if (clear_error == 1'b1)\n\t\tauto_init_error <= 1'b0;\n\telse if ((s_i2c_auto_init == AUTO_STATE_6_INCREASE_COUNTER) & ack)\n\t\tauto_init_error <= 1'b1;\nend",
        "always @(posedge clk)\nbegin\n\tif (reset == 1'b1)\n\t\tsend_stop_bit <= 1'b0;\n\telse if (transfer_complete == 1'b1)\n\t\tsend_stop_bit <= 1'b0;\n\telse if (s_i2c_auto_init == AUTO_STATE_5_SEND_STOP_BIT)\n\t\tsend_stop_bit <= 1'b1;\nend",
        "always @(posedge clk)\nbegin\n\tif (reset == 1'b1)\n\t\tsend_start_bit <= 1'b0;\n\telse if (transfer_complete == 1'b1)\n\t\tsend_start_bit <= 1'b0;\n\telse if (s_i2c_auto_init == AUTO_STATE_1_SEND_START_BIT)\n\t\tsend_start_bit <= 1'b1;\nend",
        "always @(posedge clk)\nbegin\n\tif (reset == 1'b1) \n\t\ttransfer_data <= 1'b0;\n\telse if (transfer_complete == 1'b1)\n\t\ttransfer_data <= 1'b0;\n\telse if (s_i2c_auto_init == AUTO_STATE_1_SEND_START_BIT)\n\t\ttransfer_data <= 1'b1;\n\telse if (s_i2c_auto_init == AUTO_STATE_2_TRANSFER_BYTE_1)\n\t\ttransfer_data <= 1'b1;\n\telse if (s_i2c_auto_init == AUTO_STATE_3_TRANSFER_BYTE_2)\n\t\ttransfer_data <= 1'b1;\nend",
        "always @(posedge clk)\nbegin\n\tif (reset == 1'b1)\n\t\tdata_out <= 8'h00;\n\telse if (s_i2c_auto_init == AUTO_STATE_1_SEND_START_BIT)\n\t\tdata_out <= rom_data[23:16];\n\telse if (s_i2c_auto_init == AUTO_STATE_0_CHECK_STATUS)\n\t\tdata_out <= rom_data[15: 8];\n\telse if (s_i2c_auto_init == AUTO_STATE_2_TRANSFER_BYTE_1)\n\t\tdata_out <= rom_data[15: 8];\n\telse if (s_i2c_auto_init == AUTO_STATE_3_TRANSFER_BYTE_2)\n\t\tdata_out <= rom_data[ 7: 0];\nend",
        "always @(*)\nbegin\n\t\n\tns_i2c_auto_init = AUTO_STATE_0_CHECK_STATUS;\n\n    case (s_i2c_auto_init)\n\tAUTO_STATE_0_CHECK_STATUS:\n\t\tbegin\n\t\t\tif (finished_auto_init == 1'b1)\n\t\t\t\tns_i2c_auto_init = AUTO_STATE_7_DONE;\n\t\t\telse if (rom_data[25] == 1'b1)\n\t\t\t\tns_i2c_auto_init = AUTO_STATE_1_SEND_START_BIT;\n\t\t\telse\n\t\t\t\tns_i2c_auto_init = AUTO_STATE_3_TRANSFER_BYTE_2;\n\t\tend\n\tAUTO_STATE_1_SEND_START_BIT:\n\t\tbegin\n\t\t\tif (change_state == 1'b1)\n\t\t\t\tns_i2c_auto_init = AUTO_STATE_2_TRANSFER_BYTE_1;\n\t\t\telse\n\t\t\t\tns_i2c_auto_init = AUTO_STATE_1_SEND_START_BIT;\n\t\tend\n\tAUTO_STATE_2_TRANSFER_BYTE_1:\n\t\tbegin\n\t\t\tif (change_state == 1'b1)\n\t\t\t\tns_i2c_auto_init = AUTO_STATE_3_TRANSFER_BYTE_2;\n\t\t\telse\n\t\t\t\tns_i2c_auto_init = AUTO_STATE_2_TRANSFER_BYTE_1;\n\t\tend\n\tAUTO_STATE_3_TRANSFER_BYTE_2:\n\t\tbegin\n\t\t\tif ((change_state == 1'b1) && (rom_data[24] == 1'b1))\n\t\t\t\tns_i2c_auto_init = AUTO_STATE_4_WAIT;\n\t\t\telse if (change_state == 1'b1)\n\t\t\t\tns_i2c_auto_init = AUTO_STATE_6_INCREASE_COUNTER;\n\t\t\telse\n\t\t\t\tns_i2c_auto_init = AUTO_STATE_3_TRANSFER_BYTE_2;\n\t\tend\n\tAUTO_STATE_4_WAIT:\n\t\tbegin\n\t\t\tif (transfer_complete == 1'b0)\n\t\t\t\tns_i2c_auto_init = AUTO_STATE_5_SEND_STOP_BIT;\n\t\t\telse\n\t\t\t\tns_i2c_auto_init = AUTO_STATE_4_WAIT;\n\t\tend\n\tAUTO_STATE_5_SEND_STOP_BIT:\n\t\tbegin\n\t\t\tif (transfer_complete == 1'b1)\n\t\t\t\tns_i2c_auto_init = AUTO_STATE_6_INCREASE_COUNTER;\n\t\t\telse\n\t\t\t\tns_i2c_auto_init = AUTO_STATE_5_SEND_STOP_BIT;\n\t\tend\n\tAUTO_STATE_6_INCREASE_COUNTER:\n\t\tbegin\n\t\t\tns_i2c_auto_init = AUTO_STATE_0_CHECK_STATUS;\n\t\tend\n\tAUTO_STATE_7_DONE:\n\t\tbegin\n\t\t\tns_i2c_auto_init = AUTO_STATE_7_DONE;\n\t\tend\n\tdefault:\n\t\tbegin\n\t\t\tns_i2c_auto_init = AUTO_STATE_0_CHECK_STATUS;\n\t\tend\n\tendcase\nend",
        "always @(posedge clk)\nbegin\n\tif (reset == 1'b1)\n\t\ts_i2c_auto_init <= AUTO_STATE_0_CHECK_STATUS;\n\telse\n\t\ts_i2c_auto_init <= ns_i2c_auto_init;\nend"
    ]
}