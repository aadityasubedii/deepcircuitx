Line number: 
[53, 134]
Comment: 
This block of code primarily functions as a state machine with three states: initial_state, comp_state, and sleep_state. It receives clock signal Sclk and transitions between states based on certain variables. In the initial state, the code resets critical flags, prepares variables, and either stays in its current state or transitions to the computation state based on 'Clear' and 'compute_enable' signals. The 'comp_state' handles calculations, adjusts the 'nL' counter, controls start of computation and overflow status based on the 'compute_enable' signal, and transitions to the initial state or sleep state based on 'Clear' and 'sleep_flag'. Lastly, the 'sleep_state' maintains current computation and overflow status and resumes computation after exiting sleep condition, transitioning to initial state or back to computation state based on signals.