{
    "line_num": [
        [
            351,
            472
        ],
        [
            269,
            349
        ],
        [
            261,
            267
        ],
        [
            135,
            251
        ],
        [
            53,
            134
        ],
        [
            45,
            51
        ]
    ],
    "blocks": [
        "\talways @(posedge Sclk)\n\tbegin\n\t\tif (out_done_R)\n\t\tbegin\n\t\t\tp2s_enable_R = 1'b1;\n\t\t\trj_addr_R = 4'd0;\n\t\t\tcoeff_addr_R = 9'd0;\n\t\t\tk_R = 8'd0;\n\t\t\tout_done_R = 1'b0;\n\t\t\tclear_R = 1'b1;\n\t\tend\n\t\telse\n\t\t\tp2s_enable_R = 1'b0;\n\t\t\n\t\t\n\t\tif(enable_adder)\n\t\tbegin\n\t\t  adder_en_R = 1'b1;\n\t\t  load_R = 1'b1; \n\t\tend\t\t\n\t\telse \n\t\tbegin \n\t\t  adder_en_R = 1'b0;\n\t\t  load_R = 1'b0; \n\t\tend\t\t\n\t\tif(enable_shifter) shift_enable_R=1'b1;\n\t\telse shift_enable_R =1'b0;\n\t\t\n\t\tif (start_comp_R == 1'b1)\n\t\tbegin\n\t\t\tout_done_R = 1'b0;\n\t\t\trj_addr_R = 4'd0;\n\t\t\trj_en_R = 1'b1;\n\t\t\tcoeff_addr_R = 9'd0;\n\t\t\tcoeff_en_R = 1'b1;\n\t\t\txin_en_R = 1'b0;\n\t\t\txin_addr_R=1'b0;\n\t\t\tenable_adder=1'b0;\n\t\t\t\n\t\t\t\n\t\t\tenable_shifter = 1'b0;\n\t\t\tk_R = 8'd0;\n\t\t\tclear_R = 1'b1;\n\t\t\t\n\t\tend\n\t\telse if (compute_status_R == 1'b1)\n\t\tbegin\n\t\t\tif (k_R == rj_data_R)\n\t\t\tbegin\n\t\t\t\txin_en_R = 1'b0;\n\t\t\t\tshift_enable_R = 1'b1;\n\t\t\t\tclear_R = 1'b0;\n\t\t\t\tenable_adder=1'b1;\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tk_R = 8'd0;\n\t\t\t\tif (rj_addr_R < 5'd15)\n\t\t\t\tbegin\n\t\t\t\t\trj_addr_R = rj_addr_R + 1'b1;\n\t\t\t\tend\n\t\t\t\telse\n\t\t\t\tbegin\n\t\t\t\t\trj_addr_R = 4'd0;\n\t\t\t\t\tout_done_R = 1'b1;\n\t\t\t\t\tcoeff_addr_R = 9'd0;\n\t\t\t\tend\n\t\t\tend\n\t\t\telse\n\t\t\tbegin\n\t\t\t\tenable_shifter = 1'b0;\n\t\t\t\t\n\t\t\t\tclear_R = 1'b0;\n\t\t\t\t\n\t\t\t\txin_en_R = 1'b0;\n\t\t\t\tadd_sub_R = coeff_data_R[8];\n\t\t\t\tif (nL_R >= coeff_data_R[7:0] )\n\t\t\t\tbegin\n\t\t\t\t\txin_addr_R = nL_R - coeff_data_R[7:0];\n\t\t\t\t\txin_en_R = 1'b1;\n\t\t\t\t\tenable_adder=1'b1;\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\tend\n\t\t\t\telse if (nL_R < coeff_data_R[7:0] && xmem_overflow_R == 1'b1)\n\t\t\t\tbegin\n\t\t\t\t\txin_addr_R = nL_R + (9'd256 - coeff_data_R[7:0]);\n\t\t\t\t\txin_en_R = 1'b1;\n\t\t\t\t\tenable_adder=1'b1;\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\tend\n\t\t\t\telse\n\t\t\t\tbegin\n\t\t\t\t\txin_addr_R = xin_addr_R;\n\t\t\t\t\tenable_adder=1'b0;\n\t\t\t\t\t\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\tif (coeff_addr_R < 9'h1FF)\n\t\t\t\t\tcoeff_addr_R = coeff_addr_R + 1'b1;\n\t\t\t\telse\n\t\t\t\t\tcoeff_addr_R = coeff_addr_R;\n\t\t\t\t\n\t\t\t\tk_R = k_R + 1'b1;\n\t\t\tend\n\t\tend\n\t\telse\n\t\tbegin\n\t\t\trj_addr_R = 4'd0;\n\t\t\trj_en_R = 1'b0;\n\t\t\tcoeff_addr_R = 9'd0;\n\t\t\tcoeff_en_R = 1'b0;\n\t\t\txin_en_R = 1'b0;\n\t\t\tenable_adder = 1'b0;\n\t\t\t\n\t\t\tenable_shifter = 1'b0;\n\t\t\t\n\t\t\tk_R = 8'd0;\n\t\t\t\n\t\t\tclear_R = 1'b1;\n\t\tend\n\tend",
        "\talways @(posedge Sclk)\n\tbegin\n\t\t\n\t\tcase (pr_state_R)\n\t\t\tinitial_state:\n\t\t\t\tbegin\n\t\t\t\t\txmem_overflow_R <= 1'b0;\n\t\t\t\t\t\n\t\t\t\t\tif (Clear == 1'b1)\n\t\t\t\t\t\tnext_state_R <= initial_state;\n\t\t\t\t\telse if (compute_enable == 1'b1)\n\t\t\t\t\tbegin\n\t\t\t\t\t\tnext_state_R <= comp_state;\n\t\t\t\t\t\tnL_R <= 8'd0;\n\t\t\t\t\t\tstart_comp_R <= 1'b1;\n\t\t\t\t\t\tcompute_status_R <= 1'b1;\n\t\t\t\t\tend\n\t\t\t\t\telse\n\t\t\t\t\tbegin\n\t\t\t\t\t\tnext_state_R <= initial_state;\n\t\t\t\t\t\tnL_R <= nL_R;\n\t\t\t\t\t\tstart_comp_R <= 1'b0;\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\t\n\t\t\tcomp_state:\n\t\t\t\tbegin\n\t\t\t\t\tif (compute_enable == 1'b1)\n\t\t\t\t\tbegin\n\t\t\t\t\t\tnL_R <= nL_R + 1'b1;\n\t\t\t\t\t\tstart_comp_R <= 1'b1;\n\t\t\t\t\t\tcompute_status_R <= 1'b1;\n\t\t\t\t\t\tif (nL_R == 8'hFF)\n\t\t\t\t\t\t\txmem_overflow_R <= 1'b1;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\txmem_overflow_R <= xmem_overflow_R;\n\t\t\t\t\tend\n\t\t\t\t\telse\n\t\t\t\t\tbegin\n\t\t\t\t\t\tstart_comp_R <= 1'b0;\n\t\t\t\t\t\txmem_overflow_R <= xmem_overflow_R;\n\t\t\t\t\t\tif (rj_addr_R == 4'hF && coeff_addr_R == 9'h1FF && k_R == rj_data_R)\n\t\t\t\t\t\t\tcompute_status_R <= 1'b0;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tcompute_status_R <= compute_status_R;\n\t\t\t\t\tend\n\t\t\t\t\t\n\t\t\t\t\tif (Clear == 1'b1)\n\t\t\t\t\t\tnext_state_R <= initial_state;\n\t\t\t\t\telse if (sleep_flag == 1'b1)\n\t\t\t\t\t\tnext_state_R <= sleep_state;\n\t\t\t\t\telse\n\t\t\t\t\t\tnext_state_R <= comp_state;\n\t\t\t\tend\n\t\t\t\n\t\t\tsleep_state:\n\t\t\t\tbegin\n\t\t\t\t\tnL_R <= nL_R;\n\t\t\t\t\txmem_overflow_R <= xmem_overflow_R;\n\t\t\t\t\tstart_comp_R <= 1'b0;\n\t\t\t\t\tcompute_status_R <= 1'b0;\n\t\t\t\t\tif (Clear == 1'b1)\n\t\t\t\t\t\tnext_state_R <= initial_state;\n\t\t\t\t\telse if (sleep_flag == 1'b0)\n\t\t\t\t\tbegin\n\t\t\t\t\t\tnL_R <= nL_R + 1'b1;\n\t\t\t\t\t\tstart_comp_R <= 1'b1;\n\t\t\t\t\t\tcompute_status_R <= 1'b1;\n\t\t\t\t\t\tif (nL_R == 8'hFF)\n\t\t\t\t\t\t\txmem_overflow_R <= 1'b1;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\txmem_overflow_R <= xmem_overflow_R;\n\t\t\t\t\t\tnext_state_R <= comp_state;\n\t\t\t\t\tend\n\t\t\t\t\telse\n\t\t\t\t\t\tnext_state_R <= sleep_state;\n\t\t\t\tend\n\t\t\t\t\n\t\t\tdefault:   next_state_R <= initial_state;\n\t\tendcase\n\tend",
        "\talways @(Clear, next_state_R)\n\tbegin\n\t\tif (Clear == 1'b1)\n\t\t\tpr_state_R <= initial_state;\n\t\telse\n\t\t\tpr_state_R <= next_state_R;\n\tend",
        "\talways @(posedge Sclk)\n\tbegin\n\t\tif (out_done_L)\n\t\tbegin\n\t\t\tp2s_enable_L = 1'b1;\n\t\t\trj_addr_L = 4'd0;\n\t\t\tcoeff_addr_L = 9'd0;\n\t\t\tk_L = 8'd0;\n\t\t\tout_done_L = 1'b0;\n\t\t\tclear_L = 1'b1;\n\t\tend\n\t\telse\n\t\t\tp2s_enable_L = 1'b0;\n\t\tif(xin_en_L)\n\t\tbegin \n\t\t  adder_en_L = 1'b1;\n\t\t  load_L = 1'b1; \n\t\tend\n\t\telse \n\t\tbegin \n\t\t  adder_en_L = 1'b0;\n\t\t  load_L = 1'b0; \n\t\tend\n\t\tif(enable_shifter) shift_enable_L=1'b1;\n\t\telse shift_enable_L =1'b0;\n\t\tif (start_comp_L == 1'b1) \n\t\tbegin\n\t\t\tout_done_L = 1'b0;\n\t\t\trj_addr_L = 4'd0;\n\t\t\trj_en_L = 1'b1;\n\t\t\tcoeff_addr_L = 9'd0;\n\t\t\tcoeff_en_L = 1'b1;\n\t\t\txin_en_L = 1'b0;\n\t\t\txin_addr_L=1'b0;\n\t\t\tenable_adder=1'b0;\n\t\t\t\n\t\t\tenable_shifter = 1'b0;\n\t\t\tk_L = 8'd0;\n\t\t\tclear_L = 1'b1;\n\t\t\t\n\t\tend\n\t\telse if (compute_status_L == 1'b1)\n\t\tbegin\n\t\t\tif (k_L == rj_data_L)\n\t\t\tbegin\n\t\t\t\txin_en_L = 1'b1;\n\t\t\t\tenable_shifter = 1'b1;\n\t\t\t\tclear_L = 1'b0;\n\t\t\t\tenable_adder=1'b1;\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tk_L = 8'd0;\n\t\t\t\tif (rj_addr_L < 4'd15)\n\t\t\t\tbegin\n\t\t\t\t\trj_addr_L = rj_addr_L + 1'b1;\n\t\t\t\tend\n\t\t\t\telse\n\t\t\t\tbegin\n\t\t\t\t\trj_addr_L = 4'd0;\n\t\t\t\t\tout_done_L = 1'b1;\n\t\t\t\t\tcoeff_addr_L = 9'd0;\n\t\t\t\tend\n\t\t\tend\n\t\t\telse\n\t\t\tbegin \n\t\t\t\tenable_shifter = 1'b0;\n\t\t\t\tclear_L = 1'b0;\n\t\t\t\t\n\t\t\t\txin_en_L = 1'b0;\n\t\t\t\tadd_sub_L = coeff_data_L[8];\n\t\t\t\t\n\t\t\t\tif (nL >= coeff_data_L[7:0])\n\t\t\t\tbegin\n\t\t\t\t\txin_addr_L = nL - coeff_data_L[7:0];\n\t\t\t\t\txin_en_L = 1'b1;\n\t\t\t\t\tenable_adder=1'b1;\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\tend\n\t\t\t\telse if (nL < coeff_data_L[7:0] && xmem_overflow_L == 1'b1)\n\t\t\t\tbegin\n\t\t\t\t\txin_addr_L = nL + (9'd256 - coeff_data_L[7:0]);\n\t\t\t\t\txin_en_L = 1'b1;\n\t\t\t\t\tenable_adder=1'b1;\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\tend\n\t\t\t\telse\n\t\t\t\tbegin\n\t\t\t\t\txin_addr_L = xin_addr_L;\n\t\t\t\t\tenable_adder=1'b0;\n\t\t\t\t\t\n\t\t\t\tend\n\n\t\t\t\tif (coeff_addr_L < 9'h1FF)\n\t\t\t\t\tcoeff_addr_L = coeff_addr_L + 1'b1;\n\t\t\t\telse\n\t\t\t\t\tcoeff_addr_L = coeff_addr_L;\n\t\t\t\t\n\t\t\t\tk_L = k_L + 1'b1;\n\t\t\tend\n\t\tend\n\t\telse \n\t\tbegin\n\t\t\trj_addr_L = 4'd0;\n\t\t\trj_en_L = 1'b0;\n\t\t\tcoeff_addr_L = 9'd0;\n\t\t\tcoeff_en_L = 1'b0;\n\t\t\txin_en_L = 1'b0;\n\t\t\tenable_adder = 1'b0;\n\t\t\t\n\t\t\tenable_shifter = 1'b0;\n\t\t\tk_L = 8'd0;\n\t\t\t\n\t\t\tclear_L = 1'b1;\n\t\tend\n\tend",
        "\talways @(posedge Sclk)\n\tbegin\n\t\t\n\t\tcase (pr_state_L)\n\t\t\tinitial_state:\n\t\t\t\tbegin\n\t\t\t\t\txmem_overflow_L <= 1'b0;\n\t\t\t\t\t\n\t\t\t\t\tif (Clear == 1'b1) \n\t\t\t\t\t\tnext_state_L <= initial_state;\n\t\t\t\t\telse if (compute_enable == 1'b1)\n\t\t\t\t\tbegin\n\t\t\t\t\t\tnext_state_L <= comp_state;\n\t\t\t\t\t\tnL <= 8'd0;\n\t\t\t\t\t\tstart_comp_L <= 1'b1;\n\t\t\t\t\t\tcompute_status_L <= 1'b1;\n\t\t\t\t\tend\n\t\t\t\t\telse\n\t\t\t\t\tbegin\n\t\t\t\t\t\tnext_state_L <= initial_state;\n\t\t\t\t\t\tnL <= nL;\n\t\t\t\t\t\tstart_comp_L <= 1'b0;\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\t\n\t\t\tcomp_state:\n\t\t\t\tbegin\n\t\t\t\t\tif (compute_enable == 1'b1)\n\t\t\t\t\tbegin\n\t\t\t\t\t\tnL <= nL + 1'b1;\n\t\t\t\t\t\tstart_comp_L <= 1'b1;\n\t\t\t\t\t\tcompute_status_L <= 1'b1;\n\t\t\t\t\t\tif (nL == 8'hFF)\n\t\t\t\t\t\t\txmem_overflow_L <= 1'b1;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\txmem_overflow_L <= xmem_overflow_L;\n\t\t\t\t\tend\n\t\t\t\t\telse\n\t\t\t\t\tbegin \n\t\t\t\t\t\tstart_comp_L <= 1'b0;\n\t\t\t\t\t\txmem_overflow_L <= xmem_overflow_L;\n\t\t\t\t\t\tif (rj_addr_L == 4'hF && coeff_addr_L == 9'h1FF && k_L == rj_data_L) \n\t\t\t\t\t\t\tcompute_status_L <= 1'b0;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tcompute_status_L <= compute_status_L; \n\t\t\t\t\tend\n\t\t\t\t\t\n\t\t\t\t\tif (Clear == 1'b1)\n\t\t\t\t\t\tnext_state_L <= initial_state;\n\t\t\t\t\telse if (sleep_flag == 1'b1) \n\t\t\t\t\t\tnext_state_L <= sleep_state;\n\t\t\t\t\telse\n\t\t\t\t\t\tnext_state_L <= comp_state;\n\t\t\t\tend\n\t\t\t\n\t\t\tsleep_state:\n\t\t\t\tbegin\n\t\t\t\t\tnL <= nL;\n\t\t\t\t\txmem_overflow_L <= xmem_overflow_L;\n\t\t\t\t\tstart_comp_L <= 1'b0;\n\t\t\t\t\tcompute_status_L <= 1'b0;\n\t\t\t\t\tif (Clear == 1'b1)\n\t\t\t\t\t\tnext_state_L <= initial_state;\n\t\t\t\t\telse if (sleep_flag == 1'b0)\n\t\t\t\t\tbegin\n\t\t\t\t\t\tnL <= nL + 1'b1;\n\t\t\t\t\t\tstart_comp_L <= 1'b1;\n\t\t\t\t\t\tcompute_status_L <= 1'b1;\n\t\t\t\t\t\tif (nL == 8'hFF)\n\t\t\t\t\t\t\txmem_overflow_L <= 1'b1;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\txmem_overflow_L <= xmem_overflow_L;\n\t\t\t\t\t\tnext_state_L <= comp_state;\n\t\t\t\t\tend\n\t\t\t\t\telse\n\t\t\t\t\t\tnext_state_L <= sleep_state;\n\t\t\t\tend\n\t\t\t\t\n\t\t\tdefault:\tnext_state_L <= initial_state;\n\t\tendcase\n\tend\n\t",
        "\talways @(Clear, next_state_L)\n\tbegin\n\t\tif (Clear == 1'b1)\n\t\t\tpr_state_L <= initial_state;\n\t\telse\n\t\t\tpr_state_L <= next_state_L;\n\tend"
    ]
}