{
    "block_comment": "This block is a clocked process which typically operates on sampling audio data and controls audio output based on a set of conditions. At every positive edge of the clock, it checks for `sample_end` and the `sample_req` flags. If `sample_end` is encountered, it stores the current audio input as `last_sample`. On receiving a `sample_req`, it generates an output `dat`, based on either a feedback control or a sine wave control fetched from the ROM data. With feedback control active, it multiplies the `last_sample` with `volume_control`, while in sine control it cycles through the sine ROM, fetching data based on the `index` and resetting the index after it reaches 99. If neither control is active, `dat` is set to 0."
}