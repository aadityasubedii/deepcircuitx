{
    "line_num": [
        [
            538,
            556
        ],
        [
            480,
            535
        ],
        [
            474,
            476
        ],
        [
            453,
            466
        ],
        [
            347,
            449
        ],
        [
            200,
            200
        ],
        [
            193,
            198
        ],
        [
            186,
            191
        ],
        [
            181,
            183
        ]
    ],
    "blocks": [
        "  always @(posedge clk) begin\n      temp_cmp_four_inc_max_102  <= #TCQ temp_cmp_four_inc_max_101;\n      temp_cmp_three_inc_max_102 <= #TCQ temp_cmp_three_inc_max_101;\n      temp_cmp_two_inc_max_102   <= #TCQ temp_cmp_two_inc_max_101;\n      temp_cmp_one_inc_max_102   <= #TCQ temp_cmp_one_inc_max_101;\n      temp_cmp_neutral_max_102   <= #TCQ temp_cmp_neutral_max_101;\n      temp_cmp_one_dec_max_102   <= #TCQ temp_cmp_one_dec_max_101;\n      temp_cmp_two_dec_max_102   <= #TCQ temp_cmp_two_dec_max_101;\n      temp_cmp_three_dec_max_102 <= #TCQ temp_cmp_three_dec_max_101;\n      temp_cmp_three_inc_min_102 <= #TCQ temp_cmp_three_inc_min_101;\n      temp_cmp_two_inc_min_102   <= #TCQ temp_cmp_two_inc_min_101;\n      temp_cmp_one_inc_min_102   <= #TCQ temp_cmp_one_inc_min_101;\n      temp_cmp_neutral_min_102   <= #TCQ temp_cmp_neutral_min_101;\n      temp_cmp_one_dec_min_102   <= #TCQ temp_cmp_one_dec_min_101;\n      temp_cmp_two_dec_min_102   <= #TCQ temp_cmp_two_dec_min_101;\n      temp_cmp_three_dec_min_102 <= #TCQ temp_cmp_three_dec_min_101;\n      temp_cmp_four_dec_min_102  <= #TCQ temp_cmp_four_dec_min_101;\n      update_temp_102            <= #TCQ update_temp_101;\n  end",
        "  always @(posedge clk) begin\n    if(rst) begin\n      tempmon_state           <= #TCQ 11'b000_0000_0001;\n      pi_f_inc                <= #TCQ 1'b0;\n      pi_f_dec                <= #TCQ 1'b0;\n      four_inc_max_limit      <= #TCQ 12'b0;\n      three_inc_max_limit     <= #TCQ 12'b0;\n      two_inc_max_limit       <= #TCQ 12'b0;\n      one_inc_max_limit       <= #TCQ 12'b0;\n      neutral_max_limit       <= #TCQ 12'b0;\n      one_dec_max_limit       <= #TCQ 12'b0;\n      two_dec_max_limit       <= #TCQ 12'b0;\n      three_dec_max_limit     <= #TCQ 12'b0;\n      three_inc_min_limit     <= #TCQ 12'b0;\n      two_inc_min_limit       <= #TCQ 12'b0;\n      one_inc_min_limit       <= #TCQ 12'b0;\n      neutral_min_limit       <= #TCQ 12'b0;\n      one_dec_min_limit       <= #TCQ 12'b0;\n      two_dec_min_limit       <= #TCQ 12'b0;\n      three_dec_min_limit     <= #TCQ 12'b0;\n      four_dec_min_limit      <= #TCQ 12'b0;\n      device_temp_init        <= #TCQ 12'b0;\n      tempmon_init_complete   <= #TCQ 1'b0;\n      tempmon_sample_en_101   <= #TCQ 1'b0;\n      tempmon_sample_en_102   <= #TCQ 1'b0;\n      device_temp_101         <= #TCQ 12'b0;\n      device_temp_capture_102 <= #TCQ 12'b0;\n    end\n    else begin\n      tempmon_state           <= #TCQ tempmon_state_nxt;\n      pi_f_inc                <= #TCQ pi_f_inc_nxt;\n      pi_f_dec                <= #TCQ pi_f_dec_nxt;\n      four_inc_max_limit      <= #TCQ four_inc_max_limit_nxt;\n      three_inc_max_limit     <= #TCQ three_inc_max_limit_nxt;\n      two_inc_max_limit       <= #TCQ two_inc_max_limit_nxt;\n      one_inc_max_limit       <= #TCQ one_inc_max_limit_nxt;\n      neutral_max_limit       <= #TCQ neutral_max_limit_nxt;\n      one_dec_max_limit       <= #TCQ one_dec_max_limit_nxt;\n      two_dec_max_limit       <= #TCQ two_dec_max_limit_nxt;\n      three_dec_max_limit     <= #TCQ three_dec_max_limit_nxt;\n      three_inc_min_limit     <= #TCQ three_inc_min_limit_nxt;\n      two_inc_min_limit       <= #TCQ two_inc_min_limit_nxt;\n      one_inc_min_limit       <= #TCQ one_inc_min_limit_nxt;\n      neutral_min_limit       <= #TCQ neutral_min_limit_nxt;\n      one_dec_min_limit       <= #TCQ one_dec_min_limit_nxt;\n      two_dec_min_limit       <= #TCQ two_dec_min_limit_nxt;\n      three_dec_min_limit     <= #TCQ three_dec_min_limit_nxt;\n      four_dec_min_limit      <= #TCQ four_dec_min_limit_nxt;\n      device_temp_init        <= #TCQ device_temp_init_nxt;\n      tempmon_init_complete   <= #TCQ tempmon_init_complete_nxt;\n      tempmon_sample_en_101   <= #TCQ tempmon_sample_en;\n      tempmon_sample_en_102   <= #TCQ tempmon_sample_en_101;\n      device_temp_101         <= #TCQ device_temp_100;\n      device_temp_capture_102 <= #TCQ device_temp_capture_101;\n    end\n  end",
        "  assign tempmon_pi_f_inc = pi_f_inc;\n  assign tempmon_pi_f_dec = pi_f_dec;\n  assign tempmon_sel_pi_incdec = pi_f_inc | pi_f_dec;",
        "always @(*) casez (tempmon_state)\n   IDLE      : tempmon_state_name = \"IDLE\";\n   INIT      : tempmon_state_name = \"INIT\";\n   FOUR_INC  : tempmon_state_name = \"FOUR_INC\";\n   THREE_INC : tempmon_state_name = \"THREE_INC\";\n   TWO_INC   : tempmon_state_name = \"TWO_INC\";\n   ONE_INC   : tempmon_state_name = \"ONE_INC\";\n   NEUTRAL   : tempmon_state_name = \"NEUTRAL\";\n   ONE_DEC   : tempmon_state_name = \"ONE_DEC\";\n   TWO_DEC   : tempmon_state_name = \"TWO_DEC\";\n   THREE_DEC : tempmon_state_name = \"THREE_DEC\";\n   FOUR_DEC  : tempmon_state_name = \"FOUR_DEC\";\n   default   : tempmon_state_name = \"BAD_STATE\";\nendcase",
        "  always @(*) begin\n\n    tempmon_state_nxt = tempmon_state;\n    tempmon_state_init = 1'b0;\n    pi_f_inc_nxt = 1'b0;\n    pi_f_dec_nxt = 1'b0;\n\n    casez (tempmon_state)\n      IDLE: begin\n        if (calib_complete) tempmon_state_nxt = INIT;\n      end\n      INIT: begin\n        tempmon_state_nxt = NEUTRAL;\n        tempmon_state_init = 1'b1;\n      end\n      FOUR_INC: begin\n        if (temp_gte_four_inc_max) begin\n\t  tempmon_state_nxt = THREE_INC;\n          pi_f_dec_nxt = 1'b1;\n        end\n      end\n      THREE_INC: begin\n        if (temp_gte_three_inc_max) begin\n\t  tempmon_state_nxt = TWO_INC;\n          pi_f_dec_nxt = 1'b1;\n        end\n\telse if (temp_lte_three_inc_min) begin\n\t  tempmon_state_nxt = FOUR_INC;\n          pi_f_inc_nxt = 1'b1;\n        end\n      end\n      TWO_INC: begin\n        if (temp_gte_two_inc_max) begin\n\t  tempmon_state_nxt = ONE_INC;\n          pi_f_dec_nxt = 1'b1;\n        end\n\telse if (temp_lte_two_inc_min) begin\n\t  tempmon_state_nxt = THREE_INC;\n          pi_f_inc_nxt = 1'b1;\n        end\n      end\n      ONE_INC: begin\n        if (temp_gte_one_inc_max) begin\n\t  tempmon_state_nxt = NEUTRAL;\n          pi_f_dec_nxt = 1'b1;\n        end\n\telse if (temp_lte_one_inc_min) begin\n\t  tempmon_state_nxt = TWO_INC;\n          pi_f_inc_nxt = 1'b1;\n        end\n      end\n      NEUTRAL: begin\n        if (temp_gte_neutral_max) begin\n\t  tempmon_state_nxt = ONE_DEC;\n          pi_f_dec_nxt = 1'b1;\n        end\n\telse if (temp_lte_neutral_min) begin\n\t  tempmon_state_nxt = ONE_INC;\n          pi_f_inc_nxt = 1'b1;\n        end\n      end\n      ONE_DEC: begin\n        if (temp_gte_one_dec_max) begin\n\t  tempmon_state_nxt = TWO_DEC;\n          pi_f_dec_nxt = 1'b1;\n        end\n\telse if (temp_lte_one_dec_min) begin\n\t  tempmon_state_nxt = NEUTRAL;\n          pi_f_inc_nxt = 1'b1;\n        end\n      end\n      TWO_DEC: begin\n        if (temp_gte_two_dec_max) begin\n\t  tempmon_state_nxt = THREE_DEC;\n          pi_f_dec_nxt = 1'b1;\n        end\n\telse if (temp_lte_two_dec_min) begin\n\t  tempmon_state_nxt = ONE_DEC;\n          pi_f_inc_nxt = 1'b1;\n        end\n      end\n      THREE_DEC: begin\n        if (temp_gte_three_dec_max) begin\n\t  tempmon_state_nxt = FOUR_DEC;\n          pi_f_dec_nxt = 1'b1;\n        end\n\telse if (temp_lte_three_dec_min) begin\n\t  tempmon_state_nxt = TWO_DEC;\n          pi_f_inc_nxt = 1'b1;\n        end\n      end\n      FOUR_DEC: begin\n\tif (temp_lte_four_dec_min) begin\n\t  tempmon_state_nxt = THREE_DEC;\n          pi_f_inc_nxt = 1'b1;\n        end\n      end\n      default: begin\n\t  tempmon_state_nxt = IDLE;\n      end\n    endcase\n\n  end ",
        "  assign tempmon_done_skip = tempmon_done;",
        "  always @ (posedge clk) begin\n    if (rst)\n\t  tempmon_done <= #TCQ 1'b0;\n\telse if ((sample_en_cnt == 'd5) & ((SKIP_CALIB == \"TRUE\")))\n\t  tempmon_done <= #TCQ 1'b1;\n  end",
        "  always @ (posedge clk) begin\n    if (rst)\n\t  sample_en_cnt <= #TCQ 'd0;\n\telse if ((tempmon_sample_en & ~tempmon_sample_en_101) & ((SKIP_CALIB == \"TRUE\")) & (sample_en_cnt < 'd5))\n\t  sample_en_cnt <= #TCQ sample_en_cnt + 1;\n  end",
        "  always @ (posedge clk)\n    calib_complete_r <= #TCQ calib_complete;\n\t"
    ]
}