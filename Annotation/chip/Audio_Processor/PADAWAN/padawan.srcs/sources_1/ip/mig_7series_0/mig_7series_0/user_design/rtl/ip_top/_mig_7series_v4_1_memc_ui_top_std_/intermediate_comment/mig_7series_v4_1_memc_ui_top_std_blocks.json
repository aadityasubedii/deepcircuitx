{
    "line_num": [
        [
            729,
            806
        ],
        [
            430,
            566
        ],
        [
            427,
            428
        ],
        [
            423,
            425
        ]
    ],
    "blocks": [
        "  mig_7series_v4_1_ui_top #\n    (\n     .TCQ                 (TCQ),\n     .APP_DATA_WIDTH      (APP_DATA_WIDTH),\n     .APP_MASK_WIDTH      (APP_MASK_WIDTH),\n     .BANK_WIDTH          (BANK_WIDTH),\n     .COL_WIDTH           (COL_WIDTH),\n     .CWL                 (CWL),\n     .DATA_BUF_ADDR_WIDTH (DATA_BUF_ADDR_WIDTH),\n     .ECC                 (ECC),\n     .ECC_TEST            (ECC_TEST),\n     .nCK_PER_CLK         (nCK_PER_CLK),\n     .ORDERING            (ORDERING),\n     .RANKS               (RANKS),\n     .RANK_WIDTH          (RANK_WIDTH),\n     .ROW_WIDTH           (ROW_WIDTH),\n     .MEM_ADDR_ORDER      (MEM_ADDR_ORDER)\n    )\n   u_ui_top\n     (\n      .wr_data_mask         (wr_data_mask[APP_MASK_WIDTH-1:0]),\n      .wr_data              (wr_data[APP_DATA_WIDTH-1:0]),\n      .use_addr             (use_addr),\n      .size                 (size),\n      .row                  (row),\n      .raw_not_ecc          (raw_not_ecc),\n      .rank                 (rank),\n      .hi_priority          (hi_priority),\n      .data_buf_addr        (data_buf_addr),\n      .col                  (col),\n      .cmd                  (cmd),\n      .bank                 (bank),\n      .app_wdf_rdy          (app_wdf_rdy),\n      .app_rdy              (app_rdy),\n      .app_rd_data_valid    (app_rd_data_valid),\n      .app_rd_data_end      (app_rd_data_end),\n      .app_rd_data          (app_rd_data),\n      .app_ecc_multiple_err (app_ecc_multiple_err),\n      .app_ecc_single_err   (app_ecc_single_err),\n      .correct_en           (correct_en),\n      .wr_data_offset       (wr_data_offset),\n      .wr_data_en           (wr_data_en),\n      .wr_data_addr         (wr_data_addr),\n      .rst                  (reset),\n      .rd_data_offset       (rd_data_offset),\n      .rd_data_end          (rd_data_end),\n      .rd_data_en           (rd_data_en),\n      .rd_data_addr         (rd_data_addr),\n      .rd_data              (rd_data[APP_DATA_WIDTH-1:0]),\n      .ecc_multiple         (ecc_multiple),\n      .ecc_single           (ecc_single),\n      .clk                  (clk),\n      .app_wdf_wren         (app_wdf_wren),\n      .app_wdf_mask         (app_wdf_mask),\n      .app_wdf_end          (app_wdf_end),\n      .app_wdf_data         (app_wdf_data),\n      .app_sz               (1'b1),\n      .app_raw_not_ecc      (app_raw_not_ecc),\n      .app_hi_pri           (app_hi_pri),\n      .app_en               (app_en),\n      .app_cmd              (app_cmd),\n      .app_addr             (app_addr),\n      .accept_ns            (accept_ns),\n      .accept               (accept),\n      .app_correct_en       (app_correct_en_i),\n      .app_sr_req           (app_sr_req),\n      .sr_req               (app_sr_req_i),\n      .sr_active            (app_sr_active_i),\n      .app_sr_active        (app_sr_active),\n      .app_ref_req          (app_ref_req),\n      .ref_req              (app_ref_req_i),\n      .ref_ack              (app_ref_ack_i),\n      .app_ref_ack          (app_ref_ack),\n      .app_zq_req           (app_zq_req),\n      .zq_req               (app_zq_req_i),\n      .zq_ack               (app_zq_ack_i),\n      .app_zq_ack           (app_zq_ack)\n      );",
        "  mig_7series_v4_1_mem_intfc #\n     (\n      .TCQ                   (TCQ),\n      .DDR3_VDD_OP_VOLT      (DDR3_VDD_OP_VOLT),\n      .PAYLOAD_WIDTH         (PAYLOAD_WIDTH),\n      .ADDR_CMD_MODE         (ADDR_CMD_MODE),\n      .AL                    (AL),\n      .BANK_WIDTH            (BANK_WIDTH),\n      .BM_CNT_WIDTH          (BM_CNT_WIDTH),\n      .BURST_MODE            (BURST_MODE),\n      .BURST_TYPE            (BURST_TYPE),\n      .CA_MIRROR             (CA_MIRROR),\n      .CK_WIDTH              (CK_WIDTH),\n      .COL_WIDTH             (COL_WIDTH),\n      .CMD_PIPE_PLUS1        (CMD_PIPE_PLUS1),\n      .CS_WIDTH              (CS_WIDTH),\n      .nCS_PER_RANK          (nCS_PER_RANK),\n      .CKE_WIDTH             (CKE_WIDTH),\n      .DATA_WIDTH            (DATA_WIDTH),\n      .DATA_BUF_ADDR_WIDTH   (DATA_BUF_ADDR_WIDTH),\n      .MASTER_PHY_CTL        (MASTER_PHY_CTL),\n      .DATA_BUF_OFFSET_WIDTH (DATA_BUF_OFFSET_WIDTH),\n      .DDR2_DQSN_ENABLE      (DDR2_DQSN_ENABLE),\n      .DM_WIDTH              (DM_WIDTH),\n      .DQ_CNT_WIDTH          (DQ_CNT_WIDTH),\n      .DQ_WIDTH              (DQ_WIDTH),\n      .DQS_CNT_WIDTH         (DQS_CNT_WIDTH),\n      .DQS_WIDTH             (DQS_WIDTH),\n      .DRAM_TYPE             (DRAM_TYPE),\n      .DRAM_WIDTH            (DRAM_WIDTH),\n      .ECC                   (ECC),\n      .ECC_WIDTH             (ECC_WIDTH),\n      .MC_ERR_ADDR_WIDTH     (MC_ERR_ADDR_WIDTH),\n      .REFCLK_FREQ           (REFCLK_FREQ),\n      .nAL                   (nAL),\n      .nBANK_MACHS           (nBANK_MACHS),\n      .nCK_PER_CLK           (nCK_PER_CLK),\n      .ORDERING              (ORDERING),\n      .OUTPUT_DRV            (OUTPUT_DRV),\n      .IBUF_LPWR_MODE        (IBUF_LPWR_MODE),\n      .BANK_TYPE             (BANK_TYPE),\n      .DATA_IO_PRIM_TYPE     (DATA_IO_PRIM_TYPE),\n      .DATA_IO_IDLE_PWRDWN   (DATA_IO_IDLE_PWRDWN),\n      .IODELAY_GRP           (IODELAY_GRP),\n      .FPGA_SPEED_GRADE      (FPGA_SPEED_GRADE),\n      .REG_CTRL              (REG_CTRL),\n      .RTT_NOM               (RTT_NOM),\n      .RTT_WR                (RTT_WR),\n      .CL                    (CL),\n      .CWL                   (CWL),\n      .tCK                   (tCK),\n      .tCKE                  (tCKE),\n      .tFAW                  (tFAW),\n      .tPRDI                 (tPRDI),\n      .tRAS                  (tRAS),\n      .tRCD                  (tRCD),\n      .tREFI                 (tREFI),\n      .tRFC                  (tRFC),\n      .tRP                   (tRP),\n      .tRRD                  (tRRD),\n      .tRTP                  (tRTP),\n      .tWTR                  (tWTR),\n      .tZQI                  (tZQI),\n      .tZQCS                 (tZQCS),\n      .USER_REFRESH          (USER_REFRESH),\n      .TEMP_MON_EN           (TEMP_MON_EN),\n      .WRLVL                 (WRLVL),\n      .DEBUG_PORT            (DEBUG_PORT),\n      .CAL_WIDTH             (CAL_WIDTH),\n      .RANK_WIDTH            (RANK_WIDTH),\n      .RANKS                 (RANKS),\n      .ODT_WIDTH             (ODT_WIDTH),\n      .ROW_WIDTH             (ROW_WIDTH),\n      .SIM_BYPASS_INIT_CAL   (SIM_BYPASS_INIT_CAL),\n      .BYTE_LANES_B0         (BYTE_LANES_B0),\n      .BYTE_LANES_B1         (BYTE_LANES_B1),\n      .BYTE_LANES_B2         (BYTE_LANES_B2),\n      .BYTE_LANES_B3         (BYTE_LANES_B3),\n      .BYTE_LANES_B4         (BYTE_LANES_B4),\n      .DATA_CTL_B0           (DATA_CTL_B0),\n      .DATA_CTL_B1           (DATA_CTL_B1),\n      .DATA_CTL_B2           (DATA_CTL_B2),\n      .DATA_CTL_B3           (DATA_CTL_B3),\n      .DATA_CTL_B4           (DATA_CTL_B4),\n      .PHY_0_BITLANES        (PHY_0_BITLANES),\n      .PHY_1_BITLANES        (PHY_1_BITLANES),\n      .PHY_2_BITLANES        (PHY_2_BITLANES),\n      .CK_BYTE_MAP           (CK_BYTE_MAP),\n      .ADDR_MAP              (ADDR_MAP),\n      .BANK_MAP              (BANK_MAP),\n      .CAS_MAP               (CAS_MAP),\n      .CKE_ODT_BYTE_MAP      (CKE_ODT_BYTE_MAP),\n      .CKE_MAP               (CKE_MAP),\n      .ODT_MAP               (ODT_MAP),\n      .CKE_ODT_AUX           (CKE_ODT_AUX),\n      .CS_MAP                (CS_MAP),\n      .PARITY_MAP            (PARITY_MAP),\n      .RAS_MAP               (RAS_MAP),\n      .WE_MAP                (WE_MAP),\n      .DQS_BYTE_MAP          (DQS_BYTE_MAP),\n      .DATA0_MAP             (DATA0_MAP),\n      .DATA1_MAP             (DATA1_MAP),\n      .DATA2_MAP             (DATA2_MAP),\n      .DATA3_MAP             (DATA3_MAP),\n      .DATA4_MAP             (DATA4_MAP),\n      .DATA5_MAP             (DATA5_MAP),\n      .DATA6_MAP             (DATA6_MAP),\n      .DATA7_MAP             (DATA7_MAP),\n      .DATA8_MAP             (DATA8_MAP),\n      .DATA9_MAP             (DATA9_MAP),\n      .DATA10_MAP            (DATA10_MAP),\n      .DATA11_MAP            (DATA11_MAP),\n      .DATA12_MAP            (DATA12_MAP),\n      .DATA13_MAP            (DATA13_MAP),\n      .DATA14_MAP            (DATA14_MAP),\n      .DATA15_MAP            (DATA15_MAP),\n      .DATA16_MAP            (DATA16_MAP),\n      .DATA17_MAP            (DATA17_MAP),\n      .MASK0_MAP             (MASK0_MAP),\n      .MASK1_MAP             (MASK1_MAP),\n      .SLOT_0_CONFIG         (SLOT_0_CONFIG),\n      .SLOT_1_CONFIG         (SLOT_1_CONFIG),\n      .CALIB_ROW_ADD         (CALIB_ROW_ADD),\n      .CALIB_COL_ADD         (CALIB_COL_ADD),\n      .CALIB_BA_ADD          (CALIB_BA_ADD),\n      .STARVE_LIMIT          (STARVE_LIMIT),\n      .USE_CS_PORT           (USE_CS_PORT),\n      .USE_DM_PORT           (USE_DM_PORT),\n      .USE_ODT_PORT          (USE_ODT_PORT),\n      .IDELAY_ADJ            (IDELAY_ADJ),\n      .FINE_PER_BIT          (FINE_PER_BIT),\n      .CENTER_COMP_MODE      (CENTER_COMP_MODE),\n      .PI_VAL_ADJ            (PI_VAL_ADJ),\n      .TAPSPERKCLK           (TAPSPERKCLK),\n      .SKIP_CALIB            (SKIP_CALIB),\n      .FPGA_VOLT_TYPE        (FPGA_VOLT_TYPE)\n      )",
        "  assign fi_xor_we = {DQ_WIDTH/8{1'b0}} ;\n  assign fi_xor_wrdata = {DQ_WIDTH{1'b0}} ;",
        "  always @(posedge clk)\n    reset <= #TCQ (rst | rst_tg_mc);\n"
    ]
}