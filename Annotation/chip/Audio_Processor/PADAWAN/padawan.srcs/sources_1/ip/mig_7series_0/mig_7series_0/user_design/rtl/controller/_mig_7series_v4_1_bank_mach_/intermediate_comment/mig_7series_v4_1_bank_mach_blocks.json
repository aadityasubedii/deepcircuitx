{
    "line_num": [
        [
            490,
            594
        ],
        [
            426,
            488
        ],
        [
            296,
            424
        ],
        [
            194,
            200
        ]
    ],
    "blocks": [
        "   mig_7series_v4_1_arb_mux #\n     (\n      \n      .TCQ                              (TCQ),\n      .EVEN_CWL_2T_MODE                 (EVEN_CWL_2T_MODE),\n      .ADDR_CMD_MODE                    (ADDR_CMD_MODE),\n      .BANK_VECT_INDX                   (BANK_VECT_INDX),\n      .BANK_WIDTH                       (BANK_WIDTH),\n      .BURST_MODE                       (BURST_MODE),\n      .CS_WIDTH                         (CS_WIDTH),\n      .CL                               (CL),\n      .CWL                              (CWL),\n      .DATA_BUF_ADDR_VECT_INDX          (DATA_BUF_ADDR_VECT_INDX),\n      .DATA_BUF_ADDR_WIDTH              (DATA_BUF_ADDR_WIDTH),\n      .DRAM_TYPE                        (DRAM_TYPE),\n      .EARLY_WR_DATA_ADDR               (EARLY_WR_DATA_ADDR),\n      .ECC                              (ECC),\n      .nBANK_MACHS                      (nBANK_MACHS),\n      .nCK_PER_CLK                      (nCK_PER_CLK),\n      .nCS_PER_RANK                     (nCS_PER_RANK),\n      .nRAS                             (nRAS),\n      .nRCD                             (nRCD),\n      .CKE_ODT_AUX                      (CKE_ODT_AUX),\n      .nSLOTS                           (nSLOTS),\n      .nWR                              (nWR),\n      .RANKS                            (RANKS),\n      .RANK_VECT_INDX                   (RANK_VECT_INDX),\n      .RANK_WIDTH                       (RANK_WIDTH),\n      .ROW_VECT_INDX                    (ROW_VECT_INDX),\n      .ROW_WIDTH                        (ROW_WIDTH),\n      .RTT_NOM                          (RTT_NOM),\n      .RTT_WR                           (RTT_WR),\n      .SLOT_0_CONFIG                    (SLOT_0_CONFIG),\n      .SLOT_1_CONFIG                    (SLOT_1_CONFIG))\n     arb_mux0\n       (.rts_col                        (rts_col[nBANK_MACHS-1:0]),       \n        \n        \n        .col_a                          (col_a[ROW_WIDTH-1:0]),\n        .col_ba                         (col_ba[BANK_WIDTH-1:0]),\n        .col_data_buf_addr              (col_data_buf_addr[DATA_BUF_ADDR_WIDTH-1:0]),\n        .col_periodic_rd                (col_periodic_rd),\n        .col_ra                         (col_ra[RANK_WIDTH-1:0]),\n        .col_rmw                        (col_rmw),\n        .col_rd_wr                      (col_rd_wr),\n        .col_row                        (col_row[ROW_WIDTH-1:0]),\n        .col_size                       (col_size),\n        .col_wr_data_buf_addr           (col_wr_data_buf_addr[DATA_BUF_ADDR_WIDTH-1:0]),\n        .mc_bank                        (mc_bank),\n        .mc_address                     (mc_address),\n        .mc_ras_n                       (mc_ras_n),\n        .mc_cas_n                       (mc_cas_n),\n        .mc_we_n                        (mc_we_n),\n        .mc_cs_n                        (mc_cs_n),\n        .mc_odt                         (mc_odt),\n        .mc_cke                         (mc_cke),\n        .mc_aux_out0                    (mc_aux_out0),\n        .mc_aux_out1                    (mc_aux_out1),\n        .mc_cmd                         (mc_cmd),\n        .mc_data_offset                 (mc_data_offset),\n        .mc_data_offset_1               (mc_data_offset_1),\n        .mc_data_offset_2               (mc_data_offset_2),\n        .rnk_config                     (rnk_config[RANK_WIDTH-1:0]),\n        .rnk_config_valid_r             (rnk_config_valid_r),\n        .mc_cas_slot                    (mc_cas_slot),\n        .sending_row                    (sending_row[nBANK_MACHS-1:0]),\n        .sending_pre                    (sending_pre[nBANK_MACHS-1:0]),\n        .sent_col                       (sent_col),\n        .sent_col_r                     (sent_col_r),\n        .sent_row                       (sent_row),\n        .sending_col                    (sending_col[nBANK_MACHS-1:0]),\n        .rnk_config_strobe              (rnk_config_strobe),\n        .rnk_config_kill_rts_col        (rnk_config_kill_rts_col),\n        .insert_maint_r1                (insert_maint_r1),\n        \n        .init_calib_complete            (init_calib_complete),\n        .calib_rddata_offset            (calib_rddata_offset),\n        .calib_rddata_offset_1          (calib_rddata_offset_1),\n        .calib_rddata_offset_2          (calib_rddata_offset_2),\n        .col_addr                       (col_addr[ROW_VECT_INDX:0]),\n        .col_rdy_wr                     (col_rdy_wr[nBANK_MACHS-1:0]),\n        .insert_maint_r                 (insert_maint_r),\n        .maint_rank_r                   (maint_rank_r[RANK_WIDTH-1:0]),\n        .maint_zq_r                     (maint_zq_r),\n        .maint_sre_r                    (maint_sre_r),\n        .maint_srx_r                    (maint_srx_r),\n        .rd_wr_r                        (rd_wr_r[nBANK_MACHS-1:0]),\n        .req_bank_r                     (req_bank_r[BANK_VECT_INDX:0]),\n        .req_cas                        (req_cas[nBANK_MACHS-1:0]),\n        .req_data_buf_addr_r            (req_data_buf_addr_r[DATA_BUF_ADDR_VECT_INDX:0]),\n        .req_periodic_rd_r              (req_periodic_rd_r[nBANK_MACHS-1:0]),\n        .req_rank_r                     (req_rank_r[RANK_VECT_INDX:0]),\n        .req_ras                        (req_ras[nBANK_MACHS-1:0]),\n        .req_row_r                      (req_row_r[ROW_VECT_INDX:0]),\n        .req_size_r                     (req_size_r[nBANK_MACHS-1:0]),\n        .req_wr_r                       (req_wr_r[nBANK_MACHS-1:0]),\n        .row_addr                       (row_addr[ROW_VECT_INDX:0]),\n        .row_cmd_wr                     (row_cmd_wr[nBANK_MACHS-1:0]),\n        .rts_row                        (rts_row[nBANK_MACHS-1:0]),\n        .rtc                            (rtc[nBANK_MACHS-1:0]),\n        .rts_pre                        (rts_pre[nBANK_MACHS-1:0]),\n        .slot_0_present                 (slot_0_present[7:0]),\n        .slot_1_present                 (slot_1_present[7:0]),\n        .clk                            (clk),\n        .rst                            (rst));",
        "  mig_7series_v4_1_bank_common #\n    (\n     \n     .TCQ                               (TCQ),\n     .BM_CNT_WIDTH                      (BM_CNT_WIDTH),\n     .LOW_IDLE_CNT                      (LOW_IDLE_CNT),\n     .nBANK_MACHS                       (nBANK_MACHS),\n     .nCK_PER_CLK                       (nCK_PER_CLK),\n     .nOP_WAIT                          (nOP_WAIT),\n     .nRFC                              (nRFC),\n     .nXSDLL                            (nXSDLL),\n     .RANK_WIDTH                        (RANK_WIDTH),\n     .RANKS                             (RANKS),\n     .CWL                               (CWL),\n     .tZQCS                             (tZQCS))\n    bank_common0\n      (.op_exit_grant                     (op_exit_grant[nBANK_MACHS-1:0]),\n       \n       \n       .accept_internal_r               (accept_internal_r),\n       .accept_ns                       (accept_ns),\n       .accept                          (accept),\n       .periodic_rd_insert              (periodic_rd_insert),\n       .periodic_rd_ack_r               (periodic_rd_ack_r),\n       .accept_req                      (accept_req),\n       .rb_hit_busy_cnt                 (rb_hit_busy_cnt[BM_CNT_WIDTH-1:0]),\n       .idle_cnt                        (idle_cnt[BM_CNT_WIDTH-1:0]),\n       .idle                            (idle),\n       .order_cnt                       (order_cnt[BM_CNT_WIDTH-1:0]),\n       .adv_order_q                     (adv_order_q),\n       .bank_mach_next                  (bank_mach_next[BM_CNT_WIDTH-1:0]),\n       .low_idle_cnt_r                  (low_idle_cnt_r),\n       .was_wr                          (was_wr),\n       .was_priority                    (was_priority),\n       .maint_wip_r                     (maint_wip_r),\n       .maint_idle                      (maint_idle),\n       .insert_maint_r                  (insert_maint_r),\n       \n       .clk                             (clk),\n       .rst                             (rst),\n       .idle_ns                         (idle_ns[nBANK_MACHS-1:0]),\n       .init_calib_complete               (init_calib_complete),\n       .periodic_rd_r                   (periodic_rd_r),\n       .use_addr                        (use_addr),\n       .rb_hit_busy_r                   (rb_hit_busy_r[nBANK_MACHS-1:0]),\n       .idle_r                          (idle_r[nBANK_MACHS-1:0]),\n       .ordered_r                       (ordered_r[nBANK_MACHS-1:0]),\n       .ordered_issued                  (ordered_issued[nBANK_MACHS-1:0]),\n       .head_r                          (head_r[nBANK_MACHS-1:0]),\n       .end_rtp                         (end_rtp[nBANK_MACHS-1:0]),\n       .passing_open_bank               (passing_open_bank[nBANK_MACHS-1:0]),\n       .op_exit_req                     (op_exit_req[nBANK_MACHS-1:0]),\n       .start_pre_wait                  (start_pre_wait[nBANK_MACHS-1:0]),\n       .cmd                             (cmd[2:0]),\n       .hi_priority                     (hi_priority),\n       .maint_req_r                     (maint_req_r),\n       .maint_zq_r                      (maint_zq_r),\n       .maint_sre_r                     (maint_sre_r),\n       .maint_srx_r                     (maint_srx_r),\n       .maint_hit                       (maint_hit[nBANK_MACHS-1:0]),\n       .bm_end                          (bm_end[nBANK_MACHS-1:0]),\n       .slot_0_present                  (slot_0_present[7:0]),\n       .slot_1_present                  (slot_1_present[7:0]));",
        "  generate for (ID=0; ID<nBANK_MACHS; ID=ID+1) begin:bank_cntrl\n    mig_7series_v4_1_bank_cntrl #\n      (\n       \n       .TCQ                             (TCQ),\n       .ADDR_CMD_MODE                   (ADDR_CMD_MODE),\n       .BANK_WIDTH                      (BANK_WIDTH),\n       .BM_CNT_WIDTH                    (BM_CNT_WIDTH),\n       .BURST_MODE                      (BURST_MODE),\n       .COL_WIDTH                       (COL_WIDTH),\n       .CWL                             (CWL),\n       .DATA_BUF_ADDR_WIDTH             (DATA_BUF_ADDR_WIDTH),\n       .DRAM_TYPE                       (DRAM_TYPE),\n       .ECC                             (ECC),\n       .ID                              (ID),\n       .nBANK_MACHS                     (nBANK_MACHS),\n       .nCK_PER_CLK                     (nCK_PER_CLK),\n       .nOP_WAIT                        (nOP_WAIT),\n       .nRAS_CLKS                       (nRAS_CLKS),\n       .nRCD                            (nRCD),\n       .nRTP                            (nRTP),\n       .nRP                             (nRP),\n       .nWTP_CLKS                       (nWTP_CLKS),\n       .ORDERING                        (ORDERING),\n       .RANK_WIDTH                      (RANK_WIDTH),\n       .RANKS                           (RANKS),\n       .RAS_TIMER_WIDTH                 (RAS_TIMER_WIDTH),\n       .ROW_WIDTH                       (ROW_WIDTH),\n       .STARVE_LIMIT                    (STARVE_LIMIT))\n      bank0\n        (.demand_priority                 (demand_priority[ID]),\n         .demand_priority_in              ({2{demand_priority}}),\n         .demand_act_priority             (demand_act_priority[ID]),\n         .demand_act_priority_in          ({2{demand_act_priority}}),\n         .rts_row                         (rts_row[ID]),\n         .rts_col                         (rts_col[ID]),\n         .rts_pre                         (rts_pre[ID]),\n         .col_rdy_wr                      (col_rdy_wr[ID]),\n         .rtc                             (rtc[ID]),  \n         .sending_row                     (sending_row[ID]),\n         .sending_pre                     (sending_pre[ID]),\n         .sending_col                     (sending_col[ID]),\n         .req_data_buf_addr_r             (req_data_buf_addr_r[(ID*DATA_BUF_ADDR_WIDTH)+:DATA_BUF_ADDR_WIDTH]),\n         .req_size_r                      (req_size_r[ID]),\n         .req_rank_r                      (req_rank_r[(ID*RANK_WIDTH)+:RANK_WIDTH]),\n         .req_bank_r                      (req_bank_r[(ID*BANK_WIDTH)+:BANK_WIDTH]),\n         .req_row_r                       (req_row_r[(ID*ROW_WIDTH)+:ROW_WIDTH]),\n         .col_addr                        (col_addr[(ID*ROW_WIDTH)+:ROW_WIDTH]),\n         .req_wr_r                        (req_wr_r[ID]),\n         .rd_wr_r                         (rd_wr_r[ID]),\n         .req_periodic_rd_r               (req_periodic_rd_r[ID]),\n         .req_ras                         (req_ras[ID]),\n         .req_cas                         (req_cas[ID]),\n         .row_addr                        (row_addr[(ID*ROW_WIDTH)+:ROW_WIDTH]),\n         .row_cmd_wr                      (row_cmd_wr[ID]),\n         .act_this_rank_r                 (act_this_rank_r[(ID*RANKS)+:RANKS]),\n         .wr_this_rank_r                  (wr_this_rank_r[(ID*RANKS)+:RANKS]),\n         .rd_this_rank_r                  (rd_this_rank_r[(ID*RANKS)+:RANKS]),\n         .idle_ns                         (idle_ns[ID]),\n         .rb_hit_busy_r                   (rb_hit_busy_r[ID]),\n         .bm_end                          (bm_end[ID]),\n         .bm_end_in                       ({2{bm_end}}),\n         .passing_open_bank               (passing_open_bank[ID]),\n         .passing_open_bank_in            ({2{passing_open_bank}}),\n         .ordered_r                       (ordered_r[ID]),\n         .ordered_issued                  (ordered_issued[ID]),\n         .rb_hit_busy_ns                  (rb_hit_busy_ns[ID]),\n         .rb_hit_busy_ns_in               ({2{rb_hit_busy_ns}}),\n         .maint_hit                       (maint_hit[ID]),\n         .req_rank_r_in                   ({2{req_rank_r}}),\n         .idle_r                          (idle_r[ID]),\n         .head_r                          (head_r[ID]),\n         .start_rcd                       (start_rcd[ID]),\n         .start_rcd_in                    ({2{start_rcd}}),\n         .end_rtp                         (end_rtp[ID]),\n         .op_exit_req                     (op_exit_req[ID]),\n         .op_exit_grant                   (op_exit_grant[ID]),\n         .start_pre_wait                  (start_pre_wait[ID]),\n         .ras_timer_ns                    (ras_timer_ns[(ID*RAS_TIMER_WIDTH)+:RAS_TIMER_WIDTH]),\n         .ras_timer_ns_in                 ({2{ras_timer_ns}}),\n         .rank_busy_r                     (rank_busy_r[ID*RANKS+:RANKS]),\n         \n         \n         .accept_internal_r             (accept_internal_r),\n         .accept_req                    (accept_req),\n         .adv_order_q                   (adv_order_q),\n         .bank                          (bank[BANK_WIDTH-1:0]),\n         .clk                           (clk),\n         .cmd                           (cmd[2:0]),\n         .col                           (col[COL_WIDTH-1:0]),\n         .data_buf_addr                 (data_buf_addr[DATA_BUF_ADDR_WIDTH-1:0]),\n         .phy_rddata_valid              (phy_rddata_valid),\n         .dq_busy_data                  (dq_busy_data),\n         .hi_priority                   (hi_priority),\n         .idle_cnt                      (idle_cnt[BM_CNT_WIDTH-1:0]),\n         .inhbt_act_faw_r               (inhbt_act_faw_r[RANKS-1:0]),\n         .inhbt_rd                      (inhbt_rd[RANKS-1:0]),\n         .inhbt_wr                      (inhbt_wr[RANKS-1:0]),\n         .rnk_config                    (rnk_config[RANK_WIDTH-1:0]),\n         .rnk_config_strobe             (rnk_config_strobe),\n         .rnk_config_kill_rts_col       (rnk_config_kill_rts_col),\n         .rnk_config_valid_r            (rnk_config_valid_r),\n         .low_idle_cnt_r                (low_idle_cnt_r),\n         .maint_idle                    (maint_idle),\n         .maint_rank_r                  (maint_rank_r[RANK_WIDTH-1:0]),\n         .maint_req_r                   (maint_req_r),\n         .maint_zq_r                    (maint_zq_r),\n         .maint_sre_r                   (maint_sre_r),\n         .order_cnt                     (order_cnt[BM_CNT_WIDTH-1:0]),\n         .periodic_rd_ack_r             (periodic_rd_ack_r),\n         .periodic_rd_insert            (periodic_rd_insert),\n         .periodic_rd_rank_r            (periodic_rd_rank_r[RANK_WIDTH-1:0]),\n         .phy_mc_cmd_full               (phy_mc_cmd_full),\n         .phy_mc_ctl_full               (phy_mc_ctl_full),\n         .phy_mc_data_full              (phy_mc_data_full),\n         .rank                          (rank[RANK_WIDTH-1:0]),\n         .rb_hit_busy_cnt               (rb_hit_busy_cnt[BM_CNT_WIDTH-1:0]),\n         .rd_data_addr                  (rd_data_addr[DATA_BUF_ADDR_WIDTH-1:0]),\n         .rd_rmw                        (rd_rmw),\n         .row                           (row[ROW_WIDTH-1:0]),\n         .rst                           (rst),\n         .sent_col                      (sent_col),\n         .sent_row                      (sent_row),\n         .size                          (size),\n         .use_addr                      (use_addr),\n         .was_priority                  (was_priority),\n         .was_wr                        (was_wr));\n    end\n  endgenerate",
        "  function integer clogb2 (input integer size); \n    begin\n      size = size - 1;\n      for (clogb2=1; size>1; clogb2=clogb2+1)\n            size = size >> 1;\n    end\n  endfunction "
    ]
}