Line number: 
[431, 446]
Comment: 
This block of Verilog code primarily handles the refresh procedure logic for a dynamic random access memory (DRAM) controller. The entire logic is controlled by several flags and counters including `app_ref_req`, `init_calib_complete`, `my_refresh`, `refresh_bank_r`, and `refresh_tick`. Before the calibration process is complete, the refreshing bank number (`refresh_bank_ns`) depends on the `REFRESH_TIMER_DIV`. If its value is zero, `refresh_bank_ns` gets the masked value `nREFRESH_BANK[0+:REFRESH_BANK_WIDTH]`. Otherwise, it is reset to zero. After calibration, a state machine approach is used, determined by the state of `my_refresh`, `refresh_tick`, and `app_ref_req`. Depending on the state, `refresh_bank_ns` either retains its old value, increments, or decrements.