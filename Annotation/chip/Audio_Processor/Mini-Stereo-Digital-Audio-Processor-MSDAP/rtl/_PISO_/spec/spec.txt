Module name: PISO.

Module specification: The PISO (Parallel-In-Serial-Out) module aims to perform a parallel to serial conversion of a 40-bit data. The module takes five input ports which include a system clock signal (Sclk), an asynchronous clear signal (Clear), a parallel-to-serial enable signal (p2s_en), a frame signal (Frame), and a 40-bit parallel input signal (Shift_done). The system clock (Sclk) triggers all synchronous logic, while the clear signal (Clear) resets all the flip-flops to their initial states. The parallel-to-serial enable signal (p2s_en) drives the loading of the 40-bit data into an internal shift register (register_piso) while the frame signal (Frame) triggers the start of the serial shifting. The module produces two output ports, a bit-wise serial output (SerialOut), and a ready signal (OutReady) to indicate when valid data is available at the output. Internally, a 6-bit register (count_bit) controls the bit-by-bit serial shifting. Two internal flags are used, one to indicate that the shift register is loaded with data (ready_out) and the other to show the start of serial shifting (frame_flag). The operation of the code can be divided into three sections based on the control signals. When the clear signal is high, all state variables are reset. If the parallel-to-serial enable is high, the 40-bit input data is loaded into the shift register. Finally, if the frame signal is high and the shift register is ready, the serial output process starts. When all bits are shifted out, the frame flag is reset to start over the process.