{
    "line_num": [
        [
            338,
            435
        ],
        [
            258,
            337
        ],
        [
            250,
            256
        ],
        [
            147,
            245
        ],
        [
            67,
            145
        ],
        [
            59,
            65
        ]
    ],
    "blocks": [
        "\talways @(negedge Sclk)\n\tbegin\n\t\tif (outR)\n\t\tbegin\n\t\t\tp2sR_en = 1'b1;\n\t\t\trjR_addr = 4'd0;\n\t\t\tcoeffR_addr = 9'd0;\n\t\t\tkR = 8'd0;\n\t\t\toutR = 1'b0;\n\t\tend\n\t\telse\n\t\t\tp2sR_en = 1'b0;\n\t\t\n\t\tif (start_workR == 1'b1)\n\t\tbegin\n\t\t\toutR = 1'b0;\n\t\t\trjR_addr = 4'd0;\n\t\t\trjR_enable = 1'b1;\n\t\t\tcoeffR_addr = 9'd0;\n\t\t\tcoeffR_enable = 1'b1;\n\t\t\tinputR_enable = 1'b0;\n\t\t\tadderR_en = 1'b0;\n\t\t\tshiftR_en = 1'b0;\n\t\t\tkR = 8'd0;\n\t\t\tclearR = 1'b1;\n\t\t\tloadR = 1'b0;\n\t\tend\n\t\telse if (work_statusR == 1'b1)\n\t\tbegin\n\t\t\tif (kR == rjdataR)\n\t\t\tbegin\n\t\t\t\tinputR_enable = 1'b0;\n\t\t\t\tshiftR_en = 1'b1;\n\t\t\t\tclearR = 1'b0;\n\t\t\t\tloadR = 1'b1;\n\t\t\t\tadderR_en = 1'b1;\n\t\t\t\tkR = 8'd0;\n\t\t\t\tif (rjR_addr < 4'd15)\n\t\t\t\tbegin\n\t\t\t\t\trjR_addr = rjR_addr + 1'b1;\n\t\t\t\tend\n\t\t\t\telse\n\t\t\t\tbegin\n\t\t\t\t\trjR_addr = 4'd0;\n\t\t\t\t\toutR = 1'b1;\n\t\t\t\t\tcoeffR_addr = 9'd0;\n\t\t\t\tend\n\t\t\tend\n\t\t\telse\n\t\t\tbegin\n\t\t\t\tshiftR_en = 1'b0;\n\t\t\t\tclearR = 1'b0;\n\t\t\t\tloadR = 1'b0;\n\t\t\t\tinputR_enable = 1'b0;\n\t\t\t\tx_indexR = coeffdataR[7:0];\n\t\t\t\taddsubR = coeffdataR[8];\n\t\t\t\tif (xcntR - 1'b1 >= x_indexR)\n\t\t\t\tbegin\n\t\t\t\t\tinputR_addr = xcntR - 1'b1 - x_indexR;\n\t\t\t\t\tinputR_enable = 1'b1;\n\t\t\t\t\tadderR_en = 1'b1;\n\t\t\t\t\tloadR = 1'b1;\n\t\t\t\tend\n\t\t\t\telse if (xcntR - 1'b1 < x_indexR && memR_overflow == 1'b1)\n\t\t\t\tbegin\n\t\t\t\t\tinputR_addr = xcntR - 1'b1 + (9'd256 - x_indexR);\n\t\t\t\t\tinputR_enable = 1'b1;\n\t\t\t\t\tadderR_en = 1'b1;\n\t\t\t\t\tloadR = 1'b1;\n\t\t\t\tend\n\t\t\t\telse\n\t\t\t\tbegin\n\t\t\t\t\tinputR_addr = inputR_addr;\n\t\t\t\t\tadderR_en = 1'b0;\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\tif (coeffR_addr < 9'h1FF)\n\t\t\t\t\tcoeffR_addr = coeffR_addr + 1'b1;\n\t\t\t\telse\n\t\t\t\t\tcoeffR_addr = coeffR_addr;\n\t\t\t\t\n\t\t\t\tkR = kR + 1'b1;\n\t\t\tend\n\t\tend\n\t\telse\n\t\tbegin\n\t\t\trjR_addr = 4'd0;\n\t\t\trjR_enable = 1'b0;\n\t\t\tcoeffR_addr = 9'd0;\n\t\t\tcoeffR_enable = 1'b0;\n\t\t\tinputR_enable = 1'b0;\n\t\t\tadderR_en = 1'b0;\n\t\t\tshiftR_en = 1'b0;\n\t\t\tkR = 8'd0;\n\t\t\tloadR = 1'b0;\n\t\t\tclearR = 1'b1;\n\t\tend\n\tend",
        "\talways @(negedge Sclk)\n\tbegin\n\t\tcase (present_stateR)\n\t\t\tstart_ini_state:\n\t\t\t\tbegin\n\t\t\t\t\tmemR_overflow <= 1'b0;\n\t\t\t\t\tif (Clear == 1'b1)\n\t\t\t\t\t\tnext_stateR <= start_ini_state;\n\t\t\t\t\telse if (work_enable == 1'b1)\n\t\t\t\t\tbegin\n\t\t\t\t\t\tnext_stateR <= work_state;\n\t\t\t\t\t\txcntR <= 8'd1;\n\t\t\t\t\t\tstart_workR <= 1'b1;\n\t\t\t\t\t\twork_statusR <= 1'b1;\n\t\t\t\t\tend\n\t\t\t\t\telse\n\t\t\t\t\tbegin\n\t\t\t\t\t\tnext_stateR <= start_ini_state;\n\t\t\t\t\t\txcntR <= xcntR;\n\t\t\t\t\t\tstart_workR <= 1'b0;\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\t\n\t\t\twork_state:\n\t\t\t\tbegin\n\t\t\t\t\tif (work_enable == 1'b1)\n\t\t\t\t\tbegin\n\t\t\t\t\t\txcntR <= xcntR + 1'b1;\n\t\t\t\t\t\tstart_workR <= 1'b1;\n\t\t\t\t\t\twork_statusR <= 1'b1;\n\t\t\t\t\t\tif (xcntR == 8'hFF)\n\t\t\t\t\t\t\tmemR_overflow <= 1'b1;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tmemR_overflow <= memR_overflow;\n\t\t\t\t\tend\n\t\t\t\t\telse\n\t\t\t\t\tbegin\n\t\t\t\t\t\tstart_workR <= 1'b0;\n\t\t\t\t\t\tmemR_overflow <= memR_overflow;\n\t\t\t\t\t\tif (rjR_addr == 4'hF && coeffR_addr == 9'h1FF && kR == rjdataR)\n\t\t\t\t\t\t\twork_statusR <= 1'b0;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\twork_statusR <= work_statusR;\n\t\t\t\t\tend\n\t\t\t\t\t\n\t\t\t\t\tif (Clear == 1'b1)\n\t\t\t\t\t\tnext_stateR <= start_ini_state;\n\t\t\t\t\telse\n\t\t\t\t\t\tnext_stateR <= work_state;\n\t\t\t\tend\n\t\t\t\n\t\t\tsleep_state:\n\t\t\t\tbegin\n\t\t\t\t\txcntR <= xcntR;\n\t\t\t\t\tmemR_overflow <= memR_overflow;\n\t\t\t\t\tstart_workR <= 1'b0;\n\t\t\t\t\twork_statusR <= 1'b0;\n\t\t\t\t\tif (Clear == 1'b1)\n\t\t\t\t\t\tnext_stateR <= start_ini_state;\n\t\t\t\t\telse if (sleep_flag == 1'b0)\n\t\t\t\t\tbegin\n\t\t\t\t\t\txcntR <= xcntR + 1'b1;\n\t\t\t\t\t\tstart_workR <= 1'b1;\n\t\t\t\t\t\twork_statusR <= 1'b1;\n\t\t\t\t\t\tif (xcntR == 8'hFF)\n\t\t\t\t\t\t\tmemR_overflow <= 1'b1;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tmemR_overflow <= memR_overflow;\n\t\t\t\t\t\tnext_stateR <= work_state;\n\t\t\t\t\tend\n\t\t\t\t\telse\n\t\t\t\t\t\tnext_stateR <= sleep_state;\n\t\t\t\tend\n\t\t\t\t\n\t\t\tdefault:\n\t\t\t\tbegin\n\t\t\t\tend\n\t\tendcase\n\tend\n\t",
        "\talways @(Clear, next_stateR)\n\tbegin\n\t\tif (Clear == 1'b1)\n\t\t\tpresent_stateR <= start_ini_state;\n\t\telse\n\t\t\tpresent_stateR <= next_stateR;\n\tend",
        "\talways @(negedge Sclk)\n\tbegin\n\t\tif (outL)\n\t\tbegin\n\t\t\tp2sL_en = 1'b1;\n\t\t\trjL_addr = 4'd0;\n\t\t\tcoeffL_addr = 9'd0;\n\t\t\tkL = 8'd0;\n\t\t\toutL = 1'b0;\n\t\t\tclearL = 1'b1;\n\t\tend\n\t\telse\n\t\t\tp2sL_en = 1'b0;\n\t\t\n\t\tif (start_workL == 1'b1)\n\t\tbegin\n\t\t\toutL = 1'b0;\n\t\t\trjL_addr = 4'd0;\n\t\t\trjL_enable = 1'b1;\n\t\t\tcoeffL_addr = 9'd0;\n\t\t\tcoeffL_enable = 1'b1;\n\t\t\tinputL_enable = 1'b0;\n\t\t\tadderL_en = 1'b0;\n\t\t\tshiftL_en = 1'b0;\n\t\t\tkL = 8'd0;\n\t\t\tclearL = 1'b1;\n\t\t\tloadL = 1'b0;\n\t\tend\n\t\telse if (work_statusL == 1'b1)\n\t\tbegin\n\t\t\tif (kL == rjdataL)\n\t\t\tbegin\n\t\t\t\tinputL_enable = 1'b0;\n\t\t\t\tshiftL_en = 1'b1;\n\t\t\t\tclearL = 1'b0;\n\t\t\t\tloadL = 1'b1;\n\t\t\t\tadderL_en = 1'b1;\n\t\t\t\tkL = 8'd0;\n\t\t\t\tif (rjL_addr < 4'd15)\n\t\t\t\tbegin\n\t\t\t\t\trjL_addr = rjL_addr + 1'b1;\n\t\t\t\tend\n\t\t\t\telse\n\t\t\t\tbegin\n\t\t\t\t\trjL_addr = 4'd0;\n\t\t\t\t\toutL = 1'b1;\n\t\t\t\t\tcoeffL_addr = 9'd0;\n\t\t\t\tend\n\t\t\tend\n\t\t\telse\n\t\t\tbegin\n\t\t\t\tshiftL_en = 1'b0;\n\t\t\t\tclearL = 1'b0;\n\t\t\t\tloadL = 1'b0;\n\t\t\t\tinputL_enable = 1'b0;\n\t\t\t\tx_indexL = coeffdataL[7:0];\n\t\t\t\taddsubL = coeffdataL[8];\n\t\t\t\tif (xcntL - 1'b1 >= x_indexL)\n\t\t\t\tbegin\n\t\t\t\t\tinputL_addr = xcntL - 1'b1 - x_indexL;\n\t\t\t\t\tinputL_enable = 1'b1;\n\t\t\t\t\tadderL_en = 1'b1;\n\t\t\t\t\tloadL = 1'b1;\n\t\t\t\tend\n\t\t\t\telse if (xcntL - 1'b1 < x_indexL && memL_overflow == 1'b1)\n\t\t\t\tbegin\n\t\t\t\t\tinputL_addr = xcntL - 1'b1 + (9'd256 - x_indexL);\n\t\t\t\t\tinputL_enable = 1'b1;\n\t\t\t\t\tadderL_en = 1'b1;\n\t\t\t\t\tloadL = 1'b1;\n\t\t\t\tend\n\t\t\t\telse\n\t\t\t\tbegin\n\t\t\t\t\tinputL_addr = inputL_addr;\n\t\t\t\t\tadderL_en = 1'b0;\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\tif (coeffL_addr < 9'h1FF)\n\t\t\t\t\tcoeffL_addr = coeffL_addr + 1'b1;\n\t\t\t\telse\n\t\t\t\t\tcoeffL_addr = coeffL_addr;\n\t\t\t\t\n\t\t\t\tkL = kL + 1'b1;\n\t\t\tend\n\t\tend\n\t\telse\n\t\tbegin\n\t\t\trjL_addr = 4'd0;\n\t\t\trjL_enable = 1'b0;\n\t\t\tcoeffL_addr = 9'd0;\n\t\t\tcoeffL_enable = 1'b0;\n\t\t\tinputL_enable = 1'b0;\n\t\t\tadderL_en = 1'b0;\n\t\t\tshiftL_en = 1'b0;\n\t\t\tkL = 8'd0;\n\t\t\tloadL = 1'b0;\n\t\t\tclearL = 1'b1;\n\t\tend\n\tend",
        "\talways @(negedge Sclk)\n\tbegin\n\t\tcase (present_stateL)\n\t\t\tstart_ini_state:\n\t\t\t\tbegin\n\t\t\t\t\tmemL_overflow <= 1'b0;\n\t\t\t\t\tif (Clear == 1'b1)\n\t\t\t\t\t\tnext_stateL <= start_ini_state;\n\t\t\t\t\telse if (work_enable == 1'b1)\n\t\t\t\t\tbegin\n\t\t\t\t\t\tnext_stateL <= work_state;\n\t\t\t\t\t\txcntL <= 8'd1;\n\t\t\t\t\t\tstart_workL <= 1'b1;\n\t\t\t\t\t\twork_statusL <= 1'b1;\n\t\t\t\t\tend\n\t\t\t\t\telse\n\t\t\t\t\tbegin\n\t\t\t\t\t\tnext_stateL <= start_ini_state;\n\t\t\t\t\t\txcntL <= xcntL;\n\t\t\t\t\t\tstart_workL <= 1'b0;\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\t\n\t\t\twork_state:\n\t\t\t\tbegin\n\t\t\t\t\tif (work_enable == 1'b1)\n\t\t\t\t\tbegin\n\t\t\t\t\t\txcntL <= xcntL + 1'b1;\n\t\t\t\t\t\tstart_workL <= 1'b1;\n\t\t\t\t\t\twork_statusL <= 1'b1;\n\t\t\t\t\t\tif (xcntL == 8'hFF)\n\t\t\t\t\t\t\tmemL_overflow <= 1'b1;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tmemL_overflow <= memL_overflow;\n\t\t\t\t\tend\n\t\t\t\t\telse\n\t\t\t\t\tbegin\n\t\t\t\t\t\tstart_workL <= 1'b0;\n\t\t\t\t\t\tmemL_overflow <= memL_overflow;\n\t\t\t\t\t\tif (rjL_addr == 4'hF && coeffL_addr == 9'h1FF && kL == rjdataL)\n\t\t\t\t\t\t\twork_statusL <= 1'b0;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\twork_statusL <= work_statusL;\n\t\t\t\t\tend\n\t\t\t\t\t\n\t\t\t\t\tif (Clear == 1'b1)\n\t\t\t\t\t\tnext_stateL <= start_ini_state;\n\t\t\t\t\telse if (sleep_flag == 1'b1)\n\t\t\t\t\t\tnext_stateL <= sleep_state;\n\t\t\t\t\telse\n\t\t\t\t\t\tnext_stateL <= work_state;\n\t\t\t\tend\n\t\t\t\n\t\t\tsleep_state:\n\t\t\t\tbegin\n\t\t\t\t\txcntL <= xcntL;\n\t\t\t\t\tmemL_overflow <= memL_overflow;\n\t\t\t\t\tstart_workL <= 1'b0;\n\t\t\t\t\twork_statusL <= 1'b0;\n\t\t\t\t\tif (Clear == 1'b1)\n\t\t\t\t\t\tnext_stateL <= start_ini_state;\n\t\t\t\t\telse if (sleep_flag == 1'b0)\n\t\t\t\t\tbegin\n\t\t\t\t\t\txcntL <= xcntL + 1'b1;\n\t\t\t\t\t\tstart_workL <= 1'b1;\n\t\t\t\t\t\twork_statusL <= 1'b1;\n\t\t\t\t\t\tif (xcntL == 8'hFF)\n\t\t\t\t\t\t\tmemL_overflow <= 1'b1;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tmemL_overflow <= memL_overflow;\n\t\t\t\t\t\tnext_stateL <= work_state;\n\t\t\t\t\tend\n\t\t\t\t\telse\n\t\t\t\t\t\tnext_stateL <= sleep_state;\n\t\t\t\tend\n\t\t\t\t\n\t\t\tdefault:\tnext_stateL <= start_ini_state;\n\t\tendcase\n\tend",
        "\talways @(Clear, next_stateL)\n\tbegin\n\t\tif (Clear == 1'b1)\n\t\t\tpresent_stateL <= start_ini_state;\n\t\telse\n\t\t\tpresent_stateL <= next_stateL;\n\tend"
    ]
}