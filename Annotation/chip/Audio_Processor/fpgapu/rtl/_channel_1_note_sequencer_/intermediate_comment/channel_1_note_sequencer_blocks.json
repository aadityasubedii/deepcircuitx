{
    "line_num": [
        [
            214,
            214
        ],
        [
            199,
            212
        ],
        [
            184,
            196
        ],
        [
            180,
            182
        ],
        [
            170,
            178
        ],
        [
            145,
            168
        ],
        [
            142,
            144
        ],
        [
            126,
            141
        ],
        [
            117,
            119
        ],
        [
            115,
            120
        ],
        [
            92,
            113
        ],
        [
            77,
            89
        ],
        [
            48,
            74
        ],
        [
            46,
            46
        ],
        [
            28,
            45
        ]
    ],
    "blocks": [
        "  assign o_phase_delta = w_phase_delta + r_vibrato_adjust;",
        "  always @(posedge i_clk) begin\n    case (r_vibrato_adjust_index)\n      3'd00: r_vibrato_adjust <= 0;\n      3'd01: r_vibrato_adjust <= -r_vibrato_depth_1;\n      3'd02: r_vibrato_adjust <= -r_vibrato_depth_2;\n      3'd03: r_vibrato_adjust <= -r_vibrato_depth_1;\n      3'd04: r_vibrato_adjust <= 0;\n      3'd05: r_vibrato_adjust <= r_vibrato_depth_1;\n      3'd06: r_vibrato_adjust <= r_vibrato_depth_2;\n      3'd07: r_vibrato_adjust <= r_vibrato_depth_1;\n\n      default: r_vibrato_adjust <= 0;\n    endcase\n  end",
        "  always @(posedge i_clk) begin\n    if (i_rst) begin\n      r_vibrato_adjust_index <= 0;\n    end else if (r_new_vibrato) begin\n      r_vibrato_adjust_index <= 0;\n    end else if (i_tick_stb) begin\n      if (r_vibrato_adjust_index == 3'd07) begin\n        r_vibrato_adjust_index <= 0;\n      end else begin\n        r_vibrato_adjust_index <= r_vibrato_adjust_index + 1;\n      end\n    end\n  end",
        "  wire [31:0] r_vibrato_depth_1 = r_vibrato_depths[63:32];\n  wire [31:0] r_vibrato_depth_2 = r_vibrato_depths[31:0];\n",
        "  wire [63:0] r_vibrato_depths;\n  rom_async #(\n    .WIDTH(64),\n    .DEPTH(8),\n    .FILE(VIBRATO_TABLE_FILE)\n  ) vibrato_table (\n    .addr(r_vibrato_depth),\n    .data(r_vibrato_depths)\n  );",
        "  always @(*) begin\n    case (r_vibrato_index)\n      4'd00: begin r_vibrato_depth = 3'd0;  r_vibrato_len = note_len(30); end\n\n      4'd01: begin r_vibrato_depth = 3'd0;  r_vibrato_len = note_len(7); end\n      4'd02: begin r_vibrato_depth = 3'd1;  r_vibrato_len = note_len(11); end\n      4'd03: begin r_vibrato_depth = 3'd0;  r_vibrato_len = note_len(12); end\n\n      4'd04: begin r_vibrato_depth = 3'd0;  r_vibrato_len = note_len(13); end\n      4'd05: begin r_vibrato_depth = 3'd2;  r_vibrato_len = note_len(9); end\n      4'd06: begin r_vibrato_depth = 3'd0;  r_vibrato_len = note_len(8); end\n\n      4'd07: begin r_vibrato_depth = 3'd0;  r_vibrato_len = note_len(30); end\n\n      4'd08: begin r_vibrato_depth = 3'd0;  r_vibrato_len = note_len(7); end\n      4'd09: begin r_vibrato_depth = 3'd3;  r_vibrato_len = note_len(17); end\n      4'd10: begin r_vibrato_depth = 3'd0;  r_vibrato_len = note_len(6); end\n\n      4'd11: begin r_vibrato_depth = 3'd0;  r_vibrato_len = note_len(14); end\n      4'd12: begin r_vibrato_depth = 3'd4;  r_vibrato_len = note_len(16); end\n\n      default: begin r_vibrato_depth = 0;  r_vibrato_len = note_len(30); end\n    endcase\n  end",
        "  wire r_new_vibrato = i_note_stb & (r_vibrato_len_count == r_vibrato_len);\n\n  reg [2:0] r_vibrato_depth = 0;",
        "  always @(posedge i_clk) begin\n    if (i_rst) begin\n      r_vibrato_index <= 0;\n      r_vibrato_len_count <= 0;\n    end else if (i_note_stb) begin\n      if (r_vibrato_len_count == r_vibrato_len) begin\n        r_vibrato_len_count <= 0;\n        r_vibrato_index <= r_vibrato_index + 1;\n        if (r_vibrato_index == 4'd12) begin\n          r_vibrato_index <= 0;\n        end\n      end else begin\n        r_vibrato_len_count <= r_vibrato_len_count + 1;\n      end\n    end\n  end",
        "  wire [31:0] w_phase_delta;\n  note_table #(.FILE(NOTE_TABLE_FILE)) note_table\n    (.i_note(r_note), .o_compare(w_phase_delta));",
        "  assign o_top = 8'hff;\n  assign o_top_valid = 1;\n  wire [31:0] w_phase_delta;\n  note_table #(.FILE(NOTE_TABLE_FILE)) note_table\n    (.i_note(r_note), .o_compare(w_phase_delta));\n  assign o_envelope = r_envelope;",
        "  always @(*) begin\n    case (r_envelope_index)\n      4'd00: r_envelope = 3*2;\n      4'd01: r_envelope = 4*2;\n      4'd02: r_envelope = 6*2;\n      4'd03: r_envelope = 7*2;\n      4'd04: r_envelope = 8*2;\n      4'd05: r_envelope = 9*2;\n      4'd06: r_envelope = 10*2;\n      4'd07: r_envelope = 10*2;\n      4'd08: r_envelope = 10*2;\n      4'd09: r_envelope = 11*2;\n      4'd10: r_envelope = 12*2;\n      4'd11: r_envelope = 12*2;\n      4'd12: r_envelope = 13*2;\n      4'd13: r_envelope = 15*2;\n      4'd14: r_envelope = 15*2;\n      4'd15: r_envelope = 15*2;\n\n      default: r_envelope = 0;\n    endcase\n  end",
        "  always @(posedge i_clk) begin\n    if (i_rst) begin\n      r_envelope_index <= 0;\n    end else if (r_new_note) begin\n      r_envelope_index <= 0;\n    end else if (i_tick_stb) begin\n      if (r_envelope_index == 4'd15) begin\n        r_envelope_index <= 4'd15;\n      end else begin\n        r_envelope_index <= r_envelope_index + 1;\n      end\n    end\n  end",
        "  always @(*) begin\n    case (r_note_index)\n      4'd00: begin r_note = `NOTE_RST;  r_note_len = note_len(30); end\n\n      4'd01: begin r_note = `NOTE_Cs5;  r_note_len = note_len(18); end\n      4'd02: begin r_note = `NOTE_Fs5;  r_note_len = note_len(4); end\n      4'd03: begin r_note = `NOTE_Gs5;  r_note_len = note_len(4); end\n      4'd04: begin r_note = `NOTE_B5;   r_note_len = note_len(4); end\n\n      4'd05: begin r_note = `NOTE_B5; r_note_len = note_len(6); end\n      4'd06: begin r_note = `NOTE_As5; r_note_len = note_len(2); end\n      4'd07: begin r_note = `NOTE_As5; r_note_len = note_len(14); end\n      4'd08: begin r_note = `NOTE_Gs5; r_note_len = note_len(4); end\n      4'd09: begin r_note = `NOTE_Fs5; r_note_len = note_len(4); end\n\n      4'd10: begin r_note = `NOTE_Cs6; r_note_len = note_len(12); end\n      4'd11: begin r_note = `NOTE_Fs5; r_note_len = note_len(12); end\n      4'd12: begin r_note = `NOTE_Fs6; r_note_len = note_len(30); end\n\n      4'd13: begin r_note = `NOTE_Gs6; r_note_len = note_len(4); end\n      4'd14: begin r_note = `NOTE_Fs6; r_note_len = note_len(2); end\n\n      4'd15: begin r_note = `NOTE_Cs7; r_note_len = note_len(30); end\n\n      default: begin r_note = `NOTE_RST;   r_note_len = note_len(4); end\n    endcase\n  end",
        "  wire r_new_note = i_note_stb & (r_duration_count == r_note_len);",
        "  always @(posedge i_clk) begin\n    if (i_rst) begin\n      r_note_index <= 0;\n      r_duration_count <= 0;\n    end else if (i_note_stb) begin\n      if (r_duration_count == r_note_len) begin\n        r_duration_count <= 0;\n        r_note_index <= r_note_index + 1;\n        if (r_note_index == 4'd15) begin\n          r_note_index <= 0;\n        end\n        \n      end else begin\n        r_duration_count <= r_duration_count + 1;\n        \n      end\n    end\n  end"
    ]
}