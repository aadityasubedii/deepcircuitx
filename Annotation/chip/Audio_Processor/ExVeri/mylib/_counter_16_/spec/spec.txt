Module name: counter_16. 

Module specification: 

The `counter_16` is a module written in Verilog, implementing a simple 16-bit synchronous up counter with enable and reset functions. The counter increments its value on the rising edge of the input signal `clock` whenever the input `enable` is high (1), and it resets its value to 0 whenever the input `reset` is high (1), irrespective of the `clock` and `enable` signals. 

The module has three input ports: `clock`, `enable`, and `reset`. The `clock` is the timing source for the counter, the `enable` controls whether the counter increments or not, and the `reset` sets the counter value to its initial state (0). The module output port is `count`, which represents the current value of the counter. 

There's one internal 16-bit register signal named `count` used to store the counter's value. This internal signal gets incremented by one or reset to zero based on the control signals (`enable` and `reset`) and the clock signal (`clock`). 

The Verilog module can be divided into different blocks. The first is the parameter and port declarations, followed by the initialization of the `count` signal to 0. The core functionality of the counter is then implemented in the procedural block using an `always` block, which encompasses the condition checks for `reset` and `enable` signals, and the respective operations they control on the `count` signal.