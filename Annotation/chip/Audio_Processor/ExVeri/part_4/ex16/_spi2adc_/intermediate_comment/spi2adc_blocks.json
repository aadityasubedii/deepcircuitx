{
    "line_num": [
        [
            147,
            150
        ],
        [
            142,
            146
        ],
        [
            137,
            140
        ],
        [
            132,
            135
        ],
        [
            97,
            128
        ],
        [
            92,
            95
        ],
        [
            66,
            82
        ],
        [
            61,
            64
        ],
        [
            45,
            52
        ],
        [
            40,
            43
        ]
    ],
    "blocks": [
        "\t\tassign adc_sck = !clk_1MHz & !adc_cs;\n\t\tassign sdata_to_adc = adc_din;\n\t\tassign data_valid = adc_cs;\nendmodule",
        "\talways @(posedge clk_1MHz)\n\t\tif(adc_done) \t\t\t\t\t\n\t\t\t\tdata_from_adc = shift_reg;\n\n\t",
        "\talways @(negedge clk_1MHz)\n\t\tif((adc_cs==1'b0)&&(shift_ena==1'b1))\t\t\n\t\t\t\tshift_reg <= {shift_reg[8:0],sdata_from_adc};\n\t",
        "\tinitial\tbegin\n\t\t\tshift_reg = 10'b0;\n\t\t\tdata_from_adc = 10'b0;\n\t\t\tend",
        "\talways @(posedge clk_1MHz)  begin\n\t\n\t\n\t\tadc_cs <= 1'b0;  adc_done <= 1'b0;  adc_din <= 1'b0; shift_ena <= 1'b0;\n\t\tstate <= state + 1'b1;\n\t\tcase (state)\n\t\t\t5'd0:\tbegin\n\t\t\t\t\t\tif (adc_start==1'b0) begin\n\t\t\t\t\t\t\tstate <= 5'd0;\t\t\t\n\t\t\t\t\t\t\tadc_cs <= 1'b1;\t\t\n\t\t\t\t\t\t\tend\n\t\t\t\t\t\telse begin\n\t\t\t\t\t\t\tstate <= 5'd1;\t\t\t\n\t\t\t\t\t\t\tadc_din <= 1'b1;\t\t\n\t\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t5'd1:\tadc_din <= SGL;\t\t\t\t\n\t\t\t5'd2:\tadc_din <= channel;\t\t\t\n\t\t\t5'd3:\tadc_din <= MSBF;\t\t\t\t\n\t\t\t5'd4: shift_ena <= 1'b1;  \t\t\t\n\t\t\t5'd15: begin\n\t\t\t\t\t\tshift_ena <= 1'b0;\n\t\t\t\t\t\tadc_done <= 1'b1;\n\t\t\t\t\t end\n\t\t\t5'd16: begin  \n\t\t\t\t\t\tadc_cs <= 1'b1;\t\t\n\t\t\t\t\t\tstate <= 5'd0;  \t\t\n\t\t\t\t\t end\n\t\t\tdefault: \t\t\t\t\n\t\t\t\t\t\tshift_ena <= 1'b1;\t\n\t\t\tendcase\n\t\tend\t",
        "\tinitial\tbegin\t\n\t\tstate = 5'b0; adc_cs = 1'b1; adc_done = 1'b0; \n\t\tadc_din = 1'b0; shift_ena <= 1'b0;\n\t\tend",
        "\talways @ (posedge sysclk)\n\t\tcase (sr_state)\n\t\t\tIDLE:\tif (start==1'b0) sr_state <= IDLE;\n\t\t\t\t\telse\tbegin\n\t\t\t\t\t\tsr_state <= WAIT_CSB_FALL;\n\t\t\t\t\t\tadc_start <= 1'b1;\n\t\t\t\t\t\tend  \t\t\t\t\n\t\t\tWAIT_CSB_FALL: if (adc_cs==1'b1) sr_state <= WAIT_CSB_FALL;\n\t\t\t\t\telse sr_state <= WAIT_CSB_HIGH;\n\t\t\t\t\t\n\t\t\tWAIT_CSB_HIGH: if (adc_cs==1'b0) sr_state <= WAIT_CSB_HIGH;\n\t\t\t\t\telse begin\n\t\t\t\t\t\tsr_state <= IDLE;\n\t\t\t\t\t\tadc_start <= 1'b0;\n\t\t\t\t\t\tend\t\n\t\t\tdefault: sr_state <= IDLE;\n\t\tendcase",
        "\tinitial begin\n\t\tsr_state = IDLE;\n\t\tadc_start = 1'b0;\t\n\t\tend",
        "\talways @ (posedge sysclk)   \n\t  if (ctr==0) begin\n\t\t  ctr <= TIME_CONSTANT;\n\t\t  clk_1MHz <= ~clk_1MHz; \n\t\tend\n\t  else\n\t\t  ctr <= ctr - 1'b1;\n",
        "\tinitial begin\n\t\tclk_1MHz = 0;\t\t\t\n\t\tctr = 5'b0;\t\t\t\t\n\tend"
    ]
}