{
    "line_num": [
        [
            140,
            140
        ],
        [
            139,
            139
        ],
        [
            135,
            137
        ],
        [
            133,
            133
        ],
        [
            125,
            129
        ],
        [
            98,
            118
        ],
        [
            74,
            96
        ],
        [
            38,
            38
        ],
        [
            26,
            28
        ]
    ],
    "blocks": [
        "    assign locked = 1;",
        "    assign clock_out = divide;",
        "    always @(posedge clock_in) begin\n        divide <= !divide;\n    end",
        "    reg divide = 0;",
        "module pll(\n    input wire clock_in,\n    output wire clock_out,\n    output wire locked\n);",
        "    assign r = divider[24];\n    assign g = divider[25];\n    assign b = divider[26];\n    \n    \n    \n\n    assign p0  = 0;\n    assign p1  = 0;\n\n    assign p5  = spi_sck;\n    assign p6  = spi_cs;\n    assign p9  = spi_mosi;\n\n    assign p10 = divider[7];\n    assign p11 = o_ws;\n    assign p12 = 0;\n    assign p13 = 0;\n\n    assign spi_miso = btn;\n",
        "    dsp #(.PLL_HZ(24000000)) dsp (\n        .ext_ck(ext_ck),\n        .tx(tx),\n        .spi_sck(spi_sck),\n        .spi_cs(spi_cs),\n        .spi_mosi(spi_mosi),\n        .spi_miso(spi_miso),\n        .test(test),\n        .led_ck(led_ck),\n        .led_data(led_data),\n        .sck(sck),\n        .ws(ws),\n        .sd_in0(sd_in0),\n        .sd_in1(sd_in1),\n        .sd_in2(sd_in2),\n        .sd_in3(sd_in3),\n        .o_sck(o_sck),\n        .o_ws(o_ws),\n        .o_sd(o_sd),\n        .ext_sck(ext_sck),\n        .ext_ws(ext_ws),\n        .ext_sd(ext_sd)\n    );",
        "    assign ext_ck = clk;",
        "    always @(posedge clk) begin\n        divider <= divider + 1;\n    end"
    ]
}