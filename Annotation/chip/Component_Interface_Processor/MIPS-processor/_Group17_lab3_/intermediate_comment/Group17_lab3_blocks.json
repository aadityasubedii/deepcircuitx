{
    "line_num": [
        [
            130,
            142
        ],
        [
            92,
            128
        ],
        [
            22,
            63
        ],
        [
            13,
            15
        ],
        [
            11,
            13
        ],
        [
            9,
            11
        ]
    ],
    "blocks": [
        "\tassign Out0= out0;\t\t\n\tassign Out1= out1;\n\tassign Out2= out2;\n\tassign Out3= out3;\n\tassign Out4= out4;\n\tassign Out5Active= out5Active;\n\tassign Out5A= out5A;\n\tassign Out5B= out5B;\n\tassign Out5C= out5C;\n\tassign Out6= out6;\n\tassign Out7= out7;\n\tassign Out8= out8;\n\t",
        "always @(posedge clock)\nbegin\n\n\tcase ({s0,s1,s2,s3})\n\t\n\t\t\t\n\t\t\t4 'b0000 :  begin  out0 = 1;  out1 = 0;  out2 = 0;  out3 = 0; out4 = 0; out5Active = 1; out5A = s1; out5B = s2; out5C = s3; out6 = 0;  out7 = 0; out8 = 1; end \n\t\t\t\n\t\t\t4 'b0001 :  begin  out0 = 1;  out1 = 0;  out2 = 0;  out3 = 0; out4 = 0; out5Active = 1; out5A = s1; out5B = s2; out5C = s3; out6 = 0;  out7 = 0; out8 = 1; end\n\t\t\t\n\t\t\t4 'b0010 :  begin  out0 = 1;  out1 = 0;  out2 = 0;  out3 = 0; out4 = 0; out5Active = 1; out5A = s1; out5B = s2; out5C = s3; out6 = 0;  out7 = 0; out8 = 1; end\n\t\t\t\n\t\t\t4 'b0011 :  begin  out0 = 1;  out1 = 0;  out2 = 0;  out3 = 0; out4 = 0; out5Active = 1; out5A = s1; out5B = s2; out5C = s3; out6 = 0;  out7 = 0; out8 = 1; end\n\t\t\t\n\t\t\t4 'b0100 :  begin  out0 = 1;  out1 = 0;  out2 = 0;  out3 = 0; out4 = 0; out5Active = 1; out5A = s1; out5B = s2; out5C = s3; out6 = 0;  out7 = 0; out8 = 1; end\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t4 'b0101 :  begin  out0 = 0;  out1 = 0;  out2 = 0;  out3 = 1; out4 = 1; out5Active = 1; out5A = 1; out5B = 0; out5C = 1;  out6 = 0;  out7 = 1; out8 = 1; end\n\t\t\t\n\t\t\t4 'b0110 :  begin  out0 = 0;  out1 = 0;  out2 = 0;  out3 = 0; out4 = 0; out5Active = 1; out5A = 1; out5B = 0; out5C = 1;  out6 = 1;  out7 = 1; out8 = 0; end\n\t\t\t\n\t\t\t4 'b0111 :  begin  out0 = 1;  out1 = 0;  out2 = 1;  out3 = 0; out4 = 0; out5Active = 1; out5A = 0; out5B = 0; out5C = 1;  out6 = 0;  out7 = 0; out8 = 0; end\n\t\t\t\n\t\t\t4 'b1000 :  begin  out0 = 0;  out1 = 1;  out2 = 0;  out3 = 0; out4 = 0; out5Active = 0; out5A = 0; out5B = 0; out5C = 0;  out6 = 0;  out7 = 0; out8 = 0; end\n\t\t\t\n\t\t\t4 'b1001 :  begin  out0 = 1;  out1 = 0;  out2 = 0;  out3 = 0; out4 = 0; out5Active = 1; out5A = 1; out5B = 0; out5C = 1; out6 = 0;  out7 = 0; out8 = 1; end \n\t\t\t\n\t\tendcase\nend",
        "\tinitial\n\tbegin\n\t\t\n\t\t#5 s0=0; s1=0; s2=0; s3=0;\n\t\t#1 $display(\"Test ADD S0=%b, S1=%b, S2=%b, S3=%b, Destination=%b, Jump=%b, Branch=%b, Memory read=%b, Memory write to register=%b, activation ALU=%b, ALUop=%b, ALUop=%b, ALUop=%b, Memory write=%b, ALU source=%b, Register write=%b\\n\\n\",s0,s1,s2,s3,Out0,Out1,Out2,Out3,Out4,Out5Active,Out5A,Out5B,Out5C,Out6,Out7,Out8);\n\t\t\n\t\t\n\t\t#9 s0=0; s1=0; s2=0; s3=1;\n\t\t#1 $display(\"Test SUB S0=%b, S1=%b, S2=%b, S3=%b, Destination=%b, Jump=%b, Branch=%b, Memory read=%b, Memory write to register=%b, activation ALU=%b, ALUop=%b, ALUop=%b, ALUop=%b, Memory write=%b, ALU source=%b, Register write=%b\\n\\n\",s0,s1,s2,s3,Out0,Out1,Out2,Out3,Out4,Out5Active,Out5A,Out5B,Out5C,Out6,Out7,Out8);\n\t\t\n\t\t\n\t\t#9 s0=0; s1=0; s2=1; s3=0;\n\t\t#1 $display(\"Test AND S0=%b, S1=%b, S2=%b, S3=%b, Destination=%b, Jump=%b, Branch=%b, Memory read=%b, Memory write to register=%b, activation ALU=%b, ALUop=%b, ALUop=%b, ALUop=%b, Memory write=%b, ALU source=%b, Register write=%b\\n\\n\",s0,s1,s2,s3,Out0,Out1,Out2,Out3,Out4,Out5Active,Out5A,Out5B,Out5C,Out6,Out7,Out8);\n\t\t\n\t\t\n\t\t#9 s0=0; s1=0; s2=1; s3=1;\n\t\t#1 $display(\"Test OR S0=%b, S1=%b, S2=%b, S3=%b, Destination=%b, Jump=%b, Branch=%b, Memory read=%b, Memory write to register=%b, activation ALU=%b, ALUop=%b, ALUop=%b, ALUop=%b, Memory write=%b, ALU source=%b, Register write=%b\\n\\n\",s0,s1,s2,s3,Out0,Out1,Out2,Out3,Out4,Out5Active,Out5A,Out5B,Out5C,Out6,Out7,Out8);\n\t\t\n\t\t\n\t\t#9 s0=0; s1=1; s2=0; s3=0;\n\t\t#1 $display(\"Test SLT S0=%b, S1=%b, S2=%b, S3=%b, Destination=%b, Jump=%b, Branch=%b, Memory read=%b, Memory write to register=%b, activation ALU=%b, ALUop=%b, ALUop=%b, ALUop=%b, Memory write=%b, ALU source=%b, Register write=%b\\n\\n\",s0,s1,s2,s3,Out0,Out1,Out2,Out3,Out4,Out5Active,Out5A,Out5B,Out5C,Out6,Out7,Out8);\n\t\t\n\t\t\n\t\t#9 s0=0; s1=1; s2=0; s3=1;\n\t\t#1 $display(\"Test LW S0=%b, S1=%b, S2=%b, S3=%b, Destination=%b, Jump=%b, Branch=%b, Memory read=%b, Memory write to register=%b, activation ALU=%b, ALUop=%b, ALUop=%b, ALUop=%b, Memory write=%b, ALU source=%b, Register write=%b\\n\\n\",s0,s1,s2,s3,Out0,Out1,Out2,Out3,Out4,Out5Active,Out5A,Out5B,Out5C,Out6,Out7,Out8);\n\t\t\n\t\t\n\t\t#9 s0=0; s1=1; s2=1; s3=0;\n\t\t#1 $display(\"Test SW S0=%b, S1=%b, S2=%b, S3=%b, Destination=%b, Jump=%b, Branch=%b, Memory read=%b, Memory write to register=%b, activation ALU=%b, ALUop=%b, ALUop=%b, ALUop=%b, Memory write=%b, ALU source=%b, Register write=%b\\n\\n\",s0,s1,s2,s3,Out0,Out1,Out2,Out3,Out4,Out5Active,Out5A,Out5B,Out5C,Out6,Out7,Out8);\n\t\t\n\t\t\n\t\t#9 s0=0; s1=1; s2=1; s3=1;\n\t\t#1 $display(\"Test BNE S0=%b, S1=%b, S2=%b, S3=%b, Destination=%b, Jump=%b, Branch=%b, Memory read=%b, Memory write to register=%b, activation ALU=%b, ALUop=%b, ALUop=%b, ALUop=%b, Memory write=%b, ALU source=%b, Register write=%b\\n\\n\",s0,s1,s2,s3,Out0,Out1,Out2,Out3,Out4,Out5Active,Out5A,Out5B,Out5C,Out6,Out7,Out8);\n\t\t\n\t\t\n\t\t#9 s0=1; s1=0; s2=0; s3=0;\n\t\t#1 $display(\"Test JMP S0=%b, S1=%b, S2=%b, S3=%b, Destination=%b, Jump=%b, Branch=%b, Memory read=%b, Memory write to register=%b, activation ALU=%b, ALUop=%b, ALUop=%b, ALUop=%b, Memory write=%b, ALU source=%b, Register write=%b\\n\\n\",s0,s1,s2,s3,Out0,Out1,Out2,Out3,Out4,Out5Active,Out5A,Out5B,Out5C,Out6,Out7,Out8);\n\t\n\t\t\n\t\t#9 s0=1; s1=0; s2=0; s3=1;\n\t\t#1 $display(\"Test JMP S0=%b, S1=%b, S2=%b, S3=%b, Destination=%b, Jump=%b, Branch=%b, Memory read=%b, Memory write to register=%b, activation ALU=%b, ALUop=%b, ALUop=%b, ALUop=%b, Memory write=%b, ALU source=%b, Register write=%b\\n\\n\",s0,s1,s2,s3,Out0,Out1,Out2,Out3,Out4,Out5Active,Out5A,Out5B,Out5C,Out6,Out7,Out8);\n\tend",
        "initial\n#1000 $finish;\n",
        "always\n\t#5 CLK = ~CLK;\ninitial",
        "initial\n\tCLK = 1'b0;\nalways"
    ]
}