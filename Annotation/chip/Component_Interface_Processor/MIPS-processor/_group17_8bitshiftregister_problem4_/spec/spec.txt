Module name: `eight_bit_UniversalShiftRegister` and `four_bit_UniversalShiftRegister` with a `stimulus` testbench. 

Module Specification: 

The `eight_bit_UniversalShiftRegister` is designed as a composite of two `four_bit_UniversalShiftRegister` modules. It takes an 8-bit input data for shifting operations, clock signals for synchronization, two control signals to determine the nature of the shift operation, an enable signal to control when the shifting should occur, two separate inputs for left and right shift operations. The output from the universal shift register is an 8-bit data that represents the result of shift/load operation. 

In this module, the 8-bit input data is divided into two 4-bit chunks using internal wires `in1` and `in2`. These 4-bit chunks are fed into two instances of `four_bit_UniversalShiftRegister`. The outputs from these two modules (`out1` and `out2`) are packed together to give an 8-bit wide output. 

The `four_bit_UniversalShiftRegister` module takes 4-bit input data and performs various shift/load operations based on the control signals, enabled status, and the values of left and right shift inputs. The outcome of these operations is presented through a 4-bit wide output. The internal signals `tempo1`, `tempo2`, `tempo3`, `tempo4` are key to this operation, serving as intermediate storage during the shifting operation.

Finally, the `stimulus` module provides a testing environment for the shift register. It sets the 8-bit wide input data, toggles the clock, and manipulates the `eight_bit_UniversalShiftRegister`'s control and enable signals to simulate various test conditions. Results are displayed to verify the correctness of the operation.